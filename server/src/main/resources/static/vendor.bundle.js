webpackJsonp([3,4],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
var toSubscriber_1 = __webpack_require__(528);
var observable_1 = __webpack_require__(48);
/**
 * A representation of any set of values over any amount of time. This the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */
var Observable = (function () {
    /**
     * @constructor
     * @param {Function} subscribe the function that is  called when the Observable is
     * initially subscribed to. This function is given a Subscriber, to which new values
     * can be `next`ed, or an `error` method can be called to raise an error, or
     * `complete` can be called to notify of a successful completion.
     */
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    /**
     * Creates a new Observable, with this Observable as the source, and the passed
     * operator defined as the new observable's operator.
     * @method lift
     * @param {Operator} operator the operator defining the operation to take on the observable
     * @return {Observable} a new observable with the Operator applied
     */
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
        if (operator) {
            operator.call(sink, this.source);
        }
        else {
            sink.add(this._trySubscribe(sink));
        }
        if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;
            if (sink.syncErrorThrown) {
                throw sink.syncErrorValue;
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            sink.syncErrorThrown = true;
            sink.syncErrorValue = err;
            sink.error(err);
        }
    };
    /**
     * @method forEach
     * @param {Function} next a handler for each value emitted by the observable
     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
     * @return {Promise} a promise that either resolves on observable completion or
     *  rejects with the handled error
     */
    Observable.prototype.forEach = function (next, PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            var subscription = _this.subscribe(function (value) {
                if (subscription) {
                    // if there is a subscription, then we can surmise
                    // the next handling is asynchronous. Any errors thrown
                    // need to be rejected explicitly and unsubscribe must be
                    // called manually
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscription.unsubscribe();
                    }
                }
                else {
                    // if there is NO subscription, then we're getting a nexted
                    // value synchronously during subscription. We can just call it.
                    // If it errors, Observable's `subscribe` will ensure the
                    // unsubscription logic is called, then synchronously rethrow the error.
                    // After that, Promise will trap the error and send it
                    // down the rejection path.
                    next(value);
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        return this.source.subscribe(subscriber);
    };
    /**
     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
     * @method Symbol.observable
     * @return {Observable} this instance of the observable
     */
    Observable.prototype[observable_1.$$observable] = function () {
        return this;
    };
    // HACK: Since TypeScript inherits static properties too, we have to
    // fight against TypeScript here so Subject can have a different static create signature
    /**
     * Creates a new cold Observable by calling the Observable constructor
     * @static true
     * @owner Observable
     * @method create
     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
     * @return {Observable} a new cold observable
     */
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());
exports.Observable = Observable;
//# sourceMappingURL=Observable.js.map

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = __webpack_require__(69);
var Subscription_1 = __webpack_require__(7);
var Observer_1 = __webpack_require__(121);
var rxSubscriber_1 = __webpack_require__(65);
/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */
var Subscriber = (function (_super) {
    __extends(Subscriber, _super);
    /**
     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
     * defined Observer or a `next` callback function.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     */
    function Subscriber(destinationOrNext, error, complete) {
        _super.call(this);
        this.syncErrorValue = null;
        this.syncErrorThrown = false;
        this.syncErrorThrowable = false;
        this.isStopped = false;
        switch (arguments.length) {
            case 0:
                this.destination = Observer_1.empty;
                break;
            case 1:
                if (!destinationOrNext) {
                    this.destination = Observer_1.empty;
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        this.destination = destinationOrNext;
                        this.destination.add(this);
                    }
                    else {
                        this.syncErrorThrowable = true;
                        this.destination = new SafeSubscriber(this, destinationOrNext);
                    }
                    break;
                }
            default:
                this.syncErrorThrowable = true;
                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
                break;
        }
    }
    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };
    /**
     * A static factory for a Subscriber, given a (potentially partial) definition
     * of an Observer.
     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
     * Observer represented by the given arguments.
     */
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    /**
     * The {@link Observer} callback to receive notifications of type `next` from
     * the Observable, with a value. The Observable may call this method 0 or more
     * times.
     * @param {T} [value] The `next` value.
     * @return {void}
     */
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    /**
     * The {@link Observer} callback to receive notifications of type `error` from
     * the Observable, with an attached {@link Error}. Notifies the Observer that
     * the Observable has experienced an error condition.
     * @param {any} [err] The `error` exception.
     * @return {void}
     */
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    /**
     * The {@link Observer} callback to receive a valueless notification of type
     * `complete` from the Observable. Notifies the Observer that the Observable
     * has finished sending push-based notifications.
     * @return {void}
     */
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    return Subscriber;
}(Subscription_1.Subscription));
exports.Subscriber = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SafeSubscriber = (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parent, observerOrNext, error, complete) {
        _super.call(this);
        this._parent = _parent;
        var next;
        var context = this;
        if (isFunction_1.isFunction(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            context = observerOrNext;
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (isFunction_1.isFunction(context.unsubscribe)) {
                this.add(context.unsubscribe.bind(context));
            }
            context.unsubscribe = this.unsubscribe.bind(this);
        }
        this._context = context;
        this._next = next;
        this._error = error;
        this._complete = complete;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parent = this._parent;
            if (!_parent.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parent, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parent = this._parent;
            if (this._error) {
                if (!_parent.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parent, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parent.syncErrorThrowable) {
                this.unsubscribe();
                throw err;
            }
            else {
                _parent.syncErrorValue = err;
                _parent.syncErrorThrown = true;
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _parent = this._parent;
            if (this._complete) {
                if (!_parent.syncErrorThrowable) {
                    this.__tryOrUnsub(this._complete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parent, this._complete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            throw err;
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parent = this._parent;
        this._context = null;
        this._parent = null;
        _parent.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));
//# sourceMappingURL=Subscriber.js.map

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_observable_merge__ = __webpack_require__(141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_observable_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_merge__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_operator_share__ = __webpack_require__(155);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_operator_share___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_operator_share__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_symbol_observable__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_symbol_observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_symbol_observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__);
/* unused harmony export createPlatform */
/* unused harmony export assertPlatform */
/* unused harmony export destroyPlatform */
/* unused harmony export getPlatform */
/* unused harmony export PlatformRef */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return ApplicationRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return enableProdMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return isDevMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return createPlatformFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return NgProbeToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Q", function() { return APP_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_104", function() { return PACKAGE_ROOT_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "W", function() { return PLATFORM_INITIALIZER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "V", function() { return PLATFORM_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_14", function() { return APP_BOOTSTRAP_LISTENER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return APP_INITIALIZER; });
/* unused harmony export ApplicationInitStatus */
/* unused harmony export DebugElement */
/* unused harmony export DebugNode */
/* unused harmony export asNativeElements */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R", function() { return getDebugNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_2", function() { return Testability; });
/* unused harmony export TestabilityRegistry */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "P", function() { return setTestabilityGetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_139", function() { return TRANSLATIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_71", function() { return TRANSLATIONS_FORMAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_4", function() { return LOCALE_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_100", function() { return MissingTranslationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_3", function() { return ApplicationModule; });
/* unused harmony export wtfCreateScope */
/* unused harmony export wtfLeave */
/* unused harmony export wtfStartTimeRange */
/* unused harmony export wtfEndTimeRange */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_111", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return EventEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_0", function() { return ErrorHandler; });
/* unused harmony export AnimationPlayer */
/* unused harmony export AnimationStyles */
/* unused harmony export AnimationKeyframe */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return Sanitizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return SecurityContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_13", function() { return ANALYZE_FOR_ENTRY_COMPONENTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return Attribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return ContentChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return ContentChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_106", function() { return Query; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return ViewChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_127", function() { return ViewChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return Component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Directive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return HostBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L", function() { return HostListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return Input; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return Output; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_8", function() { return Pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_114", function() { return CUSTOM_ELEMENTS_SCHEMA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_113", function() { return NO_ERRORS_SCHEMA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return NgModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return ViewEncapsulation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return Version; });
/* unused harmony export VERSION */
/* unused harmony export Class */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return forwardRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_105", function() { return resolveForwardRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return Injector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_10", function() { return ReflectiveInjector; });
/* unused harmony export ResolvedReflectiveFactory */
/* unused harmony export ReflectiveKey */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I", function() { return InjectionToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return OpaqueToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return Inject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return Optional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return Injectable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return Self; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return SkipSelf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "H", function() { return Host; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return NgZone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_21", function() { return RenderComponentType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return RendererV1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_1", function() { return RendererFactoryV2; });
/* unused harmony export RendererV2 */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "T", function() { return RootRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_15", function() { return COMPILER_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_9", function() { return Compiler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_140", function() { return CompilerFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_136", function() { return ModuleWithComponentFactories; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_25", function() { return ComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_27", function() { return ComponentRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return ComponentFactoryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return ElementRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_28", function() { return NgModuleFactory; });
/* unused harmony export NgModuleRef */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_11", function() { return NgModuleFactoryLoader; });
/* unused harmony export getModuleFactory */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_22", function() { return QueryList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_12", function() { return SystemJsNgModuleLoader; });
/* unused harmony export SystemJsNgModuleLoaderConfig */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return TemplateRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return ViewContainerRef; });
/* unused harmony export EmbeddedViewRef */
/* unused harmony export ViewRef */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return ChangeDetectionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return ChangeDetectorRef; });
/* unused harmony export DefaultIterableDiffer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_5", function() { return IterableDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_6", function() { return KeyValueDiffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_35", function() { return SimpleChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_7", function() { return WrappedValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Z", function() { return platformCore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_102", function() { return ANY_STATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_125", function() { return DEFAULT_STATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_108", function() { return EMPTY_STATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_103", function() { return FILL_STYLE_FLAG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_64", function() { return AnimationGroupPlayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_62", function() { return AnimationKeyframe; });
/* unused harmony export ɵAnimationPlayer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "N", function() { return NoOpAnimationPlayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_65", function() { return AnimationSequencePlayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_67", function() { return balanceAnimationKeyframes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_68", function() { return clearStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_70", function() { return collectAndResolveStyles; });
/* unused harmony export ɵflattenStyles */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_66", function() { return prepareFinalAnimationStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_69", function() { return renderStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_63", function() { return AnimationStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_74", function() { return AnimationTransition; });
/* unused harmony export ɵALLOW_MULTIPLE_PLATFORMS */
/* unused harmony export ɵAPP_ID_RANDOM_PROVIDER */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_31", function() { return ValueUnwrapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_44", function() { return devModeEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_36", function() { return ChangeDetectorStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_115", function() { return isDefaultChangeDetectionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_101", function() { return Console; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return DebugDomRootRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_112", function() { return ERROR_COMPONENT_TYPE; });
/* unused harmony export ɵComponentFactory */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_24", function() { return CodegenComponentFactoryResolver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_34", function() { return DebugContext$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_33", function() { return StaticNodeDebugInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_18", function() { return AppView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_19", function() { return DebugAppView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_20", function() { return ViewContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_32", function() { return ViewType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_110", function() { return LIFECYCLE_HOOKS_VALUES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_109", function() { return LifecycleHooks; });
/* unused harmony export ɵViewMetadata */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_138", function() { return Reflector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_16", function() { return reflector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_126", function() { return ReflectionCapabilities; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_107", function() { return ReflectorReader; });
/* unused harmony export ɵRenderDebugInfo */
/* unused harmony export ɵmakeDecorator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "K", function() { return isObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "J", function() { return isPromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_26", function() { return ComponentRef_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_29", function() { return NgModuleInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_30", function() { return registerModuleFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_23", function() { return TemplateRef_; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_48", function() { return EMPTY_ARRAY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_79", function() { return EMPTY_INLINE_ARRAY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_49", function() { return EMPTY_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_78", function() { return InlineArray16; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_75", function() { return InlineArray2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_76", function() { return InlineArray4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_77", function() { return InlineArray8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_80", function() { return InlineArrayDynamic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_17", function() { return ViewUtils; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_47", function() { return castByValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_37", function() { return checkBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_38", function() { return checkBindingChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_41", function() { return checkRenderAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_42", function() { return checkRenderClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_40", function() { return checkRenderProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_43", function() { return checkRenderStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_39", function() { return checkRenderText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_82", function() { return createRenderComponentType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_50", function() { return createRenderElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_137", function() { return getComponentFactoryViewClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_45", function() { return inlineInterpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_46", function() { return interpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_83", function() { return noop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_52", function() { return pureProxy1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_61", function() { return pureProxy10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_53", function() { return pureProxy2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_54", function() { return pureProxy3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_55", function() { return pureProxy4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_56", function() { return pureProxy5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_57", function() { return pureProxy6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_58", function() { return pureProxy7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_59", function() { return pureProxy8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_60", function() { return pureProxy9; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_51", function() { return selectOrCreateRenderHostElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_72", function() { return setBindingDebugInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_73", function() { return setBindingDebugInfoForChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_81", function() { return subscribeToRenderElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_124", function() { return ArgumentType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_123", function() { return BindingType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_122", function() { return DepFlags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_117", function() { return NodeFlags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_121", function() { return ProviderType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_116", function() { return QueryBindingType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_120", function() { return QueryValueType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_118", function() { return ViewFlags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_86", function() { return anchorDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_99", function() { return createComponentFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_98", function() { return createRendererTypeV2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_88", function() { return directiveDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_85", function() { return elementDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_119", function() { return elementEventFullName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_96", function() { return ngContentDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_95", function() { return nodeValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_94", function() { return pipeDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_89", function() { return providerDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_91", function() { return pureArrayDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_92", function() { return pureObjectDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_93", function() { return purePipeDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_90", function() { return queryDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_87", function() { return textDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_97", function() { return unwrapValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_84", function() { return viewDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return AUTO_STYLE$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_128", function() { return trigger$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_132", function() { return animate$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_135", function() { return group$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_134", function() { return sequence$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_131", function() { return style$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_129", function() { return state$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_133", function() { return keyframes$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_130", function() { return transition$1; });
/* unused harmony export ɵz */
/* unused harmony export ɵbc */
/* unused harmony export ɵbd */
/* unused harmony export ɵbh */
/* unused harmony export ɵbe */
/* unused harmony export ɵbg */
/* unused harmony export ɵbf */
/* unused harmony export ɵbi */
/* unused harmony export ɵbb */
/* unused harmony export ɵp */
/* unused harmony export ɵm */
/* unused harmony export ɵn */
/* unused harmony export ɵo */
/* unused harmony export ɵf */
/* unused harmony export ɵg */
/* unused harmony export ɵh */
/* unused harmony export ɵi */
/* unused harmony export ɵk */
/* unused harmony export ɵl */
/* unused harmony export ɵc */
/* unused harmony export ɵd */
/* unused harmony export ɵe */
/* unused harmony export ɵj */
/* unused harmony export ɵq */
/* unused harmony export ɵs */
/* unused harmony export ɵr */
/* unused harmony export ɵv */
/* unused harmony export ɵt */
/* unused harmony export ɵu */
/* unused harmony export ɵa */
/* unused harmony export ɵb */
/* unused harmony export ɵx */
/* unused harmony export ɵy */
var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * Creates a token that can be used in a DI Provider.
 *
 * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))
 *
 * ```typescript
 * var t = new OpaqueToken("value");
 *
 * var injector = Injector.resolveAndCreate([
 *   {provide: t, useValue: "bindingValue"}
 * ]);
 *
 * expect(injector.get(t)).toEqual("bindingValue");
 * ```
 *
 * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions
 * caused by multiple providers using the same string as two different tokens.
 *
 * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better
 * error messages.
 * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`
 * instead.
 */var OpaqueToken=function(){/**
     * @param {?} _desc
     */function OpaqueToken(_desc){_classCallCheck(this,OpaqueToken);this._desc=_desc;}/**
     * @return {?}
     */_createClass(OpaqueToken,[{key:'toString',value:function toString(){return'Token '+this._desc;}}]);return OpaqueToken;}();/**
 * Creates a token that can be used in a DI Provider.
 *
 * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a
 * runtime representation) such as when injecting an interface, callable type, array or
 * parametrized type.
 *
 * `InjectionToken` is parametrize on `T` which is the type of object which will be returned by the
 * `Injector`. This provides additional level of type safety.
 *
 * ```
 * interface MyInterface {...}
 * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));
 * // myInterface is inferred to be MyInterface.
 * ```
 *
 * ### Example
 *
 * {\@example core/di/ts/injector_spec.ts region='Injector'}
 *
 * \@stable
 */var InjectionToken=function(_OpaqueToken){_inherits(InjectionToken,_OpaqueToken);/**
     * @param {?} desc
     */function InjectionToken(desc){_classCallCheck(this,InjectionToken);return _possibleConstructorReturn(this,(InjectionToken.__proto__||Object.getPrototypeOf(InjectionToken)).call(this,desc));}/**
     * @return {?}
     */_createClass(InjectionToken,[{key:'toString',value:function toString(){return'InjectionToken '+this._desc;}}]);return InjectionToken;}(OpaqueToken);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */globalScope=void 0;if(typeof window==='undefined'){if(typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope){// TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
globalScope=self;}else{globalScope=global;}}else{globalScope=window;}/**
 * @param {?} fn
 * @return {?}
 */function scheduleMicroTask(fn){Zone.current.scheduleMicroTask('scheduleMicrotask',fn);}// Need to declare a new variable for global here since TypeScript
// exports the original value of the symbol.
var/** @type {?} */global$1=globalScope;/**
 * @param {?} type
 * @return {?}
 */function getTypeNameForDebugging(type){return type['name']||(typeof type==='undefined'?'undefined':_typeof(type));}// TODO: remove calls to assert in production environment
// Note: Can't just export this and import in in other files
// as `assert` is a reserved keyword in Dart
global$1.assert=function assert(condition){// TODO: to be fixed properly via #2830, noop for now
};/**
 * @param {?} obj
 * @return {?}
 */function isPresent(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank(obj){return obj==null;}/**
 * @param {?} token
 * @return {?}
 */function stringify(token){if(typeof token==='string'){return token;}if(token==null){return''+token;}if(token.overriddenName){return''+token.overriddenName;}if(token.name){return''+token.name;}var/** @type {?} */res=token.toString();var/** @type {?} */newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function looseIdentical(a,b){return a===b||typeof a==='number'&&typeof b==='number'&&isNaN(a)&&isNaN(b);}/**
 * @param {?} o
 * @return {?}
 */function isJsObject(o){return o!==null&&(typeof o==='function'||(typeof o==='undefined'?'undefined':_typeof(o))==='object');}/**
 * @param {?} obj
 * @return {?}
 */function print(obj){// tslint:disable-next-line:no-console
console.log(obj);}/**
 * @param {?} obj
 * @return {?}
 */function _warn(obj){console.warn(obj);}var/** @type {?} */_symbolIterator=null;/**
 * @return {?}
 */function getSymbolIterator(){if(!_symbolIterator){if(globalScope.Symbol&&Symbol.iterator){_symbolIterator=Symbol.iterator;}else{// es6-shim specific logic
var/** @type {?} */keys=Object.getOwnPropertyNames(Map.prototype);for(var/** @type {?} */i=0;i<keys.length;++i){var/** @type {?} */key=keys[i];if(key!=='entries'&&key!=='size'&&Map.prototype[key]===Map.prototype['entries']){_symbolIterator=key;}}}}return _symbolIterator;}/**
 * @param {?} obj
 * @return {?}
 */function isPrimitive(obj){return!isJsObject(obj);}var/** @type {?} */_nextClassId=0;var/** @type {?} */Reflect=global$1.Reflect;/**
 * @param {?} annotation
 * @return {?}
 */function extractAnnotation(annotation){if(typeof annotation==='function'&&annotation.hasOwnProperty('annotation')){// it is a decorator, extract annotation
annotation=annotation.annotation;}return annotation;}/**
 * @param {?} fnOrArray
 * @param {?} key
 * @return {?}
 */function applyParams(fnOrArray,key){if(fnOrArray===Object||fnOrArray===String||fnOrArray===Function||fnOrArray===Number||fnOrArray===Array){throw new Error('Can not use native '+stringify(fnOrArray)+' as constructor');}if(typeof fnOrArray==='function'){return fnOrArray;}if(Array.isArray(fnOrArray)){var/** @type {?} */annotations=fnOrArray;var/** @type {?} */annoLength=annotations.length-1;var/** @type {?} */fn=fnOrArray[annoLength];if(typeof fn!=='function'){throw new Error('Last position of Class method array must be Function in key '+key+' was \''+stringify(fn)+'\'');}if(annoLength!=fn.length){throw new Error('Number of annotations ('+annoLength+') does not match number of arguments ('+fn.length+') in the function: '+stringify(fn));}var/** @type {?} */paramsAnnotations=[];for(var/** @type {?} */i=0,/** @type {?} */ii=annotations.length-1;i<ii;i++){var/** @type {?} */paramAnnotations=[];paramsAnnotations.push(paramAnnotations);var/** @type {?} */annotation=annotations[i];if(Array.isArray(annotation)){for(var/** @type {?} */j=0;j<annotation.length;j++){paramAnnotations.push(extractAnnotation(annotation[j]));}}else if(typeof annotation==='function'){paramAnnotations.push(extractAnnotation(annotation));}else{paramAnnotations.push(annotation);}}Reflect.defineMetadata('parameters',paramsAnnotations,fn);return fn;}throw new Error('Only Function or Array is supported in Class definition for key \''+key+'\' is \''+stringify(fnOrArray)+'\'');}/**
 * Provides a way for expressing ES6 classes with parameter annotations in ES5.
 *
 * ## Basic Example
 *
 * ```
 * var Greeter = ng.Class({
 *   constructor: function(name) {
 *     this.name = name;
 *   },
 *
 *   greet: function() {
 *     alert('Hello ' + this.name + '!');
 *   }
 * });
 * ```
 *
 * is equivalent to ES6:
 *
 * ```
 * class Greeter {
 *   constructor(name) {
 *     this.name = name;
 *   }
 *
 *   greet() {
 *     alert('Hello ' + this.name + '!');
 *   }
 * }
 * ```
 *
 * or equivalent to ES5:
 *
 * ```
 * var Greeter = function (name) {
 *   this.name = name;
 * }
 *
 * Greeter.prototype.greet = function () {
 *   alert('Hello ' + this.name + '!');
 * }
 * ```
 *
 * ### Example with parameter annotations
 *
 * ```
 * var MyService = ng.Class({
 *   constructor: [String, [new Optional(), Service], function(name, myService) {
 *     ...
 *   }]
 * });
 * ```
 *
 * is equivalent to ES6:
 *
 * ```
 * class MyService {
 *   constructor(name: string, \@Optional() myService: Service) {
 *     ...
 *   }
 * }
 * ```
 *
 * ### Example with inheritance
 *
 * ```
 * var Shape = ng.Class({
 *   constructor: (color) {
 *     this.color = color;
 *   }
 * });
 *
 * var Square = ng.Class({
 *   extends: Shape,
 *   constructor: function(color, size) {
 *     Shape.call(this, color);
 *     this.size = size;
 *   }
 * });
 * ```
 * @suppress {globalThis}
 * \@stable
 * @param {?} clsDef
 * @return {?}
 */function Class(clsDef){var/** @type {?} */constructor=applyParams(clsDef.hasOwnProperty('constructor')?clsDef.constructor:undefined,'constructor');var/** @type {?} */proto=constructor.prototype;if(clsDef.hasOwnProperty('extends')){if(typeof clsDef.extends==='function'){constructor.prototype=proto=Object.create(clsDef.extends.prototype);}else{throw new Error('Class definition \'extends\' property must be a constructor function was: '+stringify(clsDef.extends));}}for(var/** @type {?} */key in clsDef){if(key!=='extends'&&key!=='prototype'&&clsDef.hasOwnProperty(key)){proto[key]=applyParams(clsDef[key],key);}}if(this&&this.annotations instanceof Array){Reflect.defineMetadata('annotations',this.annotations,constructor);}var/** @type {?} */constructorName=constructor['name'];if(!constructorName||constructorName==='constructor'){constructor['overriddenName']='class'+_nextClassId++;}return constructor;}/**
 * @suppress {globalThis}
 * @param {?} name
 * @param {?} props
 * @param {?=} parentClass
 * @param {?=} chainFn
 * @return {?}
 */function makeDecorator(name,props,parentClass){var chainFn=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var/** @type {?} */metaCtor=makeMetadataCtor([props]);/**
     * @param {?} objOrType
     * @return {?}
     */function DecoratorFactory(objOrType){if(!(Reflect&&Reflect.getOwnMetadata)){throw'reflect-metadata shim is required when using class decorators';}if(this instanceof DecoratorFactory){metaCtor.call(this,objOrType);return this;}var/** @type {?} */annotationInstance=new DecoratorFactory(objOrType);var/** @type {?} */chainAnnotation=typeof this==='function'&&Array.isArray(this.annotations)?this.annotations:[];chainAnnotation.push(annotationInstance);var/** @type {?} */TypeDecorator=function TypeDecorator(cls){var/** @type {?} */annotations=Reflect.getOwnMetadata('annotations',cls)||[];annotations.push(annotationInstance);Reflect.defineMetadata('annotations',annotations,cls);return cls;};TypeDecorator.annotations=chainAnnotation;TypeDecorator.Class=Class;if(chainFn)chainFn(TypeDecorator);return TypeDecorator;}if(parentClass){DecoratorFactory.prototype=Object.create(parentClass.prototype);}DecoratorFactory.prototype.toString=function(){return'@'+name;};DecoratorFactory.annotationCls=DecoratorFactory;return DecoratorFactory;}/**
 * @param {?} props
 * @return {?}
 */function makeMetadataCtor(props){return function ctor(){var _this2=this;for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}props.forEach(function(prop,i){var/** @type {?} */argVal=args[i];if(Array.isArray(prop)){// plain parameter
_this2[prop[0]]=argVal===undefined?prop[1]:argVal;}else{for(var/** @type {?} */propName in prop){_this2[propName]=argVal&&argVal.hasOwnProperty(propName)?argVal[propName]:prop[propName];}}});};}/**
 * @param {?} name
 * @param {?} props
 * @param {?=} parentClass
 * @return {?}
 */function makeParamDecorator(name,props,parentClass){var/** @type {?} */metaCtor=makeMetadataCtor(props);/**
     * @param {...?} args
     * @return {?}
     */function ParamDecoratorFactory(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}if(this instanceof ParamDecoratorFactory){metaCtor.apply(this,args);return this;}var/** @type {?} */annotationInstance=new(Function.prototype.bind.apply(ParamDecoratorFactory,[null].concat(args)))();ParamDecorator.annotation=annotationInstance;return ParamDecorator;/**
         * @param {?} cls
         * @param {?} unusedKey
         * @param {?} index
         * @return {?}
         */function ParamDecorator(cls,unusedKey,index){var/** @type {?} */parameters=Reflect.getOwnMetadata('parameters',cls)||[];// there might be gaps if some in between parameters do not have annotations.
// we pad with nulls.
while(parameters.length<=index){parameters.push(null);}parameters[index]=parameters[index]||[];parameters[index].push(annotationInstance);Reflect.defineMetadata('parameters',parameters,cls);return cls;}}if(parentClass){ParamDecoratorFactory.prototype=Object.create(parentClass.prototype);}ParamDecoratorFactory.prototype.toString=function(){return'@'+name;};ParamDecoratorFactory.annotationCls=ParamDecoratorFactory;return ParamDecoratorFactory;}/**
 * @param {?} name
 * @param {?} props
 * @param {?=} parentClass
 * @return {?}
 */function makePropDecorator(name,props,parentClass){var/** @type {?} */metaCtor=makeMetadataCtor(props);/**
     * @param {...?} args
     * @return {?}
     */function PropDecoratorFactory(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}if(this instanceof PropDecoratorFactory){metaCtor.apply(this,args);return this;}var/** @type {?} */decoratorInstance=new(Function.prototype.bind.apply(PropDecoratorFactory,[null].concat(args)))();return function PropDecorator(target,name){var/** @type {?} */meta=Reflect.getOwnMetadata('propMetadata',target.constructor)||{};meta[name]=meta.hasOwnProperty(name)&&meta[name]||[];meta[name].unshift(decoratorInstance);Reflect.defineMetadata('propMetadata',meta,target.constructor);};}if(parentClass){PropDecoratorFactory.prototype=Object.create(parentClass.prototype);}PropDecoratorFactory.prototype.toString=function(){return'@'+name;};PropDecoratorFactory.annotationCls=PropDecoratorFactory;return PropDecoratorFactory;}/**
 * This token can be used to create a virtual provider that will populate the
 * `entryComponents` fields of components and ng modules based on its `useValue`.
 * All components that are referenced in the `useValue` value (either directly
 * or in a nested array or map) will be added to the `entryComponents` property.
 *
 * ### Example
 * The following example shows how the router can populate the `entryComponents`
 * field of an NgModule based on the router configuration which refers
 * to components.
 *
 * ```typescript
 * // helper function inside the router
 * function provideRoutes(routes) {
 *   return [
 *     {provide: ROUTES, useValue: routes},
 *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}
 *   ];
 * }
 *
 * // user code
 * let routes = [
 *   {path: '/root', component: RootComp},
 *   {path: '/teams', component: TeamsComp}
 * ];
 *
 * @NgModule({
 *   providers: [provideRoutes(routes)]
 * })
 * class ModuleWithRoutes {}
 * ```
 *
 * @experimental
 */var/** @type {?} */ANALYZE_FOR_ENTRY_COMPONENTS=new InjectionToken('AnalyzeForEntryComponents');/**
 * Attribute decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Attribute=makeParamDecorator('Attribute',[['attributeName',undefined]]);/**
 * Base class for query metadata.
 *
 * See {\@link ContentChildren}, {\@link ContentChild}, {\@link ViewChildren}, {\@link ViewChild} for
 * more information.
 *
 * \@stable
 * @abstract
 */var Query=function Query(){_classCallCheck(this,Query);};/**
 * ContentChildren decorator and metadata.
 *
 *  @stable
 *  @Annotation
 */var/** @type {?} */ContentChildren=makePropDecorator('ContentChildren',[['selector',undefined],{first:false,isViewQuery:false,descendants:false,read:undefined}],Query);/**
 * ContentChild decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */ContentChild=makePropDecorator('ContentChild',[['selector',undefined],{first:true,isViewQuery:false,descendants:true,read:undefined}],Query);/**
 * ViewChildren decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */ViewChildren=makePropDecorator('ViewChildren',[['selector',undefined],{first:false,isViewQuery:true,descendants:true,read:undefined}],Query);/**
 * ViewChild decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */ViewChild=makePropDecorator('ViewChild',[['selector',undefined],{first:true,isViewQuery:true,descendants:true,read:undefined}],Query);var ChangeDetectionStrategy={};ChangeDetectionStrategy.OnPush=0;ChangeDetectionStrategy.Default=1;ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush]="OnPush";ChangeDetectionStrategy[ChangeDetectionStrategy.Default]="Default";var ChangeDetectorStatus={};ChangeDetectorStatus.CheckOnce=0;ChangeDetectorStatus.Checked=1;ChangeDetectorStatus.CheckAlways=2;ChangeDetectorStatus.Detached=3;ChangeDetectorStatus.Errored=4;ChangeDetectorStatus.Destroyed=5;ChangeDetectorStatus[ChangeDetectorStatus.CheckOnce]="CheckOnce";ChangeDetectorStatus[ChangeDetectorStatus.Checked]="Checked";ChangeDetectorStatus[ChangeDetectorStatus.CheckAlways]="CheckAlways";ChangeDetectorStatus[ChangeDetectorStatus.Detached]="Detached";ChangeDetectorStatus[ChangeDetectorStatus.Errored]="Errored";ChangeDetectorStatus[ChangeDetectorStatus.Destroyed]="Destroyed";/**
 * @param {?} changeDetectionStrategy
 * @return {?}
 */function isDefaultChangeDetectionStrategy(changeDetectionStrategy){return isBlank(changeDetectionStrategy)||changeDetectionStrategy===ChangeDetectionStrategy.Default;}/**
 * Directive decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Directive=makeDecorator('Directive',{selector:undefined,inputs:undefined,outputs:undefined,host:undefined,providers:undefined,exportAs:undefined,queries:undefined});/**
 * Component decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Component=makeDecorator('Component',{selector:undefined,inputs:undefined,outputs:undefined,host:undefined,exportAs:undefined,moduleId:undefined,providers:undefined,viewProviders:undefined,changeDetection:ChangeDetectionStrategy.Default,queries:undefined,templateUrl:undefined,template:undefined,styleUrls:undefined,styles:undefined,animations:undefined,encapsulation:undefined,interpolation:undefined,entryComponents:undefined},Directive);/**
 * Pipe decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Pipe=makeDecorator('Pipe',{name:undefined,pure:true});/**
 * Input decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Input=makePropDecorator('Input',[['bindingPropertyName',undefined]]);/**
 * Output decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Output=makePropDecorator('Output',[['bindingPropertyName',undefined]]);/**
 * HostBinding decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */HostBinding=makePropDecorator('HostBinding',[['hostPropertyName',undefined]]);/**
 * HostListener decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */HostListener=makePropDecorator('HostListener',[['eventName',undefined],['args',[]]]);/**
 * Defines a schema that will allow:
 * - any non-Angular elements with a `-` in their name,
 * - any properties on elements with a `-` in their name which is the common rule for custom
 * elements.
 *
 * @stable
 */var/** @type {?} */CUSTOM_ELEMENTS_SCHEMA={name:'custom-elements'};/**
 * Defines a schema that will allow any property on any element.
 *
 * @experimental
 */var/** @type {?} */NO_ERRORS_SCHEMA={name:'no-errors-schema'};/**
 * NgModule decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */NgModule=makeDecorator('NgModule',{providers:undefined,declarations:undefined,imports:undefined,exports:undefined,entryComponents:undefined,bootstrap:undefined,schemas:undefined,id:undefined});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ViewEncapsulation={};ViewEncapsulation.Emulated=0;ViewEncapsulation.Native=1;ViewEncapsulation.None=2;ViewEncapsulation[ViewEncapsulation.Emulated]="Emulated";ViewEncapsulation[ViewEncapsulation.Native]="Native";ViewEncapsulation[ViewEncapsulation.None]="None";/**
 * Metadata properties available for configuring Views.
 *
 * For details on the `\@Component` annotation, see {\@link Component}.
 *
 * ### Example
 *
 * ```
 * \@Component({
 *   selector: 'greet',
 *   template: 'Hello {{name}}!',
 * })
 * class Greet {
 *   name: string;
 *
 *   constructor() {
 *     this.name = 'World';
 *   }
 * }
 * ```
 *
 * @deprecated Use Component instead.
 *
 * {\@link Component}
 */var ViewMetadata=/**
     * @param {?=} __0
     */function ViewMetadata(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},templateUrl=_ref.templateUrl,template=_ref.template,encapsulation=_ref.encapsulation,styles=_ref.styles,styleUrls=_ref.styleUrls,animations=_ref.animations,interpolation=_ref.interpolation;_classCallCheck(this,ViewMetadata);this.templateUrl=templateUrl;this.template=template;this.styleUrls=styleUrls;this.styles=styles;this.encapsulation=encapsulation;this.animations=animations;this.interpolation=interpolation;};/**
 * \@whatItDoes Represents the version of Angular
 *
 * \@stable
 */var Version=function(){/**
     * @param {?} full
     */function Version(full){_classCallCheck(this,Version);this.full=full;}/**
     * @return {?}
     */_createClass(Version,[{key:'major',get:function get(){return this.full.split('.')[0];}/**
     * @return {?}
     */},{key:'minor',get:function get(){return this.full.split('.')[1];}/**
     * @return {?}
     */},{key:'patch',get:function get(){return this.full.split('.').slice(2).join('.');}}]);return Version;}();/**
 * @stable
 */var/** @type {?} */VERSION=new Version('4.0.0-rc.1');/**
 * Inject decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Inject=makeParamDecorator('Inject',[['token',undefined]]);/**
 * Optional decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Optional=makeParamDecorator('Optional',[]);/**
 * Injectable decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Injectable=makeDecorator('Injectable',[]);/**
 * Self decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Self=makeParamDecorator('Self',[]);/**
 * SkipSelf decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */SkipSelf=makeParamDecorator('SkipSelf',[]);/**
 * Host decorator and metadata.
 *
 * @stable
 * @Annotation
 */var/** @type {?} */Host=makeParamDecorator('Host',[]);/**
 * Allows to refer to references which are not yet defined.
 *
 * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of
 * DI is declared,
 * but not yet defined. It is also used when the `token` which we use when creating a query is not
 * yet defined.
 *
 * ### Example
 * {\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}
 * \@experimental
 * @param {?} forwardRefFn
 * @return {?}
 */function forwardRef(forwardRefFn){forwardRefFn.__forward_ref__=forwardRef;forwardRefFn.toString=function(){return stringify(this());};return forwardRefFn;}/**
 * Lazily retrieves the reference value from a forwardRef.
 *
 * Acts as the identity function when given a non-forward-ref value.
 *
 * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))
 *
 * {\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}
 *
 * See: {\@link forwardRef}
 * \@experimental
 * @param {?} type
 * @return {?}
 */function resolveForwardRef(type){if(typeof type==='function'&&type.hasOwnProperty('__forward_ref__')&&type.__forward_ref__===forwardRef){return type();}else{return type;}}var/** @type {?} */_THROW_IF_NOT_FOUND=new Object();var/** @type {?} */THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;var _NullInjector=function(){function _NullInjector(){_classCallCheck(this,_NullInjector);}_createClass(_NullInjector,[{key:'get',/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_THROW_IF_NOT_FOUND;if(notFoundValue===_THROW_IF_NOT_FOUND){throw new Error('No provider for '+stringify(token)+'!');}return notFoundValue;}}]);return _NullInjector;}();/**
 * \@whatItDoes Injector interface
 * \@howToUse
 * ```
 * const injector: Injector = ...;
 * injector.get(...);
 * ```
 *
 * \@description
 * For more details, see the {\@linkDocs guide/dependency-injection "Dependency Injection Guide"}.
 *
 * ### Example
 *
 * {\@example core/di/ts/injector_spec.ts region='Injector'}
 *
 * `Injector` returns itself when given `Injector` as a token:
 * {\@example core/di/ts/injector_spec.ts region='injectInjector'}
 *
 * \@stable
 * @abstract
 */var Injector=function(){function Injector(){_classCallCheck(this,Injector);}_createClass(Injector,[{key:'get',/**
     * Retrieves an instance from the injector based on the provided token.
     * If not found:
     * - Throws {\@link NoProviderError} if no `notFoundValue` that is not equal to
     * Injector.THROW_IF_NOT_FOUND is given
     * - Returns the `notFoundValue` otherwise
     * @abstract
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */value:function get(token,notFoundValue){}/**
     * @deprecated from v4.0.0 use Type<T> or InjectToken<T>
     * @suppress {duplicate}
     * @abstract
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'get',value:function get(token,notFoundValue){}}]);return Injector;}();Injector.THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;Injector.NULL=new _NullInjector();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */ERROR_TYPE='ngType';var/** @type {?} */ERROR_COMPONENT_TYPE='ngComponentType';var/** @type {?} */ERROR_DEBUG_CONTEXT='ngDebugContext';var/** @type {?} */ERROR_ORIGINAL_ERROR='ngOriginalError';/**
 * @param {?} error
 * @return {?}
 */function getType(error){return error[ERROR_TYPE];}/**
 * @param {?} error
 * @return {?}
 */function getDebugContext(error){return error[ERROR_DEBUG_CONTEXT];}/**
 * @param {?} error
 * @return {?}
 */function getOriginalError(error){return error[ERROR_ORIGINAL_ERROR];}/**
 * \@whatItDoes Provides a hook for centralized exception handling.
 *
 * \@description
 *
 * The default implementation of `ErrorHandler` prints error messages to the `console`. To
 * intercept error handling, write a custom exception handler that replaces this default as
 * appropriate for your app.
 *
 * ### Example
 *
 * ```
 * class MyErrorHandler implements ErrorHandler {
 *   handleError(error) {
 *     // do something with the exception
 *   }
 * }
 *
 * \@NgModule({
 *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]
 * })
 * class MyModule {}
 * ```
 *
 * \@stable
 */var ErrorHandler=function(){/**
     * @param {?=} rethrowError
     */function ErrorHandler(){var rethrowError=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;_classCallCheck(this,ErrorHandler);/**
         * @internal
         */this._console=console;this.rethrowError=rethrowError;}/**
     * @param {?} error
     * @return {?}
     */_createClass(ErrorHandler,[{key:'handleError',value:function handleError(error){this._console.error('EXCEPTION: '+this._extractMessage(error));if(error instanceof Error){var/** @type {?} */originalError=this._findOriginalError(error);var/** @type {?} */originalStack=this._findOriginalStack(error);var/** @type {?} */context=this._findContext(error);if(originalError){this._console.error('ORIGINAL EXCEPTION: '+this._extractMessage(originalError));}if(originalStack){this._console.error('ORIGINAL STACKTRACE:');this._console.error(originalStack);}if(context){this._console.error('ERROR CONTEXT:');this._console.error(context);}}// We rethrow exceptions, so operations like 'bootstrap' will result in an error
// when an error happens. If we do not rethrow, bootstrap will always succeed.
if(this.rethrowError)throw error;}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_extractMessage',value:function _extractMessage(error){return error instanceof Error?error.message:error.toString();}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_findContext',value:function _findContext(error){if(error){return getDebugContext(error)?getDebugContext(error):this._findContext(getOriginalError(error));}return null;}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_findOriginalError',value:function _findOriginalError(error){var/** @type {?} */e=getOriginalError(error);while(e&&getOriginalError(e)){e=getOriginalError(e);}return e;}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_findOriginalStack',value:function _findOriginalStack(error){var/** @type {?} */e=error;var/** @type {?} */stack=e.stack;while(e instanceof Error&&getOriginalError(e)){e=getOriginalError(e);if(e instanceof Error&&e.stack){stack=e.stack;}}return stack;}}]);return ErrorHandler;}();/**
 * @param {?} message
 * @param {?} originalError
 * @return {?}
 */function wrappedError(message,originalError){var/** @type {?} */msg=message+' caused by: '+(originalError instanceof Error?originalError.message:originalError);var/** @type {?} */error=Error(msg);error[ERROR_ORIGINAL_ERROR]=originalError;return error;}/**
 * @param {?} keys
 * @return {?}
 */function findFirstClosedCycle(keys){var/** @type {?} */res=[];for(var/** @type {?} */i=0;i<keys.length;++i){if(res.indexOf(keys[i])>-1){res.push(keys[i]);return res;}res.push(keys[i]);}return res;}/**
 * @param {?} keys
 * @return {?}
 */function constructResolvingPath(keys){if(keys.length>1){var/** @type {?} */reversed=findFirstClosedCycle(keys.slice().reverse());var/** @type {?} */tokenStrs=reversed.map(function(k){return stringify(k.token);});return' ('+tokenStrs.join(' -> ')+')';}return'';}/**
 * @param {?} injector
 * @param {?} key
 * @param {?} constructResolvingMessage
 * @param {?=} originalError
 * @return {?}
 */function injectionError(injector,key,constructResolvingMessage,originalError){var/** @type {?} */error=originalError?wrappedError('',originalError):Error();error.addKey=addKey;error.keys=[key];error.injectors=[injector];error.constructResolvingMessage=constructResolvingMessage;error.message=error.constructResolvingMessage();error[ERROR_ORIGINAL_ERROR]=originalError;return error;}/**
 * @this {?}
 * @param {?} injector
 * @param {?} key
 * @return {?}
 */function addKey(injector,key){this.injectors.push(injector);this.keys.push(key);this.message=this.constructResolvingMessage();}/**
 * Thrown when trying to retrieve a dependency by key from {\@link Injector}, but the
 * {\@link Injector} does not have a {\@link Provider} for the given key.
 *
 * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor(b:B) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 * @param {?} injector
 * @param {?} key
 * @return {?}
 */function noProviderError(injector,key){return injectionError(injector,key,function(){var/** @type {?} */first=stringify(this.keys[0].token);return'No provider for '+first+'!'+constructResolvingPath(this.keys);});}/**
 * Thrown when dependencies form a cycle.
 *
 * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))
 *
 * ```typescript
 * var injector = Injector.resolveAndCreate([
 *   {provide: "one", useFactory: (two) => "two", deps: [[new Inject("two")]]},
 *   {provide: "two", useFactory: (one) => "one", deps: [[new Inject("one")]]}
 * ]);
 *
 * expect(() => injector.get("one")).toThrowError();
 * ```
 *
 * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.
 * @param {?} injector
 * @param {?} key
 * @return {?}
 */function cyclicDependencyError(injector,key){return injectionError(injector,key,function(){return'Cannot instantiate cyclic dependency!'+constructResolvingPath(this.keys);});}/**
 * Thrown when a constructing type returns with an Error.
 *
 * The `InstantiationError` class contains the original error plus the dependency graph which caused
 * this object to be instantiated.
 *
 * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor() {
 *     throw new Error('message');
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([A]);
 * try {
 *   injector.get(A);
 * } catch (e) {
 *   expect(e instanceof InstantiationError).toBe(true);
 *   expect(e.originalException.message).toEqual("message");
 *   expect(e.originalStack).toBeDefined();
 * }
 * ```
 * @param {?} injector
 * @param {?} originalException
 * @param {?} originalStack
 * @param {?} key
 * @return {?}
 */function instantiationError(injector,originalException,originalStack,key){return injectionError(injector,key,function(){var/** @type {?} */first=stringify(this.keys[0].token);return getOriginalError(this).message+': Error during instantiation of '+first+'!'+constructResolvingPath(this.keys)+'.';},originalException);}/**
 * Thrown when an object other then {\@link Provider} (or `Type`) is passed to {\@link Injector}
 * creation.
 *
 * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate(["not a type"])).toThrowError();
 * ```
 * @param {?} provider
 * @return {?}
 */function invalidProviderError(provider){return Error('Invalid provider - only instances of Provider and Type are allowed, got: '+provider);}/**
 * Thrown when the class has no annotation information.
 *
 * Lack of annotation information prevents the {\@link Injector} from determining which dependencies
 * need to be injected into the constructor.
 *
 * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor(b) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 *
 * This error is also thrown when the class not marked with {\@link Injectable} has parameter types.
 *
 * ```typescript
 * class B {}
 *
 * class A {
 *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.
 * }
 *
 * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();
 * ```
 * \@stable
 * @param {?} typeOrFunc
 * @param {?} params
 * @return {?}
 */function noAnnotationError(typeOrFunc,params){var/** @type {?} */signature=[];for(var/** @type {?} */i=0,/** @type {?} */ii=params.length;i<ii;i++){var/** @type {?} */parameter=params[i];if(!parameter||parameter.length==0){signature.push('?');}else{signature.push(parameter.map(stringify).join(' '));}}return Error('Cannot resolve all parameters for \''+stringify(typeOrFunc)+'\'('+signature.join(', ')+'). '+'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \''+stringify(typeOrFunc)+'\' is decorated with Injectable.');}/**
 * Thrown when getting an object by index.
 *
 * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))
 *
 * ```typescript
 * class A {}
 *
 * var injector = Injector.resolveAndCreate([A]);
 *
 * expect(() => injector.getAt(100)).toThrowError();
 * ```
 * \@stable
 * @param {?} index
 * @return {?}
 */function outOfBoundsError(index){return Error('Index '+index+' is out-of-bounds.');}/**
 * Thrown when a multi provider and a regular provider are bound to the same token.
 *
 * ### Example
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate([
 *   { provide: "Strings", useValue: "string1", multi: true},
 *   { provide: "Strings", useValue: "string2", multi: false}
 * ])).toThrowError();
 * ```
 * @param {?} provider1
 * @param {?} provider2
 * @return {?}
 */function mixingMultiProvidersWithRegularProvidersError(provider1,provider2){return Error('Cannot mix multi providers and regular providers, got: '+provider1+' '+provider2);}/**
 * A unique object used for retrieving items from the {\@link ReflectiveInjector}.
 *
 * Keys have:
 * - a system-wide unique `id`.
 * - a `token`.
 *
 * `Key` is used internally by {\@link ReflectiveInjector} because its system-wide unique `id` allows
 * the
 * injector to store created objects in a more efficient way.
 *
 * `Key` should not be created directly. {\@link ReflectiveInjector} creates keys automatically when
 * resolving
 * providers.
 * \@experimental
 */var ReflectiveKey=function(){/**
     * Private
     * @param {?} token
     * @param {?} id
     */function ReflectiveKey(token,id){_classCallCheck(this,ReflectiveKey);this.token=token;this.id=id;if(!token){throw new Error('Token must be defined!');}}/**
     * Returns a stringified token.
     * @return {?}
     */_createClass(ReflectiveKey,[{key:'displayName',get:function get(){return stringify(this.token);}/**
     * Retrieves a `Key` for a token.
     * @param {?} token
     * @return {?}
     */}],[{key:'get',value:function get(token){return _globalKeyRegistry.get(resolveForwardRef(token));}/**
     * @return {?} the number of keys registered in the system.
     */},{key:'numberOfKeys',get:function get(){return _globalKeyRegistry.numberOfKeys;}}]);return ReflectiveKey;}();/**
 * \@internal
 */var KeyRegistry=function(){function KeyRegistry(){_classCallCheck(this,KeyRegistry);this._allKeys=new Map();}/**
     * @param {?} token
     * @return {?}
     */_createClass(KeyRegistry,[{key:'get',value:function get(token){if(token instanceof ReflectiveKey)return token;if(this._allKeys.has(token)){return this._allKeys.get(token);}var/** @type {?} */newKey=new ReflectiveKey(token,ReflectiveKey.numberOfKeys);this._allKeys.set(token,newKey);return newKey;}/**
     * @return {?}
     */},{key:'numberOfKeys',get:function get(){return this._allKeys.size;}}]);return KeyRegistry;}();var/** @type {?} */_globalKeyRegistry=new KeyRegistry();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @whatItDoes Represents a type that a Component or other object is instances of.
 *
 * @description
 *
 * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by
 * the `MyCustomComponent` constructor function.
 *
 * @stable
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */Type=Function;/**
 * @param {?} v
 * @return {?}
 */function isType(v){return typeof v==='function';}/**
 * Attention: This regex has to hold even if the code is minified!
 */var/** @type {?} */DELEGATE_CTOR=/^function\s+\S+\(\)\s*{\s*("use strict";)?\s*(return\s+)?(\S+\s+!==\s+null\s+&&\s+)?\S+\.apply\(this,\s*arguments\)/;var ReflectionCapabilities=function(){/**
     * @param {?=} reflect
     */function ReflectionCapabilities(reflect){_classCallCheck(this,ReflectionCapabilities);this._reflect=reflect||global$1.Reflect;}/**
     * @return {?}
     */_createClass(ReflectionCapabilities,[{key:'isReflectionEnabled',value:function isReflectionEnabled(){return true;}/**
     * @param {?} t
     * @return {?}
     */},{key:'factory',value:function factory(t){return function(){for(var _len4=arguments.length,args=Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}return new(Function.prototype.bind.apply(t,[null].concat(args)))();};}/**
     * \@internal
     * @param {?} paramTypes
     * @param {?} paramAnnotations
     * @return {?}
     */},{key:'_zipTypesAndAnnotations',value:function _zipTypesAndAnnotations(paramTypes,paramAnnotations){var/** @type {?} */result=void 0;if(typeof paramTypes==='undefined'){result=new Array(paramAnnotations.length);}else{result=new Array(paramTypes.length);}for(var/** @type {?} */i=0;i<result.length;i++){// TS outputs Object for parameters without types, while Traceur omits
// the annotations. For now we preserve the Traceur behavior to aid
// migration, but this can be revisited.
if(typeof paramTypes==='undefined'){result[i]=[];}else if(paramTypes[i]!=Object){result[i]=[paramTypes[i]];}else{result[i]=[];}if(paramAnnotations&&isPresent(paramAnnotations[i])){result[i]=result[i].concat(paramAnnotations[i]);}}return result;}/**
     * @param {?} type
     * @param {?} parentCtor
     * @return {?}
     */},{key:'_ownParameters',value:function _ownParameters(type,parentCtor){// If we have no decorators, we only have function.length as metadata.
// In that case, to detect whether a child class declared an own constructor or not,
// we need to look inside of that constructor to check whether it is
// just calling the parent.
// This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439
// that sets 'design:paramtypes' to []
// if a class inherits from another class but has no ctor declared itself.
if(DELEGATE_CTOR.exec(type.toString())){return null;}// Prefer the direct API.
if(type.parameters&&type.parameters!==parentCtor.parameters){return type.parameters;}// API of tsickle for lowering decorators to properties on the class.
var/** @type {?} */tsickleCtorParams=type.ctorParameters;if(tsickleCtorParams&&tsickleCtorParams!==parentCtor.ctorParameters){// Newer tsickle uses a function closure
// Retain the non-function case for compatibility with older tsickle
var/** @type {?} */ctorParameters=typeof tsickleCtorParams==='function'?tsickleCtorParams():tsickleCtorParams;var/** @type {?} */paramTypes=ctorParameters.map(function(ctorParam){return ctorParam&&ctorParam.type;});var/** @type {?} */paramAnnotations=ctorParameters.map(function(ctorParam){return ctorParam&&convertTsickleDecoratorIntoMetadata(ctorParam.decorators);});return this._zipTypesAndAnnotations(paramTypes,paramAnnotations);}// API for metadata created by invoking the decorators.
if(isPresent(this._reflect)&&isPresent(this._reflect.getOwnMetadata)){var/** @type {?} */_paramAnnotations=this._reflect.getOwnMetadata('parameters',type);var/** @type {?} */_paramTypes=this._reflect.getOwnMetadata('design:paramtypes',type);if(_paramTypes||_paramAnnotations){return this._zipTypesAndAnnotations(_paramTypes,_paramAnnotations);}}// If a class has no decorators, at least create metadata
// based on function.length.
// Note: We know that this is a real constructor as we checked
// the content of the constructor above.
return new Array(type.length).fill(undefined);}/**
     * @param {?} type
     * @return {?}
     */},{key:'parameters',value:function parameters(type){// Note: only report metadata if we have at least one class decorator
// to stay in sync with the static reflector.
if(!isType(type)){return[];}var/** @type {?} */parentCtor=getParentCtor(type);var/** @type {?} */parameters=this._ownParameters(type,parentCtor);if(!parameters&&parentCtor!==Object){parameters=this.parameters(parentCtor);}return parameters||[];}/**
     * @param {?} typeOrFunc
     * @param {?} parentCtor
     * @return {?}
     */},{key:'_ownAnnotations',value:function _ownAnnotations(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.annotations&&typeOrFunc.annotations!==parentCtor.annotations){var/** @type {?} */annotations=typeOrFunc.annotations;if(typeof annotations==='function'&&annotations.annotations){annotations=annotations.annotations;}return annotations;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.decorators&&typeOrFunc.decorators!==parentCtor.decorators){return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);}// API for metadata created by invoking the decorators.
if(this._reflect&&this._reflect.getOwnMetadata){return this._reflect.getOwnMetadata('annotations',typeOrFunc);}}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'annotations',value:function annotations(typeOrFunc){if(!isType(typeOrFunc)){return[];}var/** @type {?} */parentCtor=getParentCtor(typeOrFunc);var/** @type {?} */ownAnnotations=this._ownAnnotations(typeOrFunc,parentCtor)||[];var/** @type {?} */parentAnnotations=parentCtor!==Object?this.annotations(parentCtor):[];return parentAnnotations.concat(ownAnnotations);}/**
     * @param {?} typeOrFunc
     * @param {?} parentCtor
     * @return {?}
     */},{key:'_ownPropMetadata',value:function _ownPropMetadata(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.propMetadata&&typeOrFunc.propMetadata!==parentCtor.propMetadata){var/** @type {?} */propMetadata=typeOrFunc.propMetadata;if(typeof propMetadata==='function'&&propMetadata.propMetadata){propMetadata=propMetadata.propMetadata;}return propMetadata;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.propDecorators&&typeOrFunc.propDecorators!==parentCtor.propDecorators){var/** @type {?} */propDecorators=typeOrFunc.propDecorators;var/** @type {?} */_propMetadata={};Object.keys(propDecorators).forEach(function(prop){_propMetadata[prop]=convertTsickleDecoratorIntoMetadata(propDecorators[prop]);});return _propMetadata;}// API for metadata created by invoking the decorators.
if(this._reflect&&this._reflect.getOwnMetadata){return this._reflect.getOwnMetadata('propMetadata',typeOrFunc);}}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(typeOrFunc){if(!isType(typeOrFunc)){return{};}var/** @type {?} */parentCtor=getParentCtor(typeOrFunc);var/** @type {?} */propMetadata={};if(parentCtor!==Object){var/** @type {?} */parentPropMetadata=this.propMetadata(parentCtor);Object.keys(parentPropMetadata).forEach(function(propName){propMetadata[propName]=parentPropMetadata[propName];});}var/** @type {?} */ownPropMetadata=this._ownPropMetadata(typeOrFunc,parentCtor);if(ownPropMetadata){Object.keys(ownPropMetadata).forEach(function(propName){var/** @type {?} */decorators=[];if(propMetadata.hasOwnProperty(propName)){decorators.push.apply(decorators,_toConsumableArray(propMetadata[propName]));}decorators.push.apply(decorators,_toConsumableArray(ownPropMetadata[propName]));propMetadata[propName]=decorators;});}return propMetadata;}/**
     * @param {?} type
     * @param {?} lcProperty
     * @return {?}
     */},{key:'hasLifecycleHook',value:function hasLifecycleHook(type,lcProperty){return type instanceof Type&&lcProperty in type.prototype;}/**
     * @param {?} name
     * @return {?}
     */},{key:'getter',value:function getter(name){return new Function('o','return o.'+name+';');}/**
     * @param {?} name
     * @return {?}
     */},{key:'setter',value:function setter(name){return new Function('o','v','return o.'+name+' = v;');}/**
     * @param {?} name
     * @return {?}
     */},{key:'method',value:function method(name){var/** @type {?} */functionBody='if (!o.'+name+') throw new Error(\'"'+name+'" is undefined\');\n        return o.'+name+'.apply(o, args);';return new Function('o','args',functionBody);}/**
     * @param {?} type
     * @return {?}
     */},{key:'importUri',value:function importUri(type){// StaticSymbol
if((typeof type==='undefined'?'undefined':_typeof(type))==='object'&&type['filePath']){return type['filePath'];}// Runtime type
return'./'+stringify(type);}/**
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @param {?} runtime
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members,runtime){return runtime;}/**
     * @param {?} enumIdentifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(enumIdentifier,name){return enumIdentifier[name];}}]);return ReflectionCapabilities;}();/**
 * @param {?} decoratorInvocations
 * @return {?}
 */function convertTsickleDecoratorIntoMetadata(decoratorInvocations){if(!decoratorInvocations){return[];}return decoratorInvocations.map(function(decoratorInvocation){var/** @type {?} */decoratorType=decoratorInvocation.type;var/** @type {?} */annotationCls=decoratorType.annotationCls;var/** @type {?} */annotationArgs=decoratorInvocation.args?decoratorInvocation.args:[];return new(Function.prototype.bind.apply(annotationCls,[null].concat(_toConsumableArray(annotationArgs))))();});}/**
 * @param {?} ctor
 * @return {?}
 */function getParentCtor(ctor){var/** @type {?} */parentProto=Object.getPrototypeOf(ctor.prototype);var/** @type {?} */parentCtor=parentProto?parentProto.constructor:null;// Note: We always use `Object` as the null value
// to simplify checking later on.
return parentCtor||Object;}/**
 * Provides read-only access to reflection data about symbols. Used internally by Angular
 * to power dependency injection and compilation.
 * @abstract
 */var ReflectorReader=function(){function ReflectorReader(){_classCallCheck(this,ReflectorReader);}_createClass(ReflectorReader,[{key:'parameters',/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */value:function parameters(typeOrFunc){}/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'annotations',value:function annotations(typeOrFunc){}/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(typeOrFunc){}/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'importUri',value:function importUri(typeOrFunc){}/**
     * @abstract
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @param {?} runtime
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members,runtime){}/**
     * @abstract
     * @param {?} identifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(identifier,name){}}]);return ReflectorReader;}();/**
 * Provides access to reflection data about symbols. Used internally by Angular
 * to power dependency injection and compilation.
 */var Reflector=function(_ReflectorReader){_inherits(Reflector,_ReflectorReader);/**
     * @param {?} reflectionCapabilities
     */function Reflector(reflectionCapabilities){_classCallCheck(this,Reflector);var _this3=_possibleConstructorReturn(this,(Reflector.__proto__||Object.getPrototypeOf(Reflector)).call(this));_this3.reflectionCapabilities=reflectionCapabilities;return _this3;}/**
     * @param {?} caps
     * @return {?}
     */_createClass(Reflector,[{key:'updateCapabilities',value:function updateCapabilities(caps){this.reflectionCapabilities=caps;}/**
     * @param {?} type
     * @return {?}
     */},{key:'factory',value:function factory(type){return this.reflectionCapabilities.factory(type);}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'parameters',value:function parameters(typeOrFunc){return this.reflectionCapabilities.parameters(typeOrFunc);}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'annotations',value:function annotations(typeOrFunc){return this.reflectionCapabilities.annotations(typeOrFunc);}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(typeOrFunc){return this.reflectionCapabilities.propMetadata(typeOrFunc);}/**
     * @param {?} type
     * @param {?} lcProperty
     * @return {?}
     */},{key:'hasLifecycleHook',value:function hasLifecycleHook(type,lcProperty){return this.reflectionCapabilities.hasLifecycleHook(type,lcProperty);}/**
     * @param {?} name
     * @return {?}
     */},{key:'getter',value:function getter(name){return this.reflectionCapabilities.getter(name);}/**
     * @param {?} name
     * @return {?}
     */},{key:'setter',value:function setter(name){return this.reflectionCapabilities.setter(name);}/**
     * @param {?} name
     * @return {?}
     */},{key:'method',value:function method(name){return this.reflectionCapabilities.method(name);}/**
     * @param {?} type
     * @return {?}
     */},{key:'importUri',value:function importUri(type){return this.reflectionCapabilities.importUri(type);}/**
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @param {?} runtime
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members,runtime){return this.reflectionCapabilities.resolveIdentifier(name,moduleUrl,members,runtime);}/**
     * @param {?} identifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(identifier,name){return this.reflectionCapabilities.resolveEnum(identifier,name);}}]);return Reflector;}(ReflectorReader);/**
 * The {@link Reflector} used internally in Angular to access metadata
 * about symbols.
 */var/** @type {?} */reflector=new Reflector(new ReflectionCapabilities());/**
 * `Dependency` is used by the framework to extend DI.
 * This is internal to Angular and should not be used directly.
 */var ReflectiveDependency=function(){/**
     * @param {?} key
     * @param {?} optional
     * @param {?} visibility
     */function ReflectiveDependency(key,optional,visibility){_classCallCheck(this,ReflectiveDependency);this.key=key;this.optional=optional;this.visibility=visibility;}/**
     * @param {?} key
     * @return {?}
     */_createClass(ReflectiveDependency,null,[{key:'fromKey',value:function fromKey(key){return new ReflectiveDependency(key,false,null);}}]);return ReflectiveDependency;}();var/** @type {?} */_EMPTY_LIST=[];var ResolvedReflectiveProvider_=function(){/**
     * @param {?} key
     * @param {?} resolvedFactories
     * @param {?} multiProvider
     */function ResolvedReflectiveProvider_(key,resolvedFactories,multiProvider){_classCallCheck(this,ResolvedReflectiveProvider_);this.key=key;this.resolvedFactories=resolvedFactories;this.multiProvider=multiProvider;}/**
     * @return {?}
     */_createClass(ResolvedReflectiveProvider_,[{key:'resolvedFactory',get:function get(){return this.resolvedFactories[0];}}]);return ResolvedReflectiveProvider_;}();/**
 * An internal resolved representation of a factory function created by resolving {\@link
 * Provider}.
 * \@experimental
 */var ResolvedReflectiveFactory=/**
     * @param {?} factory
     * @param {?} dependencies
     */function ResolvedReflectiveFactory(factory,dependencies){_classCallCheck(this,ResolvedReflectiveFactory);this.factory=factory;this.dependencies=dependencies;};/**
 * Resolve a single provider.
 * @param {?} provider
 * @return {?}
 */function resolveReflectiveFactory(provider){var/** @type {?} */factoryFn=void 0;var/** @type {?} */resolvedDeps=void 0;if(provider.useClass){var/** @type {?} */useClass=resolveForwardRef(provider.useClass);factoryFn=reflector.factory(useClass);resolvedDeps=_dependenciesFor(useClass);}else if(provider.useExisting){factoryFn=function factoryFn(aliasInstance){return aliasInstance;};resolvedDeps=[ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];}else if(provider.useFactory){factoryFn=provider.useFactory;resolvedDeps=constructDependencies(provider.useFactory,provider.deps);}else{factoryFn=function factoryFn(){return provider.useValue;};resolvedDeps=_EMPTY_LIST;}return new ResolvedReflectiveFactory(factoryFn,resolvedDeps);}/**
 * Converts the {\@link Provider} into {\@link ResolvedProvider}.
 *
 * {\@link Injector} internally only uses {\@link ResolvedProvider}, {\@link Provider} contains
 * convenience provider syntax.
 * @param {?} provider
 * @return {?}
 */function resolveReflectiveProvider(provider){return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide),[resolveReflectiveFactory(provider)],provider.multi);}/**
 * Resolve a list of Providers.
 * @param {?} providers
 * @return {?}
 */function resolveReflectiveProviders(providers){var/** @type {?} */normalized=_normalizeProviders(providers,[]);var/** @type {?} */resolved=normalized.map(resolveReflectiveProvider);var/** @type {?} */resolvedProviderMap=mergeResolvedReflectiveProviders(resolved,new Map());return Array.from(resolvedProviderMap.values());}/**
 * Merges a list of ResolvedProviders into a list where
 * each key is contained exactly once and multi providers
 * have been merged.
 * @param {?} providers
 * @param {?} normalizedProvidersMap
 * @return {?}
 */function mergeResolvedReflectiveProviders(providers,normalizedProvidersMap){for(var/** @type {?} */i=0;i<providers.length;i++){var/** @type {?} */provider=providers[i];var/** @type {?} */existing=normalizedProvidersMap.get(provider.key.id);if(existing){if(provider.multiProvider!==existing.multiProvider){throw mixingMultiProvidersWithRegularProvidersError(existing,provider);}if(provider.multiProvider){for(var/** @type {?} */j=0;j<provider.resolvedFactories.length;j++){existing.resolvedFactories.push(provider.resolvedFactories[j]);}}else{normalizedProvidersMap.set(provider.key.id,provider);}}else{var/** @type {?} */resolvedProvider=void 0;if(provider.multiProvider){resolvedProvider=new ResolvedReflectiveProvider_(provider.key,provider.resolvedFactories.slice(),provider.multiProvider);}else{resolvedProvider=provider;}normalizedProvidersMap.set(provider.key.id,resolvedProvider);}}return normalizedProvidersMap;}/**
 * @param {?} providers
 * @param {?} res
 * @return {?}
 */function _normalizeProviders(providers,res){providers.forEach(function(b){if(b instanceof Type){res.push({provide:b,useClass:b});}else if(b&&(typeof b==='undefined'?'undefined':_typeof(b))=='object'&&b.provide!==undefined){res.push(/** @type {?} */b);}else if(b instanceof Array){_normalizeProviders(b,res);}else{throw invalidProviderError(b);}});return res;}/**
 * @param {?} typeOrFunc
 * @param {?} dependencies
 * @return {?}
 */function constructDependencies(typeOrFunc,dependencies){if(!dependencies){return _dependenciesFor(typeOrFunc);}else{var/** @type {?} */params=dependencies.map(function(t){return[t];});return dependencies.map(function(t){return _extractToken(typeOrFunc,t,params);});}}/**
 * @param {?} typeOrFunc
 * @return {?}
 */function _dependenciesFor(typeOrFunc){var/** @type {?} */params=reflector.parameters(typeOrFunc);if(!params)return[];if(params.some(function(p){return p==null;})){throw noAnnotationError(typeOrFunc,params);}return params.map(function(p){return _extractToken(typeOrFunc,p,params);});}/**
 * @param {?} typeOrFunc
 * @param {?} metadata
 * @param {?} params
 * @return {?}
 */function _extractToken(typeOrFunc,metadata,params){var/** @type {?} */token=null;var/** @type {?} */optional=false;if(!Array.isArray(metadata)){if(metadata instanceof Inject){return _createDependency(metadata['token'],optional,null);}else{return _createDependency(metadata,optional,null);}}var/** @type {?} */visibility=null;for(var/** @type {?} */i=0;i<metadata.length;++i){var/** @type {?} */paramMetadata=metadata[i];if(paramMetadata instanceof Type){token=paramMetadata;}else if(paramMetadata instanceof Inject){token=paramMetadata['token'];}else if(paramMetadata instanceof Optional){optional=true;}else if(paramMetadata instanceof Self||paramMetadata instanceof SkipSelf){visibility=paramMetadata;}else if(paramMetadata instanceof InjectionToken){token=paramMetadata;}}token=resolveForwardRef(token);if(token!=null){return _createDependency(token,optional,visibility);}else{throw noAnnotationError(typeOrFunc,params);}}/**
 * @param {?} token
 * @param {?} optional
 * @param {?} visibility
 * @return {?}
 */function _createDependency(token,optional,visibility){return new ReflectiveDependency(ReflectiveKey.get(token),optional,visibility);}// Threshold for the dynamic version
var/** @type {?} */UNDEFINED=new Object();/**
 * A ReflectiveDependency injection container used for instantiating objects and resolving
 * dependencies.
 *
 * An `Injector` is a replacement for a `new` operator, which can automatically resolve the
 * constructor dependencies.
 *
 * In typical use, application code asks for the dependencies in the constructor and they are
 * resolved by the `Injector`.
 *
 * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))
 *
 * The following example creates an `Injector` configured to create `Engine` and `Car`.
 *
 * ```typescript
 * \@Injectable()
 * class Engine {
 * }
 *
 * \@Injectable()
 * class Car {
 *   constructor(public engine:Engine) {}
 * }
 *
 * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
 * var car = injector.get(Car);
 * expect(car instanceof Car).toBe(true);
 * expect(car.engine instanceof Engine).toBe(true);
 * ```
 *
 * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`
 * resolve all of the object's dependencies automatically.
 *
 * \@stable
 * @abstract
 */var ReflectiveInjector=function(){function ReflectiveInjector(){_classCallCheck(this,ReflectiveInjector);}_createClass(ReflectiveInjector,[{key:'parent',/**
     * Parent of this injector.
     *
     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.
     * -->
     *
     * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))
     *
     * ```typescript
     * var parent = ReflectiveInjector.resolveAndCreate([]);
     * var child = parent.resolveAndCreateChild([]);
     * expect(child.parent).toBe(parent);
     * ```
     * @abstract
     * @return {?}
     */value:function parent(){}/**
     * Resolves an array of providers and creates a child injector from those providers.
     *
     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.
     * -->
     *
     * The passed-in providers can be an array of `Type`, {\@link Provider},
     * or a recursive array of more providers.
     *
     * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))
     *
     * ```typescript
     * class ParentProvider {}
     * class ChildProvider {}
     *
     * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);
     * var child = parent.resolveAndCreateChild([ChildProvider]);
     *
     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);
     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);
     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));
     * ```
     *
     * This function is slower than the corresponding `createChildFromResolved`
     * because it needs to resolve the passed-in providers first.
     * See {\@link Injector#resolve} and {\@link Injector#createChildFromResolved}.
     * @abstract
     * @param {?} providers
     * @return {?}
     */},{key:'resolveAndCreateChild',value:function resolveAndCreateChild(providers){}/**
     * Creates a child injector from previously resolved providers.
     *
     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.
     * -->
     *
     * This API is the recommended way to construct injectors in performance-sensitive parts.
     *
     * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))
     *
     * ```typescript
     * class ParentProvider {}
     * class ChildProvider {}
     *
     * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);
     * var childProviders = ReflectiveInjector.resolve([ChildProvider]);
     *
     * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);
     * var child = parent.createChildFromResolved(childProviders);
     *
     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);
     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);
     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));
     * ```
     * @abstract
     * @param {?} providers
     * @return {?}
     */},{key:'createChildFromResolved',value:function createChildFromResolved(providers){}/**
     * Resolves a provider and instantiates an object in the context of the injector.
     *
     * The created object does not get cached by the injector.
     *
     * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);
     *
     * var car = injector.resolveAndInstantiate(Car);
     * expect(car.engine).toBe(injector.get(Engine));
     * expect(car).not.toBe(injector.resolveAndInstantiate(Car));
     * ```
     * @abstract
     * @param {?} provider
     * @return {?}
     */},{key:'resolveAndInstantiate',value:function resolveAndInstantiate(provider){}/**
     * Instantiates an object using a resolved provider in the context of the injector.
     *
     * The created object does not get cached by the injector.
     *
     * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);
     * var carProvider = ReflectiveInjector.resolve([Car])[0];
     * var car = injector.instantiateResolved(carProvider);
     * expect(car.engine).toBe(injector.get(Engine));
     * expect(car).not.toBe(injector.instantiateResolved(carProvider));
     * ```
     * @abstract
     * @param {?} provider
     * @return {?}
     */},{key:'instantiateResolved',value:function instantiateResolved(provider){}/**
     * @abstract
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'get',value:function get(token,notFoundValue){}}],[{key:'resolve',/**
     * Turns an array of provider definitions into an array of resolved providers.
     *
     * A resolution is a process of flattening multiple nested arrays and converting individual
     * providers into an array of {\@link ResolvedReflectiveProvider}s.
     *
     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
     *
     * expect(providers.length).toEqual(2);
     *
     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
     * expect(providers[0].key.displayName).toBe("Car");
     * expect(providers[0].dependencies.length).toEqual(1);
     * expect(providers[0].factory).toBeDefined();
     *
     * expect(providers[1].key.displayName).toBe("Engine");
     * });
     * ```
     *
     * See {\@link ReflectiveInjector#fromResolvedProviders} for more info.
     * @param {?} providers
     * @return {?}
     */value:function resolve(providers){return resolveReflectiveProviders(providers);}/**
     * Resolves an array of providers and creates an injector from those providers.
     *
     * The passed-in providers can be an array of `Type`, {\@link Provider},
     * or a recursive array of more providers.
     *
     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     *
     * This function is slower than the corresponding `fromResolvedProviders`
     * because it needs to resolve the passed-in providers first.
     * See {\@link Injector#resolve} and {\@link Injector#fromResolvedProviders}.
     * @param {?} providers
     * @param {?=} parent
     * @return {?}
     */},{key:'resolveAndCreate',value:function resolveAndCreate(providers){var parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders,parent);}/**
     * Creates an injector from previously resolved providers.
     *
     * This API is the recommended way to construct injectors in performance-sensitive parts.
     *
     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, Engine]);
     * var injector = ReflectiveInjector.fromResolvedProviders(providers);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     * \@experimental
     * @param {?} providers
     * @param {?=} parent
     * @return {?}
     */},{key:'fromResolvedProviders',value:function fromResolvedProviders(providers){var parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return new ReflectiveInjector_(providers,parent);}}]);return ReflectiveInjector;}();var ReflectiveInjector_=function(){/**
     * Private
     * @param {?} _providers
     * @param {?=} _parent
     */function ReflectiveInjector_(_providers){var _parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,ReflectiveInjector_);/** @internal */this._constructionCounter=0;this._providers=_providers;this._parent=_parent;var len=_providers.length;this.keyIds=new Array(len);this.objs=new Array(len);for(var i=0;i<len;i++){this.keyIds[i]=_providers[i].key.id;this.objs[i]=UNDEFINED;}}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */_createClass(ReflectiveInjector_,[{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:THROW_IF_NOT_FOUND;return this._getByKey(ReflectiveKey.get(token),null,notFoundValue);}/**
     * @return {?}
     */},{key:'resolveAndCreateChild',/**
     * @param {?} providers
     * @return {?}
     */value:function resolveAndCreateChild(providers){var/** @type {?} */ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return this.createChildFromResolved(ResolvedReflectiveProviders);}/**
     * @param {?} providers
     * @return {?}
     */},{key:'createChildFromResolved',value:function createChildFromResolved(providers){var/** @type {?} */inj=new ReflectiveInjector_(providers);inj._parent=this;return inj;}/**
     * @param {?} provider
     * @return {?}
     */},{key:'resolveAndInstantiate',value:function resolveAndInstantiate(provider){return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);}/**
     * @param {?} provider
     * @return {?}
     */},{key:'instantiateResolved',value:function instantiateResolved(provider){return this._instantiateProvider(provider);}/**
     * @param {?} index
     * @return {?}
     */},{key:'getProviderAtIndex',value:function getProviderAtIndex(index){if(index<0||index>=this._providers.length){throw outOfBoundsError(index);}return this._providers[index];}/**
     * \@internal
     * @param {?} provider
     * @return {?}
     */},{key:'_new',value:function _new(provider){if(this._constructionCounter++>this._getMaxNumberOfObjects()){throw cyclicDependencyError(this,provider.key);}return this._instantiateProvider(provider);}/**
     * @return {?}
     */},{key:'_getMaxNumberOfObjects',value:function _getMaxNumberOfObjects(){return this.objs.length;}/**
     * @param {?} provider
     * @return {?}
     */},{key:'_instantiateProvider',value:function _instantiateProvider(provider){if(provider.multiProvider){var/** @type {?} */res=new Array(provider.resolvedFactories.length);for(var/** @type {?} */i=0;i<provider.resolvedFactories.length;++i){res[i]=this._instantiate(provider,provider.resolvedFactories[i]);}return res;}else{return this._instantiate(provider,provider.resolvedFactories[0]);}}/**
     * @param {?} provider
     * @param {?} ResolvedReflectiveFactory
     * @return {?}
     */},{key:'_instantiate',value:function _instantiate(provider,ResolvedReflectiveFactory){var _this4=this;var/** @type {?} */factory=ResolvedReflectiveFactory.factory;var/** @type {?} */deps=void 0;try{deps=ResolvedReflectiveFactory.dependencies.map(function(dep){return _this4._getByReflectiveDependency(dep);});}catch(e){if(e.addKey){e.addKey(this,provider.key);}throw e;}var/** @type {?} */obj=void 0;try{obj=factory.apply(undefined,_toConsumableArray(deps));}catch(e){throw instantiationError(this,e,e.stack,provider.key);}return obj;}/**
     * @param {?} dep
     * @return {?}
     */},{key:'_getByReflectiveDependency',value:function _getByReflectiveDependency(dep){return this._getByKey(dep.key,dep.visibility,dep.optional?null:THROW_IF_NOT_FOUND);}/**
     * @param {?} key
     * @param {?} visibility
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'_getByKey',value:function _getByKey(key,visibility,notFoundValue){if(key===INJECTOR_KEY){return this;}if(visibility instanceof Self){return this._getByKeySelf(key,notFoundValue);}else{return this._getByKeyDefault(key,notFoundValue,visibility);}}/**
     * @param {?} keyId
     * @return {?}
     */},{key:'_getObjByKeyId',value:function _getObjByKeyId(keyId){for(var/** @type {?} */i=0;i<this.keyIds.length;i++){if(this.keyIds[i]===keyId){if(this.objs[i]===UNDEFINED){this.objs[i]=this._new(this._providers[i]);}return this.objs[i];}}return UNDEFINED;}/**
     * \@internal
     * @param {?} key
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'_throwOrNull',value:function _throwOrNull(key,notFoundValue){if(notFoundValue!==THROW_IF_NOT_FOUND){return notFoundValue;}else{throw noProviderError(this,key);}}/**
     * \@internal
     * @param {?} key
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'_getByKeySelf',value:function _getByKeySelf(key,notFoundValue){var/** @type {?} */obj=this._getObjByKeyId(key.id);return obj!==UNDEFINED?obj:this._throwOrNull(key,notFoundValue);}/**
     * \@internal
     * @param {?} key
     * @param {?} notFoundValue
     * @param {?} visibility
     * @return {?}
     */},{key:'_getByKeyDefault',value:function _getByKeyDefault(key,notFoundValue,visibility){var/** @type {?} */inj=void 0;if(visibility instanceof SkipSelf){inj=this._parent;}else{inj=this;}while(inj instanceof ReflectiveInjector_){var/** @type {?} */inj_=inj;var/** @type {?} */obj=inj_._getObjByKeyId(key.id);if(obj!==UNDEFINED)return obj;inj=inj_._parent;}if(inj!==null){return inj.get(key.token,notFoundValue);}else{return this._throwOrNull(key,notFoundValue);}}/**
     * @return {?}
     */},{key:'toString',/**
     * @return {?}
     */value:function toString(){return this.displayName;}},{key:'parent',get:function get(){return this._parent;}},{key:'displayName',get:function get(){var/** @type {?} */providers=_mapProviders(this,function(b){return' "'+b.key.displayName+'" ';}).join(', ');return'ReflectiveInjector(providers: ['+providers+'])';}}]);return ReflectiveInjector_;}();var/** @type {?} */INJECTOR_KEY=ReflectiveKey.get(Injector);/**
 * @param {?} injector
 * @param {?} fn
 * @return {?}
 */function _mapProviders(injector,fn){var/** @type {?} */res=new Array(injector._providers.length);for(var/** @type {?} */i=0;i<injector._providers.length;++i){res[i]=fn(injector.getProviderAtIndex(i));}return res;}/**
 * Wraps Javascript Objects
 */var StringMapWrapper=function(){function StringMapWrapper(){_classCallCheck(this,StringMapWrapper);}_createClass(StringMapWrapper,null,[{key:'merge',/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */value:function merge(m1,m2){var/** @type {?} */m={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(m1)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var k=_step.value;m[k]=m1[k];}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(m2)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _k=_step2.value;m[_k]=m2[_k];}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return m;}/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */},{key:'equals',value:function equals(m1,m2){var/** @type {?} */k1=Object.keys(m1);var/** @type {?} */k2=Object.keys(m2);if(k1.length!=k2.length){return false;}for(var/** @type {?} */i=0;i<k1.length;i++){var/** @type {?} */key=k1[i];if(m1[key]!==m2[key]){return false;}}return true;}}]);return StringMapWrapper;}();var ListWrapper=function(){function ListWrapper(){_classCallCheck(this,ListWrapper);}_createClass(ListWrapper,null,[{key:'findLast',/**
     * @param {?} arr
     * @param {?} condition
     * @return {?}
     */value:function findLast(arr,condition){for(var/** @type {?} */i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
     * @param {?} list
     * @param {?} items
     * @return {?}
     */},{key:'removeAll',value:function removeAll(list,items){for(var/** @type {?} */i=0;i<items.length;++i){var/** @type {?} */index=list.indexOf(items[i]);if(index>-1){list.splice(index,1);}}}/**
     * @param {?} list
     * @param {?} el
     * @return {?}
     */},{key:'remove',value:function remove(list,el){var/** @type {?} */index=list.indexOf(el);if(index>-1){list.splice(index,1);return true;}return false;}/**
     * @param {?} a
     * @param {?} b
     * @return {?}
     */},{key:'equals',value:function equals(a,b){if(a.length!=b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i]!==b[i])return false;}return true;}/**
     * @param {?} list
     * @return {?}
     */},{key:'flatten',value:function flatten(list){return list.reduce(function(flat,item){var/** @type {?} */flatItem=Array.isArray(item)?ListWrapper.flatten(item):item;return flat.concat(flatItem);},[]);}}]);return ListWrapper;}();/**
 * @param {?} obj
 * @return {?}
 */function isListLikeIterable(obj){if(!isJsObject(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&getSymbolIterator()in obj;// JS Iterable have a Symbol.iterator prop
}/**
 * @param {?} a
 * @param {?} b
 * @param {?} comparator
 * @return {?}
 */function areIterablesEqual(a,b,comparator){var/** @type {?} */iterator1=a[getSymbolIterator()]();var/** @type {?} */iterator2=b[getSymbolIterator()]();while(true){var/** @type {?} */item1=iterator1.next();var/** @type {?} */item2=iterator2.next();if(item1.done&&item2.done)return true;if(item1.done||item2.done)return false;if(!comparator(item1.value,item2.value))return false;}}/**
 * @param {?} obj
 * @param {?} fn
 * @return {?}
 */function iterateListLike(obj,fn){if(Array.isArray(obj)){for(var/** @type {?} */i=0;i<obj.length;i++){fn(obj[i]);}}else{var/** @type {?} */iterator=obj[getSymbolIterator()]();var/** @type {?} */item=void 0;while(!(item=iterator.next()).done){fn(item.value);}}}/**
 * Determine if the argument is shaped like a Promise
 * @param {?} obj
 * @return {?}
 */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}/**
 * Determine if the argument is an Observable
 * @param {?} obj
 * @return {?}
 */function isObservable(obj){return!!(obj&&obj[__WEBPACK_IMPORTED_MODULE_3_rxjs_symbol_observable__["$$observable"]]);}/**
 * A function that will be executed when an application is initialized.
 * @experimental
 */var/** @type {?} */APP_INITIALIZER=new InjectionToken('Application Initializer');/**
 * A class that reflects the state of running {\@link APP_INITIALIZER}s.
 *
 * \@experimental
 */var ApplicationInitStatus=function(){/**
     * @param {?} appInits
     */function ApplicationInitStatus(appInits){var _this5=this;_classCallCheck(this,ApplicationInitStatus);this._done=false;var asyncInitPromises=[];if(appInits){for(var i=0;i<appInits.length;i++){var initResult=appInits[i]();if(isPromise(initResult)){asyncInitPromises.push(initResult);}}}this._donePromise=Promise.all(asyncInitPromises).then(function(){_this5._done=true;});if(asyncInitPromises.length===0){this._done=true;}}/**
     * @return {?}
     */_createClass(ApplicationInitStatus,[{key:'done',get:function get(){return this._done;}/**
     * @return {?}
     */},{key:'donePromise',get:function get(){return this._donePromise;}}]);return ApplicationInitStatus;}();ApplicationInitStatus.decorators=[{type:Injectable}];/** @nocollapse */ApplicationInitStatus.ctorParameters=function(){return[{type:Array,decorators:[{type:Inject,args:[APP_INITIALIZER]},{type:Optional}]}];};/**
 * A DI Token representing a unique string id assigned to the application by Angular and used
 * primarily for prefixing application attributes and CSS styles when
 * {@link ViewEncapsulation#Emulated} is being used.
 *
 * If you need to avoid randomly generated value to be used as an application id, you can provide
 * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}
 * using this token.
 * @experimental
 */var/** @type {?} */APP_ID=new InjectionToken('AppId');/**
 * @return {?}
 */function _appIdRandomProviderFactory(){return''+_randomChar()+_randomChar()+_randomChar();}/**
 * Providers that will generate a random APP_ID_TOKEN.
 * @experimental
 */var/** @type {?} */APP_ID_RANDOM_PROVIDER={provide:APP_ID,useFactory:_appIdRandomProviderFactory,deps:/** @type {?} */[]};/**
 * @return {?}
 */function _randomChar(){return String.fromCharCode(97+Math.floor(Math.random()*25));}/**
 * A function that will be executed when a platform is initialized.
 * @experimental
 */var/** @type {?} */PLATFORM_INITIALIZER=new InjectionToken('Platform Initializer');/**
 * A token that indicates an opaque platform id.
 * @experimental
 */var/** @type {?} */PLATFORM_ID=new InjectionToken('Platform ID');/**
 * All callbacks provided via this token will be called for every component that is bootstrapped.
 * Signature of the callback:
 *
 * `(componentRef: ComponentRef) => void`.
 *
 * @experimental
 */var/** @type {?} */APP_BOOTSTRAP_LISTENER=new InjectionToken('appBootstrapListener');/**
 * A token which indicates the root directory of the application
 * @experimental
 */var/** @type {?} */PACKAGE_ROOT_URL=new InjectionToken('Application Packages Root URL');var Console=function(){function Console(){_classCallCheck(this,Console);}_createClass(Console,[{key:'log',/**
     * @param {?} message
     * @return {?}
     */value:function log(message){print(message);}/**
     * @param {?} message
     * @return {?}
     */},{key:'warn',value:function warn(message){_warn(message);}}]);return Console;}();Console.decorators=[{type:Injectable}];/** @nocollapse */Console.ctorParameters=function(){return[];};/**
 * Combination of NgModuleFactory and ComponentFactorys.
 *
 * \@experimental
 */var ModuleWithComponentFactories=/**
     * @param {?} ngModuleFactory
     * @param {?} componentFactories
     */function ModuleWithComponentFactories(ngModuleFactory,componentFactories){_classCallCheck(this,ModuleWithComponentFactories);this.ngModuleFactory=ngModuleFactory;this.componentFactories=componentFactories;};/**
 * @return {?}
 */function _throwError(){throw new Error('Runtime compiler is not loaded');}/**
 * Low-level service for running the angular compiler during runtime
 * to create {\@link ComponentFactory}s, which
 * can later be used to create and render a Component instance.
 *
 * Each `\@NgModule` provides an own `Compiler` to its injector,
 * that will use the directives/pipes of the ng module for compilation
 * of components.
 * \@stable
 */var Compiler=function(){function Compiler(){_classCallCheck(this,Compiler);}_createClass(Compiler,[{key:'compileModuleSync',/**
     * Compiles the given NgModule and all of its components. All templates of the components listed
     * in `entryComponents` have to be inlined.
     * @param {?} moduleType
     * @return {?}
     */value:function compileModuleSync(moduleType){throw _throwError();}/**
     * Compiles the given NgModule and all of its components
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAsync',value:function compileModuleAsync(moduleType){throw _throwError();}/**
     * Same as {\@link compileModuleSync} but also creates ComponentFactories for all components.
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsSync',value:function compileModuleAndAllComponentsSync(moduleType){throw _throwError();}/**
     * Same as {\@link compileModuleAsync} but also creates ComponentFactories for all components.
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsAsync',value:function compileModuleAndAllComponentsAsync(moduleType){throw _throwError();}/**
     * Exposes the CSS-style selectors that have been used in `ngContent` directives within
     * the template of the given component.
     * This is used by the `upgrade` library to compile the appropriate transclude content
     * in the AngularJS wrapper component.
     * @param {?} component
     * @return {?}
     */},{key:'getNgContentSelectors',value:function getNgContentSelectors(component){throw _throwError();}/**
     * Clears all caches.
     * @return {?}
     */},{key:'clearCache',value:function clearCache(){}/**
     * Clears the cache for the given component/ngModule.
     * @param {?} type
     * @return {?}
     */},{key:'clearCacheFor',value:function clearCacheFor(type){}}]);return Compiler;}();Compiler.decorators=[{type:Injectable}];/** @nocollapse */Compiler.ctorParameters=function(){return[];};/**
 * Token to provide CompilerOptions in the platform injector.
 *
 * @experimental
 */var/** @type {?} */COMPILER_OPTIONS=new InjectionToken('compilerOptions');/**
 * A factory for creating a Compiler
 *
 * \@experimental
 * @abstract
 */var CompilerFactory=function(){function CompilerFactory(){_classCallCheck(this,CompilerFactory);}_createClass(CompilerFactory,[{key:'createCompiler',/**
     * @abstract
     * @param {?=} options
     * @return {?}
     */value:function createCompiler(options){}}]);return CompilerFactory;}();var ElementRef=/**
     * @param {?} nativeElement
     */function ElementRef(nativeElement){_classCallCheck(this,ElementRef);this.nativeElement=nativeElement;};/**
 * Use by directives and components to emit custom Events.
 *
 * ### Examples
 *
 * In the following example, `Zippy` alternatively emits `open` and `close` events when its
 * title gets clicked:
 *
 * ```
 * \@Component({
 *   selector: 'zippy',
 *   template: `
 *   <div class="zippy">
 *     <div (click)="toggle()">Toggle</div>
 *     <div [hidden]="!visible">
 *       <ng-content></ng-content>
 *     </div>
 *  </div>`})
 * export class Zippy {
 *   visible: boolean = true;
 *   \@Output() open: EventEmitter<any> = new EventEmitter();
 *   \@Output() close: EventEmitter<any> = new EventEmitter();
 *
 *   toggle() {
 *     this.visible = !this.visible;
 *     if (this.visible) {
 *       this.open.emit(null);
 *     } else {
 *       this.close.emit(null);
 *     }
 *   }
 * }
 * ```
 *
 * The events payload can be accessed by the parameter `$event` on the components output event
 * handler:
 *
 * ```
 * <zippy (open)="onOpen($event)" (close)="onClose($event)"></zippy>
 * ```
 *
 * Uses Rx.Observable but provides an adapter to make it work as specified here:
 * https://github.com/jhusain/observable-spec
 *
 * Once a reference implementation of the spec is available, switch to it.
 * \@stable
 */var EventEmitter=function(_Subject){_inherits(EventEmitter,_Subject);/**
     * Creates an instance of [EventEmitter], which depending on [isAsync],
     * delivers events synchronously or asynchronously.
     * @param {?=} isAsync
     */function EventEmitter(){var isAsync=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;_classCallCheck(this,EventEmitter);var _this6=_possibleConstructorReturn(this,(EventEmitter.__proto__||Object.getPrototypeOf(EventEmitter)).call(this));_this6.__isAsync=isAsync;return _this6;}/**
     * @param {?=} value
     * @return {?}
     */_createClass(EventEmitter,[{key:'emit',value:function emit(value){_get(EventEmitter.prototype.__proto__||Object.getPrototypeOf(EventEmitter.prototype),'next',this).call(this,value);}/**
     * @param {?=} generatorOrNext
     * @param {?=} error
     * @param {?=} complete
     * @return {?}
     */},{key:'subscribe',value:function subscribe(generatorOrNext,error,complete){var/** @type {?} */schedulerFn=void 0;var/** @type {?} */errorFn=function errorFn(err){return null;};var/** @type {?} */completeFn=function completeFn(){return null;};if(generatorOrNext&&(typeof generatorOrNext==='undefined'?'undefined':_typeof(generatorOrNext))==='object'){schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext.next(value);});}:function(value){generatorOrNext.next(value);};if(generatorOrNext.error){errorFn=this.__isAsync?function(err){setTimeout(function(){return generatorOrNext.error(err);});}:function(err){generatorOrNext.error(err);};}if(generatorOrNext.complete){completeFn=this.__isAsync?function(){setTimeout(function(){return generatorOrNext.complete();});}:function(){generatorOrNext.complete();};}}else{schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext(value);});}:function(value){generatorOrNext(value);};if(error){errorFn=this.__isAsync?function(err){setTimeout(function(){return error(err);});}:function(err){error(err);};}if(complete){completeFn=this.__isAsync?function(){setTimeout(function(){return complete();});}:function(){complete();};}}return _get(EventEmitter.prototype.__proto__||Object.getPrototypeOf(EventEmitter.prototype),'subscribe',this).call(this,schedulerFn,errorFn,completeFn);}}]);return EventEmitter;}(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__["Subject"]);/**
 * An injectable service for executing work inside or outside of the Angular zone.
 *
 * The most common use of this service is to optimize performance when starting a work consisting of
 * one or more asynchronous tasks that don't require UI updates or error handling to be handled by
 * Angular. Such tasks can be kicked off via {\@link runOutsideAngular} and if needed, these tasks
 * can reenter the Angular zone via {\@link run}.
 *
 * <!-- TODO: add/fix links to:
 *   - docs explaining zones and the use of zones in Angular and change-detection
 *   - link to runOutsideAngular/run (throughout this file!)
 *   -->
 *
 * ### Example
 *
 * ```
 * import {Component, NgZone} from '\@angular/core';
 * import {NgIf} from '\@angular/common';
 *
 * \@Component({
 *   selector: 'ng-zone-demo'.
 *   template: `
 *     <h2>Demo: NgZone</h2>
 *
 *     <p>Progress: {{progress}}%</p>
 *     <p *ngIf="progress >= 100">Done processing {{label}} of Angular zone!</p>
 *
 *     <button (click)="processWithinAngularZone()">Process within Angular zone</button>
 *     <button (click)="processOutsideOfAngularZone()">Process outside of Angular zone</button>
 *   `,
 * })
 * export class NgZoneDemo {
 *   progress: number = 0;
 *   label: string;
 *
 *   constructor(private _ngZone: NgZone) {}
 *
 *   // Loop inside the Angular zone
 *   // so the UI DOES refresh after each setTimeout cycle
 *   processWithinAngularZone() {
 *     this.label = 'inside';
 *     this.progress = 0;
 *     this._increaseProgress(() => console.log('Inside Done!'));
 *   }
 *
 *   // Loop outside of the Angular zone
 *   // so the UI DOES NOT refresh after each setTimeout cycle
 *   processOutsideOfAngularZone() {
 *     this.label = 'outside';
 *     this.progress = 0;
 *     this._ngZone.runOutsideAngular(() => {
 *       this._increaseProgress(() => {
 *       // reenter the Angular zone and display done
 *       this._ngZone.run(() => {console.log('Outside Done!') });
 *     }}));
 *   }
 *
 *   _increaseProgress(doneCallback: () => void) {
 *     this.progress += 1;
 *     console.log(`Current progress: ${this.progress}%`);
 *
 *     if (this.progress < 100) {
 *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)
 *     } else {
 *       doneCallback();
 *     }
 *   }
 * }
 * ```
 *
 * \@experimental
 */var NgZone=function(){/**
     * @param {?} __0
     */function NgZone(_ref2){var _ref2$enableLongStack=_ref2.enableLongStackTrace,enableLongStackTrace=_ref2$enableLongStack===undefined?false:_ref2$enableLongStack;_classCallCheck(this,NgZone);this._hasPendingMicrotasks=false;this._hasPendingMacrotasks=false;this._isStable=true;this._nesting=0;this._onUnstable=new EventEmitter(false);this._onMicrotaskEmpty=new EventEmitter(false);this._onStable=new EventEmitter(false);this._onErrorEvents=new EventEmitter(false);if(typeof Zone=='undefined'){throw new Error('Angular requires Zone.js prolyfill.');}Zone.assertZonePatched();this.outer=this.inner=Zone.current;if(Zone['wtfZoneSpec']){this.inner=this.inner.fork(Zone['wtfZoneSpec']);}if(enableLongStackTrace&&Zone['longStackTraceZoneSpec']){this.inner=this.inner.fork(Zone['longStackTraceZoneSpec']);}this.forkInnerZoneWithAngularBehavior();}/**
     * @return {?}
     */_createClass(NgZone,[{key:'run',/**
     * Executes the `fn` function synchronously within the Angular zone and returns value returned by
     * the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {\@link runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     * @param {?} fn
     * @return {?}
     */value:function run(fn){return this.inner.run(fn);}/**
     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
     * rethrown.
     * @param {?} fn
     * @return {?}
     */},{key:'runGuarded',value:function runGuarded(fn){return this.inner.runGuarded(fn);}/**
     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
     * the function.
     *
     * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that
     * doesn't trigger Angular change-detection or is subject to Angular's error handling.
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * outside of the Angular zone.
     *
     * Use {\@link run} to reenter the Angular zone and do work that updates the application model.
     * @param {?} fn
     * @return {?}
     */},{key:'runOutsideAngular',value:function runOutsideAngular(fn){return this.outer.run(fn);}/**
     * Notifies when code enters Angular Zone. This gets fired first on VM Turn.
     * @return {?}
     */},{key:'checkStable',/**
     * @return {?}
     */value:function checkStable(){var _this7=this;if(this._nesting==0&&!this._hasPendingMicrotasks&&!this._isStable){try{this._nesting++;this._onMicrotaskEmpty.emit(null);}finally{this._nesting--;if(!this._hasPendingMicrotasks){try{this.runOutsideAngular(function(){return _this7._onStable.emit(null);});}finally{this._isStable=true;}}}}}/**
     * @return {?}
     */},{key:'forkInnerZoneWithAngularBehavior',value:function forkInnerZoneWithAngularBehavior(){var _this8=this;this.inner=this.inner.fork({name:'angular',properties:/** @type {?} */{'isAngularZone':true},onInvokeTask:function onInvokeTask(delegate,current,target,task,applyThis,applyArgs){try{_this8.onEnter();return delegate.invokeTask(target,task,applyThis,applyArgs);}finally{_this8.onLeave();}},onInvoke:function onInvoke(delegate,current,target,callback,applyThis,applyArgs,source){try{_this8.onEnter();return delegate.invoke(target,callback,applyThis,applyArgs,source);}finally{_this8.onLeave();}},onHasTask:function onHasTask(delegate,current,target,hasTaskState){delegate.hasTask(target,hasTaskState);if(current===target){// We are only interested in hasTask events which originate from our zone
// (A child hasTask event is not interesting to us)
if(hasTaskState.change=='microTask'){_this8.setHasMicrotask(hasTaskState.microTask);}else if(hasTaskState.change=='macroTask'){_this8.setHasMacrotask(hasTaskState.macroTask);}}},onHandleError:function onHandleError(delegate,current,target,error){delegate.handleError(target,error);_this8.triggerError(error);return false;}});}/**
     * @return {?}
     */},{key:'onEnter',value:function onEnter(){this._nesting++;if(this._isStable){this._isStable=false;this._onUnstable.emit(null);}}/**
     * @return {?}
     */},{key:'onLeave',value:function onLeave(){this._nesting--;this.checkStable();}/**
     * @param {?} hasMicrotasks
     * @return {?}
     */},{key:'setHasMicrotask',value:function setHasMicrotask(hasMicrotasks){this._hasPendingMicrotasks=hasMicrotasks;this.checkStable();}/**
     * @param {?} hasMacrotasks
     * @return {?}
     */},{key:'setHasMacrotask',value:function setHasMacrotask(hasMacrotasks){this._hasPendingMacrotasks=hasMacrotasks;}/**
     * @param {?} error
     * @return {?}
     */},{key:'triggerError',value:function triggerError(error){this._onErrorEvents.emit(error);}},{key:'onUnstable',get:function get(){return this._onUnstable;}/**
     * Notifies when there is no more microtasks enqueue in the current VM Turn.
     * This is a hint for Angular to do change detection, which may enqueue more microtasks.
     * For this reason this event can fire multiple times per VM Turn.
     * @return {?}
     */},{key:'onMicrotaskEmpty',get:function get(){return this._onMicrotaskEmpty;}/**
     * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which
     * implies we are about to relinquish VM turn.
     * This event gets called just once.
     * @return {?}
     */},{key:'onStable',get:function get(){return this._onStable;}/**
     * Notify that an error has been delivered.
     * @return {?}
     */},{key:'onError',get:function get(){return this._onErrorEvents;}/**
     * Whether there are no outstanding microtasks or macrotasks.
     * @return {?}
     */},{key:'isStable',get:function get(){return this._isStable;}/**
     * @return {?}
     */},{key:'hasPendingMicrotasks',get:function get(){return this._hasPendingMicrotasks;}/**
     * @return {?}
     */},{key:'hasPendingMacrotasks',get:function get(){return this._hasPendingMacrotasks;}}],[{key:'isInAngularZone',value:function isInAngularZone(){return Zone.current.get('isAngularZone')===true;}/**
     * @return {?}
     */},{key:'assertInAngularZone',value:function assertInAngularZone(){if(!NgZone.isInAngularZone()){throw new Error('Expected to be in Angular Zone, but it is not!');}}/**
     * @return {?}
     */},{key:'assertNotInAngularZone',value:function assertNotInAngularZone(){if(NgZone.isInAngularZone()){throw new Error('Expected to not be in Angular Zone, but it is!');}}}]);return NgZone;}();var AnimationQueue=function(){/**
     * @param {?} _zone
     */function AnimationQueue(_zone){_classCallCheck(this,AnimationQueue);this._zone=_zone;this.entries=[];}/**
     * @param {?} player
     * @return {?}
     */_createClass(AnimationQueue,[{key:'enqueue',value:function enqueue(player){this.entries.push(player);}/**
     * @return {?}
     */},{key:'flush',value:function flush(){var _this9=this;// given that each animation player may set aside
// microtasks and rely on DOM-based events, this
// will cause Angular to run change detection after
// each request. This sidesteps the issue. If a user
// hooks into an animation via (@anim.start) or (@anim.done)
// then those methods will automatically trigger change
// detection by wrapping themselves inside of a zone
if(this.entries.length){this._zone.runOutsideAngular(function(){// this code is wrapped into a single promise such that the
// onStart and onDone player callbacks are triggered outside
// of the digest cycle of animations
Promise.resolve(null).then(function(){return _this9._triggerAnimations();});});}}/**
     * @return {?}
     */},{key:'_triggerAnimations',value:function _triggerAnimations(){NgZone.assertNotInAngularZone();while(this.entries.length){var/** @type {?} */player=this.entries.shift();// in the event that an animation throws an error then we do
// not want to re-run animations on any previous animations
// if they have already been kicked off beforehand
if(!player.hasStarted()){player.play();}}}}]);return AnimationQueue;}();AnimationQueue.decorators=[{type:Injectable}];/** @nocollapse */AnimationQueue.ctorParameters=function(){return[{type:NgZone}];};var DefaultIterableDifferFactory=function(){function DefaultIterableDifferFactory(){_classCallCheck(this,DefaultIterableDifferFactory);}/**
     * @param {?} obj
     * @return {?}
     */_createClass(DefaultIterableDifferFactory,[{key:'supports',value:function supports(obj){return isListLikeIterable(obj);}/**
     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter
     * @param {?=} cdRefOrTrackBy
     * @param {?=} trackByFn
     * @return {?}
     */},{key:'create',value:function create(cdRefOrTrackBy,trackByFn){return new DefaultIterableDiffer(trackByFn||cdRefOrTrackBy);}}]);return DefaultIterableDifferFactory;}();var/** @type {?} */trackByIdentity=function trackByIdentity(index,item){return item;};/**
 * @deprecated v4.0.0 - Should not be part of public API.
 */var DefaultIterableDiffer=function(){/**
     * @param {?=} _trackByFn
     */function DefaultIterableDiffer(_trackByFn){_classCallCheck(this,DefaultIterableDiffer);this._trackByFn=_trackByFn;this._length=null;this._collection=null;this._linkedRecords=null;this._unlinkedRecords=null;this._previousItHead=null;this._itHead=null;this._itTail=null;this._additionsHead=null;this._additionsTail=null;this._movesHead=null;this._movesTail=null;this._removalsHead=null;this._removalsTail=null;this._identityChangesHead=null;this._identityChangesTail=null;this._trackByFn=this._trackByFn||trackByIdentity;}/**
     * @return {?}
     */_createClass(DefaultIterableDiffer,[{key:'forEachItem',/**
     * @param {?} fn
     * @return {?}
     */value:function forEachItem(fn){var/** @type {?} */record=void 0;for(record=this._itHead;record!==null;record=record._next){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachOperation',value:function forEachOperation(fn){var/** @type {?} */nextIt=this._itHead;var/** @type {?} */nextRemove=this._removalsHead;var/** @type {?} */addRemoveOffset=0;var/** @type {?} */moveOffsets=null;while(nextIt||nextRemove){// Figure out which is the next record to process
// Order: remove, add, move
var/** @type {?} */record=!nextRemove||nextIt&&nextIt.currentIndex<getPreviousIndex(nextRemove,addRemoveOffset,moveOffsets)?nextIt:nextRemove;var/** @type {?} */adjPreviousIndex=getPreviousIndex(record,addRemoveOffset,moveOffsets);var/** @type {?} */currentIndex=record.currentIndex;// consume the item, and adjust the addRemoveOffset and update moveDistance if necessary
if(record===nextRemove){addRemoveOffset--;nextRemove=nextRemove._nextRemoved;}else{nextIt=nextIt._next;if(record.previousIndex==null){addRemoveOffset++;}else{// INVARIANT:  currentIndex < previousIndex
if(!moveOffsets)moveOffsets=[];var/** @type {?} */localMovePreviousIndex=adjPreviousIndex-addRemoveOffset;var/** @type {?} */localCurrentIndex=currentIndex-addRemoveOffset;if(localMovePreviousIndex!=localCurrentIndex){for(var/** @type {?} */i=0;i<localMovePreviousIndex;i++){var/** @type {?} */offset=i<moveOffsets.length?moveOffsets[i]:moveOffsets[i]=0;var/** @type {?} */index=offset+i;if(localCurrentIndex<=index&&index<localMovePreviousIndex){moveOffsets[i]=offset+1;}}var/** @type {?} */previousIndex=record.previousIndex;moveOffsets[previousIndex]=localCurrentIndex-localMovePreviousIndex;}}}if(adjPreviousIndex!==currentIndex){fn(record,adjPreviousIndex,currentIndex);}}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachPreviousItem',value:function forEachPreviousItem(fn){var/** @type {?} */record=void 0;for(record=this._previousItHead;record!==null;record=record._nextPrevious){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachAddedItem',value:function forEachAddedItem(fn){var/** @type {?} */record=void 0;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachMovedItem',value:function forEachMovedItem(fn){var/** @type {?} */record=void 0;for(record=this._movesHead;record!==null;record=record._nextMoved){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachRemovedItem',value:function forEachRemovedItem(fn){var/** @type {?} */record=void 0;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachIdentityChange',value:function forEachIdentityChange(fn){var/** @type {?} */record=void 0;for(record=this._identityChangesHead;record!==null;record=record._nextIdentityChange){fn(record);}}/**
     * @param {?} collection
     * @return {?}
     */},{key:'diff',value:function diff(collection){if(isBlank(collection))collection=[];if(!isListLikeIterable(collection)){throw new Error('Error trying to diff \''+collection+'\'');}if(this.check(collection)){return this;}else{return null;}}/**
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(){}/**
     * @param {?} collection
     * @return {?}
     */},{key:'check',value:function check(collection){var _this10=this;this._reset();var/** @type {?} */record=this._itHead;var/** @type {?} */mayBeDirty=false;var/** @type {?} */index=void 0;var/** @type {?} */item=void 0;var/** @type {?} */itemTrackBy=void 0;if(Array.isArray(collection)){this._length=collection.length;for(var/** @type {?} */_index2=0;_index2<this._length;_index2++){item=collection[_index2];itemTrackBy=this._trackByFn(_index2,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=this._mismatch(record,item,itemTrackBy,_index2);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=this._verifyReinsertion(record,item,itemTrackBy,_index2);}if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);}record=record._next;}}else{index=0;iterateListLike(collection,function(item){itemTrackBy=_this10._trackByFn(index,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=_this10._mismatch(record,item,itemTrackBy,index);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=_this10._verifyReinsertion(record,item,itemTrackBy,index);}if(!looseIdentical(record.item,item))_this10._addIdentityChange(record,item);}record=record._next;index++;});this._length=index;}this._truncate(record);this._collection=collection;return this.isDirty;}/**
     * @return {?}
     */},{key:'_reset',/**
     * Reset the state of the change objects to show no changes. This means set previousKey to
     * currentKey, and clear all of the queues (additions, moves, removals).
     * Set the previousIndexes of moved and added items to their currentIndexes
     * Reset the list of additions, moves and removals
     *
     * \@internal
     * @return {?}
     */value:function _reset(){if(this.isDirty){var/** @type {?} */record=void 0;var/** @type {?} */nextRecord=void 0;for(record=this._previousItHead=this._itHead;record!==null;record=record._next){record._nextPrevious=record._next;}for(record=this._additionsHead;record!==null;record=record._nextAdded){record.previousIndex=record.currentIndex;}this._additionsHead=this._additionsTail=null;for(record=this._movesHead;record!==null;record=nextRecord){record.previousIndex=record.currentIndex;nextRecord=record._nextMoved;}this._movesHead=this._movesTail=null;this._removalsHead=this._removalsTail=null;this._identityChangesHead=this._identityChangesTail=null;}}/**
     * This is the core function which handles differences between collections.
     *
     * - `record` is the record which we saw at this position last time. If null then it is a new
     *   item.
     * - `item` is the current item in the collection
     * - `index` is the position of the item in the collection
     *
     * \@internal
     * @param {?} record
     * @param {?} item
     * @param {?} itemTrackBy
     * @param {?} index
     * @return {?}
     */},{key:'_mismatch',value:function _mismatch(record,item,itemTrackBy,index){// The previous record after which we will append the current one.
var/** @type {?} */previousRecord=void 0;if(record===null){previousRecord=this._itTail;}else{previousRecord=record._prev;// Remove the record from the collection since we know it does not match the item.
this._remove(record);}// Attempt to see if we have seen the item before.
record=this._linkedRecords===null?null:this._linkedRecords.get(itemTrackBy,index);if(record!==null){// We have seen this before, we need to move it forward in the collection.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._moveAfter(record,previousRecord,index);}else{// Never seen it, check evicted list.
record=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy);if(record!==null){// It is an item which we have evicted earlier: reinsert it back into the list.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._reinsertAfter(record,previousRecord,index);}else{// It is a new item: add it.
record=this._addAfter(new IterableChangeRecord_(item,itemTrackBy),previousRecord,index);}}return record;}/**
     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
     *
     * Use case: `[a, a]` => `[b, a, a]`
     *
     * If we did not have this check then the insertion of `b` would:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) leave `a` at index `1` as is. <-- this is wrong!
     *   3) reinsert `a` at index 2. <-- this is wrong!
     *
     * The correct behavior is:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) reinsert `a` at index 1.
     *   3) move `a` at from `1` to `2`.
     *
     *
     * Double check that we have not evicted a duplicate item. We need to check if the item type may
     * have already been removed:
     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
     * at the end.
     *
     * \@internal
     * @param {?} record
     * @param {?} item
     * @param {?} itemTrackBy
     * @param {?} index
     * @return {?}
     */},{key:'_verifyReinsertion',value:function _verifyReinsertion(record,item,itemTrackBy,index){var/** @type {?} */reinsertRecord=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy);if(reinsertRecord!==null){record=this._reinsertAfter(reinsertRecord,record._prev,index);}else if(record.currentIndex!=index){record.currentIndex=index;this._addToMoves(record,index);}return record;}/**
     * Get rid of any excess {\@link IterableChangeRecord_}s from the previous collection
     *
     * - `record` The first excess {\@link IterableChangeRecord_}.
     *
     * \@internal
     * @param {?} record
     * @return {?}
     */},{key:'_truncate',value:function _truncate(record){// Anything after that needs to be removed;
while(record!==null){var/** @type {?} */nextRecord=record._next;this._addToRemovals(this._unlink(record));record=nextRecord;}if(this._unlinkedRecords!==null){this._unlinkedRecords.clear();}if(this._additionsTail!==null){this._additionsTail._nextAdded=null;}if(this._movesTail!==null){this._movesTail._nextMoved=null;}if(this._itTail!==null){this._itTail._next=null;}if(this._removalsTail!==null){this._removalsTail._nextRemoved=null;}if(this._identityChangesTail!==null){this._identityChangesTail._nextIdentityChange=null;}}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_reinsertAfter',value:function _reinsertAfter(record,prevRecord,index){if(this._unlinkedRecords!==null){this._unlinkedRecords.remove(record);}var/** @type {?} */prev=record._prevRemoved;var/** @type {?} */next=record._nextRemoved;if(prev===null){this._removalsHead=next;}else{prev._nextRemoved=next;}if(next===null){this._removalsTail=prev;}else{next._prevRemoved=prev;}this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_moveAfter',value:function _moveAfter(record,prevRecord,index){this._unlink(record);this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_addAfter',value:function _addAfter(record,prevRecord,index){this._insertAfter(record,prevRecord,index);if(this._additionsTail===null){// todo(vicb)
// assert(this._additionsHead === null);
this._additionsTail=this._additionsHead=record;}else{// todo(vicb)
// assert(_additionsTail._nextAdded === null);
// assert(record._nextAdded === null);
this._additionsTail=this._additionsTail._nextAdded=record;}return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_insertAfter',value:function _insertAfter(record,prevRecord,index){// todo(vicb)
// assert(record != prevRecord);
// assert(record._next === null);
// assert(record._prev === null);
var/** @type {?} */next=prevRecord===null?this._itHead:prevRecord._next;// todo(vicb)
// assert(next != record);
// assert(prevRecord != record);
record._next=next;record._prev=prevRecord;if(next===null){this._itTail=record;}else{next._prev=record;}if(prevRecord===null){this._itHead=record;}else{prevRecord._next=record;}if(this._linkedRecords===null){this._linkedRecords=new _DuplicateMap();}this._linkedRecords.put(record);record.currentIndex=index;return record;}/**
     * \@internal
     * @param {?} record
     * @return {?}
     */},{key:'_remove',value:function _remove(record){return this._addToRemovals(this._unlink(record));}/**
     * \@internal
     * @param {?} record
     * @return {?}
     */},{key:'_unlink',value:function _unlink(record){if(this._linkedRecords!==null){this._linkedRecords.remove(record);}var/** @type {?} */prev=record._prev;var/** @type {?} */next=record._next;// todo(vicb)
// assert((record._prev = null) === null);
// assert((record._next = null) === null);
if(prev===null){this._itHead=next;}else{prev._next=next;}if(next===null){this._itTail=prev;}else{next._prev=prev;}return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} toIndex
     * @return {?}
     */},{key:'_addToMoves',value:function _addToMoves(record,toIndex){// todo(vicb)
// assert(record._nextMoved === null);
if(record.previousIndex===toIndex){return record;}if(this._movesTail===null){// todo(vicb)
// assert(_movesHead === null);
this._movesTail=this._movesHead=record;}else{// todo(vicb)
// assert(_movesTail._nextMoved === null);
this._movesTail=this._movesTail._nextMoved=record;}return record;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToRemovals',value:function _addToRemovals(record){if(this._unlinkedRecords===null){this._unlinkedRecords=new _DuplicateMap();}this._unlinkedRecords.put(record);record.currentIndex=null;record._nextRemoved=null;if(this._removalsTail===null){// todo(vicb)
// assert(_removalsHead === null);
this._removalsTail=this._removalsHead=record;record._prevRemoved=null;}else{// todo(vicb)
// assert(_removalsTail._nextRemoved === null);
// assert(record._nextRemoved === null);
record._prevRemoved=this._removalsTail;this._removalsTail=this._removalsTail._nextRemoved=record;}return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} item
     * @return {?}
     */},{key:'_addIdentityChange',value:function _addIdentityChange(record,item){record.item=item;if(this._identityChangesTail===null){this._identityChangesTail=this._identityChangesHead=record;}else{this._identityChangesTail=this._identityChangesTail._nextIdentityChange=record;}return record;}/**
     * @return {?}
     */},{key:'toString',value:function toString(){var/** @type {?} */list=[];this.forEachItem(function(record){return list.push(record);});var/** @type {?} */previous=[];this.forEachPreviousItem(function(record){return previous.push(record);});var/** @type {?} */additions=[];this.forEachAddedItem(function(record){return additions.push(record);});var/** @type {?} */moves=[];this.forEachMovedItem(function(record){return moves.push(record);});var/** @type {?} */removals=[];this.forEachRemovedItem(function(record){return removals.push(record);});var/** @type {?} */identityChanges=[];this.forEachIdentityChange(function(record){return identityChanges.push(record);});return'collection: '+list.join(', ')+'\n'+'previous: '+previous.join(', ')+'\n'+'additions: '+additions.join(', ')+'\n'+'moves: '+moves.join(', ')+'\n'+'removals: '+removals.join(', ')+'\n'+'identityChanges: '+identityChanges.join(', ')+'\n';}},{key:'collection',get:function get(){return this._collection;}/**
     * @return {?}
     */},{key:'length',get:function get(){return this._length;}},{key:'isDirty',get:function get(){return this._additionsHead!==null||this._movesHead!==null||this._removalsHead!==null||this._identityChangesHead!==null;}}]);return DefaultIterableDiffer;}();/**
 * \@stable
 */var IterableChangeRecord_=function(){/**
     * @param {?} item
     * @param {?} trackById
     */function IterableChangeRecord_(item,trackById){_classCallCheck(this,IterableChangeRecord_);this.item=item;this.trackById=trackById;this.currentIndex=null;this.previousIndex=null;/** @internal */this._nextPrevious=null;/** @internal */this._prev=null;/** @internal */this._next=null;/** @internal */this._prevDup=null;/** @internal */this._nextDup=null;/** @internal */this._prevRemoved=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextAdded=null;/** @internal */this._nextMoved=null;/** @internal */this._nextIdentityChange=null;}/**
     * @return {?}
     */_createClass(IterableChangeRecord_,[{key:'toString',value:function toString(){return this.previousIndex===this.currentIndex?stringify(this.item):stringify(this.item)+'['+stringify(this.previousIndex)+'->'+stringify(this.currentIndex)+']';}}]);return IterableChangeRecord_;}();var _DuplicateItemRecordList=function(){function _DuplicateItemRecordList(){_classCallCheck(this,_DuplicateItemRecordList);/** @internal */this._head=null;/** @internal */this._tail=null;}/**
     * Append the record to the list of duplicates.
     *
     * Note: by design all records in the list of duplicates hold the same value in record.item.
     * @param {?} record
     * @return {?}
     */_createClass(_DuplicateItemRecordList,[{key:'add',value:function add(record){if(this._head===null){this._head=this._tail=record;record._nextDup=null;record._prevDup=null;}else{// todo(vicb)
// assert(record.item ==  _head.item ||
//       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);
this._tail._nextDup=record;record._prevDup=this._tail;record._nextDup=null;this._tail=record;}}/**
     * @param {?} trackById
     * @param {?} afterIndex
     * @return {?}
     */},{key:'get',value:function get(trackById,afterIndex){var/** @type {?} */record=void 0;for(record=this._head;record!==null;record=record._nextDup){if((afterIndex===null||afterIndex<record.currentIndex)&&looseIdentical(record.trackById,trackById)){return record;}}return null;}/**
     * Remove one {\@link IterableChangeRecord_} from the list of duplicates.
     *
     * Returns whether the list of duplicates is empty.
     * @param {?} record
     * @return {?}
     */},{key:'remove',value:function remove(record){// todo(vicb)
// assert(() {
//  // verify that the record being removed is in the list.
//  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {
//    if (identical(cursor, record)) return true;
//  }
//  return false;
//});
var/** @type {?} */prev=record._prevDup;var/** @type {?} */next=record._nextDup;if(prev===null){this._head=next;}else{prev._nextDup=next;}if(next===null){this._tail=prev;}else{next._prevDup=prev;}return this._head===null;}}]);return _DuplicateItemRecordList;}();var _DuplicateMap=function(){function _DuplicateMap(){_classCallCheck(this,_DuplicateMap);this.map=new Map();}/**
     * @param {?} record
     * @return {?}
     */_createClass(_DuplicateMap,[{key:'put',value:function put(record){var/** @type {?} */key=record.trackById;var/** @type {?} */duplicates=this.map.get(key);if(!duplicates){duplicates=new _DuplicateItemRecordList();this.map.set(key,duplicates);}duplicates.add(record);}/**
     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
     * have already iterated over, we use the afterIndex to pretend it is not there.
     *
     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
     * have any more `a`s needs to return the last `a` not the first or second.
     * @param {?} trackById
     * @param {?=} afterIndex
     * @return {?}
     */},{key:'get',value:function get(trackById){var afterIndex=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */key=trackById;var/** @type {?} */recordList=this.map.get(key);return recordList?recordList.get(trackById,afterIndex):null;}/**
     * Removes a {\@link IterableChangeRecord_} from the list of duplicates.
     *
     * The list of duplicates also is removed from the map if it gets empty.
     * @param {?} record
     * @return {?}
     */},{key:'remove',value:function remove(record){var/** @type {?} */key=record.trackById;var/** @type {?} */recordList=this.map.get(key);// Remove the list of duplicates when it gets empty
if(recordList.remove(record)){this.map.delete(key);}return record;}/**
     * @return {?}
     */},{key:'clear',/**
     * @return {?}
     */value:function clear(){this.map.clear();}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return'_DuplicateMap('+stringify(this.map)+')';}},{key:'isEmpty',get:function get(){return this.map.size===0;}}]);return _DuplicateMap;}();/**
 * @param {?} item
 * @param {?} addRemoveOffset
 * @param {?} moveOffsets
 * @return {?}
 */function getPreviousIndex(item,addRemoveOffset,moveOffsets){var/** @type {?} */previousIndex=item.previousIndex;if(previousIndex===null)return previousIndex;var/** @type {?} */moveOffset=0;if(moveOffsets&&previousIndex<moveOffsets.length){moveOffset=moveOffsets[previousIndex];}return previousIndex+addRemoveOffset+moveOffset;}var DefaultKeyValueDifferFactory=function(){function DefaultKeyValueDifferFactory(){_classCallCheck(this,DefaultKeyValueDifferFactory);}/**
     * @param {?} obj
     * @return {?}
     */_createClass(DefaultKeyValueDifferFactory,[{key:'supports',value:function supports(obj){return obj instanceof Map||isJsObject(obj);}/**
     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter
     * @param {?=} cd
     * @return {?}
     */},{key:'create',value:function create(cd){return new DefaultKeyValueDiffer();}}]);return DefaultKeyValueDifferFactory;}();var DefaultKeyValueDiffer=function(){function DefaultKeyValueDiffer(){_classCallCheck(this,DefaultKeyValueDiffer);this._records=new Map();this._mapHead=null;this._previousMapHead=null;this._changesHead=null;this._changesTail=null;this._additionsHead=null;this._additionsTail=null;this._removalsHead=null;this._removalsTail=null;}/**
     * @return {?}
     */_createClass(DefaultKeyValueDiffer,[{key:'forEachItem',/**
     * @param {?} fn
     * @return {?}
     */value:function forEachItem(fn){var/** @type {?} */record=void 0;for(record=this._mapHead;record!==null;record=record._next){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachPreviousItem',value:function forEachPreviousItem(fn){var/** @type {?} */record=void 0;for(record=this._previousMapHead;record!==null;record=record._nextPrevious){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachChangedItem',value:function forEachChangedItem(fn){var/** @type {?} */record=void 0;for(record=this._changesHead;record!==null;record=record._nextChanged){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachAddedItem',value:function forEachAddedItem(fn){var/** @type {?} */record=void 0;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachRemovedItem',value:function forEachRemovedItem(fn){var/** @type {?} */record=void 0;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}}/**
     * @param {?} map
     * @return {?}
     */},{key:'diff',value:function diff(map){if(!map){map=new Map();}else if(!(map instanceof Map||isJsObject(map))){throw new Error('Error trying to diff \''+map+'\'');}return this.check(map)?this:null;}/**
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(){}/**
     * @param {?} map
     * @return {?}
     */},{key:'check',value:function check(map){var _this11=this;this._reset();var/** @type {?} */records=this._records;var/** @type {?} */oldSeqRecord=this._mapHead;var/** @type {?} */lastOldSeqRecord=null;var/** @type {?} */lastNewSeqRecord=null;var/** @type {?} */seqChanged=false;this._forEach(map,function(value,key){var/** @type {?} */newSeqRecord=void 0;if(oldSeqRecord&&key===oldSeqRecord.key){newSeqRecord=oldSeqRecord;_this11._maybeAddToChanges(newSeqRecord,value);}else{seqChanged=true;if(oldSeqRecord!==null){_this11._removeFromSeq(lastOldSeqRecord,oldSeqRecord);_this11._addToRemovals(oldSeqRecord);}if(records.has(key)){newSeqRecord=records.get(key);_this11._maybeAddToChanges(newSeqRecord,value);}else{newSeqRecord=new KeyValueChangeRecord_(key);records.set(key,newSeqRecord);newSeqRecord.currentValue=value;_this11._addToAdditions(newSeqRecord);}}if(seqChanged){if(_this11._isInRemovals(newSeqRecord)){_this11._removeFromRemovals(newSeqRecord);}if(lastNewSeqRecord==null){_this11._mapHead=newSeqRecord;}else{lastNewSeqRecord._next=newSeqRecord;}}lastOldSeqRecord=oldSeqRecord;lastNewSeqRecord=newSeqRecord;oldSeqRecord=oldSeqRecord&&oldSeqRecord._next;});this._truncate(lastOldSeqRecord,oldSeqRecord);return this.isDirty;}/**
     * \@internal
     * @return {?}
     */},{key:'_reset',value:function _reset(){if(this.isDirty){var/** @type {?} */record=void 0;// Record the state of the mapping
for(record=this._previousMapHead=this._mapHead;record!==null;record=record._next){record._nextPrevious=record._next;}for(record=this._changesHead;record!==null;record=record._nextChanged){record.previousValue=record.currentValue;}for(record=this._additionsHead;record!=null;record=record._nextAdded){record.previousValue=record.currentValue;}this._changesHead=this._changesTail=null;this._additionsHead=this._additionsTail=null;this._removalsHead=this._removalsTail=null;}}/**
     * @param {?} lastRecord
     * @param {?} record
     * @return {?}
     */},{key:'_truncate',value:function _truncate(lastRecord,record){while(record!==null){if(lastRecord===null){this._mapHead=null;}else{lastRecord._next=null;}var/** @type {?} */nextRecord=record._next;this._addToRemovals(record);lastRecord=record;record=nextRecord;}for(var/** @type {?} */rec=this._removalsHead;rec!==null;rec=rec._nextRemoved){rec.previousValue=rec.currentValue;rec.currentValue=null;this._records.delete(rec.key);}}/**
     * @param {?} record
     * @param {?} newValue
     * @return {?}
     */},{key:'_maybeAddToChanges',value:function _maybeAddToChanges(record,newValue){if(!looseIdentical(newValue,record.currentValue)){record.previousValue=record.currentValue;record.currentValue=newValue;this._addToChanges(record);}}/**
     * @param {?} record
     * @return {?}
     */},{key:'_isInRemovals',value:function _isInRemovals(record){return record===this._removalsHead||record._nextRemoved!==null||record._prevRemoved!==null;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToRemovals',value:function _addToRemovals(record){if(this._removalsHead===null){this._removalsHead=this._removalsTail=record;}else{this._removalsTail._nextRemoved=record;record._prevRemoved=this._removalsTail;this._removalsTail=record;}}/**
     * @param {?} prev
     * @param {?} record
     * @return {?}
     */},{key:'_removeFromSeq',value:function _removeFromSeq(prev,record){var/** @type {?} */next=record._next;if(prev===null){this._mapHead=next;}else{prev._next=next;}record._next=null;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_removeFromRemovals',value:function _removeFromRemovals(record){var/** @type {?} */prev=record._prevRemoved;var/** @type {?} */next=record._nextRemoved;if(prev===null){this._removalsHead=next;}else{prev._nextRemoved=next;}if(next===null){this._removalsTail=prev;}else{next._prevRemoved=prev;}record._prevRemoved=record._nextRemoved=null;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToAdditions',value:function _addToAdditions(record){if(this._additionsHead===null){this._additionsHead=this._additionsTail=record;}else{this._additionsTail._nextAdded=record;this._additionsTail=record;}}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToChanges',value:function _addToChanges(record){if(this._changesHead===null){this._changesHead=this._changesTail=record;}else{this._changesTail._nextChanged=record;this._changesTail=record;}}/**
     * @return {?}
     */},{key:'toString',value:function toString(){var/** @type {?} */items=[];var/** @type {?} */previous=[];var/** @type {?} */changes=[];var/** @type {?} */additions=[];var/** @type {?} */removals=[];var/** @type {?} */record=void 0;for(record=this._mapHead;record!==null;record=record._next){items.push(stringify(record));}for(record=this._previousMapHead;record!==null;record=record._nextPrevious){previous.push(stringify(record));}for(record=this._changesHead;record!==null;record=record._nextChanged){changes.push(stringify(record));}for(record=this._additionsHead;record!==null;record=record._nextAdded){additions.push(stringify(record));}for(record=this._removalsHead;record!==null;record=record._nextRemoved){removals.push(stringify(record));}return'map: '+items.join(', ')+'\n'+'previous: '+previous.join(', ')+'\n'+'additions: '+additions.join(', ')+'\n'+'changes: '+changes.join(', ')+'\n'+'removals: '+removals.join(', ')+'\n';}/**
     * \@internal
     * @param {?} obj
     * @param {?} fn
     * @return {?}
     */},{key:'_forEach',value:function _forEach(obj,fn){if(obj instanceof Map){obj.forEach(fn);}else{Object.keys(obj).forEach(function(k){return fn(obj[k],k);});}}},{key:'isDirty',get:function get(){return this._additionsHead!==null||this._changesHead!==null||this._removalsHead!==null;}}]);return DefaultKeyValueDiffer;}();/**
 * \@stable
 */var KeyValueChangeRecord_=function(){/**
     * @param {?} key
     */function KeyValueChangeRecord_(key){_classCallCheck(this,KeyValueChangeRecord_);this.key=key;this.previousValue=null;this.currentValue=null;/** @internal */this._nextPrevious=null;/** @internal */this._next=null;/** @internal */this._nextAdded=null;/** @internal */this._nextRemoved=null;/** @internal */this._prevRemoved=null;/** @internal */this._nextChanged=null;}/**
     * @return {?}
     */_createClass(KeyValueChangeRecord_,[{key:'toString',value:function toString(){return looseIdentical(this.previousValue,this.currentValue)?stringify(this.key):stringify(this.key)+'['+stringify(this.previousValue)+'->'+stringify(this.currentValue)+']';}}]);return KeyValueChangeRecord_;}();/**
 * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.
 * \@stable
 */var IterableDiffers=function(){/**
     * @param {?} factories
     */function IterableDiffers(factories){_classCallCheck(this,IterableDiffers);this.factories=factories;}/**
     * @param {?} factories
     * @param {?=} parent
     * @return {?}
     */_createClass(IterableDiffers,[{key:'find',/**
     * @param {?} iterable
     * @return {?}
     */value:function find(iterable){var/** @type {?} */factory=this.factories.find(function(f){return f.supports(iterable);});if(isPresent(factory)){return factory;}else{throw new Error('Cannot find a differ supporting object \''+iterable+'\' of type \''+getTypeNameForDebugging(iterable)+'\'');}}}],[{key:'create',value:function create(factories,parent){if(isPresent(parent)){var/** @type {?} */copied=parent.factories.slice();factories=factories.concat(copied);return new IterableDiffers(factories);}else{return new IterableDiffers(factories);}}/**
     * Takes an array of {\@link IterableDifferFactory} and returns a provider used to extend the
     * inherited {\@link IterableDiffers} instance with the provided factories and return a new
     * {\@link IterableDiffers} instance.
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {\@link IterableDiffer} available.
     *
     * ### Example
     *
     * ```
     * \@Component({
     *   viewProviders: [
     *     IterableDiffers.extend([new ImmutableListDiffer()])
     *   ]
     * })
     * ```
     * @param {?} factories
     * @return {?}
     */},{key:'extend',value:function extend(factories){return{provide:IterableDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling IterableDiffers.extend inside of dependencies passed
// to
// bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend IterableDiffers without a parent injector');}return IterableDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[IterableDiffers,new SkipSelf(),new Optional()]]};}}]);return IterableDiffers;}();/**
 * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.
 * \@stable
 */var KeyValueDiffers=function(){/**
     * @param {?} factories
     */function KeyValueDiffers(factories){_classCallCheck(this,KeyValueDiffers);this.factories=factories;}/**
     * @param {?} factories
     * @param {?=} parent
     * @return {?}
     */_createClass(KeyValueDiffers,[{key:'find',/**
     * @param {?} kv
     * @return {?}
     */value:function find(kv){var/** @type {?} */factory=this.factories.find(function(f){return f.supports(kv);});if(factory){return factory;}throw new Error('Cannot find a differ supporting object \''+kv+'\'');}}],[{key:'create',value:function create(factories,parent){if(parent){var/** @type {?} */copied=parent.factories.slice();factories=factories.concat(copied);}return new KeyValueDiffers(factories);}/**
     * Takes an array of {\@link KeyValueDifferFactory} and returns a provider used to extend the
     * inherited {\@link KeyValueDiffers} instance with the provided factories and return a new
     * {\@link KeyValueDiffers} instance.
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {\@link KeyValueDiffer} available.
     *
     * ### Example
     *
     * ```
     * \@Component({
     *   viewProviders: [
     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
     *   ]
     * })
     * ```
     * @param {?} factories
     * @return {?}
     */},{key:'extend',value:function extend(factories){return{provide:KeyValueDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed
// to bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend KeyValueDiffers without a parent injector');}return KeyValueDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[KeyValueDiffers,new SkipSelf(),new Optional()]]};}}]);return KeyValueDiffers;}();/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function devModeEqual(a,b){if(isListLikeIterable(a)&&isListLikeIterable(b)){return areIterablesEqual(a,b,devModeEqual);}else if(!isListLikeIterable(a)&&!isPrimitive(a)&&!isListLikeIterable(b)&&!isPrimitive(b)){return true;}else{return looseIdentical(a,b);}}/**
 * Indicates that the result of a {\@link Pipe} transformation has changed even though the
 * reference
 * has not changed.
 *
 * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.
 *
 * Example:
 *
 * ```
 * if (this._latestValue === this._latestReturnedValue) {
 *    return this._latestReturnedValue;
 *  } else {
 *    this._latestReturnedValue = this._latestValue;
 *    return WrappedValue.wrap(this._latestValue); // this will force update
 *  }
 * ```
 * \@stable
 */var WrappedValue=function(){/**
     * @param {?} wrapped
     */function WrappedValue(wrapped){_classCallCheck(this,WrappedValue);this.wrapped=wrapped;}/**
     * @param {?} value
     * @return {?}
     */_createClass(WrappedValue,null,[{key:'wrap',value:function wrap(value){return new WrappedValue(value);}}]);return WrappedValue;}();/**
 * Helper class for unwrapping WrappedValue s
 */var ValueUnwrapper=function(){function ValueUnwrapper(){_classCallCheck(this,ValueUnwrapper);this.hasWrappedValue=false;}/**
     * @param {?} value
     * @return {?}
     */_createClass(ValueUnwrapper,[{key:'unwrap',value:function unwrap(value){if(value instanceof WrappedValue){this.hasWrappedValue=true;return value.wrapped;}return value;}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this.hasWrappedValue=false;}}]);return ValueUnwrapper;}();/**
 * Represents a basic change from a previous to a new value.
 * \@stable
 */var SimpleChange=function(){/**
     * @param {?} previousValue
     * @param {?} currentValue
     * @param {?} firstChange
     */function SimpleChange(previousValue,currentValue,firstChange){_classCallCheck(this,SimpleChange);this.previousValue=previousValue;this.currentValue=currentValue;this.firstChange=firstChange;}/**
     * Check whether the new value is the first value assigned.
     * @return {?}
     */_createClass(SimpleChange,[{key:'isFirstChange',value:function isFirstChange(){return this.firstChange;}}]);return SimpleChange;}();/**
 * \@stable
 * @abstract
 */var ChangeDetectorRef=function(){function ChangeDetectorRef(){_classCallCheck(this,ChangeDetectorRef);}_createClass(ChangeDetectorRef,[{key:'markForCheck',/**
     * Marks all {\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.
     *
     * <!-- TODO: Add a link to a chapter on OnPush components -->
     *
     * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))
     *
     * ```typescript
     * \@Component({
     *   selector: 'cmp',
     *   changeDetection: ChangeDetectionStrategy.OnPush,
     *   template: `Number of ticks: {{numberOfTicks}}`
     * })
     * class Cmp {
     *   numberOfTicks = 0;
     *
     *   constructor(ref: ChangeDetectorRef) {
     *     setInterval(() => {
     *       this.numberOfTicks ++
     *       // the following is required, otherwise the view will not be updated
     *       this.ref.markForCheck();
     *     }, 1000);
     *   }
     * }
     *
     * \@Component({
     *   selector: 'app',
     *   changeDetection: ChangeDetectionStrategy.OnPush,
     *   template: `
     *     <cmp><cmp>
     *   `,
     * })
     * class App {
     * }
     * ```
     * @abstract
     * @return {?}
     */value:function markForCheck(){}/**
     * Detaches the change detector from the change detector tree.
     *
     * The detached change detector will not be checked until it is reattached.
     *
     * This can also be used in combination with {\@link ChangeDetectorRef#detectChanges} to implement
     * local change
     * detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds. We can do that by detaching
     * the component's change detector and doing a local check every five seconds.
     *
     * ```typescript
     * class DataProvider {
     *   // in a real application the returned data will be different every time
     *   get data() {
     *     return [1,2,3,4,5];
     *   }
     * }
     *
     * \@Component({
     *   selector: 'giant-list',
     *   template: `
     *     <li *ngFor="let d of dataProvider.data">Data {{d}}</lig>
     *   `,
     * })
     * class GiantList {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {
     *     ref.detach();
     *     setInterval(() => {
     *       this.ref.detectChanges();
     *     }, 5000);
     *   }
     * }
     *
     * \@Component({
     *   selector: 'app',
     *   providers: [DataProvider],
     *   template: `
     *     <giant-list><giant-list>
     *   `,
     * })
     * class App {
     * }
     * ```
     * @abstract
     * @return {?}
     */},{key:'detach',value:function detach(){}/**
     * Checks the change detector and its children.
     *
     * This can also be used in combination with {\@link ChangeDetectorRef#detach} to implement local
     * change detection
     * checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine, the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds.
     *
     * We can do that by detaching the component's change detector and doing a local change detection
     * check
     * every five seconds.
     *
     * See {\@link ChangeDetectorRef#detach} for more information.
     * @abstract
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(){}/**
     * Checks the change detector and its children, and throws if any changes are detected.
     *
     * This is used in development mode to verify that running change detection doesn't introduce
     * other changes.
     * @abstract
     * @return {?}
     */},{key:'checkNoChanges',value:function checkNoChanges(){}/**
     * Reattach the change detector to the change detector tree.
     *
     * This also marks OnPush ancestors as to be checked. This reattached change detector will be
     * checked during the next change detection run.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     *
     * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))
     *
     * The following example creates a component displaying `live` data. The component will detach
     * its change detector from the main change detector tree when the component's live property
     * is set to false.
     *
     * ```typescript
     * class DataProvider {
     *   data = 1;
     *
     *   constructor() {
     *     setInterval(() => {
     *       this.data = this.data * 2;
     *     }, 500);
     *   }
     * }
     *
     * \@Component({
     *   selector: 'live-data',
     *   inputs: ['live'],
     *   template: 'Data: {{dataProvider.data}}'
     * })
     * class LiveData {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}
     *
     *   set live(value) {
     *     if (value)
     *       this.ref.reattach();
     *     else
     *       this.ref.detach();
     *   }
     * }
     *
     * \@Component({
     *   selector: 'app',
     *   providers: [DataProvider],
     *   template: `
     *     Live Update: <input type="checkbox" [(ngModel)]="live">
     *     <live-data [live]="live"><live-data>
     *   `,
     * })
     * class App {
     *   live = true;
     * }
     * ```
     * @abstract
     * @return {?}
     */},{key:'reattach',value:function reattach(){}}]);return ChangeDetectorRef;}();/**
 * Structural diffing for `Object`s and `Map`s.
 */var/** @type {?} */keyValDiff=[new DefaultKeyValueDifferFactory()];/**
 * Structural diffing for `Iterable` types such as `Array`s.
 */var/** @type {?} */iterableDiff=[new DefaultIterableDifferFactory()];var/** @type {?} */defaultIterableDiffers=new IterableDiffers(iterableDiff);var/** @type {?} */defaultKeyValueDiffers=new KeyValueDiffers(keyValDiff);/**
 * @deprecated Use `RendererTypeV2` (and `RendererV2`) instead.
 */var RenderComponentType=/**
     * @param {?} id
     * @param {?} templateUrl
     * @param {?} slotCount
     * @param {?} encapsulation
     * @param {?} styles
     * @param {?} animations
     */function RenderComponentType(id,templateUrl,slotCount,encapsulation,styles,animations){_classCallCheck(this,RenderComponentType);this.id=id;this.templateUrl=templateUrl;this.slotCount=slotCount;this.encapsulation=encapsulation;this.styles=styles;this.animations=animations;};/**
 * @deprecated Debug info is handeled internally in the view engine now.
 * @abstract
 */var RenderDebugInfo=function(){function RenderDebugInfo(){_classCallCheck(this,RenderDebugInfo);}_createClass(RenderDebugInfo,[{key:'injector',/**
     * @abstract
     * @return {?}
     */value:function injector(){}/**
     * @abstract
     * @return {?}
     */},{key:'component',value:function component(){}/**
     * @abstract
     * @return {?}
     */},{key:'providerTokens',value:function providerTokens(){}/**
     * @abstract
     * @return {?}
     */},{key:'references',value:function references(){}/**
     * @abstract
     * @return {?}
     */},{key:'context',value:function context(){}/**
     * @abstract
     * @return {?}
     */},{key:'source',value:function source(){}}]);return RenderDebugInfo;}();/**
 * @deprecated Use the `RendererV2` instead.
 * @abstract
 */var RendererV1=function(){function RendererV1(){_classCallCheck(this,RendererV1);}_createClass(RendererV1,[{key:'selectRootElement',/**
     * @abstract
     * @param {?} selectorOrNode
     * @param {?=} debugInfo
     * @return {?}
     */value:function selectRootElement(selectorOrNode,debugInfo){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?} name
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createElement',value:function createElement(parentElement,name,debugInfo){}/**
     * @abstract
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement,debugInfo){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?} value
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value,debugInfo){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){}/**
     * @abstract
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){}/**
     * @abstract
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){}/**
     * @abstract
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){}/**
     * @abstract
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} attributeName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,attributeName,attributeValue){}/**
     * Used only in debug mode to serialize property changes to dom nodes as attributes.
     * @abstract
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?=} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){}/**
     * @abstract
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){}/**
     * @abstract
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */},{key:'animate',value:function animate(element,startingStyles,keyframes,duration,delay,easing,previousPlayers){}}]);return RendererV1;}();var/** @type {?} */RendererV2Interceptor=new InjectionToken('RendererV2Interceptor');/**
 * Injectable service that provides a low-level interface for modifying the UI.
 *
 * Use this service to bypass Angular's templating and make custom UI changes that can't be
 * expressed declaratively. For example if you need to set a property or an attribute whose name is
 * not statically known, use {\@link #setElementProperty} or {\@link #setElementAttribute}
 * respectively.
 *
 * If you are implementing a custom renderer, you must implement this interface.
 *
 * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.
 *
 * @deprecated Use `RendererFactoryV2` instead.
 * @abstract
 */var RootRenderer=function(){function RootRenderer(){_classCallCheck(this,RootRenderer);}_createClass(RootRenderer,[{key:'renderComponent',/**
     * @abstract
     * @param {?} componentType
     * @return {?}
     */value:function renderComponent(componentType){}}]);return RootRenderer;}();/**
 * \@experimental
 * @abstract
 */var RendererFactoryV2=function(){function RendererFactoryV2(){_classCallCheck(this,RendererFactoryV2);}_createClass(RendererFactoryV2,[{key:'createRenderer',/**
     * @abstract
     * @param {?} hostElement
     * @param {?} type
     * @return {?}
     */value:function createRenderer(hostElement,type){}}]);return RendererFactoryV2;}();/**
 * \@experimental
 * @abstract
 */var RendererV2=function(){function RendererV2(){_classCallCheck(this,RendererV2);}_createClass(RendererV2,[{key:'data',/**
     * This field can be used to store arbitrary data on this renderer instance.
     * This is useful for renderers that delegate to other renderers.
     * @abstract
     * @return {?}
     */value:function data(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * @abstract
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'createElement',value:function createElement(name,namespace){}/**
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'createComment',value:function createComment(value){}/**
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(value){}/**
     * @abstract
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){}/**
     * @abstract
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){}/**
     * @abstract
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){}/**
     * @abstract
     * @param {?} selectorOrNode
     * @return {?}
     */},{key:'selectRootElement',value:function selectRootElement(selectorOrNode){}/**
     * Attention: On WebWorkers, this will always return a value,
     * as we are asking for a result synchronously. I.e.
     * the caller can't rely on checking whether this is null or not.
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){}/**
     * Attention: On WebWorkers, this will always return a value,
     * as we are asking for a result synchronously. I.e.
     * the caller can't rely on checking whether this is null or not.
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(node){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @param {?=} namespace
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(el,name,value,namespace){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(el,name,namespace){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'addClass',value:function addClass(el,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'removeClass',value:function removeClass(el,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} style
     * @param {?} value
     * @param {?} hasVendorPrefix
     * @param {?} hasImportant
     * @return {?}
     */},{key:'setStyle',value:function setStyle(el,style,value,hasVendorPrefix,hasImportant){}/**
     * @abstract
     * @param {?} el
     * @param {?} style
     * @param {?} hasVendorPrefix
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(el,style,hasVendorPrefix){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){}/**
     * @abstract
     * @param {?} node
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(node,value){}/**
     * @abstract
     * @param {?} target
     * @param {?} eventName
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(target,eventName,callback){}}]);return RendererV2;}();var SecurityContext={};SecurityContext.NONE=0;SecurityContext.HTML=1;SecurityContext.STYLE=2;SecurityContext.SCRIPT=3;SecurityContext.URL=4;SecurityContext.RESOURCE_URL=5;SecurityContext[SecurityContext.NONE]="NONE";SecurityContext[SecurityContext.HTML]="HTML";SecurityContext[SecurityContext.STYLE]="STYLE";SecurityContext[SecurityContext.SCRIPT]="SCRIPT";SecurityContext[SecurityContext.URL]="URL";SecurityContext[SecurityContext.RESOURCE_URL]="RESOURCE_URL";/**
 * Sanitizer is used by the views to sanitize potentially dangerous values.
 *
 * \@stable
 * @abstract
 */var Sanitizer=function(){function Sanitizer(){_classCallCheck(this,Sanitizer);}_createClass(Sanitizer,[{key:'sanitize',/**
     * @abstract
     * @param {?} context
     * @param {?} value
     * @return {?}
     */value:function sanitize(context,value){}}]);return Sanitizer;}();/**
 * An error thrown if application changes model breaking the top-down data flow.
 *
 * This exception is only thrown in dev mode.
 *
 * <!-- TODO: Add a link once the dev mode option is configurable -->
 *
 * ### Example
 *
 * ```typescript
 * \@Component({
 *   selector: 'parent',
 *   template: '<child [prop]="parentProp"></child>',
 * })
 * class Parent {
 *   parentProp = 'init';
 * }
 *
 * \@Directive({selector: 'child', inputs: ['prop']})
 * class Child {
 *   constructor(public parent: Parent) {}
 *
 *   set prop(v) {
 *     // this updates the parent property, which is disallowed during change detection
 *     // this will result in ExpressionChangedAfterItHasBeenCheckedError
 *     this.parent.parentProp = 'updated';
 *   }
 * }
 * ```
 * @param {?} oldValue
 * @param {?} currValue
 * @param {?} isFirstCheck
 * @return {?}
 */function expressionChangedAfterItHasBeenCheckedError(oldValue,currValue,isFirstCheck){var/** @type {?} */msg='Expression has changed after it was checked. Previous value: \''+oldValue+'\'. Current value: \''+currValue+'\'.';if(isFirstCheck){msg+=' It seems like the view has been created after its parent and its children have been dirty checked.'+' Has it been created in a change detection hook ?';}var/** @type {?} */error=Error(msg);error[ERROR_TYPE]=expressionChangedAfterItHasBeenCheckedError;return error;}/**
 * Thrown when an exception was raised during view creation, change detection or destruction.
 *
 * This error wraps the original exception to attach additional contextual information that can
 * be useful for debugging.
 * @param {?} originalError
 * @param {?} context
 * @return {?}
 */function viewWrappedError(originalError,context){var/** @type {?} */error=wrappedError('Error in '+context.source,originalError);error[ERROR_DEBUG_CONTEXT]=context;error[ERROR_TYPE]=viewWrappedError;return error;}/**
 * Thrown when a destroyed view is used.
 *
 * This error indicates a bug in the framework.
 *
 * This is an internal Angular error.
 * @param {?} details
 * @return {?}
 */function viewDestroyedError(details){return Error('Attempt to use a destroyed view: '+details);}var ViewUtils=function(){/**
     * @param {?} _renderer
     * @param {?} sanitizer
     * @param {?} animationQueue
     */function ViewUtils(_renderer,sanitizer,animationQueue){_classCallCheck(this,ViewUtils);this._renderer=_renderer;this.animationQueue=animationQueue;this.sanitizer=sanitizer;}/**
     * \@internal
     * @param {?} renderComponentType
     * @return {?}
     */_createClass(ViewUtils,[{key:'renderComponent',value:function renderComponent(renderComponentType){return this._renderer.renderComponent(renderComponentType);}}]);return ViewUtils;}();ViewUtils.decorators=[{type:Injectable}];/** @nocollapse */ViewUtils.ctorParameters=function(){return[{type:RootRenderer},{type:Sanitizer},{type:AnimationQueue}];};var/** @type {?} */nextRenderComponentTypeId=0;/**
 * @param {?} templateUrl
 * @param {?} slotCount
 * @param {?} encapsulation
 * @param {?} styles
 * @param {?} animations
 * @return {?}
 */function createRenderComponentType(templateUrl,slotCount,encapsulation,styles,animations){return new RenderComponentType(''+nextRenderComponentTypeId++,templateUrl,slotCount,encapsulation,styles,animations);}/**
 * @param {?} e
 * @param {?} array
 * @return {?}
 */function addToArray(e,array){array.push(e);}/**
 * @param {?} valueCount
 * @param {?} constAndInterp
 * @return {?}
 */function interpolate(valueCount,constAndInterp){var/** @type {?} */result='';for(var/** @type {?} */i=0;i<valueCount*2;i=i+2){result=result+constAndInterp[i]+_toStringWithNull(constAndInterp[i+1]);}return result+constAndInterp[valueCount*2];}/**
 * @param {?} valueCount
 * @param {?} c0
 * @param {?} a1
 * @param {?} c1
 * @param {?=} a2
 * @param {?=} c2
 * @param {?=} a3
 * @param {?=} c3
 * @param {?=} a4
 * @param {?=} c4
 * @param {?=} a5
 * @param {?=} c5
 * @param {?=} a6
 * @param {?=} c6
 * @param {?=} a7
 * @param {?=} c7
 * @param {?=} a8
 * @param {?=} c8
 * @param {?=} a9
 * @param {?=} c9
 * @return {?}
 */function inlineInterpolate(valueCount,c0,a1,c1,a2,c2,a3,c3,a4,c4,a5,c5,a6,c6,a7,c7,a8,c8,a9,c9){switch(valueCount){case 1:return c0+_toStringWithNull(a1)+c1;case 2:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2;case 3:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3;case 4:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4;case 5:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5;case 6:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6;case 7:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7;case 8:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8;case 9:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8+_toStringWithNull(a9)+c9;default:throw new Error('Does not support more than 9 expressions');}}/**
 * @param {?} v
 * @return {?}
 */function _toStringWithNull(v){return v!=null?v.toString():'';}/**
 * @param {?} view
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @return {?}
 */function checkBinding(view,oldValue,newValue,forceUpdate){var/** @type {?} */isFirstCheck=view.numberOfChecks===0;if(view.throwOnChange){if(isFirstCheck||!devModeEqual(oldValue,newValue)){throw expressionChangedAfterItHasBeenCheckedError(oldValue,newValue,isFirstCheck);}return false;}else{return isFirstCheck||forceUpdate||!looseIdentical(oldValue,newValue);}}/**
 * @param {?} view
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @return {?}
 */function checkBindingChange(view,oldValue,newValue,forceUpdate){if(checkBinding(view,oldValue,newValue,forceUpdate)){return new SimpleChange(oldValue,newValue,view.numberOfChecks===0);}}/**
 * @param {?} view
 * @param {?} renderElement
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @return {?}
 */function checkRenderText(view,renderElement,oldValue,newValue,forceUpdate){if(checkBinding(view,oldValue,newValue,forceUpdate)){view.renderer.setText(renderElement,newValue);}}/**
 * @param {?} view
 * @param {?} renderElement
 * @param {?} propName
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @param {?} securityContext
 * @return {?}
 */function checkRenderProperty(view,renderElement,propName,oldValue,newValue,forceUpdate,securityContext){if(checkBinding(view,oldValue,newValue,forceUpdate)){var/** @type {?} */renderValue=securityContext?view.viewUtils.sanitizer.sanitize(securityContext,newValue):newValue;view.renderer.setElementProperty(renderElement,propName,renderValue);}}/**
 * @param {?} view
 * @param {?} renderElement
 * @param {?} attrName
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @param {?} securityContext
 * @return {?}
 */function checkRenderAttribute(view,renderElement,attrName,oldValue,newValue,forceUpdate,securityContext){if(checkBinding(view,oldValue,newValue,forceUpdate)){var/** @type {?} */renderValue=securityContext?view.viewUtils.sanitizer.sanitize(securityContext,newValue):newValue;renderValue=renderValue!=null?renderValue.toString():null;view.renderer.setElementAttribute(renderElement,attrName,renderValue);}}/**
 * @param {?} view
 * @param {?} renderElement
 * @param {?} className
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @return {?}
 */function checkRenderClass(view,renderElement,className,oldValue,newValue,forceUpdate){if(checkBinding(view,oldValue,newValue,forceUpdate)){view.renderer.setElementClass(renderElement,className,newValue);}}/**
 * @param {?} view
 * @param {?} renderElement
 * @param {?} styleName
 * @param {?} unit
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @param {?} securityContext
 * @return {?}
 */function checkRenderStyle(view,renderElement,styleName,unit,oldValue,newValue,forceUpdate,securityContext){if(checkBinding(view,oldValue,newValue,forceUpdate)){var/** @type {?} */renderValue=securityContext?view.viewUtils.sanitizer.sanitize(securityContext,newValue):newValue;if(renderValue!=null){renderValue=renderValue.toString();if(unit!=null){renderValue=renderValue+unit;}}else{renderValue=null;}view.renderer.setElementStyle(renderElement,styleName,renderValue);}}/**
 * @param {?} input
 * @param {?} value
 * @return {?}
 */function castByValue(input,value){return input;}var/** @type {?} */EMPTY_ARRAY=[];var/** @type {?} */EMPTY_MAP={};/**
 * @param {?} fn
 * @return {?}
 */function pureProxy1(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0;return function(p0){if(!numberOfChecks++||!looseIdentical(v0,p0)){v0=p0;result=fn(p0);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy2(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0;var/** @type {?} */v1=void 0;return function(p0,p1){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)){v0=p0;v1=p1;result=fn(p0,p1);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy3(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0;var/** @type {?} */v1=void 0;var/** @type {?} */v2=void 0;return function(p0,p1,p2){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)){v0=p0;v1=p1;v2=p2;result=fn(p0,p1,p2);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy4(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0,/** @type {?} */v1=void 0,/** @type {?} */v2=void 0,/** @type {?} */v3=void 0;v0=v1=v2=v3;return function(p0,p1,p2,p3){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)||!looseIdentical(v3,p3)){v0=p0;v1=p1;v2=p2;v3=p3;result=fn(p0,p1,p2,p3);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy5(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0,/** @type {?} */v1=void 0,/** @type {?} */v2=void 0,/** @type {?} */v3=void 0,/** @type {?} */v4=void 0;v0=v1=v2=v3=v4;return function(p0,p1,p2,p3,p4){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)||!looseIdentical(v3,p3)||!looseIdentical(v4,p4)){v0=p0;v1=p1;v2=p2;v3=p3;v4=p4;result=fn(p0,p1,p2,p3,p4);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy6(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0,/** @type {?} */v1=void 0,/** @type {?} */v2=void 0,/** @type {?} */v3=void 0,/** @type {?} */v4=void 0,/** @type {?} */v5=void 0;v0=v1=v2=v3=v4=v5;return function(p0,p1,p2,p3,p4,p5){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)||!looseIdentical(v3,p3)||!looseIdentical(v4,p4)||!looseIdentical(v5,p5)){v0=p0;v1=p1;v2=p2;v3=p3;v4=p4;v5=p5;result=fn(p0,p1,p2,p3,p4,p5);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy7(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0,/** @type {?} */v1=void 0,/** @type {?} */v2=void 0,/** @type {?} */v3=void 0,/** @type {?} */v4=void 0,/** @type {?} */v5=void 0,/** @type {?} */v6=void 0;v0=v1=v2=v3=v4=v5=v6;return function(p0,p1,p2,p3,p4,p5,p6){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)||!looseIdentical(v3,p3)||!looseIdentical(v4,p4)||!looseIdentical(v5,p5)||!looseIdentical(v6,p6)){v0=p0;v1=p1;v2=p2;v3=p3;v4=p4;v5=p5;v6=p6;result=fn(p0,p1,p2,p3,p4,p5,p6);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy8(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0,/** @type {?} */v1=void 0,/** @type {?} */v2=void 0,/** @type {?} */v3=void 0,/** @type {?} */v4=void 0,/** @type {?} */v5=void 0,/** @type {?} */v6=void 0,/** @type {?} */v7=void 0;v0=v1=v2=v3=v4=v5=v6=v7;return function(p0,p1,p2,p3,p4,p5,p6,p7){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)||!looseIdentical(v3,p3)||!looseIdentical(v4,p4)||!looseIdentical(v5,p5)||!looseIdentical(v6,p6)||!looseIdentical(v7,p7)){v0=p0;v1=p1;v2=p2;v3=p3;v4=p4;v5=p5;v6=p6;v7=p7;result=fn(p0,p1,p2,p3,p4,p5,p6,p7);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy9(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0,/** @type {?} */v1=void 0,/** @type {?} */v2=void 0,/** @type {?} */v3=void 0,/** @type {?} */v4=void 0,/** @type {?} */v5=void 0,/** @type {?} */v6=void 0,/** @type {?} */v7=void 0,/** @type {?} */v8=void 0;v0=v1=v2=v3=v4=v5=v6=v7=v8;return function(p0,p1,p2,p3,p4,p5,p6,p7,p8){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)||!looseIdentical(v3,p3)||!looseIdentical(v4,p4)||!looseIdentical(v5,p5)||!looseIdentical(v6,p6)||!looseIdentical(v7,p7)||!looseIdentical(v8,p8)){v0=p0;v1=p1;v2=p2;v3=p3;v4=p4;v5=p5;v6=p6;v7=p7;v8=p8;result=fn(p0,p1,p2,p3,p4,p5,p6,p7,p8);}return result;};}/**
 * @param {?} fn
 * @return {?}
 */function pureProxy10(fn){var/** @type {?} */numberOfChecks=0;var/** @type {?} */result=void 0;var/** @type {?} */v0=void 0,/** @type {?} */v1=void 0,/** @type {?} */v2=void 0,/** @type {?} */v3=void 0,/** @type {?} */v4=void 0,/** @type {?} */v5=void 0,/** @type {?} */v6=void 0,/** @type {?} */v7=void 0,/** @type {?} */v8=void 0,/** @type {?} */v9=void 0;v0=v1=v2=v3=v4=v5=v6=v7=v8=v9;return function(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9){if(!numberOfChecks++||!looseIdentical(v0,p0)||!looseIdentical(v1,p1)||!looseIdentical(v2,p2)||!looseIdentical(v3,p3)||!looseIdentical(v4,p4)||!looseIdentical(v5,p5)||!looseIdentical(v6,p6)||!looseIdentical(v7,p7)||!looseIdentical(v8,p8)||!looseIdentical(v9,p9)){v0=p0;v1=p1;v2=p2;v3=p3;v4=p4;v5=p5;v6=p6;v7=p7;v8=p8;v9=p9;result=fn(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9);}return result;};}/**
 * @param {?} renderer
 * @param {?} el
 * @param {?} changes
 * @return {?}
 */function setBindingDebugInfoForChanges(renderer,el,changes){Object.keys(changes).forEach(function(propName){setBindingDebugInfo(renderer,el,propName,changes[propName].currentValue);});}/**
 * @param {?} renderer
 * @param {?} el
 * @param {?} propName
 * @param {?} value
 * @return {?}
 */function setBindingDebugInfo(renderer,el,propName,value){try{renderer.setBindingDebugInfo(el,'ng-reflect-'+camelCaseToDashCase(propName),value?value.toString():null);}catch(e){renderer.setBindingDebugInfo(el,'ng-reflect-'+camelCaseToDashCase(propName),'[ERROR] Exception while trying to serialize the value');}}var/** @type {?} */CAMEL_CASE_REGEXP=/([A-Z])/g;/**
 * @param {?} input
 * @return {?}
 */function camelCaseToDashCase(input){return input.replace(CAMEL_CASE_REGEXP,function(){for(var _len5=arguments.length,m=Array(_len5),_key5=0;_key5<_len5;_key5++){m[_key5]=arguments[_key5];}return'-'+m[1].toLowerCase();});}/**
 * @param {?} renderer
 * @param {?} parentElement
 * @param {?} name
 * @param {?} attrs
 * @param {?=} debugInfo
 * @return {?}
 */function createRenderElement(renderer,parentElement,name,attrs,debugInfo){var/** @type {?} */el=renderer.createElement(parentElement,name,debugInfo);for(var/** @type {?} */i=0;i<attrs.length;i+=2){renderer.setElementAttribute(el,attrs.get(i),attrs.get(i+1));}return el;}/**
 * @param {?} renderer
 * @param {?} elementName
 * @param {?} attrs
 * @param {?} rootSelectorOrNode
 * @param {?=} debugInfo
 * @return {?}
 */function selectOrCreateRenderHostElement(renderer,elementName,attrs,rootSelectorOrNode,debugInfo){var/** @type {?} */hostElement=void 0;if(isPresent(rootSelectorOrNode)){hostElement=renderer.selectRootElement(rootSelectorOrNode,debugInfo);for(var/** @type {?} */i=0;i<attrs.length;i+=2){renderer.setElementAttribute(hostElement,attrs.get(i),attrs.get(i+1));}renderer.setElementAttribute(hostElement,'ng-version',VERSION.full);}else{hostElement=createRenderElement(renderer,null,elementName,attrs,debugInfo);}return hostElement;}/**
 * @param {?} view
 * @param {?} element
 * @param {?} eventNamesAndTargets
 * @param {?} listener
 * @return {?}
 */function subscribeToRenderElement(view,element,eventNamesAndTargets,listener){var/** @type {?} */disposables=createEmptyInlineArray(eventNamesAndTargets.length/2);for(var/** @type {?} */i=0;i<eventNamesAndTargets.length;i+=2){var/** @type {?} */eventName=eventNamesAndTargets.get(i);var/** @type {?} */eventTarget=eventNamesAndTargets.get(i+1);var/** @type {?} */disposable=void 0;if(eventTarget){disposable=view.renderer.listenGlobal(eventTarget,eventName,listener.bind(view,eventTarget+':'+eventName));}else{disposable=view.renderer.listen(element,eventName,listener.bind(view,eventName));}disposables.set(i/2,disposable);}return disposeInlineArray.bind(null,disposables);}/**
 * @param {?} disposables
 * @return {?}
 */function disposeInlineArray(disposables){for(var/** @type {?} */i=0;i<disposables.length;i++){disposables.get(i)();}}/**
 * @return {?}
 */function noop(){}/**
 * @param {?} length
 * @return {?}
 */function createEmptyInlineArray(length){var/** @type {?} */ctor=void 0;if(length<=2){ctor=InlineArray2;}else if(length<=4){ctor=InlineArray4;}else if(length<=8){ctor=InlineArray8;}else if(length<=16){ctor=InlineArray16;}else{ctor=InlineArrayDynamic;}return new ctor(length);}var InlineArray0=function(){function InlineArray0(){_classCallCheck(this,InlineArray0);this.length=0;}/**
     * @param {?} index
     * @return {?}
     */_createClass(InlineArray0,[{key:'get',value:function get(index){return undefined;}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){}}]);return InlineArray0;}();var InlineArray2=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     */function InlineArray2(length,_v0,_v1){_classCallCheck(this,InlineArray2);this.length=length;this._v0=_v0;this._v1=_v1;}/**
     * @param {?} index
     * @return {?}
     */_createClass(InlineArray2,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;}}}]);return InlineArray2;}();var InlineArray4=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     * @param {?=} _v2
     * @param {?=} _v3
     */function InlineArray4(length,_v0,_v1,_v2,_v3){_classCallCheck(this,InlineArray4);this.length=length;this._v0=_v0;this._v1=_v1;this._v2=_v2;this._v3=_v3;}/**
     * @param {?} index
     * @return {?}
     */_createClass(InlineArray4,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;case 2:return this._v2;case 3:return this._v3;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;case 2:this._v2=value;break;case 3:this._v3=value;break;}}}]);return InlineArray4;}();var InlineArray8=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     * @param {?=} _v2
     * @param {?=} _v3
     * @param {?=} _v4
     * @param {?=} _v5
     * @param {?=} _v6
     * @param {?=} _v7
     */function InlineArray8(length,_v0,_v1,_v2,_v3,_v4,_v5,_v6,_v7){_classCallCheck(this,InlineArray8);this.length=length;this._v0=_v0;this._v1=_v1;this._v2=_v2;this._v3=_v3;this._v4=_v4;this._v5=_v5;this._v6=_v6;this._v7=_v7;}/**
     * @param {?} index
     * @return {?}
     */_createClass(InlineArray8,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;case 2:return this._v2;case 3:return this._v3;case 4:return this._v4;case 5:return this._v5;case 6:return this._v6;case 7:return this._v7;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;case 2:this._v2=value;break;case 3:this._v3=value;break;case 4:this._v4=value;break;case 5:this._v5=value;break;case 6:this._v6=value;break;case 7:this._v7=value;break;}}}]);return InlineArray8;}();var InlineArray16=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     * @param {?=} _v2
     * @param {?=} _v3
     * @param {?=} _v4
     * @param {?=} _v5
     * @param {?=} _v6
     * @param {?=} _v7
     * @param {?=} _v8
     * @param {?=} _v9
     * @param {?=} _v10
     * @param {?=} _v11
     * @param {?=} _v12
     * @param {?=} _v13
     * @param {?=} _v14
     * @param {?=} _v15
     */function InlineArray16(length,_v0,_v1,_v2,_v3,_v4,_v5,_v6,_v7,_v8,_v9,_v10,_v11,_v12,_v13,_v14,_v15){_classCallCheck(this,InlineArray16);this.length=length;this._v0=_v0;this._v1=_v1;this._v2=_v2;this._v3=_v3;this._v4=_v4;this._v5=_v5;this._v6=_v6;this._v7=_v7;this._v8=_v8;this._v9=_v9;this._v10=_v10;this._v11=_v11;this._v12=_v12;this._v13=_v13;this._v14=_v14;this._v15=_v15;}/**
     * @param {?} index
     * @return {?}
     */_createClass(InlineArray16,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;case 2:return this._v2;case 3:return this._v3;case 4:return this._v4;case 5:return this._v5;case 6:return this._v6;case 7:return this._v7;case 8:return this._v8;case 9:return this._v9;case 10:return this._v10;case 11:return this._v11;case 12:return this._v12;case 13:return this._v13;case 14:return this._v14;case 15:return this._v15;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;case 2:this._v2=value;break;case 3:this._v3=value;break;case 4:this._v4=value;break;case 5:this._v5=value;break;case 6:this._v6=value;break;case 7:this._v7=value;break;case 8:this._v8=value;break;case 9:this._v9=value;break;case 10:this._v10=value;break;case 11:this._v11=value;break;case 12:this._v12=value;break;case 13:this._v13=value;break;case 14:this._v14=value;break;case 15:this._v15=value;break;}}}]);return InlineArray16;}();var InlineArrayDynamic=function(){/**
     * @param {?} length
     * @param {...?} values
     */function InlineArrayDynamic(length){_classCallCheck(this,InlineArrayDynamic);this.length=length;for(var _len6=arguments.length,values=Array(_len6>1?_len6-1:0),_key6=1;_key6<_len6;_key6++){values[_key6-1]=arguments[_key6];}this._values=values;}/**
     * @param {?} index
     * @return {?}
     */_createClass(InlineArrayDynamic,[{key:'get',value:function get(index){return this._values[index];}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){this._values[index]=value;}}]);return InlineArrayDynamic;}();var/** @type {?} */EMPTY_INLINE_ARRAY=new InlineArray0();/**
 * This is a private API only used by the compiler to read the view class.
 * @param {?} componentFactory
 * @return {?}
 */function getComponentFactoryViewClass(componentFactory){return componentFactory._viewClass;}/**
 * Represents an instance of a Component created via a {\@link ComponentFactory}.
 *
 * `ComponentRef` provides access to the Component Instance as well other objects related to this
 * Component Instance and allows you to destroy the Component Instance via the {\@link #destroy}
 * method.
 * \@stable
 * @abstract
 */var ComponentRef=function(){function ComponentRef(){_classCallCheck(this,ComponentRef);}_createClass(ComponentRef,[{key:'location',/**
     * Location of the Host Element of this Component Instance.
     * @abstract
     * @return {?}
     */value:function location(){}/**
     * The injector on which the component instance exists.
     * @abstract
     * @return {?}
     */},{key:'injector',value:function injector(){}/**
     * The instance of the Component.
     * @abstract
     * @return {?}
     */},{key:'instance',value:function instance(){}/**
     * The {\@link ViewRef} of the Host View of this Component instance.
     * @abstract
     * @return {?}
     */},{key:'hostView',value:function hostView(){}/**
     * The {\@link ChangeDetectorRef} of the Component instance.
     * @abstract
     * @return {?}
     */},{key:'changeDetectorRef',value:function changeDetectorRef(){}/**
     * The component type.
     * @abstract
     * @return {?}
     */},{key:'componentType',value:function componentType(){}/**
     * Destroys the component instance and all of the data structures associated with it.
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * Allows to register a callback that will be called when the component is destroyed.
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}}]);return ComponentRef;}();/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var ComponentRef_=function(_ComponentRef){_inherits(ComponentRef_,_ComponentRef);/**
     * @param {?} _index
     * @param {?} _parentView
     * @param {?} _nativeElement
     * @param {?} _component
     */function ComponentRef_(_index,_parentView,_nativeElement,_component){_classCallCheck(this,ComponentRef_);var _this12=_possibleConstructorReturn(this,(ComponentRef_.__proto__||Object.getPrototypeOf(ComponentRef_)).call(this));_this12._index=_index;_this12._parentView=_parentView;_this12._nativeElement=_nativeElement;_this12._component=_component;return _this12;}/**
     * @return {?}
     */_createClass(ComponentRef_,[{key:'destroy',/**
     * @return {?}
     */value:function destroy(){this._parentView.detachAndDestroy();}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){this.hostView.onDestroy(callback);}},{key:'location',get:function get(){return new ElementRef(this._nativeElement);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this._parentView.injector(this._index);}/**
     * @return {?}
     */},{key:'instance',get:function get(){return this._component;}},{key:'hostView',/**
     * @return {?}
     */get:function get(){return this._parentView.ref;}},{key:'changeDetectorRef',/**
     * @return {?}
     */get:function get(){return this._parentView.ref;}},{key:'componentType',/**
     * @return {?}
     */get:function get(){return this._component.constructor;}}]);return ComponentRef_;}(ComponentRef);/**
 * \@stable
 */var ComponentFactory=function(){/**
     * @param {?} selector
     * @param {?} _viewClass
     * @param {?} componentType
     */function ComponentFactory(selector,_viewClass,componentType){_classCallCheck(this,ComponentFactory);this.selector=selector;this.componentType=componentType;this._viewClass=_viewClass;}/**
     * Creates a new component.
     * @param {?} injector
     * @param {?=} projectableNodes
     * @param {?=} rootSelectorOrNode
     * @return {?}
     */_createClass(ComponentFactory,[{key:'create',value:function create(injector){var projectableNodes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var rootSelectorOrNode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */vu=injector.get(ViewUtils);if(!projectableNodes){projectableNodes=[];}var/** @type {?} */hostView=new this._viewClass(vu,null,null,null);return hostView.createHostView(rootSelectorOrNode,injector,projectableNodes);}}]);return ComponentFactory;}();/**
 * @param {?} component
 * @return {?}
 */function noComponentFactoryError(component){var/** @type {?} */error=Error('No component factory found for '+stringify(component)+'. Did you add it to @NgModule.entryComponents?');error[ERROR_COMPONENT]=component;return error;}var/** @type {?} */ERROR_COMPONENT='ngComponent';var _NullComponentFactoryResolver=function(){function _NullComponentFactoryResolver(){_classCallCheck(this,_NullComponentFactoryResolver);}_createClass(_NullComponentFactoryResolver,[{key:'resolveComponentFactory',/**
     * @param {?} component
     * @return {?}
     */value:function resolveComponentFactory(component){throw noComponentFactoryError(component);}}]);return _NullComponentFactoryResolver;}();/**
 * \@stable
 * @abstract
 */var ComponentFactoryResolver=function(){function ComponentFactoryResolver(){_classCallCheck(this,ComponentFactoryResolver);}_createClass(ComponentFactoryResolver,[{key:'resolveComponentFactory',/**
     * @abstract
     * @param {?} component
     * @return {?}
     */value:function resolveComponentFactory(component){}}]);return ComponentFactoryResolver;}();ComponentFactoryResolver.NULL=new _NullComponentFactoryResolver();var CodegenComponentFactoryResolver=function(){/**
     * @param {?} factories
     * @param {?} _parent
     */function CodegenComponentFactoryResolver(factories,_parent){_classCallCheck(this,CodegenComponentFactoryResolver);this._parent=_parent;this._factories=new Map();for(var i=0;i<factories.length;i++){var factory=factories[i];this._factories.set(factory.componentType,factory);}}/**
     * @param {?} component
     * @return {?}
     */_createClass(CodegenComponentFactoryResolver,[{key:'resolveComponentFactory',value:function resolveComponentFactory(component){var/** @type {?} */result=this._factories.get(component);if(!result){result=this._parent.resolveComponentFactory(component);}return result;}}]);return CodegenComponentFactoryResolver;}();var/** @type {?} */trace=void 0;var/** @type {?} */events=void 0;/**
 * @return {?}
 */function detectWTF(){var/** @type {?} */wtf=global$1[/** TODO #9100 */'wtf'];if(wtf){trace=wtf['trace'];if(trace){events=trace['events'];return true;}}return false;}/**
 * @param {?} signature
 * @param {?=} flags
 * @return {?}
 */function createScope(signature){var flags=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return events.createScope(signature,flags);}/**
 * @param {?} scope
 * @param {?=} returnValue
 * @return {?}
 */function leave(scope,returnValue){trace.leaveScope(scope,returnValue);return returnValue;}/**
 * @param {?} rangeType
 * @param {?} action
 * @return {?}
 */function startTimeRange(rangeType,action){return trace.beginTimeRange(rangeType,action);}/**
 * @param {?} range
 * @return {?}
 */function endTimeRange(range){trace.endTimeRange(range);}/**
 * True if WTF is enabled.
 */var/** @type {?} */wtfEnabled=detectWTF();/**
 * @param {?=} arg0
 * @param {?=} arg1
 * @return {?}
 */function noopScope(arg0,arg1){return null;}/**
 * Create trace scope.
 *
 * Scopes must be strictly nested and are analogous to stack frames, but
 * do not have to follow the stack frames. Instead it is recommended that they follow logical
 * nesting. You may want to use
 * [Event
 * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)
 * as they are defined in WTF.
 *
 * Used to mark scope entry. The return value is used to leave the scope.
 *
 *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');
 *
 *     someMethod() {
 *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI
 *        // DO SOME WORK HERE
 *        return wtfLeave(s, 123); // Return value 123
 *     }
 *
 * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can
 * negatively impact the performance of your application. For this reason we recommend that
 * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and
 * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to
 * exception, will produce incorrect trace, but presence of exception signifies logic error which
 * needs to be fixed before the app should be profiled. Add try-finally only when you expect that
 * an exception is expected during normal execution while profiling.
 *
 * @experimental
 */var/** @type {?} */wtfCreateScope=wtfEnabled?createScope:function(signature,flags){return noopScope;};/**
 * Used to mark end of Scope.
 *
 * - `scope` to end.
 * - `returnValue` (optional) to be passed to the WTF.
 *
 * Returns the `returnValue for easy chaining.
 * @experimental
 */var/** @type {?} */wtfLeave=wtfEnabled?leave:function(s,r){return r;};/**
 * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.
 * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been
 * enabled.
 *
 *     someMethod() {
 *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');
 *        var future = new Future.delay(5).then((_) {
 *          wtfEndTimeRange(s);
 *        });
 *     }
 * @experimental
 */var/** @type {?} */wtfStartTimeRange=wtfEnabled?startTimeRange:function(rangeType,action){return null;};/**
 * Ends a async time range operation.
 * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been
 * enabled.
 * @experimental
 */var/** @type {?} */wtfEndTimeRange=wtfEnabled?endTimeRange:function(r){return null;};/**
 * The Testability service provides testing hooks that can be accessed from
 * the browser and by services such as Protractor. Each bootstrapped Angular
 * application on the page will have an instance of Testability.
 * \@experimental
 */var Testability=function(){/**
     * @param {?} _ngZone
     */function Testability(_ngZone){_classCallCheck(this,Testability);this._ngZone=_ngZone;/** @internal */this._pendingCount=0;/** @internal */this._isZoneStable=true;/**
         * Whether any work was done since the last 'whenStable' callback. This is
         * useful to detect if this could have potentially destabilized another
         * component while it is stabilizing.
         * @internal
         */this._didWork=false;/** @internal */this._callbacks=[];this._watchAngularEvents();}/**
     * \@internal
     * @return {?}
     */_createClass(Testability,[{key:'_watchAngularEvents',value:function _watchAngularEvents(){var _this13=this;this._ngZone.onUnstable.subscribe({next:function next(){_this13._didWork=true;_this13._isZoneStable=false;}});this._ngZone.runOutsideAngular(function(){_this13._ngZone.onStable.subscribe({next:function next(){NgZone.assertNotInAngularZone();scheduleMicroTask(function(){_this13._isZoneStable=true;_this13._runCallbacksIfReady();});}});});}/**
     * @return {?}
     */},{key:'increasePendingRequestCount',value:function increasePendingRequestCount(){this._pendingCount+=1;this._didWork=true;return this._pendingCount;}/**
     * @return {?}
     */},{key:'decreasePendingRequestCount',value:function decreasePendingRequestCount(){this._pendingCount-=1;if(this._pendingCount<0){throw new Error('pending async requests below zero');}this._runCallbacksIfReady();return this._pendingCount;}/**
     * @return {?}
     */},{key:'isStable',value:function isStable(){return this._isZoneStable&&this._pendingCount==0&&!this._ngZone.hasPendingMacrotasks;}/**
     * \@internal
     * @return {?}
     */},{key:'_runCallbacksIfReady',value:function _runCallbacksIfReady(){var _this14=this;if(this.isStable()){// Schedules the call backs in a new frame so that it is always async.
scheduleMicroTask(function(){while(_this14._callbacks.length!==0){_this14._callbacks.pop()(_this14._didWork);}_this14._didWork=false;});}else{// Not Ready
this._didWork=true;}}/**
     * @param {?} callback
     * @return {?}
     */},{key:'whenStable',value:function whenStable(callback){this._callbacks.push(callback);this._runCallbacksIfReady();}/**
     * @return {?}
     */},{key:'getPendingRequestCount',value:function getPendingRequestCount(){return this._pendingCount;}/**
     * @deprecated use findProviders
     * @param {?} using
     * @param {?} provider
     * @param {?} exactMatch
     * @return {?}
     */},{key:'findBindings',value:function findBindings(using,provider,exactMatch){// TODO(juliemr): implement.
return[];}/**
     * @param {?} using
     * @param {?} provider
     * @param {?} exactMatch
     * @return {?}
     */},{key:'findProviders',value:function findProviders(using,provider,exactMatch){// TODO(juliemr): implement.
return[];}}]);return Testability;}();Testability.decorators=[{type:Injectable}];/** @nocollapse */Testability.ctorParameters=function(){return[{type:NgZone}];};/**
 * A global registry of {\@link Testability} instances for specific elements.
 * \@experimental
 */var TestabilityRegistry=function(){function TestabilityRegistry(){_classCallCheck(this,TestabilityRegistry);/** @internal */this._applications=new Map();_testabilityGetter.addToWindow(this);}/**
     * @param {?} token
     * @param {?} testability
     * @return {?}
     */_createClass(TestabilityRegistry,[{key:'registerApplication',value:function registerApplication(token,testability){this._applications.set(token,testability);}/**
     * @param {?} elem
     * @return {?}
     */},{key:'getTestability',value:function getTestability(elem){return this._applications.get(elem);}/**
     * @return {?}
     */},{key:'getAllTestabilities',value:function getAllTestabilities(){return Array.from(this._applications.values());}/**
     * @return {?}
     */},{key:'getAllRootElements',value:function getAllRootElements(){return Array.from(this._applications.keys());}/**
     * @param {?} elem
     * @param {?=} findInAncestors
     * @return {?}
     */},{key:'findTestabilityInTree',value:function findTestabilityInTree(elem){var findInAncestors=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return _testabilityGetter.findTestabilityInTree(this,elem,findInAncestors);}}]);return TestabilityRegistry;}();TestabilityRegistry.decorators=[{type:Injectable}];/** @nocollapse */TestabilityRegistry.ctorParameters=function(){return[];};var _NoopGetTestability=function(){function _NoopGetTestability(){_classCallCheck(this,_NoopGetTestability);}_createClass(_NoopGetTestability,[{key:'addToWindow',/**
     * @param {?} registry
     * @return {?}
     */value:function addToWindow(registry){}/**
     * @param {?} registry
     * @param {?} elem
     * @param {?} findInAncestors
     * @return {?}
     */},{key:'findTestabilityInTree',value:function findTestabilityInTree(registry,elem,findInAncestors){return null;}}]);return _NoopGetTestability;}();/**
 * Set the {\@link GetTestability} implementation used by the Angular testing framework.
 * \@experimental
 * @param {?} getter
 * @return {?}
 */function setTestabilityGetter(getter){_testabilityGetter=getter;}var/** @type {?} */_testabilityGetter=new _NoopGetTestability();var/** @type {?} */_devMode=true;var/** @type {?} */_runModeLocked=false;var/** @type {?} */_platform=void 0;var/** @type {?} */ALLOW_MULTIPLE_PLATFORMS=new InjectionToken('AllowMultipleToken');/**
 * Disable Angular's development mode, which turns off assertions and other
 * checks within the framework.
 *
 * One important assertion this disables verifies that a change detection pass
 * does not result in additional changes to any bindings (also known as
 * unidirectional data flow).
 *
 * \@stable
 * @return {?}
 */function enableProdMode(){if(_runModeLocked){throw new Error('Cannot enable prod mode after platform setup.');}_devMode=false;}/**
 * Returns whether Angular is in development mode. After called once,
 * the value is locked and won't change any more.
 *
 * By default, this is true, unless a user calls `enableProdMode` before calling this.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @return {?}
 */function isDevMode(){_runModeLocked=true;return _devMode;}/**
 * A token for third-party components that can register themselves with NgProbe.
 *
 * \@experimental
 */var NgProbeToken=/**
     * @param {?} name
     * @param {?} token
     */function NgProbeToken(name,token){_classCallCheck(this,NgProbeToken);this.name=name;this.token=token;};/**
 * Creates a platform.
 * Platforms have to be eagerly created via this function.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @param {?} injector
 * @return {?}
 */function createPlatform(injector){if(_platform&&!_platform.destroyed&&!_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){throw new Error('There can be only one platform. Destroy the previous one to create a new one.');}_platform=injector.get(PlatformRef);var/** @type {?} */inits=injector.get(PLATFORM_INITIALIZER,null);if(inits)inits.forEach(function(init){return init();});return _platform;}/**
 * Creates a factory for a platform
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @param {?} parentPlatformFactory
 * @param {?} name
 * @param {?=} providers
 * @return {?}
 */function createPlatformFactory(parentPlatformFactory,name){var providers=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var/** @type {?} */marker=new InjectionToken('Platform: '+name);return function(){var extraProviders=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var/** @type {?} */platform=getPlatform();if(!platform||platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){if(parentPlatformFactory){parentPlatformFactory(providers.concat(extraProviders).concat({provide:marker,useValue:true}));}else{createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({provide:marker,useValue:true})));}}return assertPlatform(marker);};}/**
 * Checks that there currently is a platform which contains the given token as a provider.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @param {?} requiredToken
 * @return {?}
 */function assertPlatform(requiredToken){var/** @type {?} */platform=getPlatform();if(!platform){throw new Error('No platform exists!');}if(!platform.injector.get(requiredToken,null)){throw new Error('A platform with a different configuration has been created. Please destroy it first.');}return platform;}/**
 * Destroy the existing platform.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @return {?}
 */function destroyPlatform(){if(_platform&&!_platform.destroyed){_platform.destroy();}}/**
 * Returns the current platform.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @return {?}
 */function getPlatform(){return _platform&&!_platform.destroyed?_platform:null;}/**
 * The Angular platform is the entry point for Angular on a web page. Each page
 * has exactly one platform, and services (such as reflection) which are common
 * to every Angular application running on the page are bound in its scope.
 *
 * A page's platform is initialized implicitly when {\@link bootstrap}() is called, or
 * explicitly by calling {\@link createPlatform}().
 *
 * \@stable
 * @abstract
 */var PlatformRef=function(){function PlatformRef(){_classCallCheck(this,PlatformRef);}_createClass(PlatformRef,[{key:'bootstrapModuleFactory',/**
     * Creates an instance of an `\@NgModule` for the given platform
     * for offline compilation.
     *
     * ## Simple Example
     *
     * ```typescript
     * my_module.ts:
     *
     * \@NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * main.ts:
     * import {MyModuleNgFactory} from './my_module.ngfactory';
     * import {platformBrowser} from '\@angular/platform-browser';
     *
     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
     * ```
     *
     * \@experimental APIs related to application bootstrap are currently under review.
     * @abstract
     * @param {?} moduleFactory
     * @return {?}
     */value:function bootstrapModuleFactory(moduleFactory){}/**
     * Creates an instance of an `\@NgModule` for a given platform using the given runtime compiler.
     *
     * ## Simple Example
     *
     * ```typescript
     * \@NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * let moduleRef = platformBrowser().bootstrapModule(MyModule);
     * ```
     * \@stable
     * @abstract
     * @param {?} moduleType
     * @param {?=} compilerOptions
     * @return {?}
     */},{key:'bootstrapModule',value:function bootstrapModule(moduleType,compilerOptions){}/**
     * Register a listener to be called when the platform is disposed.
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}/**
     * Retrieve the platform {\@link Injector}, which is the parent injector for
     * every Angular application on the page and provides singleton providers.
     * @abstract
     * @return {?}
     */},{key:'injector',value:function injector(){}/**
     * Destroy the Angular platform and all Angular applications on the page.
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroyed',value:function destroyed(){}}]);return PlatformRef;}();/**
 * @param {?} errorHandler
 * @param {?} callback
 * @return {?}
 */function _callAndReportToErrorHandler(errorHandler,callback){try{var/** @type {?} */result=callback();if(isPromise(result)){return result.catch(function(e){errorHandler.handleError(e);// rethrow as the exception handler might not do it
throw e;});}return result;}catch(e){errorHandler.handleError(e);// rethrow as the exception handler might not do it
throw e;}}/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var PlatformRef_=function(_PlatformRef){_inherits(PlatformRef_,_PlatformRef);/**
     * @param {?} _injector
     */function PlatformRef_(_injector){_classCallCheck(this,PlatformRef_);var _this15=_possibleConstructorReturn(this,(PlatformRef_.__proto__||Object.getPrototypeOf(PlatformRef_)).call(this));_this15._injector=_injector;_this15._modules=[];_this15._destroyListeners=[];_this15._destroyed=false;return _this15;}/**
     * @param {?} callback
     * @return {?}
     */_createClass(PlatformRef_,[{key:'onDestroy',value:function onDestroy(callback){this._destroyListeners.push(callback);}/**
     * @return {?}
     */},{key:'destroy',/**
     * @return {?}
     */value:function destroy(){if(this._destroyed){throw new Error('The platform has already been destroyed!');}this._modules.slice().forEach(function(module){return module.destroy();});this._destroyListeners.forEach(function(listener){return listener();});this._destroyed=true;}/**
     * @param {?} moduleFactory
     * @return {?}
     */},{key:'bootstrapModuleFactory',value:function bootstrapModuleFactory(moduleFactory){return this._bootstrapModuleFactoryWithZone(moduleFactory,null);}/**
     * @param {?} moduleFactory
     * @param {?} ngZone
     * @return {?}
     */},{key:'_bootstrapModuleFactoryWithZone',value:function _bootstrapModuleFactoryWithZone(moduleFactory,ngZone){var _this16=this;// Note: We need to create the NgZone _before_ we instantiate the module,
// as instantiating the module creates some providers eagerly.
// So we create a mini parent injector that just contains the new NgZone and
// pass that as parent to the NgModuleFactory.
if(!ngZone)ngZone=new NgZone({enableLongStackTrace:isDevMode()});// Attention: Don't use ApplicationRef.run here,
// as we want to be sure that all possible constructor calls are inside `ngZone.run`!
return ngZone.run(function(){var/** @type {?} */ngZoneInjector=ReflectiveInjector.resolveAndCreate([{provide:NgZone,useValue:ngZone}],_this16.injector);var/** @type {?} */moduleRef=moduleFactory.create(ngZoneInjector);var/** @type {?} */exceptionHandler=moduleRef.injector.get(ErrorHandler,null);if(!exceptionHandler){throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');}moduleRef.onDestroy(function(){return ListWrapper.remove(_this16._modules,moduleRef);});ngZone.onError.subscribe({next:function next(error){exceptionHandler.handleError(error);}});return _callAndReportToErrorHandler(exceptionHandler,function(){var/** @type {?} */initStatus=moduleRef.injector.get(ApplicationInitStatus);return initStatus.donePromise.then(function(){_this16._moduleDoBootstrap(moduleRef);return moduleRef;});});});}/**
     * @param {?} moduleType
     * @param {?=} compilerOptions
     * @return {?}
     */},{key:'bootstrapModule',value:function bootstrapModule(moduleType){var compilerOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return this._bootstrapModuleWithZone(moduleType,compilerOptions,null);}/**
     * @param {?} moduleType
     * @param {?=} compilerOptions
     * @param {?=} ngZone
     * @return {?}
     */},{key:'_bootstrapModuleWithZone',value:function _bootstrapModuleWithZone(moduleType){var _this17=this;var compilerOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var ngZone=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */compilerFactory=this.injector.get(CompilerFactory);var/** @type {?} */compiler=compilerFactory.createCompiler(Array.isArray(compilerOptions)?compilerOptions:[compilerOptions]);return compiler.compileModuleAsync(moduleType).then(function(moduleFactory){return _this17._bootstrapModuleFactoryWithZone(moduleFactory,ngZone);});}/**
     * @param {?} moduleRef
     * @return {?}
     */},{key:'_moduleDoBootstrap',value:function _moduleDoBootstrap(moduleRef){var/** @type {?} */appRef=moduleRef.injector.get(ApplicationRef);if(moduleRef.bootstrapFactories.length>0){moduleRef.bootstrapFactories.forEach(function(compFactory){return appRef.bootstrap(compFactory);});}else if(moduleRef.instance.ngDoBootstrap){moduleRef.instance.ngDoBootstrap(appRef);}else{throw new Error('The module '+stringify(moduleRef.instance.constructor)+' was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. '+'Please define one of these.');}this._modules.push(moduleRef);}},{key:'injector',get:function get(){return this._injector;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return this._destroyed;}}]);return PlatformRef_;}(PlatformRef);PlatformRef_.decorators=[{type:Injectable}];/** @nocollapse */PlatformRef_.ctorParameters=function(){return[{type:Injector}];};/**
 * A reference to an Angular application running on a page.
 *
 * For more about Angular applications, see the documentation for {\@link bootstrap}.
 *
 * \@stable
 * @abstract
 */var ApplicationRef=function(){function ApplicationRef(){_classCallCheck(this,ApplicationRef);}_createClass(ApplicationRef,[{key:'bootstrap',/**
     * Bootstrap a new component at the root level of the application.
     *
     * ### Bootstrap process
     *
     * When bootstrapping a new root component into an application, Angular mounts the
     * specified application component onto DOM elements identified by the [componentType]'s
     * selector and kicks off automatic change detection to finish initializing the component.
     *
     * ### Example
     * {\@example core/ts/platform/platform.ts region='longform'}
     * @abstract
     * @param {?} componentFactory
     * @return {?}
     */value:function bootstrap(componentFactory){}/**
     * Invoke this method to explicitly process change detection and its side-effects.
     *
     * In development mode, `tick()` also performs a second change detection cycle to ensure that no
     * further changes are detected. If additional changes are picked up during this second cycle,
     * bindings in the app have side-effects that cannot be resolved in a single change detection
     * pass.
     * In this case, Angular throws an error, since an Angular application can only have one change
     * detection pass during which all change detection must complete.
     * @abstract
     * @return {?}
     */},{key:'tick',value:function tick(){}/**
     * Get a list of component types registered to this application.
     * This list is populated even before the component is created.
     * @abstract
     * @return {?}
     */},{key:'componentTypes',value:function componentTypes(){}/**
     * Get a list of components registered to this application.
     * @abstract
     * @return {?}
     */},{key:'components',value:function components(){}/**
     * Attaches a view so that it will be dirty checked.
     * The view will be automatically detached when it is destroyed.
     * This will throw if the view is already attached to a ViewContainer.
     * @abstract
     * @param {?} view
     * @return {?}
     */},{key:'attachView',value:function attachView(view){}/**
     * Detaches a view from dirty checking again.
     * @abstract
     * @param {?} view
     * @return {?}
     */},{key:'detachView',value:function detachView(view){}/**
     * Returns the number of attached views.
     * @abstract
     * @return {?}
     */},{key:'viewCount',value:function viewCount(){}/**
     * Returns an Observable that indicates when the application is stable or unstable.
     * @abstract
     * @return {?}
     */},{key:'isStable',value:function isStable(){}}]);return ApplicationRef;}();/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var ApplicationRef_=function(_ApplicationRef){_inherits(ApplicationRef_,_ApplicationRef);/**
     * @param {?} _zone
     * @param {?} _console
     * @param {?} _injector
     * @param {?} _exceptionHandler
     * @param {?} _componentFactoryResolver
     * @param {?} _initStatus
     * @param {?} _testabilityRegistry
     * @param {?} _testability
     */function ApplicationRef_(_zone,_console,_injector,_exceptionHandler,_componentFactoryResolver,_initStatus,_testabilityRegistry,_testability){_classCallCheck(this,ApplicationRef_);var _this18=_possibleConstructorReturn(this,(ApplicationRef_.__proto__||Object.getPrototypeOf(ApplicationRef_)).call(this));_this18._zone=_zone;_this18._console=_console;_this18._injector=_injector;_this18._exceptionHandler=_exceptionHandler;_this18._componentFactoryResolver=_componentFactoryResolver;_this18._initStatus=_initStatus;_this18._testabilityRegistry=_testabilityRegistry;_this18._testability=_testability;_this18._bootstrapListeners=[];_this18._rootComponents=[];_this18._rootComponentTypes=[];_this18._views=[];_this18._runningTick=false;_this18._enforceNoNewChanges=false;_this18._stable=true;_this18._enforceNoNewChanges=isDevMode();_this18._zone.onMicrotaskEmpty.subscribe({next:function next(){_this18._zone.run(function(){_this18.tick();});}});var isCurrentlyStable=new __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["Observable"](function(observer){_this18._stable=_this18._zone.isStable&&!_this18._zone.hasPendingMacrotasks&&!_this18._zone.hasPendingMicrotasks;_this18._zone.runOutsideAngular(function(){observer.next(_this18._stable);observer.complete();});});var isStable=new __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["Observable"](function(observer){var stableSub=_this18._zone.onStable.subscribe(function(){NgZone.assertNotInAngularZone();// Check whether there are no pending macro/micro tasks in the next tick
// to allow for NgZone to update the state.
scheduleMicroTask(function(){if(!_this18._stable&&!_this18._zone.hasPendingMacrotasks&&!_this18._zone.hasPendingMicrotasks){_this18._stable=true;observer.next(true);}});});var unstableSub=_this18._zone.onUnstable.subscribe(function(){NgZone.assertInAngularZone();if(_this18._stable){_this18._stable=false;_this18._zone.runOutsideAngular(function(){observer.next(false);});}});return function(){stableSub.unsubscribe();unstableSub.unsubscribe();};});_this18._isStable=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_merge__["merge"])(isCurrentlyStable,__WEBPACK_IMPORTED_MODULE_2_rxjs_operator_share__["share"].call(isStable));return _this18;}/**
     * @param {?} viewRef
     * @return {?}
     */_createClass(ApplicationRef_,[{key:'attachView',value:function attachView(viewRef){var/** @type {?} */view=viewRef;this._views.push(view);view.attachToAppRef(this);}/**
     * @param {?} viewRef
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRef){var/** @type {?} */view=viewRef;ListWrapper.remove(this._views,view);view.detachFromAppRef();}/**
     * @param {?} componentOrFactory
     * @return {?}
     */},{key:'bootstrap',value:function bootstrap(componentOrFactory){var _this19=this;if(!this._initStatus.done){throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');}var/** @type {?} */componentFactory=void 0;if(componentOrFactory instanceof ComponentFactory){componentFactory=componentOrFactory;}else{componentFactory=this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);}this._rootComponentTypes.push(componentFactory.componentType);var/** @type {?} */compRef=componentFactory.create(this._injector,[],componentFactory.selector);compRef.onDestroy(function(){_this19._unloadComponent(compRef);});var/** @type {?} */testability=compRef.injector.get(Testability,null);if(testability){compRef.injector.get(TestabilityRegistry).registerApplication(compRef.location.nativeElement,testability);}this._loadComponent(compRef);if(isDevMode()){this._console.log('Angular is running in the development mode. Call enableProdMode() to enable the production mode.');}return compRef;}/**
     * @param {?} componentRef
     * @return {?}
     */},{key:'_loadComponent',value:function _loadComponent(componentRef){this.attachView(componentRef.hostView);this.tick();this._rootComponents.push(componentRef);// Get the listeners lazily to prevent DI cycles.
var/** @type {?} */listeners=this._injector.get(APP_BOOTSTRAP_LISTENER,[]).concat(this._bootstrapListeners);listeners.forEach(function(listener){return listener(componentRef);});}/**
     * @param {?} componentRef
     * @return {?}
     */},{key:'_unloadComponent',value:function _unloadComponent(componentRef){this.detachView(componentRef.hostView);ListWrapper.remove(this._rootComponents,componentRef);}/**
     * @return {?}
     */},{key:'tick',value:function tick(){if(this._runningTick){throw new Error('ApplicationRef.tick is called recursively');}var/** @type {?} */scope=ApplicationRef_._tickScope();try{this._runningTick=true;this._views.forEach(function(view){return view.detectChanges();});if(this._enforceNoNewChanges){this._views.forEach(function(view){return view.checkNoChanges();});}}finally{this._runningTick=false;wtfLeave(scope);}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){// TODO(alxhub): Dispose of the NgZone.
this._views.slice().forEach(function(view){return view.destroy();});}/**
     * @return {?}
     */},{key:'viewCount',get:function get(){return this._views.length;}/**
     * @return {?}
     */},{key:'componentTypes',get:function get(){return this._rootComponentTypes;}/**
     * @return {?}
     */},{key:'components',get:function get(){return this._rootComponents;}/**
     * @return {?}
     */},{key:'isStable',get:function get(){return this._isStable;}}]);return ApplicationRef_;}(ApplicationRef);/** @internal */ApplicationRef_._tickScope=wtfCreateScope('ApplicationRef#tick()');ApplicationRef_.decorators=[{type:Injectable}];/** @nocollapse */ApplicationRef_.ctorParameters=function(){return[{type:NgZone},{type:Console},{type:Injector},{type:ErrorHandler},{type:ComponentFactoryResolver},{type:ApplicationInitStatus},{type:TestabilityRegistry,decorators:[{type:Optional}]},{type:Testability,decorators:[{type:Optional}]}];};/**
 * Represents an instance of an NgModule created via a {\@link NgModuleFactory}.
 *
 * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this
 * NgModule Instance.
 *
 * \@stable
 * @abstract
 */var NgModuleRef=function(){function NgModuleRef(){_classCallCheck(this,NgModuleRef);}_createClass(NgModuleRef,[{key:'injector',/**
     * The injector that contains all of the providers of the NgModule.
     * @abstract
     * @return {?}
     */value:function injector(){}/**
     * The ComponentFactoryResolver to get hold of the ComponentFactories
     * declared in the `entryComponents` property of the module.
     * @abstract
     * @return {?}
     */},{key:'componentFactoryResolver',value:function componentFactoryResolver(){}/**
     * The NgModule instance.
     * @abstract
     * @return {?}
     */},{key:'instance',value:function instance(){}/**
     * Destroys the module instance and all of the data structures associated with it.
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * Allows to register a callback that will be called when the module is destroyed.
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}}]);return NgModuleRef;}();/**
 * \@experimental
 */var NgModuleFactory=function(){/**
     * @param {?} _injectorClass
     * @param {?} _moduleType
     */function NgModuleFactory(_injectorClass,_moduleType){_classCallCheck(this,NgModuleFactory);this._injectorClass=_injectorClass;this._moduleType=_moduleType;}/**
     * @return {?}
     */_createClass(NgModuleFactory,[{key:'create',/**
     * @param {?} parentInjector
     * @return {?}
     */value:function create(parentInjector){if(!parentInjector){parentInjector=Injector.NULL;}var/** @type {?} */instance=new this._injectorClass(parentInjector);instance.create();return instance;}},{key:'moduleType',get:function get(){return this._moduleType;}}]);return NgModuleFactory;}();var/** @type {?} */_UNDEFINED=new Object();/**
 * @abstract
 */var NgModuleInjector=function(_CodegenComponentFact){_inherits(NgModuleInjector,_CodegenComponentFact);/**
     * @param {?} parent
     * @param {?} factories
     * @param {?} bootstrapFactories
     */function NgModuleInjector(parent,factories,bootstrapFactories){_classCallCheck(this,NgModuleInjector);var _this20=_possibleConstructorReturn(this,(NgModuleInjector.__proto__||Object.getPrototypeOf(NgModuleInjector)).call(this,factories,parent.get(ComponentFactoryResolver,ComponentFactoryResolver.NULL)));_this20.parent=parent;_this20.bootstrapFactories=bootstrapFactories;_this20._destroyListeners=[];_this20._destroyed=false;return _this20;}/**
     * @return {?}
     */_createClass(NgModuleInjector,[{key:'create',value:function create(){this.instance=this.createInternal();}/**
     * @abstract
     * @return {?}
     */},{key:'createInternal',value:function createInternal(){}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:THROW_IF_NOT_FOUND;if(token===Injector||token===ComponentFactoryResolver){return this;}var/** @type {?} */result=this.getInternal(token,_UNDEFINED);return result===_UNDEFINED?this.parent.get(token,notFoundValue):result;}/**
     * @abstract
     * @param {?} token
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'getInternal',value:function getInternal(token,notFoundValue){}/**
     * @return {?}
     */},{key:'destroy',/**
     * @return {?}
     */value:function destroy(){if(this._destroyed){throw new Error('The ng module '+stringify(this.instance.constructor)+' has already been destroyed.');}this._destroyed=true;this.destroyInternal();this._destroyListeners.forEach(function(listener){return listener();});}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){this._destroyListeners.push(callback);}/**
     * @abstract
     * @return {?}
     */},{key:'destroyInternal',value:function destroyInternal(){}},{key:'injector',get:function get(){return this;}/**
     * @return {?}
     */},{key:'componentFactoryResolver',get:function get(){return this;}}]);return NgModuleInjector;}(CodegenComponentFactoryResolver);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * Used to load ng module factories.
 * \@stable
 * @abstract
 */var NgModuleFactoryLoader=function(){function NgModuleFactoryLoader(){_classCallCheck(this,NgModuleFactoryLoader);}_createClass(NgModuleFactoryLoader,[{key:'load',/**
     * @abstract
     * @param {?} path
     * @return {?}
     */value:function load(path){}}]);return NgModuleFactoryLoader;}();var/** @type {?} */moduleFactories=new Map();/**
 * Registers a loaded module. Should only be called from generated NgModuleFactory code.
 * \@experimental
 * @param {?} id
 * @param {?} factory
 * @return {?}
 */function registerModuleFactory(id,factory){var/** @type {?} */existing=moduleFactories.get(id);if(existing){throw new Error('Duplicate module registered for '+id+' - '+existing.moduleType.name+' vs '+factory.moduleType.name);}moduleFactories.set(id,factory);}/**
 * Returns the NgModuleFactory with the given id, if it exists and has been loaded.
 * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module
 * cannot be found.
 * \@experimental
 * @param {?} id
 * @return {?}
 */function getModuleFactory(id){var/** @type {?} */factory=moduleFactories.get(id);if(!factory)throw new Error('No module with ID '+id+' loaded');return factory;}/**
 * An unmodifiable list of items that Angular keeps up to date when the state
 * of the application changes.
 *
 * The type of object that {\@link Query} and {\@link ViewQueryMetadata} provide.
 *
 * Implements an iterable interface, therefore it can be used in both ES6
 * javascript `for (var i of items)` loops as well as in Angular templates with
 * `*ngFor="let i of myList"`.
 *
 * Changes can be observed by subscribing to the changes `Observable`.
 *
 * NOTE: In the future this class will implement an `Observable` interface.
 *
 * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))
 * ```typescript
 * \@Component({...})
 * class Container {
 *   \@ViewChildren(Item) items:QueryList<Item>;
 * }
 * ```
 * \@stable
 */var QueryList=function(){function QueryList(){_classCallCheck(this,QueryList);this._dirty=true;this._results=[];this._emitter=new EventEmitter();}/**
     * @return {?}
     */_createClass(QueryList,[{key:'map',/**
     * See
     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
     * @param {?} fn
     * @return {?}
     */value:function map(fn){return this._results.map(fn);}/**
     * See
     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
     * @param {?} fn
     * @return {?}
     */},{key:'filter',value:function filter(fn){return this._results.filter(fn);}/**
     * See
     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
     * @param {?} fn
     * @return {?}
     */},{key:'find',value:function find(fn){return this._results.find(fn);}/**
     * See
     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
     * @param {?} fn
     * @param {?} init
     * @return {?}
     */},{key:'reduce',value:function reduce(fn,init){return this._results.reduce(fn,init);}/**
     * See
     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
     * @param {?} fn
     * @return {?}
     */},{key:'forEach',value:function forEach(fn){this._results.forEach(fn);}/**
     * See
     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
     * @param {?} fn
     * @return {?}
     */},{key:'some',value:function some(fn){return this._results.some(fn);}/**
     * @return {?}
     */},{key:'toArray',value:function toArray(){return this._results.slice();}/**
     * @return {?}
     */},{key:getSymbolIterator(),value:function value(){return this._results[getSymbolIterator()]();}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return this._results.toString();}/**
     * @param {?} res
     * @return {?}
     */},{key:'reset',value:function reset(res){this._results=ListWrapper.flatten(res);this._dirty=false;}/**
     * @return {?}
     */},{key:'notifyOnChanges',value:function notifyOnChanges(){this._emitter.emit(this);}/**
     * internal
     * @return {?}
     */},{key:'setDirty',value:function setDirty(){this._dirty=true;}/**
     * internal
     * @return {?}
     */},{key:'changes',get:function get(){return this._emitter;}/**
     * @return {?}
     */},{key:'length',get:function get(){return this._results.length;}/**
     * @return {?}
     */},{key:'first',get:function get(){return this._results[0];}/**
     * @return {?}
     */},{key:'last',get:function get(){return this._results[this.length-1];}},{key:'dirty',get:function get(){return this._dirty;}}]);return QueryList;}();var/** @type {?} */_SEPARATOR='#';var/** @type {?} */FACTORY_CLASS_SUFFIX='NgFactory';/**
 * Configuration for SystemJsNgModuleLoader.
 * token.
 *
 * \@experimental
 * @abstract
 */var SystemJsNgModuleLoaderConfig=function SystemJsNgModuleLoaderConfig(){_classCallCheck(this,SystemJsNgModuleLoaderConfig);};var/** @type {?} */DEFAULT_CONFIG={factoryPathPrefix:'',factoryPathSuffix:'.ngfactory'};/**
 * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory
 * \@experimental
 */var SystemJsNgModuleLoader=function(){/**
     * @param {?} _compiler
     * @param {?=} config
     */function SystemJsNgModuleLoader(_compiler,config){_classCallCheck(this,SystemJsNgModuleLoader);this._compiler=_compiler;this._config=config||DEFAULT_CONFIG;}/**
     * @param {?} path
     * @return {?}
     */_createClass(SystemJsNgModuleLoader,[{key:'load',value:function load(path){var/** @type {?} */offlineMode=this._compiler instanceof Compiler;return offlineMode?this.loadFactory(path):this.loadAndCompile(path);}/**
     * @param {?} path
     * @return {?}
     */},{key:'loadAndCompile',value:function loadAndCompile(path){var _this21=this;var _path$split=path.split(_SEPARATOR),_path$split2=_slicedToArray(_path$split,2),module=_path$split2[0],exportName=_path$split2[1];if(exportName===undefined){exportName='default';}return __webpack_require__(170)(module).then(function(module){return module[exportName];}).then(function(type){return checkNotEmpty(type,module,exportName);}).then(function(type){return _this21._compiler.compileModuleAsync(type);});}/**
     * @param {?} path
     * @return {?}
     */},{key:'loadFactory',value:function loadFactory(path){var _path$split3=path.split(_SEPARATOR),_path$split4=_slicedToArray(_path$split3,2),module=_path$split4[0],exportName=_path$split4[1];var/** @type {?} */factoryClassSuffix=FACTORY_CLASS_SUFFIX;if(exportName===undefined){exportName='default';factoryClassSuffix='';}return __webpack_require__(170)(this._config.factoryPathPrefix+module+this._config.factoryPathSuffix).then(function(module){return module[exportName+factoryClassSuffix];}).then(function(factory){return checkNotEmpty(factory,module,exportName);});}}]);return SystemJsNgModuleLoader;}();SystemJsNgModuleLoader.decorators=[{type:Injectable}];/** @nocollapse */SystemJsNgModuleLoader.ctorParameters=function(){return[{type:Compiler},{type:SystemJsNgModuleLoaderConfig,decorators:[{type:Optional}]}];};/**
 * @param {?} value
 * @param {?} modulePath
 * @param {?} exportName
 * @return {?}
 */function checkNotEmpty(value,modulePath,exportName){if(!value){throw new Error('Cannot find \''+exportName+'\' in \''+modulePath+'\'');}return value;}/**
 * Represents an Embedded Template that can be used to instantiate Embedded Views.
 *
 * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element
 * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into
 * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for
 * the `TemplateRef` from a Component or a Directive via {\@link Query}.
 *
 * To instantiate Embedded Views based on a Template, use
 * {\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the
 * View Container.
 * \@stable
 * @abstract
 */var TemplateRef=function(){function TemplateRef(){_classCallCheck(this,TemplateRef);}_createClass(TemplateRef,[{key:'elementRef',/**
     * @abstract
     * @return {?}
     */value:function elementRef(){}/**
     * @abstract
     * @param {?} context
     * @return {?}
     */},{key:'createEmbeddedView',value:function createEmbeddedView(context){}}]);return TemplateRef;}();/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var TemplateRef_=function(_TemplateRef){_inherits(TemplateRef_,_TemplateRef);/**
     * @param {?} _parentView
     * @param {?} _nodeIndex
     * @param {?} _nativeElement
     */function TemplateRef_(_parentView,_nodeIndex,_nativeElement){_classCallCheck(this,TemplateRef_);var _this22=_possibleConstructorReturn(this,(TemplateRef_.__proto__||Object.getPrototypeOf(TemplateRef_)).call(this));_this22._parentView=_parentView;_this22._nodeIndex=_nodeIndex;_this22._nativeElement=_nativeElement;return _this22;}/**
     * @param {?} context
     * @return {?}
     */_createClass(TemplateRef_,[{key:'createEmbeddedView',value:function createEmbeddedView(context){var/** @type {?} */view=this._parentView.createEmbeddedViewInternal(this._nodeIndex);view.create(context||{});return view.ref;}/**
     * @return {?}
     */},{key:'elementRef',get:function get(){return new ElementRef(this._nativeElement);}}]);return TemplateRef_;}(TemplateRef);/**
 * Represents a container where one or more Views can be attached.
 *
 * The container can contain two kinds of Views. Host Views, created by instantiating a
 * {\@link Component} via {\@link #createComponent}, and Embedded Views, created by instantiating an
 * {\@link TemplateRef Embedded Template} via {\@link #createEmbeddedView}.
 *
 * The location of the View Container within the containing View is specified by the Anchor
 * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only
 * have a single View Container.
 *
 * Root elements of Views attached to this container become siblings of the Anchor Element in
 * the Rendered View.
 *
 * To access a `ViewContainerRef` of an Element, you can either place a {\@link Directive} injected
 * with `ViewContainerRef` on the Element, or you obtain it via a {\@link ViewChild} query.
 * \@stable
 * @abstract
 */var ViewContainerRef=function(){function ViewContainerRef(){_classCallCheck(this,ViewContainerRef);}_createClass(ViewContainerRef,[{key:'element',/**
     * Anchor element that specifies the location of this container in the containing View.
     * <!-- TODO: rename to anchorElement -->
     * @abstract
     * @return {?}
     */value:function element(){}/**
     * @abstract
     * @return {?}
     */},{key:'injector',value:function injector(){}/**
     * @abstract
     * @return {?}
     */},{key:'parentInjector',value:function parentInjector(){}/**
     * Destroys all Views in this container.
     * @abstract
     * @return {?}
     */},{key:'clear',value:function clear(){}/**
     * Returns the {\@link ViewRef} for the View located in this container at the specified index.
     * @abstract
     * @param {?} index
     * @return {?}
     */},{key:'get',value:function get(index){}/**
     * Returns the number of Views currently attached to this container.
     * @abstract
     * @return {?}
     */},{key:'length',value:function length(){}/**
     * Instantiates an Embedded View based on the {\@link TemplateRef `templateRef`} and inserts it
     * into this container at the specified `index`.
     *
     * If `index` is not specified, the new View will be inserted as the last View in the container.
     *
     * Returns the {\@link ViewRef} for the newly created View.
     * @abstract
     * @param {?} templateRef
     * @param {?=} context
     * @param {?=} index
     * @return {?}
     */},{key:'createEmbeddedView',value:function createEmbeddedView(templateRef,context,index){}/**
     * Instantiates a single {\@link Component} and inserts its Host View into this container at the
     * specified `index`.
     *
     * The component is instantiated using its {\@link ComponentFactory} which can be
     * obtained via {\@link ComponentFactoryResolver#resolveComponentFactory}.
     *
     * If `index` is not specified, the new View will be inserted as the last View in the container.
     *
     * You can optionally specify the {\@link Injector} that will be used as parent for the Component.
     *
     * Returns the {\@link ComponentRef} of the Host View created for the newly instantiated Component.
     * @abstract
     * @param {?} componentFactory
     * @param {?=} index
     * @param {?=} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createComponent',value:function createComponent(componentFactory,index,injector,projectableNodes){}/**
     * Inserts a View identified by a {\@link ViewRef} into the container at the specified `index`.
     *
     * If `index` is not specified, the new View will be inserted as the last View in the container.
     *
     * Returns the inserted {\@link ViewRef}.
     * @abstract
     * @param {?} viewRef
     * @param {?=} index
     * @return {?}
     */},{key:'insert',value:function insert(viewRef,index){}/**
     * Moves a View identified by a {\@link ViewRef} into the container at the specified `index`.
     *
     * Returns the inserted {\@link ViewRef}.
     * @abstract
     * @param {?} viewRef
     * @param {?} currentIndex
     * @return {?}
     */},{key:'move',value:function move(viewRef,currentIndex){}/**
     * Returns the index of the View, specified via {\@link ViewRef}, within the current container or
     * `-1` if this container doesn't contain the View.
     * @abstract
     * @param {?} viewRef
     * @return {?}
     */},{key:'indexOf',value:function indexOf(viewRef){}/**
     * Destroys a View attached to this container at the specified `index`.
     *
     * If `index` is not specified, the last View in the container will be removed.
     * @abstract
     * @param {?=} index
     * @return {?}
     */},{key:'remove',value:function remove(index){}/**
     * Use along with {\@link #insert} to move a View within the current container.
     *
     * If the `index` param is omitted, the last {\@link ViewRef} is detached.
     * @abstract
     * @param {?=} index
     * @return {?}
     */},{key:'detach',value:function detach(index){}}]);return ViewContainerRef;}();var ViewContainerRef_=function(){/**
     * @param {?} _element
     */function ViewContainerRef_(_element){_classCallCheck(this,ViewContainerRef_);this._element=_element;/** @internal */this._createComponentInContainerScope=wtfCreateScope('ViewContainerRef#createComponent()');/** @internal */this._insertScope=wtfCreateScope('ViewContainerRef#insert()');/** @internal */this._removeScope=wtfCreateScope('ViewContainerRef#remove()');/** @internal */this._detachScope=wtfCreateScope('ViewContainerRef#detach()');}/**
     * @param {?} index
     * @return {?}
     */_createClass(ViewContainerRef_,[{key:'get',value:function get(index){return this._element.nestedViews[index].ref;}/**
     * @return {?}
     */},{key:'createEmbeddedView',/**
     * @param {?} templateRef
     * @param {?=} context
     * @param {?=} index
     * @return {?}
     */value:function createEmbeddedView(templateRef){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var index=arguments.length>2&&arguments[2]!==undefined?arguments[2]:-1;var/** @type {?} */viewRef=templateRef.createEmbeddedView(context);this.insert(viewRef,index);return viewRef;}/**
     * @param {?} componentFactory
     * @param {?=} index
     * @param {?=} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createComponent',value:function createComponent(componentFactory){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var injector=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var projectableNodes=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var/** @type {?} */s=this._createComponentInContainerScope();var/** @type {?} */contextInjector=injector||this._element.parentInjector;var/** @type {?} */componentRef=componentFactory.create(contextInjector,projectableNodes);this.insert(componentRef.hostView,index);return wtfLeave(s,componentRef);}/**
     * @param {?} viewRef
     * @param {?=} index
     * @return {?}
     */},{key:'insert',value:function insert(viewRef){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var/** @type {?} */s=this._insertScope();if(index==-1)index=this.length;var/** @type {?} */viewRef_=viewRef;this._element.attachView(viewRef_.internalView,index);return wtfLeave(s,viewRef_);}/**
     * @param {?} viewRef
     * @param {?} currentIndex
     * @return {?}
     */},{key:'move',value:function move(viewRef,currentIndex){var/** @type {?} */s=this._insertScope();if(currentIndex==-1)return;var/** @type {?} */viewRef_=viewRef;this._element.moveView(viewRef_.internalView,currentIndex);return wtfLeave(s,viewRef_);}/**
     * @param {?} viewRef
     * @return {?}
     */},{key:'indexOf',value:function indexOf(viewRef){return this.length?this._element.nestedViews.indexOf(viewRef.internalView):-1;}/**
     * @param {?=} index
     * @return {?}
     */},{key:'remove',value:function remove(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:-1;var/** @type {?} */s=this._removeScope();if(index==-1)index=this.length-1;var/** @type {?} */view=this._element.detachView(index);view.destroy();// view is intentionally not returned to the client.
wtfLeave(s);}/**
     * @param {?=} index
     * @return {?}
     */},{key:'detach',value:function detach(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:-1;var/** @type {?} */s=this._detachScope();if(index==-1)index=this.length-1;var/** @type {?} */view=this._element.detachView(index);return wtfLeave(s,view.ref);}/**
     * @return {?}
     */},{key:'clear',value:function clear(){for(var/** @type {?} */i=this.length-1;i>=0;i--){this.remove(i);}}},{key:'length',get:function get(){var/** @type {?} */views=this._element.nestedViews;return views?views.length:0;}/**
     * @return {?}
     */},{key:'element',get:function get(){return this._element.elementRef;}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this._element.injector;}/**
     * @return {?}
     */},{key:'parentInjector',get:function get(){return this._element.parentInjector;}}]);return ViewContainerRef_;}();/**
 * \@stable
 * @abstract
 */var ViewRef=function(_ChangeDetectorRef){_inherits(ViewRef,_ChangeDetectorRef);function ViewRef(){_classCallCheck(this,ViewRef);return _possibleConstructorReturn(this,(ViewRef.__proto__||Object.getPrototypeOf(ViewRef)).apply(this,arguments));}_createClass(ViewRef,[{key:'destroy',/**
     * Destroys the view and all of the data structures associated with it.
     * @abstract
     * @return {?}
     */value:function destroy(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroyed',value:function destroyed(){}/**
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}}]);return ViewRef;}(ChangeDetectorRef);/**
 * Represents an Angular View.
 *
 * <!-- TODO: move the next two paragraphs to the dev guide -->
 * A View is a fundamental building block of the application UI. It is the smallest grouping of
 * Elements which are created and destroyed together.
 *
 * Properties of elements in a View can change, but the structure (number and order) of elements in
 * a View cannot. Changing the structure of Elements can only be done by inserting, moving or
 * removing nested Views via a {\@link ViewContainerRef}. Each View can contain many View Containers.
 * <!-- /TODO -->
 *
 * ### Example
 *
 * Given this template...
 *
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <li *ngFor="let  item of items">{{item}}</li>
 * </ul>
 * ```
 *
 * We have two {\@link TemplateRef}s:
 *
 * Outer {\@link TemplateRef}:
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <ng-template ngFor let-item [ngForOf]="items"></ng-template>
 * </ul>
 * ```
 *
 * Inner {\@link TemplateRef}:
 * ```
 *   <li>{{item}}</li>
 * ```
 *
 * Notice that the original template is broken down into two separate {\@link TemplateRef}s.
 *
 * The outer/inner {\@link TemplateRef}s are then assembled into views like so:
 *
 * ```
 * <!-- ViewRef: outer-0 -->
 * Count: 2
 * <ul>
 *   <ng-template view-container-ref></ng-template>
 *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->
 *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->
 * </ul>
 * <!-- /ViewRef: outer-0 -->
 * ```
 * \@experimental
 * @abstract
 */var EmbeddedViewRef=function(_ViewRef){_inherits(EmbeddedViewRef,_ViewRef);function EmbeddedViewRef(){_classCallCheck(this,EmbeddedViewRef);return _possibleConstructorReturn(this,(EmbeddedViewRef.__proto__||Object.getPrototypeOf(EmbeddedViewRef)).apply(this,arguments));}_createClass(EmbeddedViewRef,[{key:'context',/**
     * @abstract
     * @return {?}
     */value:function context(){}/**
     * @abstract
     * @return {?}
     */},{key:'rootNodes',value:function rootNodes(){}}]);return EmbeddedViewRef;}(ViewRef);var ViewRef_=function(){/**
     * @param {?} _view
     * @param {?} animationQueue
     */function ViewRef_(_view,animationQueue){_classCallCheck(this,ViewRef_);this._view=_view;this.animationQueue=animationQueue;this._view=_view;this._originalMode=this._view.cdMode;}/**
     * @return {?}
     */_createClass(ViewRef_,[{key:'markForCheck',/**
     * @return {?}
     */value:function markForCheck(){this._view.markPathToRootAsCheckOnce();}/**
     * @return {?}
     */},{key:'detach',value:function detach(){this._view.cdMode=ChangeDetectorStatus.Detached;}/**
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(){this._view.detectChanges(false);this.animationQueue.flush();}/**
     * @return {?}
     */},{key:'checkNoChanges',value:function checkNoChanges(){this._view.detectChanges(true);}/**
     * @return {?}
     */},{key:'reattach',value:function reattach(){this._view.cdMode=this._originalMode;this.markForCheck();}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){if(!this._view.disposables){this._view.disposables=[];}this._view.disposables.push(callback);}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this._view.detachAndDestroy();}/**
     * @return {?}
     */},{key:'detachFromAppRef',value:function detachFromAppRef(){this._view.detach();}/**
     * @param {?} appRef
     * @return {?}
     */},{key:'attachToAppRef',value:function attachToAppRef(appRef){this._view.attachToAppRef(appRef);}},{key:'internalView',get:function get(){return this._view;}/**
     * @return {?}
     */},{key:'rootNodes',get:function get(){return this._view.flatRootNodes;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._view.context;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return this._view.destroyed;}}]);return ViewRef_;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EventListener=/**
     * @param {?} name
     * @param {?} callback
     */function EventListener(name,callback){_classCallCheck(this,EventListener);this.name=name;this.callback=callback;};/**
 * \@experimental All debugging apis are currently experimental.
 */var DebugNode=function(){/**
     * @param {?} nativeNode
     * @param {?} parent
     * @param {?} _debugInfo
     */function DebugNode(nativeNode,parent,_debugInfo){_classCallCheck(this,DebugNode);this._debugInfo=_debugInfo;this.nativeNode=nativeNode;if(parent&&parent instanceof DebugElement){parent.addChild(this);}else{this.parent=null;}this.listeners=[];}/**
     * @return {?}
     */_createClass(DebugNode,[{key:'injector',get:function get(){return this._debugInfo?this._debugInfo.injector:null;}/**
     * @return {?}
     */},{key:'componentInstance',get:function get(){return this._debugInfo?this._debugInfo.component:null;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._debugInfo?this._debugInfo.context:null;}/**
     * @return {?}
     */},{key:'references',get:function get(){return this._debugInfo?this._debugInfo.references:null;}/**
     * @return {?}
     */},{key:'providerTokens',get:function get(){return this._debugInfo?this._debugInfo.providerTokens:null;}/**
     * @return {?}
     */},{key:'source',get:function get(){return this._debugInfo?this._debugInfo.source:null;}}]);return DebugNode;}();/**
 * \@experimental All debugging apis are currently experimental.
 */var DebugElement=function(_DebugNode){_inherits(DebugElement,_DebugNode);/**
     * @param {?} nativeNode
     * @param {?} parent
     * @param {?} _debugInfo
     */function DebugElement(nativeNode,parent,_debugInfo){_classCallCheck(this,DebugElement);var _this25=_possibleConstructorReturn(this,(DebugElement.__proto__||Object.getPrototypeOf(DebugElement)).call(this,nativeNode,parent,_debugInfo));_this25.properties={};_this25.attributes={};_this25.classes={};_this25.styles={};_this25.childNodes=[];_this25.nativeElement=nativeNode;return _this25;}/**
     * @param {?} child
     * @return {?}
     */_createClass(DebugElement,[{key:'addChild',value:function addChild(child){if(child){this.childNodes.push(child);child.parent=this;}}/**
     * @param {?} child
     * @return {?}
     */},{key:'removeChild',value:function removeChild(child){var/** @type {?} */childIndex=this.childNodes.indexOf(child);if(childIndex!==-1){child.parent=null;this.childNodes.splice(childIndex,1);}}/**
     * @param {?} child
     * @param {?} newChildren
     * @return {?}
     */},{key:'insertChildrenAfter',value:function insertChildrenAfter(child,newChildren){var _this26=this;var/** @type {?} */siblingIndex=this.childNodes.indexOf(child);if(siblingIndex!==-1){var _childNodes;(_childNodes=this.childNodes).splice.apply(_childNodes,[siblingIndex+1,0].concat(_toConsumableArray(newChildren)));newChildren.forEach(function(c){if(c.parent){c.parent.removeChild(c);}c.parent=_this26;});}}/**
     * @param {?} refChild
     * @param {?} newChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(refChild,newChild){var/** @type {?} */refIndex=this.childNodes.indexOf(refChild);if(refIndex===-1){this.addChild(newChild);}else{if(newChild.parent){newChild.parent.removeChild(newChild);}newChild.parent=this;this.childNodes.splice(refIndex,0,newChild);}}/**
     * @param {?} predicate
     * @return {?}
     */},{key:'query',value:function query(predicate){var/** @type {?} */results=this.queryAll(predicate);return results[0]||null;}/**
     * @param {?} predicate
     * @return {?}
     */},{key:'queryAll',value:function queryAll(predicate){var/** @type {?} */matches=[];_queryElementChildren(this,predicate,matches);return matches;}/**
     * @param {?} predicate
     * @return {?}
     */},{key:'queryAllNodes',value:function queryAllNodes(predicate){var/** @type {?} */matches=[];_queryNodeChildren(this,predicate,matches);return matches;}/**
     * @return {?}
     */},{key:'triggerEventHandler',/**
     * @param {?} eventName
     * @param {?} eventObj
     * @return {?}
     */value:function triggerEventHandler(eventName,eventObj){this.listeners.forEach(function(listener){if(listener.name==eventName){listener.callback(eventObj);}});}},{key:'children',get:function get(){return this.childNodes.filter(function(node){return node instanceof DebugElement;});}}]);return DebugElement;}(DebugNode);/**
 * \@experimental
 * @param {?} debugEls
 * @return {?}
 */function asNativeElements(debugEls){return debugEls.map(function(el){return el.nativeElement;});}/**
 * @param {?} element
 * @param {?} predicate
 * @param {?} matches
 * @return {?}
 */function _queryElementChildren(element,predicate,matches){element.childNodes.forEach(function(node){if(node instanceof DebugElement){if(predicate(node)){matches.push(node);}_queryElementChildren(node,predicate,matches);}});}/**
 * @param {?} parentNode
 * @param {?} predicate
 * @param {?} matches
 * @return {?}
 */function _queryNodeChildren(parentNode,predicate,matches){if(parentNode instanceof DebugElement){parentNode.childNodes.forEach(function(node){if(predicate(node)){matches.push(node);}if(node instanceof DebugElement){_queryNodeChildren(node,predicate,matches);}});}}// Need to keep the nodes in a global Map so that multiple angular apps are supported.
var/** @type {?} */_nativeNodeToDebugNode=new Map();/**
 * \@experimental
 * @param {?} nativeNode
 * @return {?}
 */function getDebugNode(nativeNode){return _nativeNodeToDebugNode.get(nativeNode);}/**
 * @param {?} node
 * @return {?}
 */function indexDebugNode(node){_nativeNodeToDebugNode.set(node.nativeNode,node);}/**
 * @param {?} node
 * @return {?}
 */function removeDebugNodeFromIndex(node){_nativeNodeToDebugNode.delete(node.nativeNode);}/**
 * @return {?}
 */function _reflector(){return reflector;}var/** @type {?} */_CORE_PLATFORM_PROVIDERS=[// Set a default platform name for platforms that don't set it explicitly.
{provide:PLATFORM_ID,useValue:'unknown'},PlatformRef_,{provide:PlatformRef,useExisting:PlatformRef_},{provide:Reflector,useFactory:_reflector,deps:[]},{provide:ReflectorReader,useExisting:Reflector},TestabilityRegistry,Console];/**
 * This platform has to be included in any other platform
 *
 * @experimental
 */var/** @type {?} */platformCore=createPlatformFactory(null,'core',_CORE_PLATFORM_PROVIDERS);/**
 * @experimental i18n support is experimental.
 */var/** @type {?} */LOCALE_ID=new InjectionToken('LocaleId');/**
 * @experimental i18n support is experimental.
 */var/** @type {?} */TRANSLATIONS=new InjectionToken('Translations');/**
 * @experimental i18n support is experimental.
 */var/** @type {?} */TRANSLATIONS_FORMAT=new InjectionToken('TranslationsFormat');var MissingTranslationStrategy={};MissingTranslationStrategy.Error=0;MissingTranslationStrategy.Warning=1;MissingTranslationStrategy.Ignore=2;MissingTranslationStrategy[MissingTranslationStrategy.Error]="Error";MissingTranslationStrategy[MissingTranslationStrategy.Warning]="Warning";MissingTranslationStrategy[MissingTranslationStrategy.Ignore]="Ignore";/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ArgumentType={};ArgumentType.Inline=0;ArgumentType.Dynamic=1;ArgumentType[ArgumentType.Inline]="Inline";ArgumentType[ArgumentType.Dynamic]="Dynamic";var ViewFlags={};ViewFlags.None=0;ViewFlags.OnPush=2;ViewFlags[ViewFlags.None]="None";ViewFlags[ViewFlags.OnPush]="OnPush";var NodeType={};NodeType.Element=0;NodeType.Text=1;NodeType.Directive=2;NodeType.Provider=3;NodeType.Pipe=4;NodeType.PureExpression=5;NodeType.Query=6;NodeType.NgContent=7;NodeType[NodeType.Element]="Element";NodeType[NodeType.Text]="Text";NodeType[NodeType.Directive]="Directive";NodeType[NodeType.Provider]="Provider";NodeType[NodeType.Pipe]="Pipe";NodeType[NodeType.PureExpression]="PureExpression";NodeType[NodeType.Query]="Query";NodeType[NodeType.NgContent]="NgContent";var NodeFlags={};NodeFlags.None=0;NodeFlags.OnInit=1;NodeFlags.OnDestroy=2;NodeFlags.DoCheck=4;NodeFlags.OnChanges=8;NodeFlags.AfterContentInit=16;NodeFlags.AfterContentChecked=32;NodeFlags.AfterViewInit=64;NodeFlags.AfterViewChecked=128;NodeFlags.HasEmbeddedViews=256;NodeFlags.HasComponent=512;NodeFlags.IsComponent=1024;NodeFlags.HasContentQuery=2048;NodeFlags.HasStaticQuery=4096;NodeFlags.HasDynamicQuery=8192;NodeFlags.HasViewQuery=16384;NodeFlags.LazyProvider=32768;NodeFlags.PrivateProvider=65536;NodeFlags[NodeFlags.None]="None";NodeFlags[NodeFlags.OnInit]="OnInit";NodeFlags[NodeFlags.OnDestroy]="OnDestroy";NodeFlags[NodeFlags.DoCheck]="DoCheck";NodeFlags[NodeFlags.OnChanges]="OnChanges";NodeFlags[NodeFlags.AfterContentInit]="AfterContentInit";NodeFlags[NodeFlags.AfterContentChecked]="AfterContentChecked";NodeFlags[NodeFlags.AfterViewInit]="AfterViewInit";NodeFlags[NodeFlags.AfterViewChecked]="AfterViewChecked";NodeFlags[NodeFlags.HasEmbeddedViews]="HasEmbeddedViews";NodeFlags[NodeFlags.HasComponent]="HasComponent";NodeFlags[NodeFlags.IsComponent]="IsComponent";NodeFlags[NodeFlags.HasContentQuery]="HasContentQuery";NodeFlags[NodeFlags.HasStaticQuery]="HasStaticQuery";NodeFlags[NodeFlags.HasDynamicQuery]="HasDynamicQuery";NodeFlags[NodeFlags.HasViewQuery]="HasViewQuery";NodeFlags[NodeFlags.LazyProvider]="LazyProvider";NodeFlags[NodeFlags.PrivateProvider]="PrivateProvider";var BindingType={};BindingType.ElementAttribute=0;BindingType.ElementClass=1;BindingType.ElementStyle=2;BindingType.ElementProperty=3;BindingType.ComponentHostProperty=4;BindingType.DirectiveProperty=5;BindingType.TextInterpolation=6;BindingType.PureExpressionProperty=7;BindingType[BindingType.ElementAttribute]="ElementAttribute";BindingType[BindingType.ElementClass]="ElementClass";BindingType[BindingType.ElementStyle]="ElementStyle";BindingType[BindingType.ElementProperty]="ElementProperty";BindingType[BindingType.ComponentHostProperty]="ComponentHostProperty";BindingType[BindingType.DirectiveProperty]="DirectiveProperty";BindingType[BindingType.TextInterpolation]="TextInterpolation";BindingType[BindingType.PureExpressionProperty]="PureExpressionProperty";var OutputType={};OutputType.ElementOutput=0;OutputType.DirectiveOutput=1;OutputType[OutputType.ElementOutput]="ElementOutput";OutputType[OutputType.DirectiveOutput]="DirectiveOutput";var QueryValueType={};QueryValueType.ElementRef=0;QueryValueType.RenderElement=1;QueryValueType.TemplateRef=2;QueryValueType.ViewContainerRef=3;QueryValueType.Provider=4;QueryValueType[QueryValueType.ElementRef]="ElementRef";QueryValueType[QueryValueType.RenderElement]="RenderElement";QueryValueType[QueryValueType.TemplateRef]="TemplateRef";QueryValueType[QueryValueType.ViewContainerRef]="ViewContainerRef";QueryValueType[QueryValueType.Provider]="Provider";var ProviderType={};ProviderType.Value=0;ProviderType.Class=1;ProviderType.Factory=2;ProviderType.UseExisting=3;ProviderType[ProviderType.Value]="Value";ProviderType[ProviderType.Class]="Class";ProviderType[ProviderType.Factory]="Factory";ProviderType[ProviderType.UseExisting]="UseExisting";var DepFlags={};DepFlags.None=0;DepFlags.SkipSelf=1;DepFlags.Optional=2;DepFlags.Value=8;DepFlags[DepFlags.None]="None";DepFlags[DepFlags.SkipSelf]="SkipSelf";DepFlags[DepFlags.Optional]="Optional";DepFlags[DepFlags.Value]="Value";var PureExpressionType={};PureExpressionType.Array=0;PureExpressionType.Object=1;PureExpressionType.Pipe=2;PureExpressionType[PureExpressionType.Array]="Array";PureExpressionType[PureExpressionType.Object]="Object";PureExpressionType[PureExpressionType.Pipe]="Pipe";var QueryBindingType={};QueryBindingType.First=0;QueryBindingType.All=1;QueryBindingType[QueryBindingType.First]="First";QueryBindingType[QueryBindingType.All]="All";var ViewState={};ViewState.FirstCheck=1;ViewState.ChecksEnabled=2;ViewState.Errored=4;ViewState.Destroyed=8;ViewState[ViewState.FirstCheck]="FirstCheck";ViewState[ViewState.ChecksEnabled]="ChecksEnabled";ViewState[ViewState.Errored]="Errored";ViewState[ViewState.Destroyed]="Destroyed";/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asTextData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asElementData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asProviderData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asPureExpressionData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asQueryList(view,index){return view.nodes[index];}var CheckType={};CheckType.CheckAndUpdate=0;CheckType.CheckNoChanges=1;CheckType[CheckType.CheckAndUpdate]="CheckAndUpdate";CheckType[CheckType.CheckNoChanges]="CheckNoChanges";/**
 * This object is used to prevent cycles in the source files and to have a place where
 * debug mode can hook it. It is lazily filled when `isDevMode` is known.
 */var/** @type {?} */Services={setCurrentNode:undefined,createRootView:undefined,createEmbeddedView:undefined,checkAndUpdateView:undefined,checkNoChangesView:undefined,destroyView:undefined,resolveDep:undefined,createDebugContext:undefined,handleEvent:undefined,updateDirectives:undefined,updateRenderer:undefined,dirtyParentQueries:undefined};/**
 * @param {?} context
 * @param {?} oldValue
 * @param {?} currValue
 * @param {?} isFirstCheck
 * @return {?}
 */function expressionChangedAfterItHasBeenCheckedError$1(context,oldValue,currValue,isFirstCheck){var/** @type {?} */msg='ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: \''+oldValue+'\'. Current value: \''+currValue+'\'.';if(isFirstCheck){msg+=' It seems like the view has been created after its parent and its children have been dirty checked.'+' Has it been created in a change detection hook ?';}return viewDebugError(msg,context);}/**
 * @param {?} originalError
 * @param {?} context
 * @return {?}
 */function viewWrappedDebugError(originalError,context){var/** @type {?} */err=viewDebugError(originalError.message,context);err[ERROR_ORIGINAL_ERROR]=originalError;return err;}/**
 * @param {?} msg
 * @param {?} context
 * @return {?}
 */function viewDebugError(msg,context){var/** @type {?} */err=new Error(msg);err[ERROR_DEBUG_CONTEXT]=context;err.stack=context.source;return err;}/**
 * @param {?} err
 * @return {?}
 */function isViewDebugError(err){return!!getDebugContext(err);}/**
 * @param {?} action
 * @return {?}
 */function viewDestroyedError$1(action){return new Error('ViewDestroyedError: Attempt to use a destroyed view: '+action);}var/** @type {?} */_tokenKeyCache=new Map();/**
 * @param {?} token
 * @return {?}
 */function tokenKey(token){var/** @type {?} */key=_tokenKeyCache.get(token);if(!key){key=stringify(token)+'_'+_tokenKeyCache.size;_tokenKeyCache.set(token,key);}return key;}var/** @type {?} */unwrapCounter=0;/**
 * @param {?} value
 * @return {?}
 */function unwrapValue(value){if(value instanceof WrappedValue){value=value.wrapped;unwrapCounter++;}return value;}var/** @type {?} */_renderCompCount=0;/**
 * @param {?} values
 * @return {?}
 */function createRendererTypeV2(values){var/** @type {?} */isFilled=values&&(values.encapsulation!==ViewEncapsulation.None||values.styles.length||Object.keys(values.data).length);if(isFilled){var/** @type {?} */id='c'+_renderCompCount++;return{id:id,styles:values.styles,encapsulation:values.encapsulation,data:values.data};}else{return null;}}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkBinding$1(view,def,bindingIdx,value){var/** @type {?} */oldValues=view.oldValues;if(unwrapCounter>0||!!(view.state&ViewState.FirstCheck)||!looseIdentical(oldValues[def.bindingIndex+bindingIdx],value)){unwrapCounter=0;return true;}return false;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkAndUpdateBinding(view,def,bindingIdx,value){if(checkBinding$1(view,def,bindingIdx,value)){view.oldValues[def.bindingIndex+bindingIdx]=value;return true;}return false;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkBindingNoChanges(view,def,bindingIdx,value){var/** @type {?} */oldValue=view.oldValues[def.bindingIndex+bindingIdx];if(unwrapCounter||view.state&ViewState.FirstCheck||!devModeEqual(oldValue,value)){unwrapCounter=0;throw expressionChangedAfterItHasBeenCheckedError$1(Services.createDebugContext(view,def.index),oldValue,value,(view.state&ViewState.FirstCheck)!==0);}}/**
 * @param {?} view
 * @return {?}
 */function markParentViewsForCheck(view){var/** @type {?} */currView=view;while(currView){if(currView.def.flags&ViewFlags.OnPush){currView.state|=ViewState.ChecksEnabled;}currView=currView.viewContainerParent||currView.parent;}}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} eventName
 * @param {?} event
 * @return {?}
 */function dispatchEvent(view,nodeIndex,eventName,event){markParentViewsForCheck(view);return Services.handleEvent(view,nodeIndex,eventName,event);}/**
 * @param {?} view
 * @return {?}
 */function declaredViewContainer(view){if(view.parent){var/** @type {?} */parentView=view.parent;return asElementData(parentView,view.parentNodeDef.index);}return undefined;}/**
 * for component views, this is the host element.
 * for embedded views, this is the index of the parent node
 * that contains the view container.
 * @param {?} view
 * @return {?}
 */function viewParentEl(view){var/** @type {?} */parentView=view.parent;if(parentView){return view.parentNodeDef.parent;}else{return null;}}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function renderNode(view,def){switch(def.type){case NodeType.Element:return asElementData(view,def.index).renderElement;case NodeType.Text:return asTextData(view,def.index).renderText;}}/**
 * @param {?} target
 * @param {?} name
 * @return {?}
 */function elementEventFullName(target,name){return target?target+':'+name:name;}/**
 * @param {?} view
 * @return {?}
 */function isComponentView(view){return view.component===view.context&&!!view.parent;}/**
 * @param {?} view
 * @return {?}
 */function isEmbeddedView(view){return view.component!==view.context&&!!view.parent;}/**
 * @param {?} queryId
 * @return {?}
 */function filterQueryId(queryId){return 1<<queryId%32;}/**
 * @param {?} matchedQueriesDsl
 * @return {?}
 */function splitMatchedQueriesDsl(matchedQueriesDsl){var/** @type {?} */matchedQueries={};var/** @type {?} */matchedQueryIds=0;var/** @type {?} */references={};if(matchedQueriesDsl){matchedQueriesDsl.forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),queryId=_ref4[0],valueType=_ref4[1];if(typeof queryId==='number'){matchedQueries[queryId]=valueType;matchedQueryIds|=filterQueryId(queryId);}else{references[queryId]=valueType;}});}return{matchedQueries:matchedQueries,references:references,matchedQueryIds:matchedQueryIds};}/**
 * @param {?} view
 * @param {?} renderHost
 * @param {?} def
 * @return {?}
 */function getParentRenderElement(view,renderHost,def){var/** @type {?} */renderParent=def.renderParent;if(renderParent){if(renderParent.type!==NodeType.Element||(renderParent.flags&NodeFlags.HasComponent)===0||renderParent.element.componentRendererType&&renderParent.element.componentRendererType.encapsulation===ViewEncapsulation.Native){// only children of non components, or children of components with native encapsulation should
// be attached.
return asElementData(view,def.renderParent.index).renderElement;}}else{return renderHost;}}var/** @type {?} */VIEW_DEFINITION_CACHE=new WeakMap();/**
 * @param {?} factory
 * @return {?}
 */function resolveViewDefinition(factory){var/** @type {?} */value=VIEW_DEFINITION_CACHE.get(factory);if(!value){value=factory();VIEW_DEFINITION_CACHE.set(factory,value);}return value;}/**
 * @param {?} start
 * @param {?} end
 * @return {?}
 */function sliceErrorStack(start,end){var/** @type {?} */err=void 0;try{throw new Error();}catch(e){err=e;}var/** @type {?} */stack=err.stack||'';var/** @type {?} */lines=stack.split('\n');if(lines[0].startsWith('Error')){// Chrome always adds the message to the stack as well...
start++;end++;}return lines.slice(start,end).join('\n');}/**
 * @param {?} view
 * @return {?}
 */function rootRenderNodes(view){var/** @type {?} */renderNodes=[];visitRootRenderNodes(view,RenderNodeAction.Collect,undefined,undefined,renderNodes);return renderNodes;}var RenderNodeAction={};RenderNodeAction.Collect=0;RenderNodeAction.AppendChild=1;RenderNodeAction.InsertBefore=2;RenderNodeAction.RemoveChild=3;RenderNodeAction[RenderNodeAction.Collect]="Collect";RenderNodeAction[RenderNodeAction.AppendChild]="AppendChild";RenderNodeAction[RenderNodeAction.InsertBefore]="InsertBefore";RenderNodeAction[RenderNodeAction.RemoveChild]="RemoveChild";/**
 * @param {?} view
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitRootRenderNodes(view,action,parentNode,nextSibling,target){// We need to re-compute the parent node in case the nodes have been moved around manually
if(action===RenderNodeAction.RemoveChild){parentNode=view.renderer.parentNode(renderNode(view,view.def.lastRenderRootNode));}visitSiblingRenderNodes(view,action,0,view.def.nodes.length-1,parentNode,nextSibling,target);}/**
 * @param {?} view
 * @param {?} action
 * @param {?} startIndex
 * @param {?} endIndex
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitSiblingRenderNodes(view,action,startIndex,endIndex,parentNode,nextSibling,target){for(var/** @type {?} */i=startIndex;i<=endIndex;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.type===NodeType.Element||nodeDef.type===NodeType.Text||nodeDef.type===NodeType.NgContent){visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}}/**
 * @param {?} view
 * @param {?} ngContentIndex
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitProjectedRenderNodes(view,ngContentIndex,action,parentNode,nextSibling,target){var/** @type {?} */compView=view;while(compView&&!isComponentView(compView)){compView=compView.parent;}var/** @type {?} */hostView=compView.parent;var/** @type {?} */hostElDef=viewParentEl(compView);var/** @type {?} */startIndex=hostElDef.index+1;var/** @type {?} */endIndex=hostElDef.index+hostElDef.childCount;for(var/** @type {?} */i=startIndex;i<=endIndex;i++){var/** @type {?} */nodeDef=hostView.def.nodes[i];if(nodeDef.ngContentIndex===ngContentIndex){visitRenderNode(hostView,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}if(!hostView.parent){// a root view
var/** @type {?} */projectedNodes=view.root.projectableNodes[ngContentIndex];if(projectedNodes){for(var/** @type {?} */_i=0;_i<projectedNodes.length;_i++){execRenderNodeAction(view,projectedNodes[_i],action,parentNode,nextSibling,target);}}}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target){if(nodeDef.type===NodeType.NgContent){visitProjectedRenderNodes(view,nodeDef.ngContent.index,action,parentNode,nextSibling,target);}else{var/** @type {?} */rn=renderNode(view,nodeDef);execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);if(nodeDef.flags&NodeFlags.HasEmbeddedViews){var/** @type {?} */embeddedViews=asElementData(view,nodeDef.index).embeddedViews;if(embeddedViews){for(var/** @type {?} */k=0;k<embeddedViews.length;k++){visitRootRenderNodes(embeddedViews[k],action,parentNode,nextSibling,target);}}}if(nodeDef.type===NodeType.Element&&!nodeDef.element.name){visitSiblingRenderNodes(view,action,nodeDef.index+1,nodeDef.index+nodeDef.childCount,parentNode,nextSibling,target);}}}/**
 * @param {?} view
 * @param {?} renderNode
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function execRenderNodeAction(view,renderNode,action,parentNode,nextSibling,target){var/** @type {?} */renderer=view.renderer;switch(action){case RenderNodeAction.AppendChild:renderer.appendChild(parentNode,renderNode);break;case RenderNodeAction.InsertBefore:renderer.insertBefore(parentNode,renderNode,nextSibling);break;case RenderNodeAction.RemoveChild:renderer.removeChild(parentNode,renderNode);break;case RenderNodeAction.Collect:target.push(renderNode);break;}}var/** @type {?} */NS_PREFIX_RE=/^:([^:]+):(.+)$/;/**
 * @param {?} name
 * @return {?}
 */function splitNamespace(name){if(name[0]===':'){var/** @type {?} */match=name.match(NS_PREFIX_RE);return[match[1],match[2]];}return['',name];}var/** @type {?} */NOOP=function NOOP(){};/**
 * @param {?} flags
 * @param {?} matchedQueriesDsl
 * @param {?} ngContentIndex
 * @param {?} childCount
 * @param {?=} handleEvent
 * @param {?=} templateFactory
 * @return {?}
 */function anchorDef(flags,matchedQueriesDsl,ngContentIndex,childCount,handleEvent,templateFactory){if(!handleEvent){handleEvent=NOOP;}var _splitMatchedQueriesD=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_splitMatchedQueriesD.matchedQueries,references=_splitMatchedQueriesD.references,matchedQueryIds=_splitMatchedQueriesD.matchedQueryIds;// skip the call to sliceErrorStack itself + the call to this function.
var/** @type {?} */source=isDevMode()?sliceErrorStack(2,3):'';var/** @type {?} */template=templateFactory?resolveViewDefinition(templateFactory):null;return{type:NodeType.Element,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:[],outputs:[],element:{ns:undefined,name:undefined,attrs:undefined,template:template,source:source,componentProvider:undefined,componentView:undefined,componentRendererType:undefined,publicProviders:undefined,allProviders:undefined,handleEvent:handleEvent},provider:undefined,text:undefined,pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} flags
 * @param {?} matchedQueriesDsl
 * @param {?} ngContentIndex
 * @param {?} childCount
 * @param {?} namespaceAndName
 * @param {?=} fixedAttrs
 * @param {?=} bindings
 * @param {?=} outputs
 * @param {?=} handleEvent
 * @param {?=} componentView
 * @param {?=} componentRendererType
 * @return {?}
 */function elementDef(flags,matchedQueriesDsl,ngContentIndex,childCount,namespaceAndName){var fixedAttrs=arguments.length>5&&arguments[5]!==undefined?arguments[5]:[];var bindings=arguments[6];var outputs=arguments[7];var handleEvent=arguments[8];var componentView=arguments[9];var componentRendererType=arguments[10];if(!handleEvent){handleEvent=NOOP;}// skip the call to sliceErrorStack itself + the call to this function.
var/** @type {?} */source=isDevMode()?sliceErrorStack(2,3):'';var _splitMatchedQueriesD2=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_splitMatchedQueriesD2.matchedQueries,references=_splitMatchedQueriesD2.references,matchedQueryIds=_splitMatchedQueriesD2.matchedQueryIds;var/** @type {?} */ns=void 0;var/** @type {?} */name=void 0;if(namespaceAndName){var _splitNamespace=splitNamespace(namespaceAndName);var _splitNamespace2=_slicedToArray(_splitNamespace,2);ns=_splitNamespace2[0];name=_splitNamespace2[1];}bindings=bindings||[];var/** @type {?} */bindingDefs=new Array(bindings.length);for(var/** @type {?} */i=0;i<bindings.length;i++){var/** @type {?} */entry=bindings[i];var/** @type {?} */bindingDef=void 0;var/** @type {?} */bindingType=entry[0];var _splitNamespace3=splitNamespace(entry[1]),_splitNamespace4=_slicedToArray(_splitNamespace3,2),_ns=_splitNamespace4[0],_name=_splitNamespace4[1];var/** @type {?} */securityContext=void 0;var/** @type {?} */suffix=void 0;switch(bindingType){case BindingType.ElementStyle:suffix=entry[2];break;case BindingType.ElementAttribute:case BindingType.ElementProperty:case BindingType.ComponentHostProperty:securityContext=entry[2];break;}bindingDefs[i]={type:bindingType,ns:_ns,name:_name,nonMinifiedName:_name,securityContext:securityContext,suffix:suffix};}outputs=outputs||[];var/** @type {?} */outputDefs=new Array(outputs.length);for(var/** @type {?} */_i2=0;_i2<outputs.length;_i2++){var _outputs$_i=_slicedToArray(outputs[_i2],2),target=_outputs$_i[0],eventName=_outputs$_i[1];outputDefs[_i2]={type:OutputType.ElementOutput,target:/** @type {?} */target,eventName:eventName,propName:undefined};}fixedAttrs=fixedAttrs||[];var/** @type {?} */attrs=fixedAttrs.map(function(_ref5){var _ref6=_slicedToArray(_ref5,2),namespaceAndName=_ref6[0],value=_ref6[1];var _splitNamespace5=splitNamespace(namespaceAndName),_splitNamespace6=_slicedToArray(_splitNamespace5,2),ns=_splitNamespace6[0],name=_splitNamespace6[1];return[ns,name,value];});// This is needed as the jit compiler always uses an empty hash as default RendererTypeV2,
// which is not filled for host views.
if(componentRendererType&&componentRendererType.encapsulation==null){componentRendererType=null;}if(componentView){flags|=NodeFlags.HasComponent;}return{type:NodeType.Element,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:bindingDefs,outputs:outputDefs,element:{ns:ns,name:name,attrs:attrs,source:source,template:undefined,// will bet set by the view definition
componentProvider:undefined,componentView:componentView,componentRendererType:componentRendererType,publicProviders:undefined,allProviders:undefined,handleEvent:handleEvent},provider:undefined,text:undefined,pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} renderHost
 * @param {?} def
 * @return {?}
 */function createElement(view,renderHost,def){var/** @type {?} */elDef=def.element;var/** @type {?} */rootSelectorOrNode=view.root.selectorOrNode;var/** @type {?} */renderer=view.renderer;var/** @type {?} */el=void 0;if(view.parent||!rootSelectorOrNode){if(elDef.name){el=renderer.createElement(elDef.name,elDef.ns);}else{el=renderer.createComment('');}var/** @type {?} */parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,el);}}else{el=renderer.selectRootElement(rootSelectorOrNode);}if(elDef.attrs){for(var/** @type {?} */i=0;i<elDef.attrs.length;i++){var _elDef$attrs$i=_slicedToArray(elDef.attrs[i],3),ns=_elDef$attrs$i[0],name=_elDef$attrs$i[1],value=_elDef$attrs$i[2];renderer.setAttribute(el,name,value,ns);}}return el;}/**
 * @param {?} view
 * @param {?} compView
 * @param {?} def
 * @param {?} el
 * @return {?}
 */function listenToElementOutputs(view,compView,def,el){for(var/** @type {?} */i=0;i<def.outputs.length;i++){var/** @type {?} */output=def.outputs[i];var/** @type {?} */handleEventClosure=renderEventHandlerClosure(view,def.index,elementEventFullName(output.target,output.eventName));var/** @type {?} */listenTarget=output.target;var/** @type {?} */listenerView=view;if(output.target==='component'){listenTarget=null;listenerView=compView;}var/** @type {?} */disposable=listenerView.renderer.listen(listenTarget||el,output.eventName,handleEventClosure);view.disposables[def.outputIndex+i]=disposable;}}/**
 * @param {?} view
 * @param {?} index
 * @param {?} eventName
 * @return {?}
 */function renderEventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdateElementInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */bindLen=def.bindings.length;var/** @type {?} */changed=false;if(bindLen>0&&checkAndUpdateElementValue(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateElementValue(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateElementValue(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateElementValue(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateElementValue(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateElementValue(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateElementValue(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateElementValue(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateElementValue(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateElementValue(view,def,9,v9))changed=true;return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdateElementDynamic(view,def,values){var/** @type {?} */changed=false;for(var/** @type {?} */i=0;i<values.length;i++){if(checkAndUpdateElementValue(view,def,i,values[i]))changed=true;}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkAndUpdateElementValue(view,def,bindingIdx,value){if(!checkAndUpdateBinding(view,def,bindingIdx,value)){return false;}var/** @type {?} */binding=def.bindings[bindingIdx];var/** @type {?} */elData=asElementData(view,def.index);var/** @type {?} */renderNode=elData.renderElement;var/** @type {?} */name=binding.name;switch(binding.type){case BindingType.ElementAttribute:setElementAttribute(view,binding,renderNode,binding.ns,name,value);break;case BindingType.ElementClass:setElementClass(view,renderNode,name,value);break;case BindingType.ElementStyle:setElementStyle(view,binding,renderNode,name,value);break;case BindingType.ElementProperty:setElementProperty(view,binding,renderNode,name,value);break;case BindingType.ComponentHostProperty:setElementProperty(elData.componentView,binding,renderNode,name,value);break;}return true;}/**
 * @param {?} view
 * @param {?} binding
 * @param {?} renderNode
 * @param {?} ns
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementAttribute(view,binding,renderNode,ns,name,value){var/** @type {?} */securityContext=binding.securityContext;var/** @type {?} */renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;renderValue=renderValue!=null?renderValue.toString():null;var/** @type {?} */renderer=view.renderer;if(value!=null){renderer.setAttribute(renderNode,name,renderValue,ns);}else{renderer.removeAttribute(renderNode,name,ns);}}/**
 * @param {?} view
 * @param {?} renderNode
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementClass(view,renderNode,name,value){var/** @type {?} */renderer=view.renderer;if(value){renderer.addClass(renderNode,name);}else{renderer.removeClass(renderNode,name);}}/**
 * @param {?} view
 * @param {?} binding
 * @param {?} renderNode
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementStyle(view,binding,renderNode,name,value){var/** @type {?} */renderValue=view.root.sanitizer.sanitize(SecurityContext.STYLE,value);if(renderValue!=null){renderValue=renderValue.toString();var/** @type {?} */unit=binding.suffix;if(unit!=null){renderValue=renderValue+unit;}}else{renderValue=null;}var/** @type {?} */renderer=view.renderer;if(renderValue!=null){renderer.setStyle(renderNode,name,renderValue,false,false);}else{renderer.removeStyle(renderNode,name,false);}}/**
 * @param {?} view
 * @param {?} binding
 * @param {?} renderNode
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementProperty(view,binding,renderNode,name,value){var/** @type {?} */securityContext=binding.securityContext;var/** @type {?} */renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;view.renderer.setProperty(renderNode,name,renderValue);}/**
 * @param {?} ngContentIndex
 * @param {?} index
 * @return {?}
 */function ngContentDef(ngContentIndex,index){return{type:NodeType.NgContent,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:0,childFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:[],outputs:[],element:undefined,provider:undefined,text:undefined,pureExpression:undefined,query:undefined,ngContent:{index:index}};}/**
 * @param {?} view
 * @param {?} renderHost
 * @param {?} def
 * @return {?}
 */function appendNgContent(view,renderHost,def){var/** @type {?} */parentEl=getParentRenderElement(view,renderHost,def);if(!parentEl){// Nothing to do if there is no parent element.
return;}var/** @type {?} */ngContentIndex=def.ngContent.index;visitProjectedRenderNodes(view,ngContentIndex,RenderNodeAction.AppendChild,parentEl,undefined,undefined);}/**
 * \@experimental Animation support is experimental.
 * @abstract
 */var AnimationPlayer=function(){function AnimationPlayer(){_classCallCheck(this,AnimationPlayer);}_createClass(AnimationPlayer,[{key:'onDone',/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */value:function onDone(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){}/**
     * @abstract
     * @return {?}
     */},{key:'init',value:function init(){}/**
     * @abstract
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){}/**
     * @abstract
     * @return {?}
     */},{key:'play',value:function play(){}/**
     * @abstract
     * @return {?}
     */},{key:'pause',value:function pause(){}/**
     * @abstract
     * @return {?}
     */},{key:'restart',value:function restart(){}/**
     * @abstract
     * @return {?}
     */},{key:'finish',value:function finish(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * @abstract
     * @return {?}
     */},{key:'reset',value:function reset(){}/**
     * @abstract
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){}/**
     * @abstract
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){}/**
     * @return {?}
     */},{key:'parentPlayer',get:function get(){throw new Error('NOT IMPLEMENTED: Base Class');}/**
     * @param {?} player
     * @return {?}
     */,set:function set(player){throw new Error('NOT IMPLEMENTED: Base Class');}}]);return AnimationPlayer;}();var NoOpAnimationPlayer=function(){function NoOpAnimationPlayer(){var _this27=this;_classCallCheck(this,NoOpAnimationPlayer);this._onDoneFns=[];this._onStartFns=[];this._onDestroyFns=[];this._started=false;this._destroyed=false;this._finished=false;this.parentPlayer=null;scheduleMicroTask(function(){return _this27._onFinish();});}/**
     * @return {?}
     */_createClass(NoOpAnimationPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'init',value:function init(){}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];}this._started=true;}/**
     * @return {?}
     */},{key:'pause',value:function pause(){}/**
     * @return {?}
     */},{key:'restart',value:function restart(){}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._destroyed=true;this.finish();this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){return 0;}}]);return NoOpAnimationPlayer;}();/**
 * @param {?} parentView
 * @param {?} elementData
 * @param {?} viewIndex
 * @param {?} view
 * @return {?}
 */function attachEmbeddedView(parentView,elementData,viewIndex,view){var/** @type {?} */embeddedViews=elementData.embeddedViews;if(viewIndex==null){viewIndex=embeddedViews.length;}view.viewContainerParent=parentView;addToArray$1(embeddedViews,viewIndex,view);var/** @type {?} */dvcElementData=declaredViewContainer(view);if(dvcElementData&&dvcElementData!==elementData){var/** @type {?} */projectedViews=dvcElementData.projectedViews;if(!projectedViews){projectedViews=dvcElementData.projectedViews=[];}projectedViews.push(view);}Services.dirtyParentQueries(view);var/** @type {?} */prevView=viewIndex>0?embeddedViews[viewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);}/**
 * @param {?} elementData
 * @param {?} viewIndex
 * @return {?}
 */function detachEmbeddedView(elementData,viewIndex){var/** @type {?} */embeddedViews=elementData.embeddedViews;if(viewIndex==null||viewIndex>=embeddedViews.length){viewIndex=embeddedViews.length-1;}if(viewIndex<0){return null;}var/** @type {?} */view=embeddedViews[viewIndex];view.viewContainerParent=undefined;removeFromArray(embeddedViews,viewIndex);var/** @type {?} */dvcElementData=declaredViewContainer(view);if(dvcElementData&&dvcElementData!==elementData){var/** @type {?} */projectedViews=dvcElementData.projectedViews;removeFromArray(projectedViews,projectedViews.indexOf(view));}Services.dirtyParentQueries(view);renderDetachView(view);return view;}/**
 * @param {?} elementData
 * @param {?} oldViewIndex
 * @param {?} newViewIndex
 * @return {?}
 */function moveEmbeddedView(elementData,oldViewIndex,newViewIndex){var/** @type {?} */embeddedViews=elementData.embeddedViews;var/** @type {?} */view=embeddedViews[oldViewIndex];removeFromArray(embeddedViews,oldViewIndex);if(newViewIndex==null){newViewIndex=embeddedViews.length;}addToArray$1(embeddedViews,newViewIndex,view);// Note: Don't need to change projectedViews as the order in there
// as always invalid...
Services.dirtyParentQueries(view);renderDetachView(view);var/** @type {?} */prevView=newViewIndex>0?embeddedViews[newViewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);return view;}/**
 * @param {?} elementData
 * @param {?} prevView
 * @param {?} view
 * @return {?}
 */function renderAttachEmbeddedView(elementData,prevView,view){var/** @type {?} */prevRenderNode=prevView?renderNode(prevView,prevView.def.lastRenderRootNode):elementData.renderElement;var/** @type {?} */parentNode=view.renderer.parentNode(prevRenderNode);var/** @type {?} */nextSibling=view.renderer.nextSibling(prevRenderNode);// Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!
// However, browsers automatically do `appendChild` when there is no `nextSibling`.
visitRootRenderNodes(view,RenderNodeAction.InsertBefore,parentNode,nextSibling,undefined);}/**
 * @param {?} view
 * @return {?}
 */function renderDetachView(view){visitRootRenderNodes(view,RenderNodeAction.RemoveChild,null,null,undefined);}/**
 * @param {?} arr
 * @param {?} index
 * @param {?} value
 * @return {?}
 */function addToArray$1(arr,index,value){// perf: array.push is faster than array.splice!
if(index>=arr.length){arr.push(value);}else{arr.splice(index,0,value);}}/**
 * @param {?} arr
 * @param {?} index
 * @return {?}
 */function removeFromArray(arr,index){// perf: array.pop is faster than array.splice!
if(index>=arr.length-1){arr.pop();}else{arr.splice(index,1);}}var/** @type {?} */EMPTY_CONTEXT=new Object();/**
 * @param {?} selector
 * @param {?} componentType
 * @param {?} viewDefFactory
 * @return {?}
 */function createComponentFactory(selector,componentType,viewDefFactory){return new ComponentFactory_(selector,componentType,viewDefFactory);}var ComponentFactory_=function(_ComponentFactory){_inherits(ComponentFactory_,_ComponentFactory);/**
     * @param {?} selector
     * @param {?} componentType
     * @param {?} viewDefFactory
     */function ComponentFactory_(selector,componentType,viewDefFactory){_classCallCheck(this,ComponentFactory_);return _possibleConstructorReturn(this,(ComponentFactory_.__proto__||Object.getPrototypeOf(ComponentFactory_)).call(this,selector,viewDefFactory,componentType));}/**
     * Creates a new component.
     * @param {?} injector
     * @param {?=} projectableNodes
     * @param {?=} rootSelectorOrNode
     * @return {?}
     */_createClass(ComponentFactory_,[{key:'create',value:function create(injector){var projectableNodes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var rootSelectorOrNode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */viewDef=resolveViewDefinition(this._viewClass);var/** @type {?} */componentNodeIndex=viewDef.nodes[0].element.componentProvider.index;var/** @type {?} */view=Services.createRootView(injector,projectableNodes||[],rootSelectorOrNode,viewDef,EMPTY_CONTEXT);var/** @type {?} */component=asProviderData(view,componentNodeIndex).instance;view.renderer.setAttribute(asElementData(view,0).renderElement,'ng-version',VERSION.full);return new ComponentRef_$1(view,new ViewRef_$1(view),component);}}]);return ComponentFactory_;}(ComponentFactory);var ComponentRef_$1=function(_ComponentRef2){_inherits(ComponentRef_$1,_ComponentRef2);/**
     * @param {?} _view
     * @param {?} _viewRef
     * @param {?} _component
     */function ComponentRef_$1(_view,_viewRef,_component){_classCallCheck(this,ComponentRef_$1);var _this29=_possibleConstructorReturn(this,(ComponentRef_$1.__proto__||Object.getPrototypeOf(ComponentRef_$1)).call(this));_this29._view=_view;_this29._viewRef=_viewRef;_this29._component=_component;_this29._elDef=_this29._view.def.nodes[0];return _this29;}/**
     * @return {?}
     */_createClass(ComponentRef_$1,[{key:'destroy',/**
     * @return {?}
     */value:function destroy(){this._viewRef.destroy();}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){this._viewRef.onDestroy(callback);}},{key:'location',get:function get(){return new ElementRef(asElementData(this._view,this._elDef.index).renderElement);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return new Injector_(this._view,this._elDef);}/**
     * @return {?}
     */},{key:'instance',get:function get(){return this._component;}},{key:'hostView',/**
     * @return {?}
     */get:function get(){return this._viewRef;}},{key:'changeDetectorRef',/**
     * @return {?}
     */get:function get(){return this._viewRef;}},{key:'componentType',/**
     * @return {?}
     */get:function get(){return this._component.constructor;}}]);return ComponentRef_$1;}(ComponentRef);/**
 * @param {?} view
 * @param {?} elDef
 * @return {?}
 */function createViewContainerRef(view,elDef){return new ViewContainerRef_$1(view,elDef);}var ViewContainerRef_$1=function(){/**
     * @param {?} _view
     * @param {?} _elDef
     */function ViewContainerRef_$1(_view,_elDef){_classCallCheck(this,ViewContainerRef_$1);this._view=_view;this._elDef=_elDef;this._data=asElementData(_view,_elDef.index);}/**
     * @return {?}
     */_createClass(ViewContainerRef_$1,[{key:'clear',/**
     * @return {?}
     */value:function clear(){var/** @type {?} */len=this._data.embeddedViews.length;for(var/** @type {?} */i=len-1;i>=0;i--){var/** @type {?} */view=detachEmbeddedView(this._data,i);Services.destroyView(view);}}/**
     * @param {?} index
     * @return {?}
     */},{key:'get',value:function get(index){var/** @type {?} */view=this._data.embeddedViews[index];if(view){var/** @type {?} */ref=new ViewRef_$1(view);ref.attachToViewContainerRef(this);return ref;}return null;}/**
     * @return {?}
     */},{key:'createEmbeddedView',/**
     * @param {?} templateRef
     * @param {?=} context
     * @param {?=} index
     * @return {?}
     */value:function createEmbeddedView(templateRef,context,index){var/** @type {?} */viewRef=templateRef.createEmbeddedView(context||{});this.insert(viewRef,index);return viewRef;}/**
     * @param {?} componentFactory
     * @param {?=} index
     * @param {?=} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createComponent',value:function createComponent(componentFactory,index,injector,projectableNodes){var/** @type {?} */contextInjector=injector||this.parentInjector;var/** @type {?} */componentRef=componentFactory.create(contextInjector,projectableNodes);this.insert(componentRef.hostView,index);return componentRef;}/**
     * @param {?} viewRef
     * @param {?=} index
     * @return {?}
     */},{key:'insert',value:function insert(viewRef,index){var/** @type {?} */viewRef_=viewRef;var/** @type {?} */viewData=viewRef_._view;attachEmbeddedView(this._view,this._data,index,viewData);viewRef_.attachToViewContainerRef(this);return viewRef;}/**
     * @param {?} viewRef
     * @param {?} currentIndex
     * @return {?}
     */},{key:'move',value:function move(viewRef,currentIndex){var/** @type {?} */previousIndex=this._data.embeddedViews.indexOf(viewRef._view);moveEmbeddedView(this._data,previousIndex,currentIndex);return viewRef;}/**
     * @param {?} viewRef
     * @return {?}
     */},{key:'indexOf',value:function indexOf(viewRef){return this._data.embeddedViews.indexOf(viewRef._view);}/**
     * @param {?=} index
     * @return {?}
     */},{key:'remove',value:function remove(index){var/** @type {?} */viewData=detachEmbeddedView(this._data,index);if(viewData){Services.destroyView(viewData);}}/**
     * @param {?=} index
     * @return {?}
     */},{key:'detach',value:function detach(index){var/** @type {?} */view=detachEmbeddedView(this._data,index);return view?new ViewRef_$1(view):null;}},{key:'element',get:function get(){return new ElementRef(this._data.renderElement);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return new Injector_(this._view,this._elDef);}/**
     * @return {?}
     */},{key:'parentInjector',get:function get(){var/** @type {?} */view=this._view;var/** @type {?} */elDef=this._elDef.parent;while(!elDef&&view){elDef=viewParentEl(view);view=view.parent;}return view?new Injector_(view,elDef):this._view.root.injector;}},{key:'length',get:function get(){return this._data.embeddedViews.length;}}]);return ViewContainerRef_$1;}();/**
 * @param {?} view
 * @return {?}
 */function createChangeDetectorRef(view){return new ViewRef_$1(view);}var ViewRef_$1=function(){/**
     * @param {?} _view
     */function ViewRef_$1(_view){_classCallCheck(this,ViewRef_$1);this._view=_view;this._viewContainerRef=null;this._appRef=null;}/**
     * @return {?}
     */_createClass(ViewRef_$1,[{key:'markForCheck',/**
     * @return {?}
     */value:function markForCheck(){markParentViewsForCheck(this._view);}/**
     * @return {?}
     */},{key:'detach',value:function detach(){this._view.state&=~ViewState.ChecksEnabled;}/**
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(){Services.checkAndUpdateView(this._view);}/**
     * @return {?}
     */},{key:'checkNoChanges',value:function checkNoChanges(){Services.checkNoChangesView(this._view);}/**
     * @return {?}
     */},{key:'reattach',value:function reattach(){this._view.state|=ViewState.ChecksEnabled;}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){if(!this._view.disposables){this._view.disposables=[];}this._view.disposables.push(/** @type {?} */callback);}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(this._appRef){this._appRef.detachView(this);}else if(this._viewContainerRef){this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));}Services.destroyView(this._view);}/**
     * @return {?}
     */},{key:'detachFromAppRef',value:function detachFromAppRef(){this._appRef=null;renderDetachView(this._view);Services.dirtyParentQueries(this._view);}/**
     * @param {?} appRef
     * @return {?}
     */},{key:'attachToAppRef',value:function attachToAppRef(appRef){if(this._viewContainerRef){throw new Error('This view is already attached to a ViewContainer!');}this._appRef=appRef;}/**
     * @param {?} vcRef
     * @return {?}
     */},{key:'attachToViewContainerRef',value:function attachToViewContainerRef(vcRef){if(this._appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._viewContainerRef=vcRef;}},{key:'rootNodes',get:function get(){return rootRenderNodes(this._view);}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._view.context;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return(this._view.state&ViewState.Destroyed)!==0;}}]);return ViewRef_$1;}();/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createTemplateRef(view,def){return new TemplateRef_$1(view,def);}var TemplateRef_$1=function(_TemplateRef2){_inherits(TemplateRef_$1,_TemplateRef2);/**
     * @param {?} _parentView
     * @param {?} _def
     */function TemplateRef_$1(_parentView,_def){_classCallCheck(this,TemplateRef_$1);var _this30=_possibleConstructorReturn(this,(TemplateRef_$1.__proto__||Object.getPrototypeOf(TemplateRef_$1)).call(this));_this30._parentView=_parentView;_this30._def=_def;return _this30;}/**
     * @param {?} context
     * @return {?}
     */_createClass(TemplateRef_$1,[{key:'createEmbeddedView',value:function createEmbeddedView(context){return new ViewRef_$1(Services.createEmbeddedView(this._parentView,this._def,context));}/**
     * @return {?}
     */},{key:'elementRef',get:function get(){return new ElementRef(asElementData(this._parentView,this._def.index).renderElement);}}]);return TemplateRef_$1;}(TemplateRef);/**
 * @param {?} view
 * @param {?} elDef
 * @return {?}
 */function createInjector(view,elDef){return new Injector_(view,elDef);}var Injector_=function(){/**
     * @param {?} view
     * @param {?} elDef
     */function Injector_(view,elDef){_classCallCheck(this,Injector_);this.view=view;this.elDef=elDef;}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */_createClass(Injector_,[{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Injector.THROW_IF_NOT_FOUND;var/** @type {?} */allowPrivateServices=(this.elDef.flags&NodeFlags.HasComponent)!==0;return Services.resolveDep(this.view,this.elDef,allowPrivateServices,{flags:DepFlags.None,token:token,tokenKey:tokenKey(token)},notFoundValue);}}]);return Injector_;}();/**
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function nodeValue(view,index){var/** @type {?} */def=view.def.nodes[index];switch(def.type){case NodeType.Element:if(def.element.template){return createTemplateRef(view,def);}else{return asElementData(view,def.index).renderElement;}case NodeType.Text:return asTextData(view,def.index).renderText;case NodeType.Directive:case NodeType.Pipe:case NodeType.Provider:return asProviderData(view,def.index).instance;}return undefined;}/**
 * @param {?} view
 * @return {?}
 */function createRendererV1(view){return new RendererAdapter(view.renderer);}var RendererAdapter=function(){/**
     * @param {?} delegate
     */function RendererAdapter(delegate){_classCallCheck(this,RendererAdapter);this.delegate=delegate;}/**
     * @param {?} selectorOrNode
     * @return {?}
     */_createClass(RendererAdapter,[{key:'selectRootElement',value:function selectRootElement(selectorOrNode){return this.delegate.selectRootElement(selectorOrNode);}/**
     * @param {?} parent
     * @param {?} namespaceAndName
     * @return {?}
     */},{key:'createElement',value:function createElement(parent,namespaceAndName){var _splitNamespace7=splitNamespace(namespaceAndName),_splitNamespace8=_slicedToArray(_splitNamespace7,2),ns=_splitNamespace8[0],name=_splitNamespace8[1];var/** @type {?} */el=this.delegate.createElement(name,ns);if(parent){this.delegate.appendChild(parent,el);}return el;}/**
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){return hostElement;}/**
     * @param {?} parentElement
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement){var/** @type {?} */comment=this.delegate.createComment('');if(parentElement){this.delegate.appendChild(parentElement,comment);}return comment;}/**
     * @param {?} parentElement
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value){var/** @type {?} */node=this.delegate.createText(value);if(parentElement){this.delegate.appendChild(parentElement,node);}return node;}/**
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){for(var/** @type {?} */i=0;i<nodes.length;i++){this.delegate.appendChild(parentElement,nodes[i]);}}/**
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){var/** @type {?} */parentElement=this.delegate.parentNode(node);var/** @type {?} */nextSibling=this.delegate.nextSibling(node);for(var/** @type {?} */i=0;i<viewRootNodes.length;i++){this.delegate.insertBefore(parentElement,viewRootNodes[i],nextSibling);}}/**
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){for(var/** @type {?} */i=0;i<viewRootNodes.length;i++){var/** @type {?} */node=viewRootNodes[i];var/** @type {?} */parentElement=this.delegate.parentNode(node);this.delegate.removeChild(parentElement,node);}}/**
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){for(var/** @type {?} */i=0;i<viewAllNodes.length;i++){this.delegate.destroyNode(viewAllNodes[i]);}}/**
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){return this.delegate.listen(renderElement,name,/** @type {?} */callback);}/**
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){return this.delegate.listen(target,name,/** @type {?} */callback);}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){this.delegate.setProperty(renderElement,propertyName,propertyValue);}/**
     * @param {?} renderElement
     * @param {?} namespaceAndName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,namespaceAndName,attributeValue){var _splitNamespace9=splitNamespace(namespaceAndName),_splitNamespace10=_slicedToArray(_splitNamespace9,2),ns=_splitNamespace10[0],name=_splitNamespace10[1];if(attributeValue!=null){this.delegate.setAttribute(renderElement,name,attributeValue,ns);}else{this.delegate.removeAttribute(renderElement,name,ns);}}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){}/**
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){if(isAdd){this.delegate.addClass(renderElement,className);}else{this.delegate.removeClass(renderElement,className);}}/**
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){if(styleValue!=null){this.delegate.setStyle(renderElement,styleName,styleValue,false,false);}else{this.delegate.removeStyle(renderElement,styleName,false);}}/**
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){renderElement[methodName].apply(renderElement,args);}/**
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){this.delegate.setValue(renderNode,text);}/**
     * @return {?}
     */},{key:'animate',value:function animate(){return new NoOpAnimationPlayer();}}]);return RendererAdapter;}();var/** @type {?} */RendererV1TokenKey=tokenKey(RendererV1);var/** @type {?} */RendererV2TokenKey=tokenKey(RendererV2);var/** @type {?} */ElementRefTokenKey=tokenKey(ElementRef);var/** @type {?} */ViewContainerRefTokenKey=tokenKey(ViewContainerRef);var/** @type {?} */TemplateRefTokenKey=tokenKey(TemplateRef);var/** @type {?} */ChangeDetectorRefTokenKey=tokenKey(ChangeDetectorRef);var/** @type {?} */InjectorRefTokenKey=tokenKey(Injector);var/** @type {?} */NOT_CREATED=new Object();/**
 * @param {?} flags
 * @param {?} matchedQueries
 * @param {?} childCount
 * @param {?} ctor
 * @param {?} deps
 * @param {?=} props
 * @param {?=} outputs
 * @return {?}
 */function directiveDef(flags,matchedQueries,childCount,ctor,deps,props,outputs){var/** @type {?} */bindings=[];if(props){for(var/** @type {?} */prop in props){var _props$prop=_slicedToArray(props[prop],2),bindingIndex=_props$prop[0],nonMinifiedName=_props$prop[1];bindings[bindingIndex]={type:BindingType.DirectiveProperty,name:prop,nonMinifiedName:nonMinifiedName,ns:undefined,securityContext:undefined,suffix:undefined};}}var/** @type {?} */outputDefs=[];if(outputs){for(var/** @type {?} */propName in outputs){outputDefs.push({type:OutputType.DirectiveOutput,propName:propName,target:null,eventName:outputs[propName]});}}return _def(NodeType.Directive,flags,matchedQueries,childCount,ProviderType.Class,ctor,ctor,deps,bindings,outputDefs);}/**
 * @param {?} flags
 * @param {?} ctor
 * @param {?} deps
 * @return {?}
 */function pipeDef(flags,ctor,deps){return _def(NodeType.Pipe,flags,null,0,ProviderType.Class,ctor,ctor,deps);}/**
 * @param {?} flags
 * @param {?} matchedQueries
 * @param {?} type
 * @param {?} token
 * @param {?} value
 * @param {?} deps
 * @return {?}
 */function providerDef(flags,matchedQueries,type,token,value,deps){return _def(NodeType.Provider,flags,matchedQueries,0,type,token,value,deps);}/**
 * @param {?} type
 * @param {?} flags
 * @param {?} matchedQueriesDsl
 * @param {?} childCount
 * @param {?} providerType
 * @param {?} token
 * @param {?} value
 * @param {?} deps
 * @param {?=} bindings
 * @param {?=} outputs
 * @return {?}
 */function _def(type,flags,matchedQueriesDsl,childCount,providerType,token,value,deps,bindings,outputs){var _splitMatchedQueriesD3=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_splitMatchedQueriesD3.matchedQueries,references=_splitMatchedQueriesD3.references,matchedQueryIds=_splitMatchedQueriesD3.matchedQueryIds;if(!outputs){outputs=[];}if(!bindings){bindings=[];}var/** @type {?} */depDefs=deps.map(function(value){var/** @type {?} */token=void 0;var/** @type {?} */flags=void 0;if(Array.isArray(value)){var _value=_slicedToArray(value,2);flags=_value[0];token=_value[1];}else{flags=DepFlags.None;token=value;}return{flags:flags,token:token,tokenKey:tokenKey(token)};});return{type:type,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:undefined,childCount:childCount,bindings:bindings,outputs:outputs,element:undefined,provider:{type:providerType,token:token,tokenKey:tokenKey(token),value:value,deps:depDefs},text:undefined,pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createProviderInstance(view,def){return def.flags&NodeFlags.LazyProvider?NOT_CREATED:_createProviderInstance(view,def);}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createPipeInstance(view,def){// deps are looked up from component.
var/** @type {?} */compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}// pipes can see the private services of the component
var/** @type {?} */allowPrivateServices=true;// pipes are always eager and classes!
return createClass(compView.parent,viewParentEl(compView),allowPrivateServices,def.provider.value,def.provider.deps);}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createDirectiveInstance(view,def){// components can see other private services, other directives can't.
var/** @type {?} */allowPrivateServices=(def.flags&NodeFlags.IsComponent)>0;var/** @type {?} */providerDef=def.provider;// directives are always eager and classes!
var/** @type {?} */instance=createClass(view,def.parent,allowPrivateServices,def.provider.value,def.provider.deps);if(def.outputs.length){for(var/** @type {?} */i=0;i<def.outputs.length;i++){var/** @type {?} */output=def.outputs[i];var/** @type {?} */subscription=instance[output.propName].subscribe(eventHandlerClosure(view,def.parent.index,output.eventName));view.disposables[def.outputIndex+i]=subscription.unsubscribe.bind(subscription);}}return instance;}/**
 * @param {?} view
 * @param {?} index
 * @param {?} eventName
 * @return {?}
 */function eventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdateDirectiveInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */providerData=asProviderData(view,def.index);var/** @type {?} */directive=providerData.instance;var/** @type {?} */changed=false;var/** @type {?} */changes=void 0;var/** @type {?} */bindLen=def.bindings.length;if(bindLen>0&&checkBinding$1(view,def,0,v0)){changed=true;changes=updateProp(view,providerData,def,0,v0,changes);};if(bindLen>1&&checkBinding$1(view,def,1,v1)){changed=true;changes=updateProp(view,providerData,def,1,v1,changes);};if(bindLen>2&&checkBinding$1(view,def,2,v2)){changed=true;changes=updateProp(view,providerData,def,2,v2,changes);};if(bindLen>3&&checkBinding$1(view,def,3,v3)){changed=true;changes=updateProp(view,providerData,def,3,v3,changes);};if(bindLen>4&&checkBinding$1(view,def,4,v4)){changed=true;changes=updateProp(view,providerData,def,4,v4,changes);};if(bindLen>5&&checkBinding$1(view,def,5,v5)){changed=true;changes=updateProp(view,providerData,def,5,v5,changes);};if(bindLen>6&&checkBinding$1(view,def,6,v6)){changed=true;changes=updateProp(view,providerData,def,6,v6,changes);};if(bindLen>7&&checkBinding$1(view,def,7,v7)){changed=true;changes=updateProp(view,providerData,def,7,v7,changes);};if(bindLen>8&&checkBinding$1(view,def,8,v8)){changed=true;changes=updateProp(view,providerData,def,8,v8,changes);};if(bindLen>9&&checkBinding$1(view,def,9,v9)){changed=true;changes=updateProp(view,providerData,def,9,v9,changes);};if(changes){directive.ngOnChanges(changes);}if(view.state&ViewState.FirstCheck&&def.flags&NodeFlags.OnInit){directive.ngOnInit();}if(def.flags&NodeFlags.DoCheck){directive.ngDoCheck();}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdateDirectiveDynamic(view,def,values){var/** @type {?} */providerData=asProviderData(view,def.index);var/** @type {?} */directive=providerData.instance;var/** @type {?} */changed=false;var/** @type {?} */changes=void 0;for(var/** @type {?} */i=0;i<values.length;i++){if(checkBinding$1(view,def,i,values[i])){changed=true;changes=updateProp(view,providerData,def,i,values[i],changes);}}if(changes){directive.ngOnChanges(changes);}if(view.state&ViewState.FirstCheck&&def.flags&NodeFlags.OnInit){directive.ngOnInit();}if(def.flags&NodeFlags.DoCheck){directive.ngDoCheck();}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function _createProviderInstance(view,def){// private services can see other private services
var/** @type {?} */allowPrivateServices=(def.flags&NodeFlags.PrivateProvider)>0;var/** @type {?} */providerDef=def.provider;var/** @type {?} */injectable=void 0;switch(providerDef.type){case ProviderType.Class:injectable=createClass(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);break;case ProviderType.Factory:injectable=callFactory(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);break;case ProviderType.UseExisting:injectable=resolveDep(view,def.parent,allowPrivateServices,providerDef.deps[0]);break;case ProviderType.Value:injectable=providerDef.value;break;}return injectable;}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @param {?} ctor
 * @param {?} deps
 * @return {?}
 */function createClass(view,elDef,allowPrivateServices,ctor,deps){var/** @type {?} */len=deps.length;var/** @type {?} */injectable=void 0;switch(len){case 0:injectable=new ctor();break;case 1:injectable=new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]));break;case 2:injectable=new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));break;case 3:injectable=new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));break;default:var/** @type {?} */depValues=new Array(len);for(var/** @type {?} */i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}injectable=new(Function.prototype.bind.apply(ctor,[null].concat(depValues)))();}return injectable;}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @param {?} factory
 * @param {?} deps
 * @return {?}
 */function callFactory(view,elDef,allowPrivateServices,factory,deps){var/** @type {?} */len=deps.length;var/** @type {?} */injectable=void 0;switch(len){case 0:injectable=factory();break;case 1:injectable=factory(resolveDep(view,elDef,allowPrivateServices,deps[0]));break;case 2:injectable=factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));break;case 3:injectable=factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));break;default:var/** @type {?} */depValues=Array(len);for(var/** @type {?} */i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}injectable=factory.apply(undefined,_toConsumableArray(depValues));}return injectable;}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @param {?} depDef
 * @param {?=} notFoundValue
 * @return {?}
 */function resolveDep(view,elDef,allowPrivateServices,depDef){var notFoundValue=arguments.length>4&&arguments[4]!==undefined?arguments[4]:Injector.THROW_IF_NOT_FOUND;if(depDef.flags&DepFlags.Value){return depDef.token;}var/** @type {?} */startView=view;if(depDef.flags&DepFlags.Optional){notFoundValue=null;}var/** @type {?} */tokenKey=depDef.tokenKey;if(depDef.flags&DepFlags.SkipSelf){allowPrivateServices=false;elDef=elDef.parent;}while(view){if(elDef){switch(tokenKey){case RendererV1TokenKey:{var/** @type {?} */compView=findCompView(view,elDef,allowPrivateServices);return createRendererV1(compView);}case RendererV2TokenKey:{var/** @type {?} */_compView=findCompView(view,elDef,allowPrivateServices);return _compView.renderer;}case ElementRefTokenKey:return new ElementRef(asElementData(view,elDef.index).renderElement);case ViewContainerRefTokenKey:return createViewContainerRef(view,elDef);case TemplateRefTokenKey:{if(elDef.element.template){return createTemplateRef(view,elDef);}break;}case ChangeDetectorRefTokenKey:{var/** @type {?} */cdView=findCompView(view,elDef,allowPrivateServices);return createChangeDetectorRef(cdView);}case InjectorRefTokenKey:return createInjector(view,elDef);default:var/** @type {?} */_providerDef=(allowPrivateServices?elDef.element.allProviders:elDef.element.publicProviders)[tokenKey];if(_providerDef){var/** @type {?} */providerData=asProviderData(view,_providerDef.index);if(providerData.instance===NOT_CREATED){providerData.instance=_createProviderInstance(view,_providerDef);}return providerData.instance;}}}allowPrivateServices=isComponentView(view);elDef=viewParentEl(view);view=view.parent;}return startView.root.injector.get(depDef.token,notFoundValue);}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @return {?}
 */function findCompView(view,elDef,allowPrivateServices){var/** @type {?} */compView=void 0;if(allowPrivateServices){compView=asElementData(view,elDef.index).componentView;}else{compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}}return compView;}/**
 * @param {?} view
 * @param {?} providerData
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @param {?} changes
 * @return {?}
 */function updateProp(view,providerData,def,bindingIdx,value,changes){if(def.flags&NodeFlags.IsComponent){var/** @type {?} */compView=asElementData(view,def.parent.index).componentView;if(compView.def.flags&ViewFlags.OnPush){compView.state|=ViewState.ChecksEnabled;}}var/** @type {?} */binding=def.bindings[bindingIdx];var/** @type {?} */propName=binding.name;// Note: This is still safe with Closure Compiler as
// the user passed in the property name as an object has to `providerDef`,
// so Closure Compiler will have renamed the property correctly already.
providerData.instance[propName]=value;if(def.flags&NodeFlags.OnChanges){changes=changes||{};var/** @type {?} */oldValue=view.oldValues[def.bindingIndex+bindingIdx];var/** @type {?} */_binding=def.bindings[bindingIdx];changes[_binding.nonMinifiedName]=new SimpleChange(oldValue,value,(view.state&ViewState.FirstCheck)!==0);}view.oldValues[def.bindingIndex+bindingIdx]=value;return changes;}/**
 * @param {?} view
 * @param {?} lifecycles
 * @return {?}
 */function callLifecycleHooksChildrenFirst(view,lifecycles){if(!(view.def.nodeFlags&lifecycles)){return;}var/** @type {?} */len=view.def.nodes.length;for(var/** @type {?} */i=0;i<len;i++){// We use the reverse child oreder to call providers of children first.
var/** @type {?} */nodeDef=view.def.reverseChildNodes[i];var/** @type {?} */nodeIndex=nodeDef.index;if(nodeDef.flags&lifecycles){// a leaf
Services.setCurrentNode(view,nodeIndex);callProviderLifecycles(asProviderData(view,nodeIndex).instance,nodeDef.flags&lifecycles);}else if((nodeDef.childFlags&lifecycles)===0){// a parent with leafs
// no child matches one of the lifecycles,
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @param {?} provider
 * @param {?} lifecycles
 * @return {?}
 */function callProviderLifecycles(provider,lifecycles){if(lifecycles&NodeFlags.AfterContentInit){provider.ngAfterContentInit();}if(lifecycles&NodeFlags.AfterContentChecked){provider.ngAfterContentChecked();}if(lifecycles&NodeFlags.AfterViewInit){provider.ngAfterViewInit();}if(lifecycles&NodeFlags.AfterViewChecked){provider.ngAfterViewChecked();}if(lifecycles&NodeFlags.OnDestroy){provider.ngOnDestroy();}}/**
 * @param {?} argCount
 * @return {?}
 */function purePipeDef(argCount){// argCount + 1 to include the pipe as first arg
return _pureExpressionDef(PureExpressionType.Pipe,new Array(argCount+1));}/**
 * @param {?} argCount
 * @return {?}
 */function pureArrayDef(argCount){return _pureExpressionDef(PureExpressionType.Array,new Array(argCount));}/**
 * @param {?} propertyNames
 * @return {?}
 */function pureObjectDef(propertyNames){return _pureExpressionDef(PureExpressionType.Object,propertyNames);}/**
 * @param {?} type
 * @param {?} propertyNames
 * @return {?}
 */function _pureExpressionDef(type,propertyNames){var/** @type {?} */bindings=new Array(propertyNames.length);for(var/** @type {?} */i=0;i<propertyNames.length;i++){var/** @type {?} */prop=propertyNames[i];bindings[i]={type:BindingType.PureExpressionProperty,name:prop,ns:undefined,nonMinifiedName:prop,securityContext:undefined,suffix:undefined};}return{type:NodeType.PureExpression,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:0,childFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:undefined,childCount:0,bindings:bindings,outputs:[],element:undefined,provider:undefined,text:undefined,pureExpression:{type:type},query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createPureExpression(view,def){return{value:undefined};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdatePureExpressionInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */bindings=def.bindings;var/** @type {?} */changed=false;var/** @type {?} */bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var/** @type {?} */data=asPureExpressionData(view,def.index);var/** @type {?} */value=void 0;switch(def.pureExpression.type){case PureExpressionType.Array:value=new Array(bindings.length);if(bindLen>0)value[0]=v0;if(bindLen>1)value[1]=v1;if(bindLen>2)value[2]=v2;if(bindLen>3)value[3]=v3;if(bindLen>4)value[4]=v4;if(bindLen>5)value[5]=v5;if(bindLen>6)value[6]=v6;if(bindLen>7)value[7]=v7;if(bindLen>8)value[8]=v8;if(bindLen>9)value[9]=v9;break;case PureExpressionType.Object:value={};if(bindLen>0)value[bindings[0].name]=v0;if(bindLen>1)value[bindings[1].name]=v1;if(bindLen>2)value[bindings[2].name]=v2;if(bindLen>3)value[bindings[3].name]=v3;if(bindLen>4)value[bindings[4].name]=v4;if(bindLen>5)value[bindings[5].name]=v5;if(bindLen>6)value[bindings[6].name]=v6;if(bindLen>7)value[bindings[7].name]=v7;if(bindLen>8)value[bindings[8].name]=v8;if(bindLen>9)value[bindings[9].name]=v9;break;case PureExpressionType.Pipe:var/** @type {?} */pipe=v0;switch(bindLen){case 1:value=pipe.transform(v0);break;case 2:value=pipe.transform(v1);break;case 3:value=pipe.transform(v1,v2);break;case 4:value=pipe.transform(v1,v2,v3);break;case 5:value=pipe.transform(v1,v2,v3,v4);break;case 6:value=pipe.transform(v1,v2,v3,v4,v5);break;case 7:value=pipe.transform(v1,v2,v3,v4,v5,v6);break;case 8:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7);break;case 9:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8);break;case 10:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8,v9);break;}break;}data.value=value;}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdatePureExpressionDynamic(view,def,values){var/** @type {?} */bindings=def.bindings;var/** @type {?} */changed=false;for(var/** @type {?} */i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var/** @type {?} */data=asPureExpressionData(view,def.index);var/** @type {?} */value=void 0;switch(def.pureExpression.type){case PureExpressionType.Array:value=values;break;case PureExpressionType.Object:value={};for(var/** @type {?} */_i3=0;_i3<values.length;_i3++){value[bindings[_i3].name]=values[_i3];}break;case PureExpressionType.Pipe:var/** @type {?} */pipe=values[0];var/** @type {?} */params=values.slice(1);value=pipe.transform.apply(pipe,_toConsumableArray(params));break;}data.value=value;}return changed;}/**
 * @param {?} flags
 * @param {?} id
 * @param {?} bindings
 * @return {?}
 */function queryDef(flags,id,bindings){var/** @type {?} */bindingDefs=[];for(var/** @type {?} */propName in bindings){var/** @type {?} */bindingType=bindings[propName];bindingDefs.push({propName:propName,bindingType:bindingType});}return{type:NodeType.Query,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,ngContentIndex:undefined,matchedQueries:{},matchedQueryIds:0,references:{},childCount:0,bindings:[],outputs:[],element:undefined,provider:undefined,text:undefined,pureExpression:undefined,query:{id:id,filterId:filterQueryId(id),bindings:bindingDefs},ngContent:undefined};}/**
 * @return {?}
 */function createQuery(){return new QueryList();}/**
 * @param {?} view
 * @return {?}
 */function dirtyParentQueries(view){var/** @type {?} */queryIds=view.def.nodeMatchedQueries;while(view.parent&&isEmbeddedView(view)){var/** @type {?} */tplDef=view.parentNodeDef;view=view.parent;// content queries
var/** @type {?} */end=tplDef.index+tplDef.childCount;for(var/** @type {?} */i=0;i<=end;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.flags&NodeFlags.HasContentQuery&&nodeDef.flags&NodeFlags.HasDynamicQuery&&(nodeDef.query.filterId&queryIds)===nodeDef.query.filterId){asQueryList(view,i).setDirty();}if(nodeDef.type===NodeType.Element&&i+nodeDef.childCount<tplDef.index||!(nodeDef.childFlags&NodeFlags.HasContentQuery)||!(nodeDef.childFlags&NodeFlags.HasDynamicQuery)){// skip elements that don't contain the template element or no query.
i+=nodeDef.childCount;}}}// view queries
if(view.def.nodeFlags&NodeFlags.HasViewQuery){for(var/** @type {?} */_i4=0;_i4<view.def.nodes.length;_i4++){var/** @type {?} */_nodeDef=view.def.nodes[_i4];if(_nodeDef.flags&NodeFlags.HasViewQuery&&_nodeDef.flags&NodeFlags.HasDynamicQuery){asQueryList(view,_i4).setDirty();}// only visit the root nodes
_i4+=_nodeDef.childCount;}}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @return {?}
 */function checkAndUpdateQuery(view,nodeDef){var/** @type {?} */queryList=asQueryList(view,nodeDef.index);if(!queryList.dirty){return;}var/** @type {?} */directiveInstance=void 0;var/** @type {?} */newValues=void 0;if(nodeDef.flags&NodeFlags.HasContentQuery){var/** @type {?} */_elementDef=nodeDef.parent.parent;newValues=calcQueryValues(view,_elementDef.index,_elementDef.index+_elementDef.childCount,nodeDef.query,[]);directiveInstance=asProviderData(view,nodeDef.parent.index).instance;}else if(nodeDef.flags&NodeFlags.HasViewQuery){newValues=calcQueryValues(view,0,view.def.nodes.length-1,nodeDef.query,[]);directiveInstance=view.component;}queryList.reset(newValues);var/** @type {?} */bindings=nodeDef.query.bindings;var/** @type {?} */notify=false;for(var/** @type {?} */i=0;i<bindings.length;i++){var/** @type {?} */binding=bindings[i];var/** @type {?} */boundValue=void 0;switch(binding.bindingType){case QueryBindingType.First:boundValue=queryList.first;break;case QueryBindingType.All:boundValue=queryList;notify=true;break;}directiveInstance[binding.propName]=boundValue;}if(notify){queryList.notifyOnChanges();}}/**
 * @param {?} view
 * @param {?} startIndex
 * @param {?} endIndex
 * @param {?} queryDef
 * @param {?} values
 * @return {?}
 */function calcQueryValues(view,startIndex,endIndex,queryDef,values){for(var/** @type {?} */i=startIndex;i<=endIndex;i++){var/** @type {?} */nodeDef=view.def.nodes[i];var/** @type {?} */valueType=nodeDef.matchedQueries[queryDef.id];if(valueType!=null){values.push(getQueryValue(view,nodeDef,valueType));}if(nodeDef.type===NodeType.Element&&nodeDef.element.template&&(nodeDef.element.template.nodeMatchedQueries&queryDef.filterId)===queryDef.filterId){// check embedded views that were attached at the place of their template.
var/** @type {?} */elementData=asElementData(view,i);var/** @type {?} */embeddedViews=elementData.embeddedViews;if(embeddedViews){for(var/** @type {?} */k=0;k<embeddedViews.length;k++){var/** @type {?} */embeddedView=embeddedViews[k];var/** @type {?} */dvc=declaredViewContainer(embeddedView);if(dvc&&dvc===elementData){calcQueryValues(embeddedView,0,embeddedView.def.nodes.length-1,queryDef,values);}}}var/** @type {?} */projectedViews=elementData.projectedViews;if(projectedViews){for(var/** @type {?} */_k2=0;_k2<projectedViews.length;_k2++){var/** @type {?} */projectedView=projectedViews[_k2];calcQueryValues(projectedView,0,projectedView.def.nodes.length-1,queryDef,values);}}}if((nodeDef.childMatchedQueries&queryDef.filterId)!==queryDef.filterId){// if no child matches the query, skip the children.
i+=nodeDef.childCount;}}return values;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} queryValueType
 * @return {?}
 */function getQueryValue(view,nodeDef,queryValueType){if(queryValueType!=null){// a match
var/** @type {?} */value=void 0;switch(queryValueType){case QueryValueType.RenderElement:value=asElementData(view,nodeDef.index).renderElement;break;case QueryValueType.ElementRef:value=new ElementRef(asElementData(view,nodeDef.index).renderElement);break;case QueryValueType.TemplateRef:value=createTemplateRef(view,nodeDef);break;case QueryValueType.ViewContainerRef:value=createViewContainerRef(view,nodeDef);break;case QueryValueType.Provider:value=asProviderData(view,nodeDef.index).instance;break;}return value;}}/**
 * @param {?} ngContentIndex
 * @param {?} constants
 * @return {?}
 */function textDef(ngContentIndex,constants){// skip the call to sliceErrorStack itself + the call to this function.
var/** @type {?} */source=isDevMode()?sliceErrorStack(2,3):'';var/** @type {?} */bindings=new Array(constants.length-1);for(var/** @type {?} */i=1;i<constants.length;i++){bindings[i-1]={type:BindingType.TextInterpolation,name:undefined,ns:undefined,nonMinifiedName:undefined,securityContext:undefined,suffix:constants[i]};}return{type:NodeType.Text,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:0,childFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:bindings,outputs:[],element:undefined,provider:undefined,text:{prefix:constants[0],source:source},pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} renderHost
 * @param {?} def
 * @return {?}
 */function createText(view,renderHost,def){var/** @type {?} */renderNode=void 0;var/** @type {?} */renderer=view.renderer;renderNode=renderer.createText(def.text.prefix);var/** @type {?} */parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,renderNode);}return{renderText:renderNode};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdateTextInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */changed=false;var/** @type {?} */bindings=def.bindings;var/** @type {?} */bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var/** @type {?} */value=def.text.prefix;if(bindLen>0)value+=_addInterpolationPart(v0,bindings[0]);if(bindLen>1)value+=_addInterpolationPart(v1,bindings[1]);if(bindLen>2)value+=_addInterpolationPart(v2,bindings[2]);if(bindLen>3)value+=_addInterpolationPart(v3,bindings[3]);if(bindLen>4)value+=_addInterpolationPart(v4,bindings[4]);if(bindLen>5)value+=_addInterpolationPart(v5,bindings[5]);if(bindLen>6)value+=_addInterpolationPart(v6,bindings[6]);if(bindLen>7)value+=_addInterpolationPart(v7,bindings[7]);if(bindLen>8)value+=_addInterpolationPart(v8,bindings[8]);if(bindLen>9)value+=_addInterpolationPart(v9,bindings[9]);var/** @type {?} */_renderNode=asTextData(view,def.index).renderText;view.renderer.setValue(_renderNode,value);}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdateTextDynamic(view,def,values){var/** @type {?} */bindings=def.bindings;var/** @type {?} */changed=false;for(var/** @type {?} */i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var/** @type {?} */value='';for(var/** @type {?} */_i5=0;_i5<values.length;_i5++){value=value+_addInterpolationPart(values[_i5],bindings[_i5]);}value=def.text.prefix+value;var/** @type {?} */_renderNode2=asTextData(view,def.index).renderText;view.renderer.setValue(_renderNode2,value);}return changed;}/**
 * @param {?} value
 * @param {?} binding
 * @return {?}
 */function _addInterpolationPart(value,binding){var/** @type {?} */valueStr=value!=null?value.toString():'';return valueStr+binding.suffix;}var/** @type {?} */NOOP$1=function NOOP$1(){return undefined;};/**
 * @param {?} flags
 * @param {?} nodes
 * @param {?=} updateDirectives
 * @param {?=} updateRenderer
 * @return {?}
 */function viewDef(flags,nodes,updateDirectives,updateRenderer){// clone nodes and set auto calculated values
if(nodes.length===0){throw new Error('Illegal State: Views without nodes are not allowed!');}var/** @type {?} */reverseChildNodes=new Array(nodes.length);var/** @type {?} */viewBindingCount=0;var/** @type {?} */viewDisposableCount=0;var/** @type {?} */viewNodeFlags=0;var/** @type {?} */viewMatchedQueries=0;var/** @type {?} */currentParent=null;var/** @type {?} */currentElementHasPublicProviders=false;var/** @type {?} */currentElementHasPrivateProviders=false;var/** @type {?} */lastRenderRootNode=null;for(var/** @type {?} */i=0;i<nodes.length;i++){while(currentParent&&i>currentParent.index+currentParent.childCount){var/** @type {?} */newParent=currentParent.parent;if(newParent){newParent.childFlags|=currentParent.childFlags;newParent.childMatchedQueries|=currentParent.childMatchedQueries;}currentParent=newParent;}var/** @type {?} */node=nodes[i];node.index=i;node.parent=currentParent;node.bindingIndex=viewBindingCount;node.outputIndex=viewDisposableCount;node.reverseChildIndex=calculateReverseChildIndex(currentParent,i,node.childCount,nodes.length);// renderParent needs to account for ng-container!
var/** @type {?} */currentRenderParent=void 0;if(currentParent&&currentParent.type===NodeType.Element&&!currentParent.element.name){currentRenderParent=currentParent.renderParent;}else{currentRenderParent=currentParent;}node.renderParent=currentRenderParent;if(node.element){var/** @type {?} */elDef=node.element;elDef.publicProviders=currentParent?currentParent.element.publicProviders:Object.create(null);elDef.allProviders=elDef.publicProviders;// Note: We assume that all providers of an element are before any child element!
currentElementHasPublicProviders=false;currentElementHasPrivateProviders=false;}reverseChildNodes[node.reverseChildIndex]=node;validateNode(currentParent,node,nodes.length);viewNodeFlags|=node.flags;viewMatchedQueries|=node.matchedQueryIds;if(node.element&&node.element.template){viewMatchedQueries|=node.element.template.nodeMatchedQueries;}if(currentParent){currentParent.childFlags|=node.flags;currentParent.childMatchedQueries|=node.matchedQueryIds;if(node.element&&node.element.template){currentParent.childMatchedQueries|=node.element.template.nodeMatchedQueries;}}viewBindingCount+=node.bindings.length;viewDisposableCount+=node.outputs.length;if(!currentRenderParent&&(node.type===NodeType.Element||node.type===NodeType.Text)){lastRenderRootNode=node;}if(node.type===NodeType.Provider||node.type===NodeType.Directive){if(!currentElementHasPublicProviders){currentElementHasPublicProviders=true;// Use protoypical inheritance to not get O(n^2) complexity...
currentParent.element.publicProviders=Object.create(currentParent.element.publicProviders);currentParent.element.allProviders=currentParent.element.publicProviders;}var/** @type {?} */isPrivateService=(node.flags&NodeFlags.PrivateProvider)!==0;var/** @type {?} */isComponent=(node.flags&NodeFlags.IsComponent)!==0;if(!isPrivateService||isComponent){currentParent.element.publicProviders[node.provider.tokenKey]=node;}else{if(!currentElementHasPrivateProviders){currentElementHasPrivateProviders=true;// Use protoypical inheritance to not get O(n^2) complexity...
currentParent.element.allProviders=Object.create(currentParent.element.publicProviders);}currentParent.element.allProviders[node.provider.tokenKey]=node;}if(isComponent){currentParent.element.componentProvider=node;}}if(node.childCount){currentParent=node;}}while(currentParent){var/** @type {?} */_newParent=currentParent.parent;if(_newParent){_newParent.childFlags|=currentParent.childFlags;_newParent.childMatchedQueries|=currentParent.childMatchedQueries;}currentParent=_newParent;}var/** @type {?} */handleEvent=function handleEvent(view,nodeIndex,eventName,event){return nodes[nodeIndex].element.handleEvent(view,eventName,event);};return{nodeFlags:viewNodeFlags,nodeMatchedQueries:viewMatchedQueries,flags:flags,nodes:nodes,reverseChildNodes:reverseChildNodes,updateDirectives:updateDirectives||NOOP$1,updateRenderer:updateRenderer||NOOP$1,handleEvent:handleEvent||NOOP$1,bindingCount:viewBindingCount,outputCount:viewDisposableCount,lastRenderRootNode:lastRenderRootNode};}/**
 * @param {?} currentParent
 * @param {?} i
 * @param {?} childCount
 * @param {?} nodeCount
 * @return {?}
 */function calculateReverseChildIndex(currentParent,i,childCount,nodeCount){// Notes about reverse child order:
// - Every node is directly before its children, in dfs and reverse child order.
// - node.childCount contains all children, in dfs and reverse child order.
// - In dfs order, every node is before its first child
// - In reverse child order, every node is before its last child
// Algorithm, main idea:
// - In reverse child order, the ranges for each child + its transitive children are mirrored
//   regarding their position inside of their parent
// Visualization:
// Given the following tree:
// Nodes: n0
//             n1         n2
//                n11 n12    n21 n22
// dfs:    0   1   2   3  4   5   6
// result: 0   4   6   5  1   3   2
//
// Example:
// Current node = 1
// 1) lastChildIndex = 3
// 2) lastChildOffsetRelativeToParentInDfsOrder = 2
// 3) parentEndIndexInReverseChildOrder = 6
// 4) result = 4
var/** @type {?} */lastChildOffsetRelativeToParentInDfsOrder=void 0;var/** @type {?} */parentEndIndexInReverseChildOrder=void 0;if(currentParent){var/** @type {?} */lastChildIndex=i+childCount;lastChildOffsetRelativeToParentInDfsOrder=lastChildIndex-currentParent.index-1;parentEndIndexInReverseChildOrder=currentParent.reverseChildIndex+currentParent.childCount;}else{lastChildOffsetRelativeToParentInDfsOrder=i+childCount;parentEndIndexInReverseChildOrder=nodeCount-1;}return parentEndIndexInReverseChildOrder-lastChildOffsetRelativeToParentInDfsOrder;}/**
 * @param {?} parent
 * @param {?} node
 * @param {?} nodeCount
 * @return {?}
 */function validateNode(parent,node,nodeCount){var/** @type {?} */template=node.element&&node.element.template;if(template){if(template.lastRenderRootNode&&template.lastRenderRootNode.flags&NodeFlags.HasEmbeddedViews){throw new Error('Illegal State: Last root node of a template can\'t have embedded views, at index '+node.index+'!');}}if(node.type===NodeType.Provider||node.type===NodeType.Directive){var/** @type {?} */parentType=parent?parent.type:null;if(parentType!==NodeType.Element){throw new Error('Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index '+node.index+'!');}}if(node.query){if(node.flags&NodeFlags.HasContentQuery&&(!parent||parent.type!==NodeType.Directive)){throw new Error('Illegal State: Content Query nodes need to be children of directives, at index '+node.index+'!');}if(node.flags&NodeFlags.HasViewQuery&&parent){throw new Error('Illegal State: View Query nodes have to be top level nodes, at index '+node.index+'!');}}if(node.childCount){var/** @type {?} */parentEnd=parent?parent.index+parent.childCount:nodeCount-1;if(node.index<=parentEnd&&node.index+node.childCount>parentEnd){throw new Error('Illegal State: childCount of node leads outside of parent, at index '+node.index+'!');}}}/**
 * @param {?} parent
 * @param {?} anchorDef
 * @param {?=} context
 * @return {?}
 */function createEmbeddedView(parent,anchorDef,context){// embedded views are seen as siblings to the anchor, so we need
// to get the parent of the anchor and use it as parentIndex.
var/** @type {?} */view=createView(parent.root,parent.renderer,parent,anchorDef,anchorDef.element.template);initView(view,parent.component,context);createViewNodes(view);return view;}/**
 * @param {?} root
 * @param {?} def
 * @param {?=} context
 * @return {?}
 */function createRootView(root,def,context){var/** @type {?} */view=createView(root,root.renderer,null,null,def);initView(view,context,context);createViewNodes(view);return view;}/**
 * @param {?} root
 * @param {?} renderer
 * @param {?} parent
 * @param {?} parentNodeDef
 * @param {?} def
 * @return {?}
 */function createView(root,renderer,parent,parentNodeDef,def){var/** @type {?} */nodes=new Array(def.nodes.length);var/** @type {?} */disposables=def.outputCount?new Array(def.outputCount):undefined;var/** @type {?} */view={def:def,parent:parent,viewContainerParent:undefined,parentNodeDef:parentNodeDef,context:undefined,component:undefined,nodes:nodes,state:ViewState.FirstCheck|ViewState.ChecksEnabled,root:root,renderer:renderer,oldValues:new Array(def.bindingCount),disposables:disposables};return view;}/**
 * @param {?} view
 * @param {?} component
 * @param {?} context
 * @return {?}
 */function initView(view,component,context){view.component=component;view.context=context;}/**
 * @param {?} view
 * @return {?}
 */function createViewNodes(view){var/** @type {?} */renderHost=void 0;if(isComponentView(view)){var/** @type {?} */hostDef=view.parentNodeDef;renderHost=asElementData(view.parent,hostDef.parent.index).renderElement;}var/** @type {?} */def=view.def;var/** @type {?} */nodes=view.nodes;for(var/** @type {?} */i=0;i<def.nodes.length;i++){var/** @type {?} */nodeDef=def.nodes[i];Services.setCurrentNode(view,i);var/** @type {?} */nodeData=void 0;switch(nodeDef.type){case NodeType.Element:var/** @type {?} */el=createElement(view,renderHost,nodeDef);var/** @type {?} */componentView=void 0;if(nodeDef.flags&NodeFlags.HasComponent){var/** @type {?} */compViewDef=resolveViewDefinition(nodeDef.element.componentView);var/** @type {?} */rendererType=nodeDef.element.componentRendererType;var/** @type {?} */compRenderer=void 0;if(!rendererType){compRenderer=view.root.renderer;}else{compRenderer=view.root.rendererFactory.createRenderer(el,rendererType);}componentView=createView(view.root,compRenderer,view,nodeDef.element.componentProvider,compViewDef);}listenToElementOutputs(view,componentView,nodeDef,el);nodeData={renderElement:el,componentView:componentView,embeddedViews:nodeDef.flags&NodeFlags.HasEmbeddedViews?[]:undefined,projectedViews:undefined};break;case NodeType.Text:nodeData=createText(view,renderHost,nodeDef);break;case NodeType.Provider:{var/** @type {?} */instance=createProviderInstance(view,nodeDef);nodeData={instance:instance};break;}case NodeType.Pipe:{var/** @type {?} */_instance=createPipeInstance(view,nodeDef);nodeData={instance:_instance};break;}case NodeType.Directive:{var/** @type {?} */_instance2=createDirectiveInstance(view,nodeDef);nodeData={instance:_instance2};if(nodeDef.flags&NodeFlags.IsComponent){var/** @type {?} */compView=asElementData(view,nodeDef.parent.index).componentView;initView(compView,_instance2,_instance2);}break;}case NodeType.PureExpression:nodeData=createPureExpression(view,nodeDef);break;case NodeType.Query:nodeData=createQuery();break;case NodeType.NgContent:appendNgContent(view,renderHost,nodeDef);// no runtime data needed for NgContent...
nodeData=undefined;break;}nodes[i]=nodeData;}// Create the ViewData.nodes of component views after we created everything else,
// so that e.g. ng-content works
execComponentViewsAction(view,ViewAction.CreateViewNodes);// fill static content and view queries
execQueriesAction(view,NodeFlags.HasContentQuery|NodeFlags.HasViewQuery,NodeFlags.HasStaticQuery,CheckType.CheckAndUpdate);}/**
 * @param {?} view
 * @return {?}
 */function checkNoChangesView(view){Services.updateDirectives(view,CheckType.CheckNoChanges);execEmbeddedViewsAction(view,ViewAction.CheckNoChanges);execQueriesAction(view,NodeFlags.HasContentQuery,NodeFlags.HasDynamicQuery,CheckType.CheckNoChanges);Services.updateRenderer(view,CheckType.CheckNoChanges);execComponentViewsAction(view,ViewAction.CheckNoChanges);execQueriesAction(view,NodeFlags.HasViewQuery,NodeFlags.HasDynamicQuery,CheckType.CheckNoChanges);}/**
 * @param {?} view
 * @return {?}
 */function checkAndUpdateView(view){Services.updateDirectives(view,CheckType.CheckAndUpdate);execEmbeddedViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,NodeFlags.HasContentQuery,NodeFlags.HasDynamicQuery,CheckType.CheckAndUpdate);callLifecycleHooksChildrenFirst(view,NodeFlags.AfterContentChecked|(view.state&ViewState.FirstCheck?NodeFlags.AfterContentInit:0));Services.updateRenderer(view,CheckType.CheckAndUpdate);execComponentViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,NodeFlags.HasViewQuery,NodeFlags.HasDynamicQuery,CheckType.CheckAndUpdate);callLifecycleHooksChildrenFirst(view,NodeFlags.AfterViewChecked|(view.state&ViewState.FirstCheck?NodeFlags.AfterViewInit:0));if(view.def.flags&ViewFlags.OnPush){view.state&=~ViewState.ChecksEnabled;}view.state&=~ViewState.FirstCheck;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===ArgumentType.Inline){return checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{return checkAndUpdateNodeDynamic(view,nodeDef,v0);}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */changed=false;switch(nodeDef.type){case NodeType.Element:changed=checkAndUpdateElementInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;case NodeType.Text:changed=checkAndUpdateTextInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;case NodeType.Directive:changed=checkAndUpdateDirectiveInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;case NodeType.PureExpression:changed=checkAndUpdatePureExpressionInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;}return changed;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} values
 * @return {?}
 */function checkAndUpdateNodeDynamic(view,nodeDef,values){var/** @type {?} */changed=false;switch(nodeDef.type){case NodeType.Element:changed=checkAndUpdateElementDynamic(view,nodeDef,values);break;case NodeType.Text:changed=checkAndUpdateTextDynamic(view,nodeDef,values);break;case NodeType.Directive:changed=checkAndUpdateDirectiveDynamic(view,nodeDef,values);break;case NodeType.PureExpression:changed=checkAndUpdatePureExpressionDynamic(view,nodeDef,values);break;}if(changed){// Update oldValues after all bindings have been updated,
// as a setter for a property might update other properties.
var/** @type {?} */bindLen=nodeDef.bindings.length;var/** @type {?} */bindingStart=nodeDef.bindingIndex;var/** @type {?} */oldValues=view.oldValues;for(var/** @type {?} */i=0;i<bindLen;i++){oldValues[bindingStart+i]=values[i];}}return changed;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===ArgumentType.Inline){checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{checkNoChangesNodeDynamic(view,nodeDef,v0);}// Returning false is ok here as we would have thrown in case of a change.
return false;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */bindLen=nodeDef.bindings.length;if(bindLen>0)checkBindingNoChanges(view,nodeDef,0,v0);if(bindLen>1)checkBindingNoChanges(view,nodeDef,1,v1);if(bindLen>2)checkBindingNoChanges(view,nodeDef,2,v2);if(bindLen>3)checkBindingNoChanges(view,nodeDef,3,v3);if(bindLen>4)checkBindingNoChanges(view,nodeDef,4,v4);if(bindLen>5)checkBindingNoChanges(view,nodeDef,5,v5);if(bindLen>6)checkBindingNoChanges(view,nodeDef,6,v6);if(bindLen>7)checkBindingNoChanges(view,nodeDef,7,v7);if(bindLen>8)checkBindingNoChanges(view,nodeDef,8,v8);if(bindLen>9)checkBindingNoChanges(view,nodeDef,9,v9);}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} values
 * @return {?}
 */function checkNoChangesNodeDynamic(view,nodeDef,values){for(var/** @type {?} */i=0;i<values.length;i++){checkBindingNoChanges(view,nodeDef,i,values[i]);}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @return {?}
 */function checkNoChangesQuery(view,nodeDef){var/** @type {?} */queryList=asQueryList(view,nodeDef.index);if(queryList.dirty){throw expressionChangedAfterItHasBeenCheckedError$1(Services.createDebugContext(view,nodeDef.index),'Query '+nodeDef.query.id+' not dirty','Query '+nodeDef.query.id+' dirty',(view.state&ViewState.FirstCheck)!==0);}}/**
 * @param {?} view
 * @return {?}
 */function destroyView(view){if(view.state&ViewState.Destroyed){return;}execEmbeddedViewsAction(view,ViewAction.Destroy);execComponentViewsAction(view,ViewAction.Destroy);callLifecycleHooksChildrenFirst(view,NodeFlags.OnDestroy);if(view.disposables){for(var/** @type {?} */i=0;i<view.disposables.length;i++){view.disposables[i]();}}if(view.renderer.destroyNode){destroyViewNodes(view);}if(isComponentView(view)){view.renderer.destroy();}view.state|=ViewState.Destroyed;}/**
 * @param {?} view
 * @return {?}
 */function destroyViewNodes(view){var/** @type {?} */len=view.def.nodes.length;for(var/** @type {?} */i=0;i<len;i++){var/** @type {?} */def=view.def.nodes[i];if(def.type===NodeType.Element){view.renderer.destroyNode(asElementData(view,i).renderElement);}else if(def.type===NodeType.Text){view.renderer.destroyNode(asTextData(view,i).renderText);}}}var ViewAction={};ViewAction.CreateViewNodes=0;ViewAction.CheckNoChanges=1;ViewAction.CheckAndUpdate=2;ViewAction.Destroy=3;ViewAction[ViewAction.CreateViewNodes]="CreateViewNodes";ViewAction[ViewAction.CheckNoChanges]="CheckNoChanges";ViewAction[ViewAction.CheckAndUpdate]="CheckAndUpdate";ViewAction[ViewAction.Destroy]="Destroy";/**
 * @param {?} view
 * @param {?} action
 * @return {?}
 */function execComponentViewsAction(view,action){var/** @type {?} */def=view.def;if(!(def.nodeFlags&NodeFlags.HasComponent)){return;}for(var/** @type {?} */i=0;i<def.nodes.length;i++){var/** @type {?} */nodeDef=def.nodes[i];if(nodeDef.flags&NodeFlags.HasComponent){// a leaf
callViewAction(asElementData(view,i).componentView,action);}else if((nodeDef.childFlags&NodeFlags.HasComponent)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @param {?} view
 * @param {?} action
 * @return {?}
 */function execEmbeddedViewsAction(view,action){var/** @type {?} */def=view.def;if(!(def.nodeFlags&NodeFlags.HasEmbeddedViews)){return;}for(var/** @type {?} */i=0;i<def.nodes.length;i++){var/** @type {?} */nodeDef=def.nodes[i];if(nodeDef.flags&NodeFlags.HasEmbeddedViews){// a leaf
var/** @type {?} */embeddedViews=asElementData(view,i).embeddedViews;if(embeddedViews){for(var/** @type {?} */k=0;k<embeddedViews.length;k++){callViewAction(embeddedViews[k],action);}}}else if((nodeDef.childFlags&NodeFlags.HasEmbeddedViews)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @param {?} view
 * @param {?} action
 * @return {?}
 */function callViewAction(view,action){var/** @type {?} */viewState=view.state;switch(action){case ViewAction.CheckNoChanges:if(viewState&ViewState.ChecksEnabled&&(viewState&(ViewState.Errored|ViewState.Destroyed))===0){checkNoChangesView(view);}break;case ViewAction.CheckAndUpdate:if(viewState&ViewState.ChecksEnabled&&(viewState&(ViewState.Errored|ViewState.Destroyed))===0){checkAndUpdateView(view);}break;case ViewAction.Destroy:destroyView(view);break;case ViewAction.CreateViewNodes:createViewNodes(view);break;}}/**
 * @param {?} view
 * @param {?} queryFlags
 * @param {?} staticDynamicQueryFlag
 * @param {?} checkType
 * @return {?}
 */function execQueriesAction(view,queryFlags,staticDynamicQueryFlag,checkType){if(!(view.def.nodeFlags&queryFlags)||!(view.def.nodeFlags&staticDynamicQueryFlag)){return;}var/** @type {?} */nodeCount=view.def.nodes.length;for(var/** @type {?} */i=0;i<nodeCount;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.flags&queryFlags&&nodeDef.flags&staticDynamicQueryFlag){Services.setCurrentNode(view,nodeDef.index);switch(checkType){case CheckType.CheckAndUpdate:checkAndUpdateQuery(view,nodeDef);break;case CheckType.CheckNoChanges:checkNoChangesQuery(view,nodeDef);break;}}if(!(nodeDef.childFlags&queryFlags)||!(nodeDef.childFlags&staticDynamicQueryFlag)){// no child has a matching query
// then skip the children
i+=nodeDef.childCount;}}}var/** @type {?} */initialized=false;/**
 * @return {?}
 */function initServicesIfNeeded(){if(initialized){return;}initialized=true;var/** @type {?} */services=isDevMode()?createDebugServices():createProdServices();Services.setCurrentNode=services.setCurrentNode;Services.createRootView=services.createRootView;Services.createEmbeddedView=services.createEmbeddedView;Services.checkAndUpdateView=services.checkAndUpdateView;Services.checkNoChangesView=services.checkNoChangesView;Services.destroyView=services.destroyView;Services.resolveDep=resolveDep;Services.createDebugContext=services.createDebugContext;Services.handleEvent=services.handleEvent;Services.updateDirectives=services.updateDirectives;Services.updateRenderer=services.updateRenderer;Services.dirtyParentQueries=dirtyParentQueries;}/**
 * @return {?}
 */function createProdServices(){return{setCurrentNode:function setCurrentNode(){},createRootView:createProdRootView,createEmbeddedView:createEmbeddedView,checkAndUpdateView:checkAndUpdateView,checkNoChangesView:checkNoChangesView,destroyView:destroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:function handleEvent(view,nodeIndex,eventName,event){return view.def.handleEvent(view,nodeIndex,eventName,event);},updateDirectives:function updateDirectives(view,checkType){return view.def.updateDirectives(checkType===CheckType.CheckAndUpdate?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);},updateRenderer:function updateRenderer(view,checkType){return view.def.updateRenderer(checkType===CheckType.CheckAndUpdate?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);}};}/**
 * @return {?}
 */function createDebugServices(){return{setCurrentNode:debugSetCurrentNode,createRootView:debugCreateRootView,createEmbeddedView:debugCreateEmbeddedView,checkAndUpdateView:debugCheckAndUpdateView,checkNoChangesView:debugCheckNoChangesView,destroyView:debugDestroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:debugHandleEvent,updateDirectives:debugUpdateDirectives,updateRenderer:debugUpdateRenderer};}/**
 * @param {?} injector
 * @param {?} projectableNodes
 * @param {?} rootSelectorOrNode
 * @param {?} def
 * @param {?=} context
 * @return {?}
 */function createProdRootView(injector,projectableNodes,rootSelectorOrNode,def,context){var/** @type {?} */rendererFactory=injector.get(RendererFactoryV2);return createRootView(createRootData(injector,rendererFactory,projectableNodes,rootSelectorOrNode),def,context);}/**
 * @param {?} injector
 * @param {?} projectableNodes
 * @param {?} rootSelectorOrNode
 * @param {?} def
 * @param {?=} context
 * @return {?}
 */function debugCreateRootView(injector,projectableNodes,rootSelectorOrNode,def,context){var/** @type {?} */rendererFactory=injector.get(RendererFactoryV2);var/** @type {?} */root=createRootData(injector,new DebugRendererFactoryV2(rendererFactory),projectableNodes,rootSelectorOrNode);return callWithDebugContext(DebugAction.create,createRootView,null,[root,def,context]);}/**
 * @param {?} injector
 * @param {?} rendererFactory
 * @param {?} projectableNodes
 * @param {?} rootSelectorOrNode
 * @return {?}
 */function createRootData(injector,rendererFactory,projectableNodes,rootSelectorOrNode){var/** @type {?} */sanitizer=injector.get(Sanitizer);var/** @type {?} */renderer=rendererFactory.createRenderer(null,null);return{injector:injector,projectableNodes:projectableNodes,selectorOrNode:rootSelectorOrNode,sanitizer:sanitizer,rendererFactory:rendererFactory,renderer:renderer};}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function prodCheckAndUpdateNode(view,nodeIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeIndex).value:undefined;}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function prodCheckNoChangesNode(view,nodeIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeIndex).value:undefined;}/**
 * @param {?} parent
 * @param {?} anchorDef
 * @param {?=} context
 * @return {?}
 */function debugCreateEmbeddedView(parent,anchorDef,context){return callWithDebugContext(DebugAction.create,createEmbeddedView,null,[parent,anchorDef,context]);}/**
 * @param {?} view
 * @return {?}
 */function debugCheckAndUpdateView(view){return callWithDebugContext(DebugAction.detectChanges,checkAndUpdateView,null,[view]);}/**
 * @param {?} view
 * @return {?}
 */function debugCheckNoChangesView(view){return callWithDebugContext(DebugAction.checkNoChanges,checkNoChangesView,null,[view]);}/**
 * @param {?} view
 * @return {?}
 */function debugDestroyView(view){return callWithDebugContext(DebugAction.destroy,destroyView,null,[view]);}var DebugAction={};DebugAction.create=0;DebugAction.detectChanges=1;DebugAction.checkNoChanges=2;DebugAction.destroy=3;DebugAction.handleEvent=4;DebugAction[DebugAction.create]="create";DebugAction[DebugAction.detectChanges]="detectChanges";DebugAction[DebugAction.checkNoChanges]="checkNoChanges";DebugAction[DebugAction.destroy]="destroy";DebugAction[DebugAction.handleEvent]="handleEvent";var/** @type {?} */_currentAction=void 0;var/** @type {?} */_currentView=void 0;var/** @type {?} */_currentNodeIndex=void 0;/**
 * @param {?} view
 * @param {?} nodeIndex
 * @return {?}
 */function debugSetCurrentNode(view,nodeIndex){_currentView=view;_currentNodeIndex=nodeIndex;}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} eventName
 * @param {?} event
 * @return {?}
 */function debugHandleEvent(view,nodeIndex,eventName,event){debugSetCurrentNode(view,nodeIndex);return callWithDebugContext(DebugAction.handleEvent,view.def.handleEvent,null,[view,nodeIndex,eventName,event]);}/**
 * @param {?} view
 * @param {?} checkType
 * @return {?}
 */function debugUpdateDirectives(view,checkType){if(view.state&ViewState.Destroyed){throw viewDestroyedError$1(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextDirectiveWithBinding(view,0));return view.def.updateDirectives(debugCheckDirectivesFn,view);/**
     * @param {?} view
     * @param {?} nodeIndex
     * @param {?} argStyle
     * @param {...?} values
     * @return {?}
     */function debugCheckDirectivesFn(view,nodeIndex,argStyle){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];for(var _len7=arguments.length,values=Array(_len7>3?_len7-3:0),_key7=3;_key7<_len7;_key7++){values[_key7-3]=arguments[_key7];}if(checkType===CheckType.CheckAndUpdate){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.type===NodeType.Directive){debugSetCurrentNode(view,nextDirectiveWithBinding(view,nodeIndex));}return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeDef.index).value:undefined;};}/**
 * @param {?} view
 * @param {?} checkType
 * @return {?}
 */function debugUpdateRenderer(view,checkType){if(view.state&ViewState.Destroyed){throw viewDestroyedError$1(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextRenderNodeWithBinding(view,0));return view.def.updateRenderer(debugCheckRenderNodeFn,view);/**
     * @param {?} view
     * @param {?} nodeIndex
     * @param {?} argStyle
     * @param {...?} values
     * @return {?}
     */function debugCheckRenderNodeFn(view,nodeIndex,argStyle){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];for(var _len8=arguments.length,values=Array(_len8>3?_len8-3:0),_key8=3;_key8<_len8;_key8++){values[_key8-3]=arguments[_key8];}if(checkType===CheckType.CheckAndUpdate){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.type===NodeType.Element||nodeDef.type===NodeType.Text){debugSetCurrentNode(view,nextRenderNodeWithBinding(view,nodeIndex));}return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeDef.index).value:undefined;}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?} givenValues
 * @return {?}
 */function debugCheckAndUpdateNode(view,nodeDef,argStyle,givenValues){var/** @type {?} */changed=checkAndUpdateNode.apply(undefined,[view,nodeDef,argStyle].concat(_toConsumableArray(givenValues)));if(changed){var/** @type {?} */values=argStyle===ArgumentType.Dynamic?givenValues[0]:givenValues;if(nodeDef.type===NodeType.Directive||nodeDef.type===NodeType.Element){var/** @type {?} */bindingValues={};for(var/** @type {?} */i=0;i<nodeDef.bindings.length;i++){var/** @type {?} */binding=nodeDef.bindings[i];var/** @type {?} */value=values[i];if(binding.type===BindingType.ElementProperty||binding.type===BindingType.ComponentHostProperty||binding.type===BindingType.DirectiveProperty){bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)]=normalizeDebugBindingValue(value);}}var/** @type {?} */elDef=nodeDef.type===NodeType.Directive?nodeDef.parent:nodeDef;var/** @type {?} */el=asElementData(view,elDef.index).renderElement;if(!elDef.element.name){// a comment.
view.renderer.setValue(el,'bindings='+JSON.stringify(bindingValues,null,2));}else{// a regular element.
for(var/** @type {?} */attr in bindingValues){var/** @type {?} */_value2=bindingValues[attr];if(_value2!=null){view.renderer.setAttribute(el,attr,_value2);}else{view.renderer.removeAttribute(el,attr);}}}}}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?} values
 * @return {?}
 */function debugCheckNoChangesNode(view,nodeDef,argStyle,values){checkNoChangesNode.apply(undefined,[view,nodeDef,argStyle].concat(_toConsumableArray(values)));}/**
 * @param {?} name
 * @return {?}
 */function normalizeDebugBindingName(name){// Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
name=camelCaseToDashCase$1(name.replace(/[$@]/g,'_'));return'ng-reflect-'+name;}var/** @type {?} */CAMEL_CASE_REGEXP$1=/([A-Z])/g;/**
 * @param {?} input
 * @return {?}
 */function camelCaseToDashCase$1(input){return input.replace(CAMEL_CASE_REGEXP$1,function(){for(var _len9=arguments.length,m=Array(_len9),_key9=0;_key9<_len9;_key9++){m[_key9]=arguments[_key9];}return'-'+m[1].toLowerCase();});}/**
 * @param {?} value
 * @return {?}
 */function normalizeDebugBindingValue(value){try{// Limit the size of the value as otherwise the DOM just gets polluted.
return value?value.toString().slice(0,30):value;}catch(e){return'[ERROR] Exception while trying to serialize the value';}}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @return {?}
 */function nextDirectiveWithBinding(view,nodeIndex){for(var/** @type {?} */i=nodeIndex;i<view.def.nodes.length;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.type===NodeType.Directive&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return undefined;}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @return {?}
 */function nextRenderNodeWithBinding(view,nodeIndex){for(var/** @type {?} */i=nodeIndex;i<view.def.nodes.length;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if((nodeDef.type===NodeType.Element||nodeDef.type===NodeType.Text)&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return undefined;}var DebugContext_=function(){/**
     * @param {?} view
     * @param {?} nodeIndex
     */function DebugContext_(view,nodeIndex){_classCallCheck(this,DebugContext_);this.view=view;this.nodeIndex=nodeIndex;if(nodeIndex==null){this.nodeIndex=nodeIndex=0;}this.nodeDef=view.def.nodes[nodeIndex];var elDef=this.nodeDef;var elView=view;while(elDef&&elDef.type!==NodeType.Element){elDef=elDef.parent;}if(!elDef){while(!elDef&&elView){elDef=viewParentEl(elView);elView=elView.parent;}}this.elDef=elDef;this.elView=elView;}/**
     * @return {?}
     */_createClass(DebugContext_,[{key:'elOrCompView',get:function get(){// Has to be done lazily as we use the DebugContext also during creation of elements...
return asElementData(this.elView,this.elDef.index).componentView||this.view;}/**
     * @return {?}
     */},{key:'injector',get:function get(){return createInjector(this.elView,this.elDef);}/**
     * @return {?}
     */},{key:'component',get:function get(){return this.elOrCompView.component;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this.elOrCompView.context;}/**
     * @return {?}
     */},{key:'providerTokens',get:function get(){var/** @type {?} */tokens=[];if(this.elDef){for(var/** @type {?} */i=this.elDef.index+1;i<=this.elDef.index+this.elDef.childCount;i++){var/** @type {?} */childDef=this.elView.def.nodes[i];if(childDef.type===NodeType.Provider||childDef.type===NodeType.Directive){tokens.push(childDef.provider.token);}i+=childDef.childCount;}}return tokens;}/**
     * @return {?}
     */},{key:'references',get:function get(){var/** @type {?} */references={};if(this.elDef){collectReferences(this.elView,this.elDef,references);for(var/** @type {?} */i=this.elDef.index+1;i<=this.elDef.index+this.elDef.childCount;i++){var/** @type {?} */childDef=this.elView.def.nodes[i];if(childDef.type===NodeType.Provider||childDef.type===NodeType.Directive){collectReferences(this.elView,childDef,references);}i+=childDef.childCount;}}return references;}/**
     * @return {?}
     */},{key:'source',get:function get(){if(this.nodeDef.type===NodeType.Text){return this.nodeDef.text.source;}else{return this.elDef.element.source;}}/**
     * @return {?}
     */},{key:'componentRenderElement',get:function get(){var/** @type {?} */elData=findHostElement(this.elOrCompView);return elData?elData.renderElement:undefined;}/**
     * @return {?}
     */},{key:'renderNode',get:function get(){return this.nodeDef.type===NodeType.Text?renderNode(this.view,this.nodeDef):renderNode(this.elView,this.elDef);}}]);return DebugContext_;}();/**
 * @param {?} view
 * @return {?}
 */function findHostElement(view){while(view&&!isComponentView(view)){view=view.parent;}if(view.parent){return asElementData(view.parent,viewParentEl(view).index);}return undefined;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} references
 * @return {?}
 */function collectReferences(view,nodeDef,references){for(var/** @type {?} */refName in nodeDef.references){references[refName]=getQueryValue(view,nodeDef,nodeDef.references[refName]);}}/**
 * @param {?} action
 * @param {?} fn
 * @param {?} self
 * @param {?} args
 * @return {?}
 */function callWithDebugContext(action,fn,self,args){var/** @type {?} */oldAction=_currentAction;var/** @type {?} */oldView=_currentView;var/** @type {?} */oldNodeIndex=_currentNodeIndex;try{_currentAction=action;var/** @type {?} */result=fn.apply(self,args);_currentView=oldView;_currentNodeIndex=oldNodeIndex;_currentAction=oldAction;return result;}catch(e){if(isViewDebugError(e)||!_currentView){throw e;}_currentView.state|=ViewState.Errored;throw viewWrappedDebugError(e,getCurrentDebugContext());}}/**
 * @return {?}
 */function getCurrentDebugContext(){return new DebugContext_(_currentView,_currentNodeIndex);}var DebugRendererFactoryV2=function(){/**
     * @param {?} delegate
     */function DebugRendererFactoryV2(delegate){_classCallCheck(this,DebugRendererFactoryV2);this.delegate=delegate;}/**
     * @param {?} element
     * @param {?} renderData
     * @return {?}
     */_createClass(DebugRendererFactoryV2,[{key:'createRenderer',value:function createRenderer(element,renderData){return new DebugRendererV2(this.delegate.createRenderer(element,renderData));}}]);return DebugRendererFactoryV2;}();var DebugRendererV2=function(){/**
     * @param {?} delegate
     */function DebugRendererV2(delegate){_classCallCheck(this,DebugRendererV2);this.delegate=delegate;}/**
     * @return {?}
     */_createClass(DebugRendererV2,[{key:'destroyNode',/**
     * @param {?} node
     * @return {?}
     */value:function destroyNode(node){removeDebugNodeFromIndex(getDebugNode(node));if(this.delegate.destroyNode){this.delegate.destroyNode(node);}}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this.delegate.destroy();}/**
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'createElement',value:function createElement(name,namespace){var/** @type {?} */el=this.delegate.createElement(name,namespace);var/** @type {?} */debugEl=new DebugElement(el,null,getCurrentDebugContext());debugEl.name=name;indexDebugNode(debugEl);return el;}/**
     * @param {?} value
     * @return {?}
     */},{key:'createComment',value:function createComment(value){var/** @type {?} */comment=this.delegate.createComment(value);var/** @type {?} */debugEl=new DebugNode(comment,null,getCurrentDebugContext());indexDebugNode(debugEl);return comment;}/**
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(value){var/** @type {?} */text=this.delegate.createText(value);var/** @type {?} */debugEl=new DebugNode(text,null,getCurrentDebugContext());indexDebugNode(debugEl);return text;}/**
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){var/** @type {?} */debugEl=getDebugNode(parent);var/** @type {?} */debugChildEl=getDebugNode(newChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.addChild(debugChildEl);}this.delegate.appendChild(parent,newChild);}/**
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){var/** @type {?} */debugEl=getDebugNode(parent);var/** @type {?} */debugChildEl=getDebugNode(newChild);var/** @type {?} */debugRefEl=getDebugNode(refChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.insertBefore(debugRefEl,debugChildEl);}this.delegate.insertBefore(parent,newChild,refChild);}/**
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){var/** @type {?} */debugEl=getDebugNode(parent);var/** @type {?} */debugChildEl=getDebugNode(oldChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.removeChild(debugChildEl);}this.delegate.removeChild(parent,oldChild);}/**
     * @param {?} selectorOrNode
     * @return {?}
     */},{key:'selectRootElement',value:function selectRootElement(selectorOrNode){var/** @type {?} */el=this.delegate.selectRootElement(selectorOrNode);var/** @type {?} */debugEl=new DebugElement(el,null,getCurrentDebugContext());indexDebugNode(debugEl);return el;}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @param {?=} namespace
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(el,name,value,namespace){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var/** @type {?} */fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=value;}this.delegate.setAttribute(el,name,value,namespace);}/**
     * @param {?} el
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(el,name,namespace){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var/** @type {?} */fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=null;}this.delegate.removeAttribute(el,name,namespace);}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'addClass',value:function addClass(el,name){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=true;}this.delegate.addClass(el,name);}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'removeClass',value:function removeClass(el,name){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=false;}this.delegate.removeClass(el,name);}/**
     * @param {?} el
     * @param {?} style
     * @param {?} value
     * @param {?} hasVendorPrefix
     * @param {?} hasImportant
     * @return {?}
     */},{key:'setStyle',value:function setStyle(el,style,value,hasVendorPrefix,hasImportant){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=value;}this.delegate.setStyle(el,style,value,hasVendorPrefix,hasImportant);}/**
     * @param {?} el
     * @param {?} style
     * @param {?} hasVendorPrefix
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(el,style,hasVendorPrefix){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=null;}this.delegate.removeStyle(el,style,hasVendorPrefix);}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.properties[name]=value;}this.delegate.setProperty(el,name,value);}/**
     * @param {?} target
     * @param {?} eventName
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(target,eventName,callback){if(typeof target!=='string'){var/** @type {?} */debugEl=getDebugNode(target);if(debugEl){debugEl.listeners.push(new EventListener(eventName,callback));}}return this.delegate.listen(target,eventName,callback);}/**
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){return this.delegate.parentNode(node);}/**
     * @param {?} node
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(node){return this.delegate.nextSibling(node);}/**
     * @param {?} node
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(node,value){return this.delegate.setValue(node,value);}},{key:'data',get:function get(){return this.delegate.data;}}]);return DebugRendererV2;}();/**
 * @return {?}
 */function _iterableDiffersFactory(){return defaultIterableDiffers;}/**
 * @return {?}
 */function _keyValueDiffersFactory(){return defaultKeyValueDiffers;}/**
 * @param {?=} locale
 * @return {?}
 */function _localeFactory(locale){return locale||'en-US';}/**
 * @return {?}
 */function _initViewEngine(){initServicesIfNeeded();}/**
 * This module includes the providers of \@angular/core that are needed
 * to bootstrap components via `ApplicationRef`.
 *
 * \@experimental
 */var ApplicationModule=function ApplicationModule(){_classCallCheck(this,ApplicationModule);};ApplicationModule.decorators=[{type:NgModule,args:[{providers:[ApplicationRef_,{provide:ApplicationRef,useExisting:ApplicationRef_},ApplicationInitStatus,Compiler,APP_ID_RANDOM_PROVIDER,ViewUtils,AnimationQueue,{provide:IterableDiffers,useFactory:_iterableDiffersFactory},{provide:KeyValueDiffers,useFactory:_keyValueDiffersFactory},{provide:LOCALE_ID,useFactory:_localeFactory,deps:[[new Inject(LOCALE_ID),new Optional(),new SkipSelf()]]},{provide:APP_INITIALIZER,useValue:_initViewEngine,multi:true}]}]}];/** @nocollapse */ApplicationModule.ctorParameters=function(){return[];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */FILL_STYLE_FLAG='true';// TODO (matsko): change to boolean
// TODO (matsko): change to boolean
var/** @type {?} */ANY_STATE='*';var/** @type {?} */DEFAULT_STATE='*';var/** @type {?} */EMPTY_STATE='void';var AnimationGroupPlayer=function(){/**
     * @param {?} _players
     */function AnimationGroupPlayer(_players){var _this31=this;_classCallCheck(this,AnimationGroupPlayer);this._players=_players;this._onDoneFns=[];this._onStartFns=[];this._finished=false;this._started=false;this._destroyed=false;this._onDestroyFns=[];this.parentPlayer=null;var count=0;var total=this._players.length;if(total==0){scheduleMicroTask(function(){return _this31._onFinish();});}else{this._players.forEach(function(player){player.parentPlayer=_this31;player.onDone(function(){if(++count>=total){_this31._onFinish();}});});}}/**
     * @return {?}
     */_createClass(AnimationGroupPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @return {?}
     */},{key:'init',value:function init(){this._players.forEach(function(player){return player.init();});}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!isPresent(this.parentPlayer)){this.init();}if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];this._started=true;}this._players.forEach(function(player){return player.play();});}/**
     * @return {?}
     */},{key:'pause',value:function pause(){this._players.forEach(function(player){return player.pause();});}/**
     * @return {?}
     */},{key:'restart',value:function restart(){this._players.forEach(function(player){return player.restart();});}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();this._players.forEach(function(player){return player.finish();});}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._onFinish();this._players.forEach(function(player){return player.destroy();});this._destroyed=true;this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this._players.forEach(function(player){return player.reset();});this._destroyed=false;this._finished=false;this._started=false;}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){this._players.forEach(function(player){player.setPosition(p);});}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){var/** @type {?} */min=0;this._players.forEach(function(player){var/** @type {?} */p=player.getPosition();min=Math.min(p,min);});return min;}/**
     * @return {?}
     */},{key:'players',get:function get(){return this._players;}}]);return AnimationGroupPlayer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * `AnimationKeyframe` consists of a series of styles (contained within {\@link AnimationStyles
 * `AnimationStyles`})
 * and an offset value indicating when those styles are applied within the `duration/delay/easing`
 * timings.
 * `AnimationKeyframe` is mostly an internal class which is designed to be used alongside {\@link
 * Renderer#animate-anchor `Renderer.animate`}.
 *
 * \@experimental Animation support is experimental
 */var AnimationKeyframe=/**
     * @param {?} offset
     * @param {?} styles
     */function AnimationKeyframe(offset,styles){_classCallCheck(this,AnimationKeyframe);this.offset=offset;this.styles=styles;};var AnimationSequencePlayer=function(){/**
     * @param {?} _players
     */function AnimationSequencePlayer(_players){var _this32=this;_classCallCheck(this,AnimationSequencePlayer);this._players=_players;this._currentIndex=0;this._onDoneFns=[];this._onStartFns=[];this._onDestroyFns=[];this._finished=false;this._started=false;this._destroyed=false;this.parentPlayer=null;this._players.forEach(function(player){player.parentPlayer=_this32;});this._onNext(false);}/**
     * @param {?} start
     * @return {?}
     */_createClass(AnimationSequencePlayer,[{key:'_onNext',value:function _onNext(start){var _this33=this;if(this._finished)return;if(this._players.length==0){this._activePlayer=new NoOpAnimationPlayer();scheduleMicroTask(function(){return _this33._onFinish();});}else if(this._currentIndex>=this._players.length){this._activePlayer=new NoOpAnimationPlayer();this._onFinish();}else{var/** @type {?} */player=this._players[this._currentIndex++];player.onDone(function(){return _this33._onNext(true);});this._activePlayer=player;if(start){player.play();}}}/**
     * @return {?}
     */},{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @return {?}
     */},{key:'init',value:function init(){this._players.forEach(function(player){return player.init();});}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!isPresent(this.parentPlayer)){this.init();}if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];this._started=true;}this._activePlayer.play();}/**
     * @return {?}
     */},{key:'pause',value:function pause(){this._activePlayer.pause();}/**
     * @return {?}
     */},{key:'restart',value:function restart(){this.reset();if(this._players.length>0){this._players[0].restart();}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this._players.forEach(function(player){return player.reset();});this._destroyed=false;this._finished=false;this._started=false;}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();this._players.forEach(function(player){return player.finish();});}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._onFinish();this._players.forEach(function(player){return player.destroy();});this._destroyed=true;this._activePlayer=new NoOpAnimationPlayer();this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){this._players[0].setPosition(p);}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){return this._players[0].getPosition();}/**
     * @return {?}
     */},{key:'players',get:function get(){return this._players;}}]);return AnimationSequencePlayer;}();/**
 * @experimental Animation support is experimental.
 */var/** @type {?} */AUTO_STYLE='*';/**
 * @param {?} previousStyles
 * @param {?} newStyles
 * @param {?=} nullValue
 * @return {?}
 */function prepareFinalAnimationStyles(previousStyles,newStyles){var nullValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */finalStyles={};Object.keys(newStyles).forEach(function(prop){var/** @type {?} */value=newStyles[prop];finalStyles[prop]=value==AUTO_STYLE?nullValue:value.toString();});Object.keys(previousStyles).forEach(function(prop){if(!isPresent(finalStyles[prop])){finalStyles[prop]=nullValue;}});return finalStyles;}/**
 * @param {?} collectedStyles
 * @param {?} finalStateStyles
 * @param {?} keyframes
 * @return {?}
 */function balanceAnimationKeyframes(collectedStyles,finalStateStyles,keyframes){var/** @type {?} */limit=keyframes.length-1;var/** @type {?} */firstKeyframe=keyframes[0];// phase 1: copy all the styles from the first keyframe into the lookup map
var/** @type {?} */flatenedFirstKeyframeStyles=flattenStyles(firstKeyframe.styles.styles);var/** @type {?} */extraFirstKeyframeStyles={};var/** @type {?} */hasExtraFirstStyles=false;Object.keys(collectedStyles).forEach(function(prop){var/** @type {?} */value=collectedStyles[prop];// if the style is already defined in the first keyframe then
// we do not replace it.
if(!flatenedFirstKeyframeStyles[prop]){flatenedFirstKeyframeStyles[prop]=value;extraFirstKeyframeStyles[prop]=value;hasExtraFirstStyles=true;}});var/** @type {?} */keyframeCollectedStyles=StringMapWrapper.merge({},flatenedFirstKeyframeStyles);// phase 2: normalize the final keyframe
var/** @type {?} */finalKeyframe=keyframes[limit];finalKeyframe.styles.styles.unshift(finalStateStyles);var/** @type {?} */flatenedFinalKeyframeStyles=flattenStyles(finalKeyframe.styles.styles);var/** @type {?} */extraFinalKeyframeStyles={};var/** @type {?} */hasExtraFinalStyles=false;Object.keys(keyframeCollectedStyles).forEach(function(prop){if(!isPresent(flatenedFinalKeyframeStyles[prop])){extraFinalKeyframeStyles[prop]=AUTO_STYLE;hasExtraFinalStyles=true;}});if(hasExtraFinalStyles){finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);}Object.keys(flatenedFinalKeyframeStyles).forEach(function(prop){if(!isPresent(flatenedFirstKeyframeStyles[prop])){extraFirstKeyframeStyles[prop]=AUTO_STYLE;hasExtraFirstStyles=true;}});if(hasExtraFirstStyles){firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);}collectAndResolveStyles(collectedStyles,[finalStateStyles]);return keyframes;}/**
 * @param {?} styles
 * @return {?}
 */function clearStyles(styles){var/** @type {?} */finalStyles={};Object.keys(styles).forEach(function(key){finalStyles[key]=null;});return finalStyles;}/**
 * @param {?} collection
 * @param {?} styles
 * @return {?}
 */function collectAndResolveStyles(collection,styles){return styles.map(function(entry){var/** @type {?} */stylesObj={};Object.keys(entry).forEach(function(prop){var/** @type {?} */value=entry[prop];if(value==FILL_STYLE_FLAG){value=collection[prop];if(!isPresent(value)){value=AUTO_STYLE;}}collection[prop]=value;stylesObj[prop]=value;});return stylesObj;});}/**
 * @param {?} element
 * @param {?} renderer
 * @param {?} styles
 * @return {?}
 */function renderStyles(element,renderer,styles){Object.keys(styles).forEach(function(prop){renderer.setElementStyle(element,prop,styles[prop]);});}/**
 * @param {?} styles
 * @return {?}
 */function flattenStyles(styles){var/** @type {?} */finalStyles={};styles.forEach(function(entry){Object.keys(entry).forEach(function(prop){finalStyles[prop]=entry[prop];});});return finalStyles;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * `AnimationStyles` consists of a collection of key/value maps containing CSS-based style data
 * that can either be used as initial styling data or apart of a series of keyframes within an
 * animation.
 * This class is mostly internal, and it is designed to be used alongside
 * {\@link AnimationKeyframe `AnimationKeyframe`} and {\@link Renderer#animate-anchor
 * `Renderer.animate`}.
 *
 * \@experimental Animation support is experimental
 */var AnimationStyles=/**
     * @param {?} styles
     */function AnimationStyles(styles){_classCallCheck(this,AnimationStyles);this.styles=styles;};/**
 * An instance of this class is returned as an event parameter when an animation
 * callback is captured for an animation either during the start or done phase.
 *
 * ```typescript
 * \@Component({
 *   host: {
 *     '[\@myAnimationTrigger]': 'someExpression',
 *     '(\@myAnimationTrigger.start)': 'captureStartEvent($event)',
 *     '(\@myAnimationTrigger.done)': 'captureDoneEvent($event)',
 *   },
 *   animations: [
 *     trigger("myAnimationTrigger", [
 *        // ...
 *     ])
 *   ]
 * })
 * class MyComponent {
 *   someExpression: any = false;
 *   captureStartEvent(event: AnimationTransitionEvent) {
 *     // the toState, fromState and totalTime data is accessible from the event variable
 *   }
 *
 *   captureDoneEvent(event: AnimationTransitionEvent) {
 *     // the toState, fromState and totalTime data is accessible from the event variable
 *   }
 * }
 * ```
 *
 * \@experimental Animation support is experimental.
 */var AnimationTransitionEvent=/**
     * @param {?} __0
     */function AnimationTransitionEvent(_ref7){var fromState=_ref7.fromState,toState=_ref7.toState,totalTime=_ref7.totalTime,phaseName=_ref7.phaseName,element=_ref7.element,triggerName=_ref7.triggerName;_classCallCheck(this,AnimationTransitionEvent);this.fromState=fromState;this.toState=toState;this.totalTime=totalTime;this.phaseName=phaseName;this.element=new ElementRef(element);this.triggerName=triggerName;};var AnimationTransition=function(){/**
     * @param {?} _player
     * @param {?} _element
     * @param {?} _triggerName
     * @param {?} _fromState
     * @param {?} _toState
     * @param {?} _totalTime
     */function AnimationTransition(_player,_element,_triggerName,_fromState,_toState,_totalTime){_classCallCheck(this,AnimationTransition);this._player=_player;this._element=_element;this._triggerName=_triggerName;this._fromState=_fromState;this._toState=_toState;this._totalTime=_totalTime;}/**
     * @param {?} phaseName
     * @return {?}
     */_createClass(AnimationTransition,[{key:'_createEvent',value:function _createEvent(phaseName){return new AnimationTransitionEvent({fromState:this._fromState,toState:this._toState,totalTime:this._totalTime,phaseName:phaseName,element:this._element,triggerName:this._triggerName});}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onStart',value:function onStart(callback){var _this34=this;var/** @type {?} */fn=Zone.current.wrap(function(){return callback(_this34._createEvent('start'));},'player.onStart');this._player.onStart(fn);}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDone',value:function onDone(callback){var _this35=this;var/** @type {?} */fn=Zone.current.wrap(function(){return callback(_this35._createEvent('done'));},'player.onDone');this._player.onDone(fn);}}]);return AnimationTransition;}();var DebugDomRootRenderer=function(){/**
     * @param {?} _delegate
     */function DebugDomRootRenderer(_delegate){_classCallCheck(this,DebugDomRootRenderer);this._delegate=_delegate;throw new Error('RootRenderer is no longer supported. Please use the `RendererFactoryV2` instead!');}/**
     * @param {?} componentProto
     * @return {?}
     */_createClass(DebugDomRootRenderer,[{key:'renderComponent',value:function renderComponent(componentProto){return new DebugDomRenderer(this._delegate.renderComponent(componentProto));}}]);return DebugDomRootRenderer;}();var DebugDomRenderer=function(){/**
     * @param {?} _delegate
     */function DebugDomRenderer(_delegate){_classCallCheck(this,DebugDomRenderer);this._delegate=_delegate;}/**
     * @param {?} selectorOrNode
     * @param {?=} debugInfo
     * @return {?}
     */_createClass(DebugDomRenderer,[{key:'selectRootElement',value:function selectRootElement(selectorOrNode,debugInfo){var/** @type {?} */nativeEl=this._delegate.selectRootElement(selectorOrNode,debugInfo);var/** @type {?} */debugEl=new DebugElement(nativeEl,null,debugInfo);indexDebugNode(debugEl);return nativeEl;}/**
     * @param {?} parentElement
     * @param {?} name
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createElement',value:function createElement(parentElement,name,debugInfo){var/** @type {?} */nativeEl=this._delegate.createElement(parentElement,name,debugInfo);var/** @type {?} */debugEl=new DebugElement(nativeEl,getDebugNode(parentElement),debugInfo);debugEl.name=name;indexDebugNode(debugEl);return nativeEl;}/**
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){return this._delegate.createViewRoot(hostElement);}/**
     * @param {?} parentElement
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement,debugInfo){var/** @type {?} */comment=this._delegate.createTemplateAnchor(parentElement,debugInfo);var/** @type {?} */debugEl=new DebugNode(comment,getDebugNode(parentElement),debugInfo);indexDebugNode(debugEl);return comment;}/**
     * @param {?} parentElement
     * @param {?} value
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value,debugInfo){var/** @type {?} */text=this._delegate.createText(parentElement,value,debugInfo);var/** @type {?} */debugEl=new DebugNode(text,getDebugNode(parentElement),debugInfo);indexDebugNode(debugEl);return text;}/**
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){var/** @type {?} */debugParent=getDebugNode(parentElement);if(isPresent(debugParent)&&debugParent instanceof DebugElement){var/** @type {?} */debugElement=debugParent;nodes.forEach(function(node){debugElement.addChild(getDebugNode(node));});}this._delegate.projectNodes(parentElement,nodes);}/**
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){var/** @type {?} */debugNode=getDebugNode(node);if(isPresent(debugNode)){var/** @type {?} */debugParent=debugNode.parent;if(viewRootNodes.length>0&&isPresent(debugParent)){var/** @type {?} */debugViewRootNodes=[];viewRootNodes.forEach(function(rootNode){return debugViewRootNodes.push(getDebugNode(rootNode));});debugParent.insertChildrenAfter(debugNode,debugViewRootNodes);}}this._delegate.attachViewAfter(node,viewRootNodes);}/**
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){viewRootNodes.forEach(function(node){var/** @type {?} */debugNode=getDebugNode(node);if(debugNode&&debugNode.parent){debugNode.parent.removeChild(debugNode);}});this._delegate.detachView(viewRootNodes);}/**
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){viewAllNodes=viewAllNodes||[];viewAllNodes.forEach(function(node){removeDebugNodeFromIndex(getDebugNode(node));});this._delegate.destroyView(hostElement,viewAllNodes);}/**
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent(debugEl)){debugEl.listeners.push(new EventListener(name,callback));}return this._delegate.listen(renderElement,name,callback);}/**
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){return this._delegate.listenGlobal(target,name,callback);}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent(debugEl)&&debugEl instanceof DebugElement){debugEl.properties[propertyName]=propertyValue;}this._delegate.setElementProperty(renderElement,propertyName,propertyValue);}/**
     * @param {?} renderElement
     * @param {?} attributeName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,attributeName,attributeValue){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent(debugEl)&&debugEl instanceof DebugElement){debugEl.attributes[attributeName]=attributeValue;}this._delegate.setElementAttribute(renderElement,attributeName,attributeValue);}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){this._delegate.setBindingDebugInfo(renderElement,propertyName,propertyValue);}/**
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent(debugEl)&&debugEl instanceof DebugElement){debugEl.classes[className]=isAdd;}this._delegate.setElementClass(renderElement,className,isAdd);}/**
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent(debugEl)&&debugEl instanceof DebugElement){debugEl.styles[styleName]=styleValue;}this._delegate.setElementStyle(renderElement,styleName,styleValue);}/**
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?=} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){this._delegate.invokeElementMethod(renderElement,methodName,args);}/**
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){this._delegate.setText(renderNode,text);}/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */},{key:'animate',value:function animate(element,startingStyles,keyframes,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];return this._delegate.animate(element,startingStyles,keyframes,duration,delay,easing,previousPlayers);}}]);return DebugDomRenderer;}();var ViewType={};ViewType.HOST=0;ViewType.COMPONENT=1;ViewType.EMBEDDED=2;ViewType[ViewType.HOST]="HOST";ViewType[ViewType.COMPONENT]="COMPONENT";ViewType[ViewType.EMBEDDED]="EMBEDDED";var StaticNodeDebugInfo=/**
     * @param {?} providerTokens
     * @param {?} componentToken
     * @param {?} refTokens
     */function StaticNodeDebugInfo(providerTokens,componentToken,refTokens){_classCallCheck(this,StaticNodeDebugInfo);this.providerTokens=providerTokens;this.componentToken=componentToken;this.refTokens=refTokens;};var DebugContext$1=function(){/**
     * @param {?} _view
     * @param {?} _nodeIndex
     * @param {?} _tplRow
     * @param {?} _tplCol
     */function DebugContext$1(_view,_nodeIndex,_tplRow,_tplCol){_classCallCheck(this,DebugContext$1);this._view=_view;this._nodeIndex=_nodeIndex;this._tplRow=_tplRow;this._tplCol=_tplCol;}/**
     * @return {?}
     */_createClass(DebugContext$1,[{key:'_staticNodeInfo',get:function get(){return isPresent(this._nodeIndex)?this._view.staticNodeDebugInfos[this._nodeIndex]:null;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._view.context;}/**
     * @return {?}
     */},{key:'component',get:function get(){var/** @type {?} */staticNodeInfo=this._staticNodeInfo;if(isPresent(staticNodeInfo)&&isPresent(staticNodeInfo.componentToken)){return this.injector.get(staticNodeInfo.componentToken);}return null;}/**
     * @return {?}
     */},{key:'componentRenderElement',get:function get(){var/** @type {?} */componentView=this._view;while(isPresent(componentView.parentView)&&componentView.type!==ViewType.COMPONENT){componentView=componentView.parentView;}return componentView.parentElement;}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this._view.injector(this._nodeIndex);}/**
     * @return {?}
     */},{key:'renderNode',get:function get(){if(isPresent(this._nodeIndex)&&this._view.allNodes){return this._view.allNodes[this._nodeIndex];}else{return null;}}/**
     * @return {?}
     */},{key:'providerTokens',get:function get(){var/** @type {?} */staticNodeInfo=this._staticNodeInfo;return isPresent(staticNodeInfo)?staticNodeInfo.providerTokens:null;}/**
     * @return {?}
     */},{key:'source',get:function get(){return this._view.componentType.templateUrl+':'+this._tplRow+':'+this._tplCol;}/**
     * @return {?}
     */},{key:'references',get:function get(){var _this36=this;var/** @type {?} */varValues={};var/** @type {?} */staticNodeInfo=this._staticNodeInfo;if(isPresent(staticNodeInfo)){var/** @type {?} */refs=staticNodeInfo.refTokens;Object.keys(refs).forEach(function(refName){var/** @type {?} */refToken=refs[refName];var/** @type {?} */varValue=void 0;if(isBlank(refToken)){varValue=_this36._view.allNodes?_this36._view.allNodes[_this36._nodeIndex]:null;}else{varValue=_this36._view.injectorGet(refToken,_this36._nodeIndex,null);}varValues[refName]=varValue;});}return varValues;}}]);return DebugContext$1;}();var ViewAnimationMap=function(){function ViewAnimationMap(){_classCallCheck(this,ViewAnimationMap);this._map=new Map();this._allPlayers=[];}/**
     * @param {?} element
     * @param {?} animationName
     * @return {?}
     */_createClass(ViewAnimationMap,[{key:'find',value:function find(element,animationName){var/** @type {?} */playersByAnimation=this._map.get(element);if(isPresent(playersByAnimation)){return playersByAnimation[animationName];}}/**
     * @param {?} element
     * @return {?}
     */},{key:'findAllPlayersByElement',value:function findAllPlayersByElement(element){var/** @type {?} */el=this._map.get(element);return el?Object.keys(el).map(function(k){return el[k];}):[];}/**
     * @param {?} element
     * @param {?} animationName
     * @param {?} player
     * @return {?}
     */},{key:'set',value:function set(element,animationName,player){var/** @type {?} */playersByAnimation=this._map.get(element);if(!isPresent(playersByAnimation)){playersByAnimation={};}var/** @type {?} */existingEntry=playersByAnimation[animationName];if(isPresent(existingEntry)){this.remove(element,animationName);}playersByAnimation[animationName]=player;this._allPlayers.push(player);this._map.set(element,playersByAnimation);}/**
     * @return {?}
     */},{key:'getAllPlayers',value:function getAllPlayers(){return this._allPlayers;}/**
     * @param {?} element
     * @param {?} animationName
     * @param {?=} targetPlayer
     * @return {?}
     */},{key:'remove',value:function remove(element,animationName){var targetPlayer=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */playersByAnimation=this._map.get(element);if(playersByAnimation){var/** @type {?} */player=playersByAnimation[animationName];if(!targetPlayer||player===targetPlayer){delete playersByAnimation[animationName];var/** @type {?} */index=this._allPlayers.indexOf(player);this._allPlayers.splice(index,1);if(Object.keys(playersByAnimation).length===0){this._map.delete(element);}}}}}]);return ViewAnimationMap;}();var AnimationViewContext=function(){/**
     * @param {?} _animationQueue
     */function AnimationViewContext(_animationQueue){_classCallCheck(this,AnimationViewContext);this._animationQueue=_animationQueue;this._players=new ViewAnimationMap();}/**
     * @param {?} callback
     * @return {?}
     */_createClass(AnimationViewContext,[{key:'onAllActiveAnimationsDone',value:function onAllActiveAnimationsDone(callback){var/** @type {?} */activeAnimationPlayers=this._players.getAllPlayers();// we check for the length to avoid having GroupAnimationPlayer
// issue an unnecessary microtask when zero players are passed in
if(activeAnimationPlayers.length){new AnimationGroupPlayer(activeAnimationPlayers).onDone(function(){return callback();});}else{callback();}}/**
     * @param {?} element
     * @param {?} animationName
     * @param {?} player
     * @return {?}
     */},{key:'queueAnimation',value:function queueAnimation(element,animationName,player){var _this37=this;this._animationQueue.enqueue(player);this._players.set(element,animationName,player);player.onDone(function(){return _this37._players.remove(element,animationName,player);});}/**
     * @param {?} element
     * @param {?=} animationName
     * @return {?}
     */},{key:'getAnimationPlayers',value:function getAnimationPlayers(element){var animationName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */players=[];if(animationName){var/** @type {?} */currentPlayer=this._players.find(element,animationName);if(currentPlayer){_recursePlayers(currentPlayer,players);}}else{this._players.findAllPlayersByElement(element).forEach(function(player){return _recursePlayers(player,players);});}return players;}}]);return AnimationViewContext;}();/**
 * @param {?} player
 * @param {?} collectedPlayers
 * @return {?}
 */function _recursePlayers(player,collectedPlayers){if(player instanceof AnimationGroupPlayer||player instanceof AnimationSequencePlayer){player.players.forEach(function(player){return _recursePlayers(player,collectedPlayers);});}else{collectedPlayers.push(player);}}var ElementInjector=function(_Injector){_inherits(ElementInjector,_Injector);/**
     * @param {?} _view
     * @param {?} _nodeIndex
     */function ElementInjector(_view,_nodeIndex){_classCallCheck(this,ElementInjector);var _this38=_possibleConstructorReturn(this,(ElementInjector.__proto__||Object.getPrototypeOf(ElementInjector)).call(this));_this38._view=_view;_this38._nodeIndex=_nodeIndex;return _this38;}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */_createClass(ElementInjector,[{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:THROW_IF_NOT_FOUND;return this._view.injectorGet(token,this._nodeIndex,notFoundValue);}}]);return ElementInjector;}(Injector);var/** @type {?} */_scope_check=wtfCreateScope('AppView#check(ascii id)');/**
 * @experimental
 */var/** @type {?} */EMPTY_CONTEXT$1=new Object();var/** @type {?} */UNDEFINED$1=new Object();/**
 * Cost of making objects: http://jsperf.com/instantiate-size-of-object
 *
 * @abstract
 */var AppView=function(){/**
     * @param {?} clazz
     * @param {?} componentType
     * @param {?} type
     * @param {?} viewUtils
     * @param {?} parentView
     * @param {?} parentIndex
     * @param {?} parentElement
     * @param {?} cdMode
     * @param {?=} declaredViewContainer
     */function AppView(clazz,componentType,type,viewUtils,parentView,parentIndex,parentElement,cdMode){var declaredViewContainer=arguments.length>8&&arguments[8]!==undefined?arguments[8]:null;_classCallCheck(this,AppView);this.clazz=clazz;this.componentType=componentType;this.type=type;this.viewUtils=viewUtils;this.parentView=parentView;this.parentIndex=parentIndex;this.parentElement=parentElement;this.cdMode=cdMode;this.declaredViewContainer=declaredViewContainer;this.numberOfChecks=0;this.throwOnChange=false;this.ref=new ViewRef_(this,viewUtils.animationQueue);if(type===ViewType.COMPONENT||type===ViewType.HOST){this.renderer=viewUtils.renderComponent(componentType);}else{this.renderer=parentView.renderer;}this._directRenderer=this.renderer.directRenderer;}/**
     * @return {?}
     */_createClass(AppView,[{key:'create',/**
     * @param {?} context
     * @return {?}
     */value:function create(context){this.context=context;return this.createInternal(null);}/**
     * @param {?} rootSelectorOrNode
     * @param {?} hostInjector
     * @param {?} projectableNodes
     * @return {?}
     */},{key:'createHostView',value:function createHostView(rootSelectorOrNode,hostInjector,projectableNodes){this.context=EMPTY_CONTEXT$1;this._hasExternalHostElement=isPresent(rootSelectorOrNode);this._hostInjector=hostInjector;this._hostProjectableNodes=projectableNodes;return this.createInternal(rootSelectorOrNode);}/**
     * Overwritten by implementations.
     * Returns the ComponentRef for the host element for ViewType.HOST.
     * @param {?} rootSelectorOrNode
     * @return {?}
     */},{key:'createInternal',value:function createInternal(rootSelectorOrNode){return null;}/**
     * Overwritten by implementations.
     * @param {?} templateNodeIndex
     * @return {?}
     */},{key:'createEmbeddedViewInternal',value:function createEmbeddedViewInternal(templateNodeIndex){return null;}/**
     * @param {?} lastRootNode
     * @param {?} allNodes
     * @param {?} disposables
     * @return {?}
     */},{key:'init',value:function init(lastRootNode,allNodes,disposables){this.lastRootNode=lastRootNode;this.allNodes=allNodes;this.disposables=disposables;if(this.type===ViewType.COMPONENT){this.dirtyParentQueriesInternal();}}/**
     * @param {?} token
     * @param {?} nodeIndex
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'injectorGet',value:function injectorGet(token,nodeIndex){var notFoundValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:THROW_IF_NOT_FOUND;var/** @type {?} */result=UNDEFINED$1;var/** @type {?} */view=this;while(result===UNDEFINED$1){if(isPresent(nodeIndex)){result=view.injectorGetInternal(token,nodeIndex,UNDEFINED$1);}if(result===UNDEFINED$1&&view.type===ViewType.HOST){result=view._hostInjector.get(token,notFoundValue);}nodeIndex=view.parentIndex;view=view.parentView;}return result;}/**
     * Overwritten by implementations
     * @param {?} token
     * @param {?} nodeIndex
     * @param {?} notFoundResult
     * @return {?}
     */},{key:'injectorGetInternal',value:function injectorGetInternal(token,nodeIndex,notFoundResult){return notFoundResult;}/**
     * @param {?} nodeIndex
     * @return {?}
     */},{key:'injector',value:function injector(nodeIndex){return new ElementInjector(this,nodeIndex);}/**
     * @return {?}
     */},{key:'detachAndDestroy',value:function detachAndDestroy(){if(this.viewContainer){this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));}else if(this.appRef){this.appRef.detachView(this.ref);}else if(this._hasExternalHostElement){this.detach();}this.destroy();}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){var _this39=this;if(this.cdMode===ChangeDetectorStatus.Destroyed){return;}var/** @type {?} */hostElement=this.type===ViewType.COMPONENT?this.parentElement:null;if(this.disposables){for(var/** @type {?} */i=0;i<this.disposables.length;i++){this.disposables[i]();}}this.destroyInternal();this.dirtyParentQueriesInternal();if(this._animationContext){this._animationContext.onAllActiveAnimationsDone(function(){return _this39.renderer.destroyView(hostElement,_this39.allNodes);});}else{this.renderer.destroyView(hostElement,this.allNodes);}this.cdMode=ChangeDetectorStatus.Destroyed;}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'destroyInternal',value:function destroyInternal(){}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'detachInternal',value:function detachInternal(){}/**
     * @return {?}
     */},{key:'detach',value:function detach(){var _this40=this;this.detachInternal();if(this._animationContext){this._animationContext.onAllActiveAnimationsDone(function(){return _this40._renderDetach();});}else{this._renderDetach();}if(this.declaredViewContainer&&this.declaredViewContainer!==this.viewContainer&&this.declaredViewContainer.projectedViews){var/** @type {?} */projectedViews=this.declaredViewContainer.projectedViews;var/** @type {?} */index=projectedViews.indexOf(this);// perf: pop is faster than splice!
if(index>=projectedViews.length-1){projectedViews.pop();}else{projectedViews.splice(index,1);}}this.appRef=null;this.viewContainer=null;this.dirtyParentQueriesInternal();}/**
     * @return {?}
     */},{key:'_renderDetach',value:function _renderDetach(){if(this._directRenderer){this.visitRootNodesInternal(this._directRenderer.remove,null);}else{this.renderer.detachView(this.flatRootNodes);}}/**
     * @param {?} appRef
     * @return {?}
     */},{key:'attachToAppRef',value:function attachToAppRef(appRef){if(this.viewContainer){throw new Error('This view is already attached to a ViewContainer!');}this.appRef=appRef;this.dirtyParentQueriesInternal();}/**
     * @param {?} viewContainer
     * @param {?} prevView
     * @return {?}
     */},{key:'attachAfter',value:function attachAfter(viewContainer,prevView){if(this.appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._renderAttach(viewContainer,prevView);this.viewContainer=viewContainer;if(this.declaredViewContainer&&this.declaredViewContainer!==viewContainer){if(!this.declaredViewContainer.projectedViews){this.declaredViewContainer.projectedViews=[];}this.declaredViewContainer.projectedViews.push(this);}this.dirtyParentQueriesInternal();}/**
     * @param {?} viewContainer
     * @param {?} prevView
     * @return {?}
     */},{key:'moveAfter',value:function moveAfter(viewContainer,prevView){this._renderAttach(viewContainer,prevView);this.dirtyParentQueriesInternal();}/**
     * @param {?} viewContainer
     * @param {?} prevView
     * @return {?}
     */},{key:'_renderAttach',value:function _renderAttach(viewContainer,prevView){var/** @type {?} */prevNode=prevView?prevView.lastRootNode:viewContainer.nativeElement;if(this._directRenderer){var/** @type {?} */nextSibling=this._directRenderer.nextSibling(prevNode);if(nextSibling){this.visitRootNodesInternal(this._directRenderer.insertBefore,nextSibling);}else{var/** @type {?} */parentElement=this._directRenderer.parentElement(prevNode);if(parentElement){this.visitRootNodesInternal(this._directRenderer.appendChild,parentElement);}}}else{this.renderer.attachViewAfter(prevNode,this.flatRootNodes);}}/**
     * @return {?}
     */},{key:'projectNodes',/**
     * @param {?} parentElement
     * @param {?} ngContentIndex
     * @return {?}
     */value:function projectNodes(parentElement,ngContentIndex){if(this._directRenderer){this.visitProjectedNodes(ngContentIndex,this._directRenderer.appendChild,parentElement);}else{var/** @type {?} */nodes=[];this.visitProjectedNodes(ngContentIndex,addToArray,nodes);this.renderer.projectNodes(parentElement,nodes);}}/**
     * @param {?} ngContentIndex
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitProjectedNodes',value:function visitProjectedNodes(ngContentIndex,cb,c){switch(this.type){case ViewType.EMBEDDED:this.parentView.visitProjectedNodes(ngContentIndex,cb,c);break;case ViewType.COMPONENT:if(this.parentView.type===ViewType.HOST){var/** @type {?} */nodes=this.parentView._hostProjectableNodes[ngContentIndex]||[];for(var/** @type {?} */i=0;i<nodes.length;i++){cb(nodes[i],c);}}else{this.parentView.visitProjectableNodesInternal(this.parentIndex,ngContentIndex,cb,c);}break;}}/**
     * Overwritten by implementations
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitRootNodesInternal',value:function visitRootNodesInternal(cb,c){}/**
     * Overwritten by implementations
     * @param {?} nodeIndex
     * @param {?} ngContentIndex
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitProjectableNodesInternal',value:function visitProjectableNodesInternal(nodeIndex,ngContentIndex,cb,c){}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'dirtyParentQueriesInternal',value:function dirtyParentQueriesInternal(){}/**
     * @param {?} throwOnChange
     * @return {?}
     */},{key:'internalDetectChanges',value:function internalDetectChanges(throwOnChange){if(this.cdMode!==ChangeDetectorStatus.Detached){this.detectChanges(throwOnChange);}}/**
     * @param {?} throwOnChange
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(throwOnChange){var/** @type {?} */s=_scope_check(this.clazz);if(this.cdMode===ChangeDetectorStatus.Checked||this.cdMode===ChangeDetectorStatus.Errored)return;if(this.cdMode===ChangeDetectorStatus.Destroyed){this.throwDestroyedError('detectChanges');}this.throwOnChange=throwOnChange;this.detectChangesInternal();if(this.cdMode===ChangeDetectorStatus.CheckOnce)this.cdMode=ChangeDetectorStatus.Checked;this.numberOfChecks++;wtfLeave(s);}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'detectChangesInternal',value:function detectChangesInternal(){}/**
     * @return {?}
     */},{key:'markAsCheckOnce',value:function markAsCheckOnce(){this.cdMode=ChangeDetectorStatus.CheckOnce;}/**
     * @return {?}
     */},{key:'markPathToRootAsCheckOnce',value:function markPathToRootAsCheckOnce(){var/** @type {?} */c=this;while(isPresent(c)&&c.cdMode!==ChangeDetectorStatus.Detached){if(c.cdMode===ChangeDetectorStatus.Checked){c.cdMode=ChangeDetectorStatus.CheckOnce;}if(c.type===ViewType.COMPONENT){c=c.parentView;}else{c=c.viewContainer?c.viewContainer.parentView:null;}}}/**
     * @param {?} cb
     * @return {?}
     */},{key:'eventHandler',value:function eventHandler(cb){return cb;}/**
     * @param {?} details
     * @return {?}
     */},{key:'throwDestroyedError',value:function throwDestroyedError(details){throw viewDestroyedError(details);}},{key:'animationContext',get:function get(){if(!this._animationContext){this._animationContext=new AnimationViewContext(this.viewUtils.animationQueue);}return this._animationContext;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return this.cdMode===ChangeDetectorStatus.Destroyed;}},{key:'changeDetectorRef',get:function get(){return this.ref;}/**
     * @return {?}
     */},{key:'flatRootNodes',get:function get(){var/** @type {?} */nodes=[];this.visitRootNodesInternal(addToArray,nodes);return nodes;}}]);return AppView;}();var DebugAppView=function(_AppView){_inherits(DebugAppView,_AppView);/**
     * @param {?} clazz
     * @param {?} componentType
     * @param {?} type
     * @param {?} viewUtils
     * @param {?} parentView
     * @param {?} parentIndex
     * @param {?} parentNode
     * @param {?} cdMode
     * @param {?} staticNodeDebugInfos
     * @param {?=} declaredViewContainer
     */function DebugAppView(clazz,componentType,type,viewUtils,parentView,parentIndex,parentNode,cdMode,staticNodeDebugInfos){var declaredViewContainer=arguments.length>9&&arguments[9]!==undefined?arguments[9]:null;_classCallCheck(this,DebugAppView);var _this41=_possibleConstructorReturn(this,(DebugAppView.__proto__||Object.getPrototypeOf(DebugAppView)).call(this,clazz,componentType,type,viewUtils,parentView,parentIndex,parentNode,cdMode,declaredViewContainer));_this41.staticNodeDebugInfos=staticNodeDebugInfos;_this41._currentDebugContext=null;return _this41;}/**
     * @param {?} context
     * @return {?}
     */_createClass(DebugAppView,[{key:'create',value:function create(context){this._resetDebug();try{return _get(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'create',this).call(this,context);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @param {?} rootSelectorOrNode
     * @param {?} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createHostView',value:function createHostView(rootSelectorOrNode,injector){var projectableNodes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;this._resetDebug();try{return _get(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'createHostView',this).call(this,rootSelectorOrNode,injector,projectableNodes);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @param {?} token
     * @param {?} nodeIndex
     * @param {?=} notFoundResult
     * @return {?}
     */},{key:'injectorGet',value:function injectorGet(token,nodeIndex,notFoundResult){this._resetDebug();try{return _get(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'injectorGet',this).call(this,token,nodeIndex,notFoundResult);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @return {?}
     */},{key:'detach',value:function detach(){this._resetDebug();try{_get(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'detach',this).call(this);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this._resetDebug();try{_get(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'destroy',this).call(this);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @param {?} throwOnChange
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(throwOnChange){this._resetDebug();try{_get(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'detectChanges',this).call(this,throwOnChange);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @return {?}
     */},{key:'_resetDebug',value:function _resetDebug(){this._currentDebugContext=null;}/**
     * @param {?} nodeIndex
     * @param {?} rowNum
     * @param {?} colNum
     * @return {?}
     */},{key:'debug',value:function debug(nodeIndex,rowNum,colNum){return this._currentDebugContext=new DebugContext$1(this,nodeIndex,rowNum,colNum);}/**
     * @param {?} e
     * @return {?}
     */},{key:'_rethrowWithContext',value:function _rethrowWithContext(e){if(!(getType(e)==viewWrappedError)){if(!(getType(e)==expressionChangedAfterItHasBeenCheckedError)){this.cdMode=ChangeDetectorStatus.Errored;}if(isPresent(this._currentDebugContext)){throw viewWrappedError(e,this._currentDebugContext);}}}/**
     * @param {?} cb
     * @return {?}
     */},{key:'eventHandler',value:function eventHandler(cb){var _this42=this;var/** @type {?} */superHandler=_get(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'eventHandler',this).call(this,cb);return function(eventName,event){_this42._resetDebug();try{return superHandler.call(_this42,eventName,event);}catch(e){_this42._rethrowWithContext(e);throw e;}};}}]);return DebugAppView;}(AppView);/**
 * A ViewContainer is created for elements that have a ViewContainerRef
 * to keep track of the nested views.
 */var ViewContainer=function(){/**
     * @param {?} index
     * @param {?} parentIndex
     * @param {?} parentView
     * @param {?} nativeElement
     */function ViewContainer(index,parentIndex,parentView,nativeElement){_classCallCheck(this,ViewContainer);this.index=index;this.parentIndex=parentIndex;this.parentView=parentView;this.nativeElement=nativeElement;}/**
     * @return {?}
     */_createClass(ViewContainer,[{key:'detectChangesInNestedViews',/**
     * @param {?} throwOnChange
     * @return {?}
     */value:function detectChangesInNestedViews(throwOnChange){if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){this.nestedViews[i].detectChanges(throwOnChange);}}}/**
     * @return {?}
     */},{key:'destroyNestedViews',value:function destroyNestedViews(){if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){this.nestedViews[i].destroy();}}}/**
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitNestedViewRootNodes',value:function visitNestedViewRootNodes(cb,c){if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){this.nestedViews[i].visitRootNodesInternal(cb,c);}}}/**
     * @param {?} nestedViewClass
     * @param {?} callback
     * @return {?}
     */},{key:'mapNestedViews',value:function mapNestedViews(nestedViewClass,callback){var/** @type {?} */result=[];if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){var/** @type {?} */nestedView=this.nestedViews[i];if(nestedView.clazz===nestedViewClass){result.push(callback(nestedView));}}}if(this.projectedViews){for(var/** @type {?} */_i6=0;_i6<this.projectedViews.length;_i6++){var/** @type {?} */projectedView=this.projectedViews[_i6];if(projectedView.clazz===nestedViewClass){result.push(callback(projectedView));}}}return result;}/**
     * @param {?} view
     * @param {?} toIndex
     * @return {?}
     */},{key:'moveView',value:function moveView(view,toIndex){var/** @type {?} */fromIndex=this.nestedViews.indexOf(view);if(view.type===ViewType.COMPONENT){throw new Error('Component views can\'t be moved!');}var/** @type {?} */nestedViews=this.nestedViews;if(nestedViews==null){nestedViews=[];this.nestedViews=nestedViews;}nestedViews.splice(fromIndex,1);nestedViews.splice(toIndex,0,view);var/** @type {?} */prevView=toIndex>0?nestedViews[toIndex-1]:null;view.moveAfter(this,prevView);}/**
     * @param {?} view
     * @param {?} viewIndex
     * @return {?}
     */},{key:'attachView',value:function attachView(view,viewIndex){if(view.type===ViewType.COMPONENT){throw new Error('Component views can\'t be moved!');}var/** @type {?} */nestedViews=this.nestedViews;if(nestedViews==null){nestedViews=[];this.nestedViews=nestedViews;}// perf: array.push is faster than array.splice!
if(viewIndex>=nestedViews.length){nestedViews.push(view);}else{nestedViews.splice(viewIndex,0,view);}var/** @type {?} */prevView=viewIndex>0?nestedViews[viewIndex-1]:null;view.attachAfter(this,prevView);}/**
     * @param {?} viewIndex
     * @return {?}
     */},{key:'detachView',value:function detachView(viewIndex){var/** @type {?} */view=this.nestedViews[viewIndex];// perf: array.pop is faster than array.splice!
if(viewIndex>=this.nestedViews.length-1){this.nestedViews.pop();}else{this.nestedViews.splice(viewIndex,1);}if(view.type===ViewType.COMPONENT){throw new Error('Component views can\'t be moved!');}view.detach();return view;}},{key:'elementRef',get:function get(){return new ElementRef(this.nativeElement);}/**
     * @return {?}
     */},{key:'vcRef',get:function get(){return new ViewContainerRef_(this);}/**
     * @return {?}
     */},{key:'parentInjector',get:function get(){return this.parentView.injector(this.parentIndex);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this.parentView.injector(this.index);}}]);return ViewContainer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var LifecycleHooks={};LifecycleHooks.OnInit=0;LifecycleHooks.OnDestroy=1;LifecycleHooks.DoCheck=2;LifecycleHooks.OnChanges=3;LifecycleHooks.AfterContentInit=4;LifecycleHooks.AfterContentChecked=5;LifecycleHooks.AfterViewInit=6;LifecycleHooks.AfterViewChecked=7;LifecycleHooks[LifecycleHooks.OnInit]="OnInit";LifecycleHooks[LifecycleHooks.OnDestroy]="OnDestroy";LifecycleHooks[LifecycleHooks.DoCheck]="DoCheck";LifecycleHooks[LifecycleHooks.OnChanges]="OnChanges";LifecycleHooks[LifecycleHooks.AfterContentInit]="AfterContentInit";LifecycleHooks[LifecycleHooks.AfterContentChecked]="AfterContentChecked";LifecycleHooks[LifecycleHooks.AfterViewInit]="AfterViewInit";LifecycleHooks[LifecycleHooks.AfterViewChecked]="AfterViewChecked";var/** @type {?} */LIFECYCLE_HOOKS_VALUES=[LifecycleHooks.OnInit,LifecycleHooks.OnDestroy,LifecycleHooks.DoCheck,LifecycleHooks.OnChanges,LifecycleHooks.AfterContentInit,LifecycleHooks.AfterContentChecked,LifecycleHooks.AfterViewInit,LifecycleHooks.AfterViewChecked];/**
 * `trigger` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `trigger` Creates an animation trigger which will a list of {\@link state state} and {\@link
 * transition transition} entries that will be evaluated when the expression bound to the trigger
 * changes.
 *
 * Triggers are registered within the component annotation data under the {\@link
 * Component#animations-anchor animations section}. An animation trigger can be placed on an element
 * within a template by referencing the name of the trigger followed by the expression value that the
 * trigger is bound to (in the form of `[\@triggerName]="expression"`.
 *
 * ### Usage
 *
 * `trigger` will create an animation trigger reference based on the provided `name` value. The
 * provided `animation` value is expected to be an array consisting of {\@link state state} and {\@link
 * transition transition} declarations.
 *
 * ```typescript
 * \@Component({
 *   selector: 'my-component',
 *   templateUrl: 'my-component-tpl.html',
 *   animations: [
 *     trigger("myAnimationTrigger", [
 *       state(...),
 *       state(...),
 *       transition(...),
 *       transition(...)
 *     ])
 *   ]
 * })
 * class MyComponent {
 *   myStatusExp = "something";
 * }
 * ```
 *
 * The template associated with this component will make use of the `myAnimationTrigger` animation
 * trigger by binding to an element within its template code.
 *
 * ```html
 * <!-- somewhere inside of my-component-tpl.html -->
 * <div [\@myAnimationTrigger]="myStatusExp">...</div>
 * tools/gulp-tasks/validate-commit-message.js ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} name
 * @param {?} definitions
 * @return {?}
 */function trigger$2(name,definitions){return{name:name,definitions:definitions};}/**
 * `animate` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `animate` specifies an animation step that will apply the provided `styles` data for a given
 * amount of time based on the provided `timing` expression value. Calls to `animate` are expected
 * to be used within {\@link sequence an animation sequence}, {\@link group group}, or {\@link
 * transition transition}.
 *
 * ### Usage
 *
 * The `animate` function accepts two input parameters: `timing` and `styles`:
 *
 * - `timing` is a string based value that can be a combination of a duration with optional delay
 * and easing values. The format for the expression breaks down to `duration delay easing`
 * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,
 * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the
 * `duration` value in millisecond form.
 * - `styles` is the style input data which can either be a call to {\@link style style} or {\@link
 * keyframes keyframes}. If left empty then the styles from the destination state will be collected
 * and used (this is useful when describing an animation step that will complete an animation by
 * {\@link transition#the-final-animate-call animating to the final state}).
 *
 * ```typescript
 * // various functions for specifying timing data
 * animate(500, style(...))
 * animate("1s", style(...))
 * animate("100ms 0.5s", style(...))
 * animate("5s ease", style(...))
 * animate("5s 10ms cubic-bezier(.17,.67,.88,.1)", style(...))
 *
 * // either style() of keyframes() can be used
 * animate(500, style({ background: "red" }))
 * animate(500, keyframes([
 *   style({ background: "blue" })),
 *   style({ background: "red" }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} timings
 * @param {?=} styles
 * @return {?}
 */function animate$2(timings){var styles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return{type:4/* Animate */,styles:styles,timings:timings};}/**
 * `group` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are
 * useful when a series of styles must be animated/closed off at different statrting/ending times.
 *
 * The `group` function can either be used within a {\@link sequence sequence} or a {\@link transition
 * transition} and it will only continue to the next instruction once all of the inner animation
 * steps have completed.
 *
 * ### Usage
 *
 * The `steps` data that is passed into the `group` animation function can either consist of {\@link
 * style style} or {\@link animate animate} function calls. Each call to `style()` or `animate()`
 * within a group will be executed instantly (use {\@link keyframes keyframes} or a {\@link
 * animate#usage animate() with a delay value} to offset styles to be applied at a later time).
 *
 * ```typescript
 * group([
 *   animate("1s", { background: "black" }))
 *   animate("2s", { color: "white" }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} steps
 * @return {?}
 */function group$2(steps){return{type:3/* Group */,steps:steps};}/**
 * `sequence` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by
 * default when an array is passed as animation data into {\@link transition transition}.)
 *
 * The `sequence` function can either be used within a {\@link group group} or a {\@link transition
 * transition} and it will only continue to the next instruction once each of the inner animation
 * steps have completed.
 *
 * To perform animation styling in parallel with other animation steps then have a look at the
 * {\@link group group} animation function.
 *
 * ### Usage
 *
 * The `steps` data that is passed into the `sequence` animation function can either consist of
 * {\@link style style} or {\@link animate animate} function calls. A call to `style()` will apply the
 * provided styling data immediately while a call to `animate()` will apply its styling data over a
 * given time depending on its timing data.
 *
 * ```typescript
 * sequence([
 *   style({ opacity: 0 })),
 *   animate("1s", { opacity: 1 }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} steps
 * @return {?}
 */function sequence$2(steps){return{type:2/* Sequence */,steps:steps};}/**
 * `style` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `style` declares a key/value object containing CSS properties/styles that can then be used for
 * {\@link state animation states}, within an {\@link sequence animation sequence}, or as styling data
 * for both {\@link animate animate} and {\@link keyframes keyframes}.
 *
 * ### Usage
 *
 * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs
 * to be defined.
 *
 * ```typescript
 * // string values are used for css properties
 * style({ background: "red", color: "blue" })
 *
 * // numerical (pixel) values are also supported
 * style({ width: 100, height: 0 })
 * ```
 *
 * #### Auto-styles (using `*`)
 *
 * When an asterix (`*`) character is used as a value then it will be detected from the element
 * being animated and applied as animation data when the animation starts.
 *
 * This feature proves useful for a state depending on layout and/or environment factors; in such
 * cases the styles are calculated just before the animation starts.
 *
 * ```typescript
 * // the steps below will animate from 0 to the
 * // actual height of the element
 * style({ height: 0 }),
 * animate("1s", style({ height: "*" }))
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} tokens
 * @return {?}
 */function style$2(tokens){var/** @type {?} */input=void 0;var/** @type {?} */offset=null;if(Array.isArray(tokens)){input=tokens;}else{input=[/** @type {?} */tokens];}input.forEach(function(entry){var/** @type {?} */entryOffset=entry['offset'];if(entryOffset!=null){offset=offset==null?parseFloat(/** @type {?} */entryOffset):offset;}});return _style(offset,input);}/**
 * @param {?} offset
 * @param {?} styles
 * @return {?}
 */function _style(offset,styles){return{type:6/* Style */,styles:styles,offset:offset};}/**
 * `state` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `state` declares an animation state within the given trigger. When a state is active within a
 * component then its associated styles will persist on the element that the trigger is attached to
 * (even when the animation ends).
 *
 * To animate between states, have a look at the animation {\@link transition transition} DSL
 * function. To register states to an animation trigger please have a look at the {\@link trigger
 * trigger} function.
 *
 * #### The `void` state
 *
 * The `void` state value is a reserved word that angular uses to determine when the element is not
 * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the
 * associated element is void).
 *
 * #### The `*` (default) state
 *
 * The `*` state (when styled) is a fallback state that will be used if the state that is being
 * animated is not declared within the trigger.
 *
 * ### Usage
 *
 * `state` will declare an animation state with its associated styles
 * within the given trigger.
 *
 * - `stateNameExpr` can be one or more state names separated by commas.
 * - `styles` refers to the {\@link style styling data} that will be persisted on the element once
 * the state has been reached.
 *
 * ```typescript
 * // "void" is a reserved name for a state and is used to represent
 * // the state in which an element is detached from from the application.
 * state("void", style({ height: 0 }))
 *
 * // user-defined states
 * state("closed", style({ height: 0 }))
 * state("open, visible", style({ height: "*" }))
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} name
 * @param {?} styles
 * @return {?}
 */function state$2(name,styles){return{type:0/* State */,name:name,styles:styles};}/**
 * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `keyframes` specifies a collection of {\@link style style} entries each optionally characterized
 * by an `offset` value.
 *
 * ### Usage
 *
 * The `keyframes` animation function is designed to be used alongside the {\@link animate animate}
 * animation function. Instead of applying animations from where they are currently to their
 * destination, keyframes can describe how each style entry is applied and at what point within the
 * animation arc (much like CSS Keyframe Animations do).
 *
 * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what
 * percentage of the animate time the styles will be applied.
 *
 * ```typescript
 * // the provided offset values describe when each backgroundColor value is applied.
 * animate("5s", keyframes([
 *   style({ backgroundColor: "red", offset: 0 }),
 *   style({ backgroundColor: "blue", offset: 0.2 }),
 *   style({ backgroundColor: "orange", offset: 0.3 }),
 *   style({ backgroundColor: "black", offset: 1 })
 * ]))
 * ```
 *
 * Alternatively, if there are no `offset` values used within the style entries then the offsets
 * will be calculated automatically.
 *
 * ```typescript
 * animate("5s", keyframes([
 *   style({ backgroundColor: "red" }) // offset = 0
 *   style({ backgroundColor: "blue" }) // offset = 0.33
 *   style({ backgroundColor: "orange" }) // offset = 0.66
 *   style({ backgroundColor: "black" }) // offset = 1
 * ]))
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} steps
 * @return {?}
 */function keyframes$2(steps){return{type:5/* KeyframeSequence */,steps:steps};}/**
 * `transition` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `transition` declares the {\@link sequence sequence of animation steps} that will be run when the
 * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>
 * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting
 * and/or ending state).
 *
 * A function can also be provided as the `stateChangeExpr` argument for a transition and this
 * function will be executed each time a state change occurs. If the value returned within the
 * function is true then the associated animation will be run.
 *
 * Animation transitions are placed within an {\@link trigger animation trigger}. For an transition
 * to animate to a state value and persist its styles then one or more {\@link state animation
 * states} is expected to be defined.
 *
 * ### Usage
 *
 * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on
 * what the previous state is and what the current state has become. In other words, if a transition
 * is defined that matches the old/current state criteria then the associated animation will be
 * triggered.
 *
 * ```typescript
 * // all transition/state changes are defined within an animation trigger
 * trigger("myAnimationTrigger", [
 *   // if a state is defined then its styles will be persisted when the
 *   // animation has fully completed itself
 *   state("on", style({ background: "green" })),
 *   state("off", style({ background: "grey" })),
 *
 *   // a transition animation that will be kicked off when the state value
 *   // bound to "myAnimationTrigger" changes from "on" to "off"
 *   transition("on => off", animate(500)),
 *
 *   // it is also possible to do run the same animation for both directions
 *   transition("on <=> off", animate(500)),
 *
 *   // or to define multiple states pairs separated by commas
 *   transition("on => off, off => void", animate(500)),
 *
 *   // this is a catch-all state change for when an element is inserted into
 *   // the page and the destination state is unknown
 *   transition("void => *", [
 *     style({ opacity: 0 }),
 *     animate(500)
 *   ]),
 *
 *   // this will capture a state change between any states
 *   transition("* => *", animate("1s 0s")),
 *
 *   // you can also go full out and include a function
 *   transition((fromState, toState) => {
 *     // when `true` then it will allow the animation below to be invoked
 *     return fromState == "off" && toState == "on";
 *   }, animate("1s 0s"))
 * ])
 * ```
 *
 * The template associated with this component will make use of the `myAnimationTrigger` animation
 * trigger by binding to an element within its template code.
 *
 * ```html
 * <!-- somewhere inside of my-component-tpl.html -->
 * <div [\@myAnimationTrigger]="myStatusExp">...</div>
 * ```
 *
 * #### The final `animate` call
 *
 * If the final step within the transition steps is a call to `animate()` that **only** uses a
 * timing value with **no style data** then it will be automatically used as the final animation arc
 * for the element to animate itself to the final state. This involves an automatic mix of
 * adding/removing CSS styles so that the element will be in the exact state it should be for the
 * applied state to be presented correctly.
 *
 * ```
 * // start off by hiding the element, but make sure that it animates properly to whatever state
 * // is currently active for "myAnimationTrigger"
 * transition("void => *", [
 *   style({ opacity: 0 }),
 *   animate(500)
 * ])
 * ```
 *
 * ### Transition Aliases (`:enter` and `:leave`)
 *
 * Given that enter (insertion) and leave (removal) animations are so common, the `transition`
 * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*
 * => void` state changes.
 *
 * ```
 * transition(":enter", [
 *   style({ opacity: 0 }),
 *   animate(500, style({ opacity: 1 }))
 * ])
 * transition(":leave", [
 *   animate(500, style({ opacity: 0 }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} stateChangeExpr
 * @param {?} steps
 * @return {?}
 */function transition$2(stateChangeExpr,steps){return{type:1/* Transition */,expr:stateChangeExpr,animation:Array.isArray(steps)?sequence$2(steps):steps};}/**
 * @deprecated This symbol has moved. Please Import from @angular/animations instead!
 */var/** @type {?} */AUTO_STYLE$1='*';/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} name
 * @param {?} definitions
 * @return {?}
 */function trigger$1(name,definitions){return trigger$2(name,definitions);}/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} timings
 * @param {?=} styles
 * @return {?}
 */function animate$1(timings){var styles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return animate$2(timings,styles);}/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} steps
 * @return {?}
 */function group$1(steps){return group$2(steps);}/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} steps
 * @return {?}
 */function sequence$1(steps){return sequence$2(steps);}/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} tokens
 * @return {?}
 */function style$1(tokens){return style$2(tokens);}/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} name
 * @param {?} styles
 * @return {?}
 */function state$1(name,styles){return state$2(name,styles);}/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} steps
 * @return {?}
 */function keyframes$1(steps){return keyframes$2(steps);}/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} stateChangeExpr
 * @param {?} steps
 * @return {?}
 */function transition$1(stateChangeExpr,steps){return transition$2(stateChangeExpr,steps);}

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(31)))

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var OuterSubscriber = (function (_super) {
    __extends(OuterSubscriber, _super);
    function OuterSubscriber() {
        _super.apply(this, arguments);
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(Subscriber_1.Subscriber));
exports.OuterSubscriber = OuterSubscriber;
//# sourceMappingURL=OuterSubscriber.js.map

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
var isArray_1 = __webpack_require__(19);
var isPromise_1 = __webpack_require__(168);
var isObject_1 = __webpack_require__(167);
var Observable_1 = __webpack_require__(0);
var iterator_1 = __webpack_require__(47);
var InnerSubscriber_1 = __webpack_require__(282);
var observable_1 = __webpack_require__(48);
function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);
    if (destination.closed) {
        return null;
    }
    if (result instanceof Observable_1.Observable) {
        if (result._isScalar) {
            destination.next(result.value);
            destination.complete();
            return null;
        }
        else {
            return result.subscribe(destination);
        }
    }
    else if (isArray_1.isArray(result)) {
        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {
            destination.next(result[i]);
        }
        if (!destination.closed) {
            destination.complete();
        }
    }
    else if (isPromise_1.isPromise(result)) {
        result.then(function (value) {
            if (!destination.closed) {
                destination.next(value);
                destination.complete();
            }
        }, function (err) { return destination.error(err); })
            .then(null, function (err) {
            // Escaping the Promise trap: globally throw unhandled errors
            root_1.root.setTimeout(function () { throw err; });
        });
        return destination;
    }
    else if (result && typeof result[iterator_1.$$iterator] === 'function') {
        var iterator = result[iterator_1.$$iterator]();
        do {
            var item = iterator.next();
            if (item.done) {
                destination.complete();
                break;
            }
            destination.next(item.value);
            if (destination.closed) {
                break;
            }
        } while (true);
    }
    else if (result && typeof result[observable_1.$$observable] === 'function') {
        var obs = result[observable_1.$$observable]();
        if (typeof obs.subscribe !== 'function') {
            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));
        }
        else {
            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));
        }
    }
    else {
        var value = isObject_1.isObject(result) ? 'an invalid object' : "'" + result + "'";
        var msg = ("You provided " + value + " where a stream was expected.")
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        destination.error(new TypeError(msg));
    }
    return null;
}
exports.subscribeToResult = subscribeToResult;
//# sourceMappingURL=subscribeToResult.js.map

/***/ }),
/* 5 */,
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(7);
var ObjectUnsubscribedError_1 = __webpack_require__(67);
var SubjectSubscription_1 = __webpack_require__(122);
var rxSubscriber_1 = __webpack_require__(65);
/**
 * @class SubjectSubscriber<T>
 */
var SubjectSubscriber = (function (_super) {
    __extends(SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        _super.call(this, destination);
        this.destination = destination;
    }
    return SubjectSubscriber;
}(Subscriber_1.Subscriber));
exports.SubjectSubscriber = SubjectSubscriber;
/**
 * @class Subject<T>
 */
var Subject = (function (_super) {
    __extends(Subject, _super);
    function Subject() {
        _super.call(this);
        this.observers = [];
        this.closed = false;
        this.isStopped = false;
        this.hasError = false;
        this.thrownError = null;
    }
    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new Observable_1.Observable();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(Observable_1.Observable));
exports.Subject = Subject;
/**
 * @class AnonymousSubject<T>
 */
var AnonymousSubject = (function (_super) {
    __extends(AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        _super.call(this);
        this.destination = destination;
        this.source = source;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return Subscription_1.Subscription.EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));
exports.AnonymousSubject = AnonymousSubject;
//# sourceMappingURL=Subject.js.map

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(19);
var isObject_1 = __webpack_require__(167);
var isFunction_1 = __webpack_require__(69);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var UnsubscriptionError_1 = __webpack_require__(165);
/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */
var Subscription = (function () {
    /**
     * @param {function(): void} [unsubscribe] A function describing how to
     * perform the disposal of resources when the `unsubscribe` method is called.
     */
    function Subscription(unsubscribe) {
        /**
         * A flag to indicate whether this Subscription has already been unsubscribed.
         * @type {boolean}
         */
        this.closed = false;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    /**
     * Disposes the resources held by the subscription. May, for instance, cancel
     * an ongoing Observable execution or cancel any other type of work that
     * started when the Subscription was created.
     * @return {void}
     */
    Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.closed) {
            return;
        }
        this.closed = true;
        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this._subscriptions = null;
        if (isFunction_1.isFunction(_unsubscribe)) {
            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
            if (trial === errorObject_1.errorObject) {
                hasErrors = true;
                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?
                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);
            }
        }
        if (isArray_1.isArray(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (isObject_1.isObject(sub)) {
                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
                    if (trial === errorObject_1.errorObject) {
                        hasErrors = true;
                        errors = errors || [];
                        var err = errorObject_1.errorObject.e;
                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));
                        }
                        else {
                            errors.push(err);
                        }
                    }
                }
            }
        }
        if (hasErrors) {
            throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
    };
    /**
     * Adds a tear down to be called during the unsubscribe() of this
     * Subscription.
     *
     * If the tear down being added is a subscription that is already
     * unsubscribed, is the same reference `add` is being called on, or is
     * `Subscription.EMPTY`, it will not be added.
     *
     * If this subscription is already in an `closed` state, the passed
     * tear down logic will be executed immediately.
     *
     * @param {TeardownLogic} teardown The additional logic to execute on
     * teardown.
     * @return {Subscription} Returns the Subscription used or created to be
     * added to the inner subscriptions list. This Subscription can be used with
     * `remove()` to remove the passed teardown logic from the inner subscriptions
     * list.
     */
    Subscription.prototype.add = function (teardown) {
        if (!teardown || (teardown === Subscription.EMPTY)) {
            return Subscription.EMPTY;
        }
        if (teardown === this) {
            return this;
        }
        var sub = teardown;
        switch (typeof teardown) {
            case 'function':
                sub = new Subscription(teardown);
            case 'object':
                if (sub.closed || typeof sub.unsubscribe !== 'function') {
                    return sub;
                }
                else if (this.closed) {
                    sub.unsubscribe();
                    return sub;
                }
                break;
            default:
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
        }
        var childSub = new ChildSubscription(sub, this);
        this._subscriptions = this._subscriptions || [];
        this._subscriptions.push(childSub);
        return childSub;
    };
    /**
     * Removes a Subscription from the internal list of subscriptions that will
     * unsubscribe during the unsubscribe process of this Subscription.
     * @param {Subscription} subscription The subscription to remove.
     * @return {void}
     */
    Subscription.prototype.remove = function (subscription) {
        // HACK: This might be redundant because of the logic in `add()`
        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {
            return;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());
exports.Subscription = Subscription;
var ChildSubscription = (function (_super) {
    __extends(ChildSubscription, _super);
    function ChildSubscription(_innerSub, _parent) {
        _super.call(this);
        this._innerSub = _innerSub;
        this._parent = _parent;
    }
    ChildSubscription.prototype._unsubscribe = function () {
        var _a = this, _innerSub = _a._innerSub, _parent = _a._parent;
        _parent.remove(this);
        _innerSub.unsubscribe();
    };
    return ChildSubscription;
}(Subscription));
exports.ChildSubscription = ChildSubscription;
function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map

/***/ }),
/* 8 */,
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// typeof any so that it we don't have to cast when comparing a result to the error object
exports.errorObject = { e: {} };
//# sourceMappingURL=errorObject.js.map

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
/**
 * window: browser in DOM main thread
 * self: browser in WebWorker
 * global: Node.js/other
 */
exports.root = (typeof window == 'object' && window.window === window && window
    || typeof self == 'object' && self.self === self && self
    || typeof global == 'object' && global.global === global && global);
if (!exports.root) {
    throw new Error('RxJS could not find any global context (window, self, global)');
}
//# sourceMappingURL=root.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var errorObject_1 = __webpack_require__(9);
var tryCatchTarget;
function tryCatcher() {
    try {
        return tryCatchTarget.apply(this, arguments);
    }
    catch (e) {
        errorObject_1.errorObject.e = e;
        return errorObject_1.errorObject;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}
exports.tryCatch = tryCatch;
;
//# sourceMappingURL=tryCatch.js.map

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__breakpoints_break_point_registry__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__match_media__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_add_alias__ = __webpack_require__(71);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MediaMonitor; });





/**
 * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and
 * deactivations). These changes are are published as MediaChange notifications.
 *
 * Note: all notifications will be performed within the
 * ng Zone to trigger change detections and component updates.
 *
 * It is the MediaMonitor that:
 *  - auto registers all known breakpoints
 *  - injects alias information into each raw MediaChange event
 *  - provides accessor to the currently active BreakPoint
 *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation
 */
var MediaMonitor = (function () {
    function MediaMonitor(_breakpoints, _matchMedia) {
        this._breakpoints = _breakpoints;
        this._matchMedia = _matchMedia;
        this._registerBreakpoints();
    }
    Object.defineProperty(MediaMonitor.prototype, "breakpoints", {
        /**
         * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider
         */
        get: function () {
            return this._breakpoints.items.slice();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MediaMonitor.prototype, "activeOverlaps", {
        get: function () {
            var _this = this;
            var items = this._breakpoints.overlappings.reverse();
            return items.filter(function (bp) {
                return _this._matchMedia.isActive(bp.mediaQuery);
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MediaMonitor.prototype, "active", {
        get: function () {
            var _this = this;
            var found = null, items = this.breakpoints.reverse();
            items.forEach(function (bp) {
                if (bp.alias !== '') {
                    if (!found && _this._matchMedia.isActive(bp.mediaQuery)) {
                        found = bp;
                    }
                }
            });
            var first = this.breakpoints[0];
            return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * For the specified mediaQuery alias, is the mediaQuery range active?
     */
    MediaMonitor.prototype.isActive = function (alias) {
        var bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);
        return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);
    };
    /**
     * External observers can watch for all (or a specific) mql changes.
     * If specific breakpoint is observed, only return *activated* events
     * otherwise return all events for BOTH activated + deactivated changes.
     */
    MediaMonitor.prototype.observe = function (alias) {
        var bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);
        var hasAlias = function (change) { return (bp ? change.mqAlias !== "" : true); };
        // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information
        return this._matchMedia
            .observe(bp ? bp.mediaQuery : alias)
            .map(function (change) { return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_add_alias__["a" /* mergeAlias */])(change, bp); })
            .filter(hasAlias);
    };
    /**
     * Immediate calls to matchMedia() to establish listeners
     * and prepare for immediate subscription notifications
     */
    MediaMonitor.prototype._registerBreakpoints = function () {
        var _this = this;
        this._breakpoints.items.forEach(function (bp) {
            _this._matchMedia.registerQuery(bp.mediaQuery);
        });
    };
    MediaMonitor.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
    ];
    /** @nocollapse */
    MediaMonitor.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__breakpoints_break_point_registry__["a" /* BreakPointRegistry */], },
        { type: __WEBPACK_IMPORTED_MODULE_3__match_media__["a" /* MatchMedia */], },
    ]; };
    return MediaMonitor;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/media-monitor.js.map

/***/ }),
/* 13 */,
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsyncAction_1 = __webpack_require__(45);
var AsyncScheduler_1 = __webpack_require__(46);
exports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);
//# sourceMappingURL=async.js.map

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_auto_prefixer__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__responsive_responsive_activation__ = __webpack_require__(102);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseFxDirective; });


/** Abstract base class for the Layout API styling directives. */
var BaseFxDirective = (function () {
    /**
     *
     */
    function BaseFxDirective(_mediaMonitor, _elementRef, _renderer) {
        this._mediaMonitor = _mediaMonitor;
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        /**
         *  Dictionary of input keys with associated values
         */
        this._inputMap = {};
        this._display = this._getDisplayStyle();
    }
    // *********************************************
    // Accessor Methods
    // *********************************************
    /**
     * Access the current value (if any) of the @Input property.
     */
    BaseFxDirective.prototype._queryInput = function (key) {
        return this._inputMap[key];
    };
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    BaseFxDirective.prototype.ngOnDestroy = function () {
        if (this._mqActivation) {
            this._mqActivation.destroy();
        }
        this._mediaMonitor = null;
    };
    // *********************************************
    // Protected Methods
    // *********************************************
    /**
     * Was the directive's default selector used ?
     * If not, use the fallback value!
     */
    BaseFxDirective.prototype._getDefaultVal = function (key, fallbackVal) {
        var val = this._queryInput(key);
        var hasDefaultVal = (val !== undefined && val !== null);
        return (hasDefaultVal && val !== '') ? val : fallbackVal;
    };
    /**
     * Quick accessor to the current HTMLElement's `display` style
     * Note: this allows use to preserve the original style
     * and optional restore it when the mediaQueries deactivate
     */
    BaseFxDirective.prototype._getDisplayStyle = function () {
        var element = this._elementRef.nativeElement;
        return element.style['display'] || "flex";
    };
    /**
     * Applies styles given via string pair or object map to the directive element.
     */
    BaseFxDirective.prototype._applyStyleToElement = function (style, value, nativeElement) {
        var styles = {};
        var element = nativeElement || this._elementRef.nativeElement;
        if (typeof style === 'string') {
            styles[style] = value;
            style = styles;
        }
        styles = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_auto_prefixer__["a" /* applyCssPrefixes */])(style);
        // Iterate all properties in hashMap and set styles
        for (var key in styles) {
            this._renderer.setElementStyle(element, key, styles[key]);
        }
    };
    /**
     * Applies styles given via string pair or object map to the directive element.
     */
    BaseFxDirective.prototype._applyStyleToElements = function (style, elements) {
        var _this = this;
        var styles = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_auto_prefixer__["a" /* applyCssPrefixes */])(style);
        elements.forEach(function (el) {
            // Iterate all properties in hashMap and set styles
            for (var key in styles) {
                _this._renderer.setElementStyle(el, key, styles[key]);
            }
        });
    };
    /**
     *  Save the property value; which may be a complex object.
     *  Complex objects support property chains
     */
    BaseFxDirective.prototype._cacheInput = function (key, source) {
        if (typeof source === 'object') {
            for (var prop in source) {
                this._inputMap[prop] = source[prop];
            }
        }
        else {
            this._inputMap[key] = source;
        }
    };
    /**
     *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications
     *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery
     *  (or closest match).
     */
    BaseFxDirective.prototype._listenForMediaQueryChanges = function (key, defaultValue, onMediaQueryChange) {
        var _this = this;
        var keyOptions = new __WEBPACK_IMPORTED_MODULE_1__responsive_responsive_activation__["a" /* KeyOptions */](key, defaultValue, this._inputMap);
        return this._mqActivation = new __WEBPACK_IMPORTED_MODULE_1__responsive_responsive_activation__["b" /* ResponsiveActivation */](keyOptions, this._mediaMonitor, function (change) { return onMediaQueryChange.call(_this, change); });
    };
    Object.defineProperty(BaseFxDirective.prototype, "childrenNodes", {
        /**
         * Special accessor to query for all child 'element' nodes regardless of type, class, etc.
         */
        get: function () {
            var obj = this._elementRef.nativeElement.childNodes;
            var buffer = [];
            // iterate backwards ensuring that length is an UInt32
            for (var i = obj.length; i--;) {
                buffer[i] = obj[i];
            }
            return buffer;
        },
        enumerable: true,
        configurable: true
    });
    return BaseFxDirective;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/base.js.map

/***/ }),
/* 16 */,
/* 17 */,
/* 18 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });
//# sourceMappingURL=isArray.js.map

/***/ }),
/* 20 */,
/* 21 */,
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var ScalarObservable_1 = __webpack_require__(91);
var EmptyObservable_1 = __webpack_require__(25);
var isScheduler_1 = __webpack_require__(26);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayObservable = (function (_super) {
    __extends(ArrayObservable, _super);
    function ArrayObservable(array, scheduler) {
        _super.call(this);
        this.array = array;
        this.scheduler = scheduler;
        if (!scheduler && array.length === 1) {
            this._isScalar = true;
            this.value = array[0];
        }
    }
    ArrayObservable.create = function (array, scheduler) {
        return new ArrayObservable(array, scheduler);
    };
    /**
     * Creates an Observable that emits some values you specify as arguments,
     * immediately one after the other, and then emits a complete notification.
     *
     * <span class="informal">Emits the arguments you provide, then completes.
     * </span>
     *
     * <img src="./img/of.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the arguments given, and the complete notification thereafter. It can
     * be used for composing with other Observables, such as with {@link concat}.
     * By default, it uses a `null` IScheduler, which means the `next`
     * notifications are sent synchronously, although with a different IScheduler
     * it is possible to determine when those notifications will be delivered.
     *
     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>
     * var numbers = Rx.Observable.of(10, 20, 30);
     * var letters = Rx.Observable.of('a', 'b', 'c');
     * var interval = Rx.Observable.interval(1000);
     * var result = numbers.concat(letters).concat(interval);
     * result.subscribe(x => console.log(x));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link throw}
     *
     * @param {...T} values Arguments that represent `next` values to be emitted.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the `next` notifications.
     * @return {Observable<T>} An Observable that emits each given input value.
     * @static true
     * @name of
     * @owner Observable
     */
    ArrayObservable.of = function () {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i - 0] = arguments[_i];
        }
        var scheduler = array[array.length - 1];
        if (isScheduler_1.isScheduler(scheduler)) {
            array.pop();
        }
        else {
            scheduler = null;
        }
        var len = array.length;
        if (len > 1) {
            return new ArrayObservable(array, scheduler);
        }
        else if (len === 1) {
            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);
        }
        else {
            return new EmptyObservable_1.EmptyObservable(scheduler);
        }
    };
    ArrayObservable.dispatch = function (state) {
        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(array[index]);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        this.schedule(state);
    };
    ArrayObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var array = this.array;
        var count = array.length;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ArrayObservable.dispatch, 0, {
                array: array, index: index, count: count, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < count && !subscriber.closed; i++) {
                subscriber.next(array[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayObservable;
}(Observable_1.Observable));
exports.ArrayObservable = ArrayObservable;
//# sourceMappingURL=ArrayObservable.js.map

/***/ }),
/* 23 */,
/* 24 */,
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var EmptyObservable = (function (_super) {
    __extends(EmptyObservable, _super);
    function EmptyObservable(scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits a complete notification.
     *
     * <span class="informal">Just emits 'complete', and nothing else.
     * </span>
     *
     * <img src="./img/empty.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the complete notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then complete.</caption>
     * var result = Rx.Observable.empty().startWith(7);
     * result.subscribe(x => console.log(x));
     *
     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()
     * );
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following to the console:
     * // x is equal to the count on the interval eg(0,1,2,3,...)
     * // x will occur every 1000ms
     * // if x % 2 is equal to 1 print abc
     * // if x % 2 is not equal to 1 nothing will be output
     *
     * @see {@link create}
     * @see {@link never}
     * @see {@link of}
     * @see {@link throw}
     *
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the complete notification.
     * @return {Observable} An "empty" Observable: emits only the complete
     * notification.
     * @static true
     * @name empty
     * @owner Observable
     */
    EmptyObservable.create = function (scheduler) {
        return new EmptyObservable(scheduler);
    };
    EmptyObservable.dispatch = function (arg) {
        var subscriber = arg.subscriber;
        subscriber.complete();
    };
    EmptyObservable.prototype._subscribe = function (subscriber) {
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });
        }
        else {
            subscriber.complete();
        }
    };
    return EmptyObservable;
}(Observable_1.Observable));
exports.EmptyObservable = EmptyObservable;
//# sourceMappingURL=EmptyObservable.js.map

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
exports.isScheduler = isScheduler;
//# sourceMappingURL=isScheduler.js.map

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return LAYOUT_VALUES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LayoutDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};




var LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];
/**
 * 'layout' flexbox styling directive
 * Defines the positioning flow direction for the child elements: row or column
 * Optional values: column or row (default)
 * @see https://css-tricks.com/almanac/properties/f/flex-direction/
 *
 */
var LayoutDirective = (function (_super) {
    __extends(LayoutDirective, _super);
    /**
     *
     */
    function LayoutDirective(monitor, elRef, renderer) {
        _super.call(this, monitor, elRef, renderer);
        this._announcer = new __WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject__["BehaviorSubject"]("row");
        this.layout$ = this._announcer.asObservable();
    }
    Object.defineProperty(LayoutDirective.prototype, "layout", {
        set: function (val) { this._cacheInput("layout", val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutDirective.prototype, "layoutXs", {
        set: function (val) { this._cacheInput('layoutXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutDirective.prototype, "layoutGtXs", {
        set: function (val) { this._cacheInput('layoutGtXs', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutDirective.prototype, "layoutSm", {
        set: function (val) { this._cacheInput('layoutSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutDirective.prototype, "layoutGtSm", {
        set: function (val) { this._cacheInput('layoutGtSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutDirective.prototype, "layoutMd", {
        set: function (val) { this._cacheInput('layoutMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutDirective.prototype, "layoutGtMd", {
        set: function (val) { this._cacheInput('layoutGtMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutDirective.prototype, "layoutLg", {
        set: function (val) { this._cacheInput('layoutLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutDirective.prototype, "layoutGtLg", {
        set: function (val) { this._cacheInput('layoutGtLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutDirective.prototype, "layoutXl", {
        set: function (val) { this._cacheInput('layoutXl', val); },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    /**
     * On changes to any @Input properties...
     * Default to use the non-responsive Input value ('fxLayout')
     * Then conditionally override with the mq-activated Input's current value
     */
    LayoutDirective.prototype.ngOnChanges = function (changes) {
        if (changes['layout'] != null || this._mqActivation) {
            this._updateWithDirection();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    LayoutDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('layout', 'row', function (changes) {
            _this._updateWithDirection(changes.value);
        });
        this._updateWithDirection();
    };
    // *********************************************
    // Protected methods
    // *********************************************
    /**
     * Validate the direction value and then update the host's inline flexbox styles
     */
    LayoutDirective.prototype._updateWithDirection = function (direction) {
        direction = direction || this._queryInput("layout") || 'row';
        if (this._mqActivation) {
            direction = this._mqActivation.activatedInput;
        }
        direction = this._validateValue(direction);
        // Update styles and announce to subscribers the *new* direction
        this._applyStyleToElement(this._buildCSS(direction));
        this._announcer.next(direction);
    };
    /**
     * Build the CSS that should be assigned to the element instance
     * BUG:
     *
     *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.
     *      Use height instead if possible; height : <xxx>vh;
     *
     * @todo - update all child containers to have "box-sizing: border-box"
     *         This way any padding or border specified on the child elements are
     *         laid out and drawn inside that element's specified width and height.
     *
     */
    LayoutDirective.prototype._buildCSS = function (value) {
        return { 'display': 'flex', 'box-sizing': 'border-box', 'flex-direction': value };
    };
    /**
     * Validate the value to be one of the acceptable value options
     * Use default fallback of "row"
     */
    LayoutDirective.prototype._validateValue = function (value) {
        value = value ? value.toLowerCase() : '';
        return LAYOUT_VALUES.find(function (x) { return x === value; }) ? value : LAYOUT_VALUES[0]; // "row"
    };
    LayoutDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: "\n  [fxLayout],\n  [fxLayout.xs],\n  [fxLayout.gt-xs],\n  [fxLayout.sm],\n  [fxLayout.gt-sm],\n  [fxLayout.md],\n  [fxLayout.gt-md],\n  [fxLayout.lg],\n  [fxLayout.gt-lg],\n  [fxLayout.xl]\n" },] },
    ];
    /** @nocollapse */
    LayoutDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    ]; };
    LayoutDirective.propDecorators = {
        'layout': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout',] },],
        'layoutXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.xs',] },],
        'layoutGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.gt-xs',] },],
        'layoutSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.sm',] },],
        'layoutGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.gt-sm',] },],
        'layoutMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.md',] },],
        'layoutGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.gt-md',] },],
        'layoutLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.lg',] },],
        'layoutGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.gt-lg',] },],
        'layoutXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayout.xl',] },],
    };
    return LayoutDirective;
}(__WEBPACK_IMPORTED_MODULE_2__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/layout.js.map

/***/ }),
/* 28 */,
/* 29 */,
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var map_1 = __webpack_require__(63);
Observable_1.Observable.prototype.map = map_1.map;
//# sourceMappingURL=map.js.map

/***/ }),
/* 31 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = extendObject;
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Extends an object with the *enumerable* and *own* properties of one or more source objects,
 * similar to Object.assign.
 *
 * @param dest The object which will have properties copied to it.
 * @param sources The source objects from which properties will be copied.
 */
function extendObject(dest) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    if (dest == null) {
        throw TypeError('Cannot convert undefined or null to object');
    }
    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {
        var source = sources_1[_a];
        if (source != null) {
            for (var key in source) {
                if (source.hasOwnProperty(key)) {
                    dest[key] = source[key];
                }
            }
        }
    }
    return dest;
}
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/utils/object-extend.js.map

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ConnectableObservable_1 = __webpack_require__(136);
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that emits the results of invoking a specified selector on items
 * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * @param {Function|Subject} Factory function to create an intermediate subject through
 * which the source sequence's elements will be multicast to the selector function
 * or Subject to push source elements into.
 * @param {Function} Optional selector function that can use the multicasted source stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the given source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable} an Observable that emits the results of invoking the selector
 * on the items emitted by a `ConnectableObservable` that shares a single subscription to
 * the underlying stream.
 * @method multicast
 * @owner Observable
 */
function multicast(subjectOrSubjectFactory, selector) {
    var subjectFactory;
    if (typeof subjectOrSubjectFactory === 'function') {
        subjectFactory = subjectOrSubjectFactory;
    }
    else {
        subjectFactory = function subjectFactory() {
            return subjectOrSubjectFactory;
        };
    }
    if (typeof selector === 'function') {
        return this.lift(new MulticastOperator(subjectFactory, selector));
    }
    var connectable = Object.create(this, ConnectableObservable_1.connectableObservableDescriptor);
    connectable.source = this;
    connectable.subjectFactory = subjectFactory;
    return connectable;
}
exports.multicast = multicast;
var MulticastOperator = (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());
exports.MulticastOperator = MulticastOperator;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BrowserModule; });
/* unused harmony export platformBrowser */
/* unused harmony export Meta */
/* unused harmony export Title */
/* unused harmony export disableDebugTools */
/* unused harmony export enableDebugTools */
/* unused harmony export AnimationDriver */
/* unused harmony export By */
/* unused harmony export NgProbeToken */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DOCUMENT; });
/* unused harmony export EVENT_MANAGER_PLUGINS */
/* unused harmony export EventManager */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return HAMMER_GESTURE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return HammerGestureConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return DomSanitizer; });
/* unused harmony export VERSION */
/* unused harmony export ɵBROWSER_SANITIZATION_PROVIDERS */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return INTERNAL_BROWSER_PLATFORM_PROVIDERS; });
/* unused harmony export ɵinitDomAdapter */
/* unused harmony export ɵBrowserDomAdapter */
/* unused harmony export ɵBrowserPlatformLocation */
/* unused harmony export ɵTRANSITION_ID */
/* unused harmony export ɵBrowserGetTestability */
/* unused harmony export ɵELEMENT_PROBE_PROVIDERS */
/* unused harmony export ɵDomAdapter */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return getDOM; });
/* unused harmony export ɵsetRootDomAdapter */
/* unused harmony export ɵDomRendererFactoryV2 */
/* unused harmony export ɵDomRootRenderer */
/* unused harmony export ɵDomRootRenderer_ */
/* unused harmony export ɵNAMESPACE_URIS */
/* unused harmony export ɵflattenStyles */
/* unused harmony export ɵisNamespaced */
/* unused harmony export ɵshimContentAttribute */
/* unused harmony export ɵshimHostAttribute */
/* unused harmony export ɵsplitNamespace */
/* unused harmony export ɵDomEventsPlugin */
/* unused harmony export ɵHammerGesturesPlugin */
/* unused harmony export ɵKeyEventsPlugin */
/* unused harmony export ɵDomSharedStylesHost */
/* unused harmony export ɵSharedStylesHost */
/* unused harmony export ɵWebAnimationsDriver */
/* unused harmony export ɵb */
/* unused harmony export ɵc */
/* unused harmony export ɵa */
/* unused harmony export ɵi */
/* unused harmony export ɵh */
/* unused harmony export ɵg */
/* unused harmony export ɵd */
/* unused harmony export ɵe */
/* unused harmony export ɵf */
var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * \@experimental
 */var NoOpAnimationDriver=function(){function NoOpAnimationDriver(){_classCallCheck(this,NoOpAnimationDriver);}_createClass(NoOpAnimationDriver,[{key:'animate',/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */value:function animate(element,startingStyles,keyframes,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];return new __WEBPACK_IMPORTED_MODULE_1__angular_core__["N" /* ɵNoOpAnimationPlayer */]();}}]);return NoOpAnimationDriver;}();/**
 * \@experimental
 * @abstract
 */var AnimationDriver=function(){function AnimationDriver(){_classCallCheck(this,AnimationDriver);}_createClass(AnimationDriver,[{key:'animate',/**
     * @abstract
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */value:function animate(element,startingStyles,keyframes,duration,delay,easing,previousPlayers){}}]);return AnimationDriver;}();AnimationDriver.NOOP=new NoOpAnimationDriver();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */globalScope=void 0;if(typeof window==='undefined'){if(typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope){// TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
globalScope=self;}else{globalScope=global;}}else{globalScope=window;}// Need to declare a new variable for global here since TypeScript
// exports the original value of the symbol.
var/** @type {?} */global$1=globalScope;// TODO: remove calls to assert in production environment
// Note: Can't just export this and import in in other files
// as `assert` is a reserved keyword in Dart
global$1.assert=function assert(condition){// TODO: to be fixed properly via #2830, noop for now
};/**
 * @param {?} obj
 * @return {?}
 */function isPresent(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank(obj){return obj==null;}/**
 * @param {?} token
 * @return {?}
 */function stringify(token){if(typeof token==='string'){return token;}if(token==null){return''+token;}if(token.overriddenName){return''+token.overriddenName;}if(token.name){return''+token.name;}var/** @type {?} */res=token.toString();var/** @type {?} */newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * @param {?} global
 * @param {?} path
 * @param {?} value
 * @return {?}
 */function setValueOnPath(global,path,value){var/** @type {?} */parts=path.split('.');var/** @type {?} */obj=global;while(parts.length>1){var/** @type {?} */name=parts.shift();if(obj.hasOwnProperty(name)&&obj[name]!=null){obj=obj[name];}else{obj=obj[name]={};}}if(obj===undefined||obj===null){obj={};}obj[parts.shift()]=value;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */_DOM=null;/**
 * @return {?}
 */function getDOM(){return _DOM;}/**
 * @param {?} adapter
 * @return {?}
 */function setRootDomAdapter(adapter){if(!_DOM){_DOM=adapter;}}/**
 * Provides DOM operations in an environment-agnostic way.
 *
 * \@security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 * @abstract
 */var DomAdapter=function(){function DomAdapter(){_classCallCheck(this,DomAdapter);this.resourceLoaderType=null;}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */_createClass(DomAdapter,[{key:'hasProperty',value:function hasProperty(element,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'getProperty',value:function getProperty(el,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invoke',value:function invoke(el,methodName,args){}/**
     * @abstract
     * @param {?} error
     * @return {?}
     */},{key:'logError',value:function logError(error){}/**
     * @abstract
     * @param {?} error
     * @return {?}
     */},{key:'log',value:function log(error){}/**
     * @abstract
     * @param {?} error
     * @return {?}
     */},{key:'logGroup',value:function logGroup(error){}/**
     * @abstract
     * @return {?}
     */},{key:'logGroupEnd',value:function logGroupEnd(){}/**
     * Maps attribute names to their corresponding property names for cases
     * where attribute name doesn't match property name.
     * @return {?}
     */},{key:'parse',/**
     * @abstract
     * @param {?} templateHtml
     * @return {?}
     */value:function parse(templateHtml){}/**
     * @abstract
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */},{key:'querySelector',value:function querySelector(el,selector){}/**
     * @abstract
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */},{key:'querySelectorAll',value:function querySelectorAll(el,selector){}/**
     * @abstract
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'on',value:function on(el,evt,listener){}/**
     * @abstract
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'onAndCancel',value:function onAndCancel(el,evt,listener){}/**
     * @abstract
     * @param {?} el
     * @param {?} evt
     * @return {?}
     */},{key:'dispatchEvent',value:function dispatchEvent(el,evt){}/**
     * @abstract
     * @param {?} eventType
     * @return {?}
     */},{key:'createMouseEvent',value:function createMouseEvent(eventType){}/**
     * @abstract
     * @param {?} eventType
     * @return {?}
     */},{key:'createEvent',value:function createEvent(eventType){}/**
     * @abstract
     * @param {?} evt
     * @return {?}
     */},{key:'preventDefault',value:function preventDefault(evt){}/**
     * @abstract
     * @param {?} evt
     * @return {?}
     */},{key:'isPrevented',value:function isPrevented(evt){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getInnerHTML',value:function getInnerHTML(el){}/**
     * Returns content if el is a <template> element, null otherwise.
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getTemplateContent',value:function getTemplateContent(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getOuterHTML',value:function getOuterHTML(el){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'nodeName',value:function nodeName(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'nodeValue',value:function nodeValue(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'type',value:function type(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'content',value:function content(node){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'firstChild',value:function firstChild(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'parentElement',value:function parentElement(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'childNodes',value:function childNodes(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'childNodesAsList',value:function childNodesAsList(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'clearNodes',value:function clearNodes(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'appendChild',value:function appendChild(el,node){}/**
     * @abstract
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'removeChild',value:function removeChild(el,node){}/**
     * @abstract
     * @param {?} el
     * @param {?} newNode
     * @param {?} oldNode
     * @return {?}
     */},{key:'replaceChild',value:function replaceChild(el,newNode,oldNode){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'remove',value:function remove(el){}/**
     * @abstract
     * @param {?} parent
     * @param {?} ref
     * @param {?} node
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,ref,node){}/**
     * @abstract
     * @param {?} parent
     * @param {?} ref
     * @param {?} nodes
     * @return {?}
     */},{key:'insertAllBefore',value:function insertAllBefore(parent,ref,nodes){}/**
     * @abstract
     * @param {?} parent
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'insertAfter',value:function insertAfter(parent,el,node){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setInnerHTML',value:function setInnerHTML(el,value){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getText',value:function getText(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setText',value:function setText(el,value){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getValue',value:function getValue(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(el,value){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getChecked',value:function getChecked(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setChecked',value:function setChecked(el,value){}/**
     * @abstract
     * @param {?} text
     * @return {?}
     */},{key:'createComment',value:function createComment(text){}/**
     * @abstract
     * @param {?} html
     * @return {?}
     */},{key:'createTemplate',value:function createTemplate(html){}/**
     * @abstract
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElement',value:function createElement(tagName,doc){}/**
     * @abstract
     * @param {?} ns
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElementNS',value:function createElementNS(ns,tagName,doc){}/**
     * @abstract
     * @param {?} text
     * @param {?=} doc
     * @return {?}
     */},{key:'createTextNode',value:function createTextNode(text,doc){}/**
     * @abstract
     * @param {?} attrName
     * @param {?} attrValue
     * @param {?=} doc
     * @return {?}
     */},{key:'createScriptTag',value:function createScriptTag(attrName,attrValue,doc){}/**
     * @abstract
     * @param {?} css
     * @param {?=} doc
     * @return {?}
     */},{key:'createStyleElement',value:function createStyleElement(css,doc){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'createShadowRoot',value:function createShadowRoot(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getShadowRoot',value:function getShadowRoot(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getHost',value:function getHost(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getDistributedNodes',value:function getDistributedNodes(el){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'clone',value:function clone(/*<T extends Node>*/node){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByClassName',value:function getElementsByClassName(element,name){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByTagName',value:function getElementsByTagName(element,name){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'classList',value:function classList(element){}/**
     * @abstract
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'addClass',value:function addClass(element,className){}/**
     * @abstract
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'removeClass',value:function removeClass(element,className){}/**
     * @abstract
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'hasClass',value:function hasClass(element,className){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setStyle',value:function setStyle(element,styleName,styleValue){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(element,styleName){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @return {?}
     */},{key:'getStyle',value:function getStyle(element,styleName){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @param {?=} styleValue
     * @return {?}
     */},{key:'hasStyle',value:function hasStyle(element,styleName,styleValue){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'tagName',value:function tagName(element){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'attributeMap',value:function attributeMap(element){}/**
     * @abstract
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttribute',value:function hasAttribute(element,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttributeNS',value:function hasAttributeNS(element,ns,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'getAttribute',value:function getAttribute(element,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'getAttributeNS',value:function getAttributeNS(element,ns,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(element,name,value){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttributeNS',value:function setAttributeNS(element,ns,name,value){}/**
     * @abstract
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(element,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'removeAttributeNS',value:function removeAttributeNS(element,ns,attribute){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'templateAwareRoot',value:function templateAwareRoot(el){}/**
     * @abstract
     * @return {?}
     */},{key:'createHtmlDocument',value:function createHtmlDocument(){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getBoundingClientRect',value:function getBoundingClientRect(el){}/**
     * @abstract
     * @param {?} doc
     * @return {?}
     */},{key:'getTitle',value:function getTitle(doc){}/**
     * @abstract
     * @param {?} doc
     * @param {?} newTitle
     * @return {?}
     */},{key:'setTitle',value:function setTitle(doc,newTitle){}/**
     * @abstract
     * @param {?} n
     * @param {?} selector
     * @return {?}
     */},{key:'elementMatches',value:function elementMatches(n,selector){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'isTemplateElement',value:function isTemplateElement(el){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isTextNode',value:function isTextNode(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isCommentNode',value:function isCommentNode(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isElementNode',value:function isElementNode(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'hasShadowRoot',value:function hasShadowRoot(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isShadowRoot',value:function isShadowRoot(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'importIntoDoc',value:function importIntoDoc(/*<T extends Node>*/node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'adoptNode',value:function adoptNode(/*<T extends Node>*/node){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'getHref',value:function getHref(element){}/**
     * @abstract
     * @param {?} event
     * @return {?}
     */},{key:'getEventKey',value:function getEventKey(event){}/**
     * @abstract
     * @param {?} element
     * @param {?} baseUrl
     * @param {?} href
     * @return {?}
     */},{key:'resolveAndSetHref',value:function resolveAndSetHref(element,baseUrl,href){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsDOMEvents',value:function supportsDOMEvents(){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsNativeShadowDOM',value:function supportsNativeShadowDOM(){}/**
     * @abstract
     * @param {?} doc
     * @param {?} target
     * @return {?}
     */},{key:'getGlobalEventTarget',value:function getGlobalEventTarget(doc,target){}/**
     * @abstract
     * @return {?}
     */},{key:'getHistory',value:function getHistory(){}/**
     * @abstract
     * @return {?}
     */},{key:'getLocation',value:function getLocation(){}/**
     * @abstract
     * @param {?} doc
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(doc){}/**
     * @abstract
     * @return {?}
     */},{key:'resetBaseElement',value:function resetBaseElement(){}/**
     * @abstract
     * @return {?}
     */},{key:'getUserAgent',value:function getUserAgent(){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setData',value:function setData(element,name,value){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'getComputedStyle',value:function getComputedStyle(element){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getData',value:function getData(element,name){}/**
     * @abstract
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setGlobalVar',value:function setGlobalVar(name,value){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsWebAnimation',value:function supportsWebAnimation(){}/**
     * @abstract
     * @return {?}
     */},{key:'performanceNow',value:function performanceNow(){}/**
     * @abstract
     * @return {?}
     */},{key:'getAnimationPrefix',value:function getAnimationPrefix(){}/**
     * @abstract
     * @return {?}
     */},{key:'getTransitionEnd',value:function getTransitionEnd(){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsAnimation',value:function supportsAnimation(){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsCookies',value:function supportsCookies(){}/**
     * @abstract
     * @param {?} name
     * @return {?}
     */},{key:'getCookie',value:function getCookie(name){}/**
     * @abstract
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setCookie',value:function setCookie(name,value){}},{key:'attrToPropMap',get:function get(){return this._attrToPropMap;},/**
     * @param {?} value
     * @return {?}
     */set:function set(value){this._attrToPropMap=value;}}]);return DomAdapter;}();var WebAnimationsPlayer=function(){/**
     * @param {?} element
     * @param {?} keyframes
     * @param {?} options
     * @param {?=} previousPlayers
     */function WebAnimationsPlayer(element,keyframes,options){var _this=this;var previousPlayers=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];_classCallCheck(this,WebAnimationsPlayer);this.element=element;this.keyframes=keyframes;this.options=options;this._onDoneFns=[];this._onStartFns=[];this._onDestroyFns=[];this._initialized=false;this._finished=false;this._started=false;this._destroyed=false;this.parentPlayer=null;this._duration=options['duration'];this.previousStyles={};previousPlayers.forEach(function(player){var styles=player._captureStyles();Object.keys(styles).forEach(function(prop){return _this.previousStyles[prop]=styles[prop];});});}/**
     * @return {?}
     */_createClass(WebAnimationsPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @return {?}
     */},{key:'init',value:function init(){var _this2=this;if(this._initialized)return;this._initialized=true;var/** @type {?} */keyframes=this.keyframes.map(function(styles){var/** @type {?} */formattedKeyframe={};Object.keys(styles).forEach(function(prop,index){var/** @type {?} */value=styles[prop];if(value==__WEBPACK_IMPORTED_MODULE_1__angular_core__["O" /* AUTO_STYLE */]){value=_computeStyle(_this2.element,prop);}if(value!=undefined){formattedKeyframe[prop]=value;}});return formattedKeyframe;});var/** @type {?} */previousStyleProps=Object.keys(this.previousStyles);if(previousStyleProps.length){var/** @type {?} */startingKeyframe=keyframes[0];var/** @type {?} */missingStyleProps=[];previousStyleProps.forEach(function(prop){if(!isPresent(startingKeyframe[prop])){missingStyleProps.push(prop);}startingKeyframe[prop]=_this2.previousStyles[prop];});if(missingStyleProps.length){var i;(function(){var/** @type {?} */self=_this2;// tslint:disable-next-line
var _loop=function _loop(){var/** @type {?} */kf=keyframes[i];// tslint:disable-next-line
missingStyleProps.forEach(function(prop){kf[prop]=_computeStyle(self.element,prop);});};for(/** @type {?} */i=1;i<keyframes.length;i++){_loop();}})();}}this._player=this._triggerWebAnimation(this.element,keyframes,this.options);this._finalKeyframe=_copyKeyframeStyles(keyframes[keyframes.length-1]);// this is required so that the player doesn't start to animate right away
this._resetDomPlayerState();this._player.addEventListener('finish',function(){return _this2._onFinish();});}/**
     * \@internal
     * @param {?} element
     * @param {?} keyframes
     * @param {?} options
     * @return {?}
     */},{key:'_triggerWebAnimation',value:function _triggerWebAnimation(element,keyframes,options){// jscompiler doesn't seem to know animate is a native property because it's not fully
// supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]
return element['animate'](keyframes,options);}/**
     * @return {?}
     */},{key:'onStart',/**
     * @param {?} fn
     * @return {?}
     */value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'play',value:function play(){this.init();if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];this._started=true;}this._player.play();}/**
     * @return {?}
     */},{key:'pause',value:function pause(){this.init();this._player.pause();}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this.init();this._onFinish();this._player.finish();}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this._resetDomPlayerState();this._destroyed=false;this._finished=false;this._started=false;}/**
     * @return {?}
     */},{key:'_resetDomPlayerState',value:function _resetDomPlayerState(){if(this._player){this._player.cancel();}}/**
     * @return {?}
     */},{key:'restart',value:function restart(){this.reset();this.play();}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._resetDomPlayerState();this._onFinish();this._destroyed=true;this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'setPosition',/**
     * @param {?} p
     * @return {?}
     */value:function setPosition(p){this._player.currentTime=p*this.totalTime;}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){return this._player.currentTime/this.totalTime;}/**
     * @return {?}
     */},{key:'_captureStyles',value:function _captureStyles(){var _this3=this;var/** @type {?} */styles={};if(this.hasStarted()){Object.keys(this._finalKeyframe).forEach(function(prop){if(prop!='offset'){styles[prop]=_this3._finished?_this3._finalKeyframe[prop]:_computeStyle(_this3.element,prop);}});}return styles;}},{key:'domPlayer',get:function get(){return this._player;}},{key:'totalTime',get:function get(){return this._duration;}}]);return WebAnimationsPlayer;}();/**
 * @param {?} element
 * @param {?} prop
 * @return {?}
 */function _computeStyle(element,prop){return getDOM().getComputedStyle(element)[prop];}/**
 * @param {?} styles
 * @return {?}
 */function _copyKeyframeStyles(styles){var/** @type {?} */newStyles={};Object.keys(styles).forEach(function(prop){if(prop!='offset'){newStyles[prop]=styles[prop];}});return newStyles;}var WebAnimationsDriver=function(){function WebAnimationsDriver(){_classCallCheck(this,WebAnimationsDriver);}_createClass(WebAnimationsDriver,[{key:'animate',/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */value:function animate(element,startingStyles,keyframes,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];var/** @type {?} */formattedSteps=[];var/** @type {?} */startingStyleLookup={};if(isPresent(startingStyles)){startingStyleLookup=_populateStyles(startingStyles,{});}keyframes.forEach(function(keyframe){var/** @type {?} */data=_populateStyles(keyframe.styles,startingStyleLookup);data['offset']=Math.max(0,Math.min(1,keyframe.offset));formattedSteps.push(data);});// Styling passed into element.animate() must always be balanced.
// The special cases below can occur if only style() calls exist
// within an animation or when a style() calls are used prior
// to a group() animation being issued or if the renderer is
// invoked by the user directly.
if(formattedSteps.length==0){formattedSteps=[startingStyleLookup,startingStyleLookup];}else if(formattedSteps.length==1){var/** @type {?} */start=startingStyleLookup;var/** @type {?} */end=formattedSteps[0];end['offset']=null;formattedSteps=[start,end];}var/** @type {?} */playerOptions={'duration':duration,'delay':delay,'fill':'both'// we use `both` because it allows for styling at 0% to work with `delay`
};// we check for this to avoid having a null|undefined value be present
// for the easing (which results in an error for certain browsers #9752)
if(easing){playerOptions['easing']=easing;}// there may be a chance a NoOp player is returned depending
// on when the previous animation was cancelled
previousPlayers=previousPlayers.filter(filterWebAnimationPlayerFn);return new WebAnimationsPlayer(element,formattedSteps,playerOptions,/** @type {?} */previousPlayers);}}]);return WebAnimationsDriver;}();/**
 * @param {?} styles
 * @param {?} defaultStyles
 * @return {?}
 */function _populateStyles(styles,defaultStyles){var/** @type {?} */data={};styles.styles.forEach(function(entry){Object.keys(entry).forEach(function(prop){data[prop]=entry[prop];});});Object.keys(defaultStyles).forEach(function(prop){if(!isPresent(data[prop])){data[prop]=defaultStyles[prop];}});return data;}/**
 * @param {?} player
 * @return {?}
 */function filterWebAnimationPlayerFn(player){return player instanceof WebAnimationsPlayer;}/**
 * Provides DOM operations in any browser environment.
 *
 * \@security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 * @abstract
 */var GenericBrowserDomAdapter=function(_DomAdapter){_inherits(GenericBrowserDomAdapter,_DomAdapter);function GenericBrowserDomAdapter(){_classCallCheck(this,GenericBrowserDomAdapter);var _this4=_possibleConstructorReturn(this,(GenericBrowserDomAdapter.__proto__||Object.getPrototypeOf(GenericBrowserDomAdapter)).call(this));_this4._animationPrefix=null;_this4._transitionEnd=null;try{var element=_this4.createElement('div',document);if(isPresent(_this4.getStyle(element,'animationName'))){_this4._animationPrefix='';}else{var domPrefixes=['Webkit','Moz','O','ms'];for(var i=0;i<domPrefixes.length;i++){if(isPresent(_this4.getStyle(element,domPrefixes[i]+'AnimationName'))){_this4._animationPrefix='-'+domPrefixes[i].toLowerCase()+'-';break;}}}var transEndEventNames={WebkitTransition:'webkitTransitionEnd',MozTransition:'transitionend',OTransition:'oTransitionEnd otransitionend',transition:'transitionend'};Object.keys(transEndEventNames).forEach(function(key){if(isPresent(_this4.getStyle(element,key))){_this4._transitionEnd=transEndEventNames[key];}});}catch(e){_this4._animationPrefix=null;_this4._transitionEnd=null;}return _this4;}/**
     * @param {?} el
     * @return {?}
     */_createClass(GenericBrowserDomAdapter,[{key:'getDistributedNodes',value:function getDistributedNodes(el){return el.getDistributedNodes();}/**
     * @param {?} el
     * @param {?} baseUrl
     * @param {?} href
     * @return {?}
     */},{key:'resolveAndSetHref',value:function resolveAndSetHref(el,baseUrl,href){el.href=href==null?baseUrl:baseUrl+'/../'+href;}/**
     * @return {?}
     */},{key:'supportsDOMEvents',value:function supportsDOMEvents(){return true;}/**
     * @return {?}
     */},{key:'supportsNativeShadowDOM',value:function supportsNativeShadowDOM(){return typeof document.body.createShadowRoot==='function';}/**
     * @return {?}
     */},{key:'getAnimationPrefix',value:function getAnimationPrefix(){return this._animationPrefix?this._animationPrefix:'';}/**
     * @return {?}
     */},{key:'getTransitionEnd',value:function getTransitionEnd(){return this._transitionEnd?this._transitionEnd:'';}/**
     * @return {?}
     */},{key:'supportsAnimation',value:function supportsAnimation(){return isPresent(this._animationPrefix)&&isPresent(this._transitionEnd);}}]);return GenericBrowserDomAdapter;}(DomAdapter);var/** @type {?} */_attrToPropMap={'class':'className','innerHtml':'innerHTML','readonly':'readOnly','tabindex':'tabIndex'};var/** @type {?} */DOM_KEY_LOCATION_NUMPAD=3;// Map to convert some key or keyIdentifier values to what will be returned by getEventKey
var/** @type {?} */_keyMap={// The following values are here for cross-browser compatibility and to match the W3C standard
// cf http://www.w3.org/TR/DOM-Level-3-Events-key/
'\b':'Backspace','\t':'Tab','\x7F':'Delete','\x1B':'Escape','Del':'Delete','Esc':'Escape','Left':'ArrowLeft','Right':'ArrowRight','Up':'ArrowUp','Down':'ArrowDown','Menu':'ContextMenu','Scroll':'ScrollLock','Win':'OS'};// There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...
var/** @type {?} */_chromeNumKeyPadMap={'A':'1','B':'2','C':'3','D':'4','E':'5','F':'6','G':'7','H':'8','I':'9','J':'*','K':'+','M':'-','N':'.','O':'/','\x60':'0','\x90':'NumLock'};var BrowserDomAdapter=function(_GenericBrowserDomAda){_inherits(BrowserDomAdapter,_GenericBrowserDomAda);function BrowserDomAdapter(){_classCallCheck(this,BrowserDomAdapter);return _possibleConstructorReturn(this,(BrowserDomAdapter.__proto__||Object.getPrototypeOf(BrowserDomAdapter)).apply(this,arguments));}_createClass(BrowserDomAdapter,[{key:'parse',/**
     * @param {?} templateHtml
     * @return {?}
     */value:function parse(templateHtml){throw new Error('parse not implemented');}/**
     * @return {?}
     */},{key:'hasProperty',/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */value:function hasProperty(element,name){return name in element;}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){el[name]=value;}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'getProperty',value:function getProperty(el,name){return el[name];}/**
     * @param {?} el
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invoke',value:function invoke(el,methodName,args){el[methodName].apply(el,_toConsumableArray(args));}/**
     * @param {?} error
     * @return {?}
     */},{key:'logError',value:function logError(error){if(window.console){if(console.error){console.error(error);}else{console.log(error);}}}/**
     * @param {?} error
     * @return {?}
     */},{key:'log',value:function log(error){if(window.console){window.console.log&&window.console.log(error);}}/**
     * @param {?} error
     * @return {?}
     */},{key:'logGroup',value:function logGroup(error){if(window.console){window.console.group&&window.console.group(error);}}/**
     * @return {?}
     */},{key:'logGroupEnd',value:function logGroupEnd(){if(window.console){window.console.groupEnd&&window.console.groupEnd();}}/**
     * @return {?}
     */},{key:'querySelector',/**
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */value:function querySelector(el,selector){return el.querySelector(selector);}/**
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */},{key:'querySelectorAll',value:function querySelectorAll(el,selector){return el.querySelectorAll(selector);}/**
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'on',value:function on(el,evt,listener){el.addEventListener(evt,listener,false);}/**
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'onAndCancel',value:function onAndCancel(el,evt,listener){el.addEventListener(evt,listener,false);// Needed to follow Dart's subscription semantic, until fix of
// https://code.google.com/p/dart/issues/detail?id=17406
return function(){el.removeEventListener(evt,listener,false);};}/**
     * @param {?} el
     * @param {?} evt
     * @return {?}
     */},{key:'dispatchEvent',value:function dispatchEvent(el,evt){el.dispatchEvent(evt);}/**
     * @param {?} eventType
     * @return {?}
     */},{key:'createMouseEvent',value:function createMouseEvent(eventType){var/** @type {?} */evt=document.createEvent('MouseEvent');evt.initEvent(eventType,true,true);return evt;}/**
     * @param {?} eventType
     * @return {?}
     */},{key:'createEvent',value:function createEvent(eventType){var/** @type {?} */evt=document.createEvent('Event');evt.initEvent(eventType,true,true);return evt;}/**
     * @param {?} evt
     * @return {?}
     */},{key:'preventDefault',value:function preventDefault(evt){evt.preventDefault();evt.returnValue=false;}/**
     * @param {?} evt
     * @return {?}
     */},{key:'isPrevented',value:function isPrevented(evt){return evt.defaultPrevented||isPresent(evt.returnValue)&&!evt.returnValue;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getInnerHTML',value:function getInnerHTML(el){return el.innerHTML;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getTemplateContent',value:function getTemplateContent(el){return'content'in el&&el instanceof HTMLTemplateElement?el.content:null;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getOuterHTML',value:function getOuterHTML(el){return el.outerHTML;}/**
     * @param {?} node
     * @return {?}
     */},{key:'nodeName',value:function nodeName(node){return node.nodeName;}/**
     * @param {?} node
     * @return {?}
     */},{key:'nodeValue',value:function nodeValue(node){return node.nodeValue;}/**
     * @param {?} node
     * @return {?}
     */},{key:'type',value:function type(node){return node.type;}/**
     * @param {?} node
     * @return {?}
     */},{key:'content',value:function content(node){if(this.hasProperty(node,'content')){return node.content;}else{return node;}}/**
     * @param {?} el
     * @return {?}
     */},{key:'firstChild',value:function firstChild(el){return el.firstChild;}/**
     * @param {?} el
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(el){return el.nextSibling;}/**
     * @param {?} el
     * @return {?}
     */},{key:'parentElement',value:function parentElement(el){return el.parentNode;}/**
     * @param {?} el
     * @return {?}
     */},{key:'childNodes',value:function childNodes(el){return el.childNodes;}/**
     * @param {?} el
     * @return {?}
     */},{key:'childNodesAsList',value:function childNodesAsList(el){var/** @type {?} */childNodes=el.childNodes;var/** @type {?} */res=new Array(childNodes.length);for(var/** @type {?} */i=0;i<childNodes.length;i++){res[i]=childNodes[i];}return res;}/**
     * @param {?} el
     * @return {?}
     */},{key:'clearNodes',value:function clearNodes(el){while(el.firstChild){el.removeChild(el.firstChild);}}/**
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'appendChild',value:function appendChild(el,node){el.appendChild(node);}/**
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'removeChild',value:function removeChild(el,node){el.removeChild(node);}/**
     * @param {?} el
     * @param {?} newChild
     * @param {?} oldChild
     * @return {?}
     */},{key:'replaceChild',value:function replaceChild(el,newChild,oldChild){el.replaceChild(newChild,oldChild);}/**
     * @param {?} node
     * @return {?}
     */},{key:'remove',value:function remove(node){if(node.parentNode){node.parentNode.removeChild(node);}return node;}/**
     * @param {?} parent
     * @param {?} ref
     * @param {?} node
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,ref,node){parent.insertBefore(node,ref);}/**
     * @param {?} parent
     * @param {?} ref
     * @param {?} nodes
     * @return {?}
     */},{key:'insertAllBefore',value:function insertAllBefore(parent,ref,nodes){nodes.forEach(function(n){return parent.insertBefore(n,ref);});}/**
     * @param {?} parent
     * @param {?} ref
     * @param {?} node
     * @return {?}
     */},{key:'insertAfter',value:function insertAfter(parent,ref,node){parent.insertBefore(node,ref.nextSibling);}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setInnerHTML',value:function setInnerHTML(el,value){el.innerHTML=value;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getText',value:function getText(el){return el.textContent;}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setText',value:function setText(el,value){el.textContent=value;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getValue',value:function getValue(el){return el.value;}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(el,value){el.value=value;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getChecked',value:function getChecked(el){return el.checked;}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setChecked',value:function setChecked(el,value){el.checked=value;}/**
     * @param {?} text
     * @return {?}
     */},{key:'createComment',value:function createComment(text){return document.createComment(text);}/**
     * @param {?} html
     * @return {?}
     */},{key:'createTemplate',value:function createTemplate(html){var/** @type {?} */t=document.createElement('template');t.innerHTML=html;return t;}/**
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElement',value:function createElement(tagName){var doc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:document;return doc.createElement(tagName);}/**
     * @param {?} ns
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElementNS',value:function createElementNS(ns,tagName){var doc=arguments.length>2&&arguments[2]!==undefined?arguments[2]:document;return doc.createElementNS(ns,tagName);}/**
     * @param {?} text
     * @param {?=} doc
     * @return {?}
     */},{key:'createTextNode',value:function createTextNode(text){var doc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:document;return doc.createTextNode(text);}/**
     * @param {?} attrName
     * @param {?} attrValue
     * @param {?=} doc
     * @return {?}
     */},{key:'createScriptTag',value:function createScriptTag(attrName,attrValue){var doc=arguments.length>2&&arguments[2]!==undefined?arguments[2]:document;var/** @type {?} */el=doc.createElement('SCRIPT');el.setAttribute(attrName,attrValue);return el;}/**
     * @param {?} css
     * @param {?=} doc
     * @return {?}
     */},{key:'createStyleElement',value:function createStyleElement(css){var doc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:document;var/** @type {?} */style=doc.createElement('style');this.appendChild(style,this.createTextNode(css));return style;}/**
     * @param {?} el
     * @return {?}
     */},{key:'createShadowRoot',value:function createShadowRoot(el){return el.createShadowRoot();}/**
     * @param {?} el
     * @return {?}
     */},{key:'getShadowRoot',value:function getShadowRoot(el){return el.shadowRoot;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getHost',value:function getHost(el){return el.host;}/**
     * @param {?} node
     * @return {?}
     */},{key:'clone',value:function clone(node){return node.cloneNode(true);}/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByClassName',value:function getElementsByClassName(element,name){return element.getElementsByClassName(name);}/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByTagName',value:function getElementsByTagName(element,name){return element.getElementsByTagName(name);}/**
     * @param {?} element
     * @return {?}
     */},{key:'classList',value:function classList(element){return Array.prototype.slice.call(element.classList,0);}/**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'addClass',value:function addClass(element,className){element.classList.add(className);}/**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'removeClass',value:function removeClass(element,className){element.classList.remove(className);}/**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'hasClass',value:function hasClass(element,className){return element.classList.contains(className);}/**
     * @param {?} element
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setStyle',value:function setStyle(element,styleName,styleValue){element.style[styleName]=styleValue;}/**
     * @param {?} element
     * @param {?} stylename
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(element,stylename){// IE requires '' instead of null
// see https://github.com/angular/angular/issues/7916
element.style[stylename]='';}/**
     * @param {?} element
     * @param {?} stylename
     * @return {?}
     */},{key:'getStyle',value:function getStyle(element,stylename){return element.style[stylename];}/**
     * @param {?} element
     * @param {?} styleName
     * @param {?=} styleValue
     * @return {?}
     */},{key:'hasStyle',value:function hasStyle(element,styleName){var styleValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */value=this.getStyle(element,styleName)||'';return styleValue?value==styleValue:value.length>0;}/**
     * @param {?} element
     * @return {?}
     */},{key:'tagName',value:function tagName(element){return element.tagName;}/**
     * @param {?} element
     * @return {?}
     */},{key:'attributeMap',value:function attributeMap(element){var/** @type {?} */res=new Map();var/** @type {?} */elAttrs=element.attributes;for(var/** @type {?} */i=0;i<elAttrs.length;i++){var/** @type {?} */attrib=elAttrs[i];res.set(attrib.name,attrib.value);}return res;}/**
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttribute',value:function hasAttribute(element,attribute){return element.hasAttribute(attribute);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttributeNS',value:function hasAttributeNS(element,ns,attribute){return element.hasAttributeNS(ns,attribute);}/**
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'getAttribute',value:function getAttribute(element,attribute){return element.getAttribute(attribute);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @return {?}
     */},{key:'getAttributeNS',value:function getAttributeNS(element,ns,name){return element.getAttributeNS(ns,name);}/**
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(element,name,value){element.setAttribute(name,value);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttributeNS',value:function setAttributeNS(element,ns,name,value){element.setAttributeNS(ns,name,value);}/**
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(element,attribute){element.removeAttribute(attribute);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @return {?}
     */},{key:'removeAttributeNS',value:function removeAttributeNS(element,ns,name){element.removeAttributeNS(ns,name);}/**
     * @param {?} el
     * @return {?}
     */},{key:'templateAwareRoot',value:function templateAwareRoot(el){return this.isTemplateElement(el)?this.content(el):el;}/**
     * @return {?}
     */},{key:'createHtmlDocument',value:function createHtmlDocument(){return document.implementation.createHTMLDocument('fakeTitle');}/**
     * @param {?} el
     * @return {?}
     */},{key:'getBoundingClientRect',value:function getBoundingClientRect(el){try{return el.getBoundingClientRect();}catch(e){return{top:0,bottom:0,left:0,right:0,width:0,height:0};}}/**
     * @param {?} doc
     * @return {?}
     */},{key:'getTitle',value:function getTitle(doc){return document.title;}/**
     * @param {?} doc
     * @param {?} newTitle
     * @return {?}
     */},{key:'setTitle',value:function setTitle(doc,newTitle){document.title=newTitle||'';}/**
     * @param {?} n
     * @param {?} selector
     * @return {?}
     */},{key:'elementMatches',value:function elementMatches(n,selector){if(n instanceof HTMLElement){return n.matches&&n.matches(selector)||n.msMatchesSelector&&n.msMatchesSelector(selector)||n.webkitMatchesSelector&&n.webkitMatchesSelector(selector);}return false;}/**
     * @param {?} el
     * @return {?}
     */},{key:'isTemplateElement',value:function isTemplateElement(el){return el instanceof HTMLElement&&el.nodeName=='TEMPLATE';}/**
     * @param {?} node
     * @return {?}
     */},{key:'isTextNode',value:function isTextNode(node){return node.nodeType===Node.TEXT_NODE;}/**
     * @param {?} node
     * @return {?}
     */},{key:'isCommentNode',value:function isCommentNode(node){return node.nodeType===Node.COMMENT_NODE;}/**
     * @param {?} node
     * @return {?}
     */},{key:'isElementNode',value:function isElementNode(node){return node.nodeType===Node.ELEMENT_NODE;}/**
     * @param {?} node
     * @return {?}
     */},{key:'hasShadowRoot',value:function hasShadowRoot(node){return isPresent(node.shadowRoot)&&node instanceof HTMLElement;}/**
     * @param {?} node
     * @return {?}
     */},{key:'isShadowRoot',value:function isShadowRoot(node){return node instanceof DocumentFragment;}/**
     * @param {?} node
     * @return {?}
     */},{key:'importIntoDoc',value:function importIntoDoc(node){return document.importNode(this.templateAwareRoot(node),true);}/**
     * @param {?} node
     * @return {?}
     */},{key:'adoptNode',value:function adoptNode(node){return document.adoptNode(node);}/**
     * @param {?} el
     * @return {?}
     */},{key:'getHref',value:function getHref(el){return el.href;}/**
     * @param {?} event
     * @return {?}
     */},{key:'getEventKey',value:function getEventKey(event){var/** @type {?} */key=event.key;if(isBlank(key)){key=event.keyIdentifier;// keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and
// Safari cf
// http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces
if(isBlank(key)){return'Unidentified';}if(key.startsWith('U+')){key=String.fromCharCode(parseInt(key.substring(2),16));if(event.location===DOM_KEY_LOCATION_NUMPAD&&_chromeNumKeyPadMap.hasOwnProperty(key)){// There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...
key=_chromeNumKeyPadMap[key];}}}return _keyMap[key]||key;}/**
     * @param {?} doc
     * @param {?} target
     * @return {?}
     */},{key:'getGlobalEventTarget',value:function getGlobalEventTarget(doc,target){if(target==='window'){return window;}if(target==='document'){return document;}if(target==='body'){return document.body;}}/**
     * @return {?}
     */},{key:'getHistory',value:function getHistory(){return window.history;}/**
     * @return {?}
     */},{key:'getLocation',value:function getLocation(){return window.location;}/**
     * @param {?} doc
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(doc){var/** @type {?} */href=getBaseElementHref();return isBlank(href)?null:relativePath(href);}/**
     * @return {?}
     */},{key:'resetBaseElement',value:function resetBaseElement(){baseElement=null;}/**
     * @return {?}
     */},{key:'getUserAgent',value:function getUserAgent(){return window.navigator.userAgent;}/**
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setData',value:function setData(element,name,value){this.setAttribute(element,'data-'+name,value);}/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getData',value:function getData(element,name){return this.getAttribute(element,'data-'+name);}/**
     * @param {?} element
     * @return {?}
     */},{key:'getComputedStyle',value:function(_getComputedStyle){function getComputedStyle(_x4){return _getComputedStyle.apply(this,arguments);}getComputedStyle.toString=function(){return _getComputedStyle.toString();};return getComputedStyle;}(function(element){return getComputedStyle(element);})/**
     * @param {?} path
     * @param {?} value
     * @return {?}
     */},{key:'setGlobalVar',value:function setGlobalVar(path,value){setValueOnPath(global$1,path,value);}/**
     * @return {?}
     */},{key:'supportsWebAnimation',value:function supportsWebAnimation(){return typeof Element.prototype['animate']==='function';}/**
     * @return {?}
     */},{key:'performanceNow',value:function performanceNow(){// performance.now() is not available in all browsers, see
// http://caniuse.com/#search=performance.now
return window.performance&&window.performance.now?window.performance.now():new Date().getTime();}/**
     * @return {?}
     */},{key:'supportsCookies',value:function supportsCookies(){return true;}/**
     * @param {?} name
     * @return {?}
     */},{key:'getCookie',value:function getCookie(name){return parseCookieValue(document.cookie,name);}/**
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setCookie',value:function setCookie(name,value){// document.cookie is magical, assigning into it assigns/overrides one cookie value, but does
// not clear other cookies.
document.cookie=encodeURIComponent(name)+'='+encodeURIComponent(value);}},{key:'attrToPropMap',get:function get(){return _attrToPropMap;}}],[{key:'makeCurrent',value:function makeCurrent(){setRootDomAdapter(new BrowserDomAdapter());}}]);return BrowserDomAdapter;}(GenericBrowserDomAdapter);var/** @type {?} */baseElement=null;/**
 * @return {?}
 */function getBaseElementHref(){if(!baseElement){baseElement=document.querySelector('base');if(!baseElement){return null;}}return baseElement.getAttribute('href');}// based on urlUtils.js in AngularJS 1
var/** @type {?} */urlParsingNode=void 0;/**
 * @param {?} url
 * @return {?}
 */function relativePath(url){if(!urlParsingNode){urlParsingNode=document.createElement('a');}urlParsingNode.setAttribute('href',url);return urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname;}/**
 * @param {?} cookieStr
 * @param {?} name
 * @return {?}
 */function parseCookieValue(cookieStr,name){name=encodeURIComponent(name);var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=cookieStr.split(';')[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var cookie=_step.value;var/** @type {?} */eqIndex=cookie.indexOf('=');var _ref=eqIndex==-1?[cookie,'']:[cookie.slice(0,eqIndex),cookie.slice(eqIndex+1)],_ref2=_slicedToArray(_ref,2),cookieName=_ref2[0],cookieValue=_ref2[1];if(cookieName.trim()===name){return decodeURIComponent(cookieValue);}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return null;}/**
 * A DI Token representing the main rendering context. In a browser this is the DOM Document.
 *
 * Note: Document might not be available in the Application Context when Application and Rendering
 * Contexts are not the same (e.g. when running the application into a Web Worker).
 *
 * @stable
 */var/** @type {?} */DOCUMENT=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('DocumentToken');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 * @return {?}
 */function supportsState(){return!!window.history.pushState;}/**
 * `PlatformLocation` encapsulates all of the direct calls to platform APIs.
 * This class should not be used directly by an application developer. Instead, use
 * {\@link Location}.
 */var BrowserPlatformLocation=function(_PlatformLocation){_inherits(BrowserPlatformLocation,_PlatformLocation);/**
     * @param {?} _doc
     */function BrowserPlatformLocation(_doc){_classCallCheck(this,BrowserPlatformLocation);var _this6=_possibleConstructorReturn(this,(BrowserPlatformLocation.__proto__||Object.getPrototypeOf(BrowserPlatformLocation)).call(this));_this6._doc=_doc;_this6._init();return _this6;}/**
     * \@internal
     * @return {?}
     */_createClass(BrowserPlatformLocation,[{key:'_init',value:function _init(){this._location=getDOM().getLocation();this._history=getDOM().getHistory();}/**
     * @return {?}
     */},{key:'getBaseHrefFromDOM',/**
     * @return {?}
     */value:function getBaseHrefFromDOM(){return getDOM().getBaseHref(this._doc);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onPopState',value:function onPopState(fn){getDOM().getGlobalEventTarget(this._doc,'window').addEventListener('popstate',fn,false);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onHashChange',value:function onHashChange(fn){getDOM().getGlobalEventTarget(this._doc,'window').addEventListener('hashchange',fn,false);}/**
     * @return {?}
     */},{key:'pushState',/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */value:function pushState(state,title,url){if(supportsState()){this._history.pushState(state,title,url);}else{this._location.hash=url;}}/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state,title,url){if(supportsState()){this._history.replaceState(state,title,url);}else{this._location.hash=url;}}/**
     * @return {?}
     */},{key:'forward',value:function forward(){this._history.forward();}/**
     * @return {?}
     */},{key:'back',value:function back(){this._history.back();}},{key:'location',get:function get(){return this._location;}},{key:'pathname',get:function get(){return this._location.pathname;}/**
     * @return {?}
     */,/**
     * @param {?} newPath
     * @return {?}
     */set:function set(newPath){this._location.pathname=newPath;}},{key:'search',get:function get(){return this._location.search;}/**
     * @return {?}
     */},{key:'hash',get:function get(){return this._location.hash;}}]);return BrowserPlatformLocation;}(__WEBPACK_IMPORTED_MODULE_0__angular_common__["b" /* PlatformLocation */]);BrowserPlatformLocation.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */BrowserPlatformLocation.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]}];};/**
 * A service that can be used to get and add meta tags.
 *
 * \@experimental
 */var Meta=function(){/**
     * @param {?} _doc
     */function Meta(_doc){_classCallCheck(this,Meta);this._doc=_doc;this._dom=getDOM();}/**
     * @param {?} tag
     * @param {?=} forceCreation
     * @return {?}
     */_createClass(Meta,[{key:'addTag',value:function addTag(tag){var forceCreation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!tag)return null;return this._getOrCreateElement(tag,forceCreation);}/**
     * @param {?} tags
     * @param {?=} forceCreation
     * @return {?}
     */},{key:'addTags',value:function addTags(tags){var _this7=this;var forceCreation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!tags)return[];return tags.reduce(function(result,tag){if(tag){result.push(_this7._getOrCreateElement(tag,forceCreation));}return result;},[]);}/**
     * @param {?} attrSelector
     * @return {?}
     */},{key:'getTag',value:function getTag(attrSelector){if(!attrSelector)return null;return this._dom.querySelector(this._doc,'meta['+attrSelector+']');}/**
     * @param {?} attrSelector
     * @return {?}
     */},{key:'getTags',value:function getTags(attrSelector){if(!attrSelector)return[];var/** @type {?} */list/*NodeList*/=this._dom.querySelectorAll(this._doc,'meta['+attrSelector+']');return list?[].slice.call(list):[];}/**
     * @param {?} tag
     * @param {?=} selector
     * @return {?}
     */},{key:'updateTag',value:function updateTag(tag,selector){if(!tag)return null;selector=selector||this._parseSelector(tag);var/** @type {?} */meta=this.getTag(selector);if(meta){return this._setMetaElementAttributes(tag,meta);}return this._getOrCreateElement(tag,true);}/**
     * @param {?} attrSelector
     * @return {?}
     */},{key:'removeTag',value:function removeTag(attrSelector){this.removeTagElement(this.getTag(attrSelector));}/**
     * @param {?} meta
     * @return {?}
     */},{key:'removeTagElement',value:function removeTagElement(meta){if(meta){this._dom.remove(meta);}}/**
     * @param {?} meta
     * @param {?=} forceCreation
     * @return {?}
     */},{key:'_getOrCreateElement',value:function _getOrCreateElement(meta){var forceCreation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!forceCreation){var/** @type {?} */selector=this._parseSelector(meta);var/** @type {?} */elem=this.getTag(selector);// It's allowed to have multiple elements with the same name so it's not enough to
// just check that element with the same name already present on the page. We also need to
// check if element has tag attributes
if(elem&&this._containsAttributes(meta,elem))return elem;}var/** @type {?} */element=this._dom.createElement('meta');this._setMetaElementAttributes(meta,element);var/** @type {?} */head=this._dom.getElementsByTagName(this._doc,'head')[0];this._dom.appendChild(head,element);return element;}/**
     * @param {?} tag
     * @param {?} el
     * @return {?}
     */},{key:'_setMetaElementAttributes',value:function _setMetaElementAttributes(tag,el){var _this8=this;Object.keys(tag).forEach(function(prop){return _this8._dom.setAttribute(el,prop,tag[prop]);});return el;}/**
     * @param {?} tag
     * @return {?}
     */},{key:'_parseSelector',value:function _parseSelector(tag){var/** @type {?} */attr=tag.name?'name':'property';return attr+'="'+tag[attr]+'"';}/**
     * @param {?} tag
     * @param {?} elem
     * @return {?}
     */},{key:'_containsAttributes',value:function _containsAttributes(tag,elem){var _this9=this;return Object.keys(tag).every(function(key){return _this9._dom.getAttribute(elem,key)===tag[key];});}}]);return Meta;}();Meta.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */Meta.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]}];};/**
 * An id that identifies a particular application being bootstrapped, that should
 * match across the client/server boundary.
 */var/** @type {?} */TRANSITION_ID=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('TRANSITION_ID');/**
 * @param {?} transitionId
 * @param {?} document
 * @return {?}
 */function bootstrapListenerFactory(transitionId,document){var/** @type {?} */factory=function factory(){var/** @type {?} */dom=getDOM();var/** @type {?} */styles=Array.prototype.slice.apply(dom.querySelectorAll(document,'style[ng-transition]'));styles.filter(function(el){return dom.getAttribute(el,'ng-transition')===transitionId;}).forEach(function(el){return dom.remove(el);});};return factory;}var/** @type {?} */SERVER_TRANSITION_PROVIDERS=[{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["c" /* APP_INITIALIZER */],useFactory:bootstrapListenerFactory,deps:[TRANSITION_ID,DOCUMENT],multi:true}];var BrowserGetTestability=function(){function BrowserGetTestability(){_classCallCheck(this,BrowserGetTestability);}_createClass(BrowserGetTestability,[{key:'addToWindow',/**
     * @param {?} registry
     * @return {?}
     */value:function addToWindow(registry){global$1.getAngularTestability=function(elem){var findInAncestors=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var/** @type {?} */testability=registry.findTestabilityInTree(elem,findInAncestors);if(testability==null){throw new Error('Could not find testability for element.');}return testability;};global$1.getAllAngularTestabilities=function(){return registry.getAllTestabilities();};global$1.getAllAngularRootElements=function(){return registry.getAllRootElements();};var/** @type {?} */whenAllStable=function whenAllStable(callback/** TODO #9100 */){var/** @type {?} */testabilities=global$1.getAllAngularTestabilities();var/** @type {?} */count=testabilities.length;var/** @type {?} */didWork=false;var/** @type {?} */decrement=function decrement(didWork_/** TODO #9100 */){didWork=didWork||didWork_;count--;if(count==0){callback(didWork);}};testabilities.forEach(function(testability/** TODO #9100 */){testability.whenStable(decrement);});};if(!global$1['frameworkStabilizers']){global$1['frameworkStabilizers']=[];}global$1['frameworkStabilizers'].push(whenAllStable);}/**
     * @param {?} registry
     * @param {?} elem
     * @param {?} findInAncestors
     * @return {?}
     */},{key:'findTestabilityInTree',value:function findTestabilityInTree(registry,elem,findInAncestors){if(elem==null){return null;}var/** @type {?} */t=registry.getTestability(elem);if(isPresent(t)){return t;}else if(!findInAncestors){return null;}if(getDOM().isShadowRoot(elem)){return this.findTestabilityInTree(registry,getDOM().getHost(elem),true);}return this.findTestabilityInTree(registry,getDOM().parentElement(elem),true);}}],[{key:'init',/**
     * @return {?}
     */value:function init(){__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["P" /* setTestabilityGetter */])(new BrowserGetTestability());}}]);return BrowserGetTestability;}();/**
 * A service that can be used to get and set the title of a current HTML document.
 *
 * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)
 * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements
 * (representing the `<title>` tag). Instead, this service can be used to set and get the current
 * title value.
 *
 * \@experimental
 */var Title=function(){/**
     * @param {?} _doc
     */function Title(_doc){_classCallCheck(this,Title);this._doc=_doc;}/**
     * Get the title of the current HTML document.
     * @return {?}
     */_createClass(Title,[{key:'getTitle',value:function getTitle(){return getDOM().getTitle(this._doc);}/**
     * Set the title of the current HTML document.
     * @param {?} newTitle
     * @return {?}
     */},{key:'setTitle',value:function setTitle(newTitle){getDOM().setTitle(this._doc,newTitle);}}]);return Title;}();Title.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */Title.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]}];};/**
 * Wraps Javascript Objects
 */var StringMapWrapper=function(){function StringMapWrapper(){_classCallCheck(this,StringMapWrapper);}_createClass(StringMapWrapper,null,[{key:'merge',/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */value:function merge(m1,m2){var/** @type {?} */m={};var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(m1)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var k=_step2.value;m[k]=m1[k];}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=Object.keys(m2)[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var _k=_step3.value;m[_k]=m2[_k];}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return m;}/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */},{key:'equals',value:function equals(m1,m2){var/** @type {?} */k1=Object.keys(m1);var/** @type {?} */k2=Object.keys(m2);if(k1.length!=k2.length){return false;}for(var/** @type {?} */i=0;i<k1.length;i++){var/** @type {?} */key=k1[i];if(m1[key]!==m2[key]){return false;}}return true;}}]);return StringMapWrapper;}();/**
 * @stable
 */var/** @type {?} */EVENT_MANAGER_PLUGINS=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('EventManagerPlugins');/**
 * \@stable
 */var EventManager=function(){/**
     * @param {?} plugins
     * @param {?} _zone
     */function EventManager(plugins,_zone){var _this10=this;_classCallCheck(this,EventManager);this._zone=_zone;this._eventNameToPlugin=new Map();plugins.forEach(function(p){return p.manager=_this10;});this._plugins=plugins.slice().reverse();}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */_createClass(EventManager,[{key:'addEventListener',value:function addEventListener(element,eventName,handler){var/** @type {?} */plugin=this._findPluginFor(eventName);return plugin.addEventListener(element,eventName,handler);}/**
     * @param {?} target
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addGlobalEventListener',value:function addGlobalEventListener(target,eventName,handler){var/** @type {?} */plugin=this._findPluginFor(eventName);return plugin.addGlobalEventListener(target,eventName,handler);}/**
     * @return {?}
     */},{key:'getZone',value:function getZone(){return this._zone;}/**
     * \@internal
     * @param {?} eventName
     * @return {?}
     */},{key:'_findPluginFor',value:function _findPluginFor(eventName){var/** @type {?} */plugin=this._eventNameToPlugin.get(eventName);if(plugin){return plugin;}var/** @type {?} */plugins=this._plugins;for(var/** @type {?} */i=0;i<plugins.length;i++){var/** @type {?} */_plugin=plugins[i];if(_plugin.supports(eventName)){this._eventNameToPlugin.set(eventName,_plugin);return _plugin;}}throw new Error('No event manager plugin found for event '+eventName);}}]);return EventManager;}();EventManager.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */EventManager.ctorParameters=function(){return[{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[EVENT_MANAGER_PLUGINS]}]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["o" /* NgZone */]}];};/**
 * @abstract
 */var EventManagerPlugin=function(){/**
     * @param {?} _doc
     */function EventManagerPlugin(_doc){_classCallCheck(this,EventManagerPlugin);this._doc=_doc;}/**
     * @abstract
     * @param {?} eventName
     * @return {?}
     */_createClass(EventManagerPlugin,[{key:'supports',value:function supports(eventName){}/**
     * @abstract
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addGlobalEventListener',value:function addGlobalEventListener(element,eventName,handler){var/** @type {?} */target=getDOM().getGlobalEventTarget(this._doc,element);if(!target){throw new Error('Unsupported event target '+target+' for event '+eventName);}return this.addEventListener(target,eventName,handler);}}]);return EventManagerPlugin;}();var SharedStylesHost=function(){function SharedStylesHost(){_classCallCheck(this,SharedStylesHost);/** @internal */this._stylesSet=new Set();}/**
     * @param {?} styles
     * @return {?}
     */_createClass(SharedStylesHost,[{key:'addStyles',value:function addStyles(styles){var _this11=this;var/** @type {?} */additions=new Set();styles.forEach(function(style){if(!_this11._stylesSet.has(style)){_this11._stylesSet.add(style);additions.add(style);}});this.onStylesAdded(additions);}/**
     * @param {?} additions
     * @return {?}
     */},{key:'onStylesAdded',value:function onStylesAdded(additions){}/**
     * @return {?}
     */},{key:'getAllStyles',value:function getAllStyles(){return Array.from(this._stylesSet);}}]);return SharedStylesHost;}();SharedStylesHost.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */SharedStylesHost.ctorParameters=function(){return[];};var DomSharedStylesHost=function(_SharedStylesHost){_inherits(DomSharedStylesHost,_SharedStylesHost);/**
     * @param {?} _doc
     */function DomSharedStylesHost(_doc){_classCallCheck(this,DomSharedStylesHost);var _this12=_possibleConstructorReturn(this,(DomSharedStylesHost.__proto__||Object.getPrototypeOf(DomSharedStylesHost)).call(this));_this12._doc=_doc;_this12._hostNodes=new Set();_this12._styleNodes=new Set();_this12._hostNodes.add(_doc.head);return _this12;}/**
     * @param {?} styles
     * @param {?} host
     * @return {?}
     */_createClass(DomSharedStylesHost,[{key:'_addStylesToHost',value:function _addStylesToHost(styles,host){var _this13=this;styles.forEach(function(style){var/** @type {?} */styleEl=_this13._doc.createElement('style');styleEl.textContent=style;_this13._styleNodes.add(host.appendChild(styleEl));});}/**
     * @param {?} hostNode
     * @return {?}
     */},{key:'addHost',value:function addHost(hostNode){this._addStylesToHost(this._stylesSet,hostNode);this._hostNodes.add(hostNode);}/**
     * @param {?} hostNode
     * @return {?}
     */},{key:'removeHost',value:function removeHost(hostNode){this._hostNodes.delete(hostNode);}/**
     * @param {?} additions
     * @return {?}
     */},{key:'onStylesAdded',value:function onStylesAdded(additions){var _this14=this;this._hostNodes.forEach(function(hostNode){return _this14._addStylesToHost(additions,hostNode);});}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this._styleNodes.forEach(function(styleNode){return getDOM().remove(styleNode);});}}]);return DomSharedStylesHost;}(SharedStylesHost);DomSharedStylesHost.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */DomSharedStylesHost.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]}];};var/** @type {?} */NAMESPACE_URIS={'xlink':'http://www.w3.org/1999/xlink','svg':'http://www.w3.org/2000/svg','xhtml':'http://www.w3.org/1999/xhtml','xml':'http://www.w3.org/XML/1998/namespace'};var/** @type {?} */TEMPLATE_COMMENT_TEXT='template bindings={}';var/** @type {?} */TEMPLATE_BINDINGS_EXP=/^template bindings=(.*)$/;/**
 * @abstract
 */var DomRootRenderer=function(){/**
     * @param {?} document
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     * @param {?} animationDriver
     * @param {?} appId
     */function DomRootRenderer(document,eventManager,sharedStylesHost,animationDriver,appId){_classCallCheck(this,DomRootRenderer);this.document=document;this.eventManager=eventManager;this.sharedStylesHost=sharedStylesHost;this.animationDriver=animationDriver;this.appId=appId;this.registeredComponents=new Map();}/**
     * @param {?} componentProto
     * @return {?}
     */_createClass(DomRootRenderer,[{key:'renderComponent',value:function renderComponent(componentProto){var/** @type {?} */renderer=this.registeredComponents.get(componentProto.id);if(!renderer){renderer=new DomRenderer(this,componentProto,this.animationDriver,this.appId+'-'+componentProto.id);this.registeredComponents.set(componentProto.id,renderer);}return renderer;}}]);return DomRootRenderer;}();var DomRootRenderer_=function(_DomRootRenderer){_inherits(DomRootRenderer_,_DomRootRenderer);/**
     * @param {?} _document
     * @param {?} _eventManager
     * @param {?} sharedStylesHost
     * @param {?} animationDriver
     * @param {?} appId
     */function DomRootRenderer_(_document,_eventManager,sharedStylesHost,animationDriver,appId){_classCallCheck(this,DomRootRenderer_);var _this15=_possibleConstructorReturn(this,(DomRootRenderer_.__proto__||Object.getPrototypeOf(DomRootRenderer_)).call(this,_document,_eventManager,sharedStylesHost,animationDriver,appId));throw new Error('RootRenderer is no longer supported. Please use the `RendererFactoryV2` instead!');return _this15;}return DomRootRenderer_;}(DomRootRenderer);DomRootRenderer_.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */DomRootRenderer_.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]},{type:EventManager},{type:DomSharedStylesHost},{type:AnimationDriver},{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_1__angular_core__["Q" /* APP_ID */]]}]}];};var/** @type {?} */DIRECT_DOM_RENDERER={/**
     * @param {?} node
     * @return {?}
     */remove:function remove(node){if(node.parentNode){node.parentNode.removeChild(node);}},/**
     * @param {?} node
     * @param {?} parent
     * @return {?}
     */appendChild:function appendChild(node,parent){parent.appendChild(node);},/**
     * @param {?} node
     * @param {?} refNode
     * @return {?}
     */insertBefore:function insertBefore(node,refNode){refNode.parentNode.insertBefore(node,refNode);},/**
     * @param {?} node
     * @return {?}
     */nextSibling:function nextSibling(node){return node.nextSibling;},/**
     * @param {?} node
     * @return {?}
     */parentElement:function parentElement(node){return node.parentNode;}};var DomRenderer=function(){/**
     * @param {?} _rootRenderer
     * @param {?} componentProto
     * @param {?} _animationDriver
     * @param {?} styleShimId
     */function DomRenderer(_rootRenderer,componentProto,_animationDriver,styleShimId){_classCallCheck(this,DomRenderer);this._rootRenderer=_rootRenderer;this.componentProto=componentProto;this._animationDriver=_animationDriver;this.directRenderer=DIRECT_DOM_RENDERER;this._styles=flattenStyles(styleShimId,componentProto.styles,[]);if(componentProto.encapsulation!==__WEBPACK_IMPORTED_MODULE_1__angular_core__["r" /* ViewEncapsulation */].Native){this._rootRenderer.sharedStylesHost.addStyles(this._styles);}if(this.componentProto.encapsulation===__WEBPACK_IMPORTED_MODULE_1__angular_core__["r" /* ViewEncapsulation */].Emulated){this._contentAttr=shimContentAttribute(styleShimId);this._hostAttr=shimHostAttribute(styleShimId);}else{this._contentAttr=null;this._hostAttr=null;}}/**
     * @param {?} selectorOrNode
     * @param {?} debugInfo
     * @return {?}
     */_createClass(DomRenderer,[{key:'selectRootElement',value:function selectRootElement(selectorOrNode,debugInfo){var/** @type {?} */el=void 0;if(typeof selectorOrNode==='string'){el=this._rootRenderer.document.querySelector(selectorOrNode);if(!el){throw new Error('The selector "'+selectorOrNode+'" did not match any elements');}}else{el=selectorOrNode;}while(el.firstChild){el.removeChild(el.firstChild);}return el;}/**
     * @param {?} parent
     * @param {?} name
     * @param {?} debugInfo
     * @return {?}
     */},{key:'createElement',value:function createElement(parent,name,debugInfo){var/** @type {?} */el=void 0;if(isNamespaced(name)){var/** @type {?} */nsAndName=splitNamespace(name);el=document.createElementNS(NAMESPACE_URIS[nsAndName[0]],nsAndName[1]);}else{el=document.createElement(name);}if(this._contentAttr){el.setAttribute(this._contentAttr,'');}if(parent){parent.appendChild(el);}return el;}/**
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){var/** @type {?} */nodesParent=void 0;if(this.componentProto.encapsulation===__WEBPACK_IMPORTED_MODULE_1__angular_core__["r" /* ViewEncapsulation */].Native){nodesParent=hostElement.createShadowRoot();this._rootRenderer.sharedStylesHost.addHost(nodesParent);for(var/** @type {?} */i=0;i<this._styles.length;i++){var/** @type {?} */styleEl=document.createElement('style');styleEl.textContent=this._styles[i];nodesParent.appendChild(styleEl);}}else{if(this._hostAttr){hostElement.setAttribute(this._hostAttr,'');}nodesParent=hostElement;}return nodesParent;}/**
     * @param {?} parentElement
     * @param {?} debugInfo
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement,debugInfo){var/** @type {?} */comment=document.createComment(TEMPLATE_COMMENT_TEXT);if(parentElement){parentElement.appendChild(comment);}return comment;}/**
     * @param {?} parentElement
     * @param {?} value
     * @param {?} debugInfo
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value,debugInfo){var/** @type {?} */node=document.createTextNode(value);if(parentElement){parentElement.appendChild(node);}return node;}/**
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){if(!parentElement)return;appendNodes(parentElement,nodes);}/**
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){moveNodesAfterSibling(node,viewRootNodes);}/**
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){for(var/** @type {?} */i=0;i<viewRootNodes.length;i++){var/** @type {?} */node=viewRootNodes[i];if(node.parentNode){node.parentNode.removeChild(node);}}}/**
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){if(this.componentProto.encapsulation===__WEBPACK_IMPORTED_MODULE_1__angular_core__["r" /* ViewEncapsulation */].Native&&hostElement){this._rootRenderer.sharedStylesHost.removeHost(hostElement.shadowRoot);}}/**
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){return this._rootRenderer.eventManager.addEventListener(renderElement,name,decoratePreventDefault(callback));}/**
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){return this._rootRenderer.eventManager.addGlobalEventListener(target,name,decoratePreventDefault(callback));}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){renderElement[propertyName]=propertyValue;}/**
     * @param {?} renderElement
     * @param {?} attributeName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,attributeName,attributeValue){var/** @type {?} */attrNs=void 0;var/** @type {?} */attrNameWithoutNs=attributeName;if(isNamespaced(attributeName)){var/** @type {?} */nsAndName=splitNamespace(attributeName);attrNameWithoutNs=nsAndName[1];attributeName=nsAndName[0]+':'+nsAndName[1];attrNs=NAMESPACE_URIS[nsAndName[0]];}if(isPresent(attributeValue)){if(attrNs){renderElement.setAttributeNS(attrNs,attributeName,attributeValue);}else{renderElement.setAttribute(attributeName,attributeValue);}}else{if(isPresent(attrNs)){renderElement.removeAttributeNS(attrNs,attrNameWithoutNs);}else{renderElement.removeAttribute(attributeName);}}}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){if(renderElement.nodeType===Node.COMMENT_NODE){var/** @type {?} */existingBindings=renderElement.nodeValue.replace(/\n/g,'').match(TEMPLATE_BINDINGS_EXP);var/** @type {?} */parsedBindings=JSON.parse(existingBindings[1]);parsedBindings[propertyName]=propertyValue;renderElement.nodeValue=TEMPLATE_COMMENT_TEXT.replace('{}',JSON.stringify(parsedBindings,null,2));}else{// Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
propertyName=propertyName.replace(/\$/g,'_');this.setElementAttribute(renderElement,propertyName,propertyValue);}}/**
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){if(isAdd){renderElement.classList.add(className);}else{renderElement.classList.remove(className);}}/**
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){if(isPresent(styleValue)){renderElement.style[styleName]=stringify(styleValue);}else{// IE requires '' instead of null
// see https://github.com/angular/angular/issues/7916
renderElement.style[styleName]='';}}/**
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){renderElement[methodName].apply(renderElement,args);}/**
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){renderNode.nodeValue=text;}/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */},{key:'animate',value:function animate(element,startingStyles,keyframes,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];if(this._rootRenderer.document.body.contains(element)){return this._animationDriver.animate(element,startingStyles,keyframes,duration,delay,easing,previousPlayers);}return new __WEBPACK_IMPORTED_MODULE_1__angular_core__["N" /* ɵNoOpAnimationPlayer */]();}}]);return DomRenderer;}();/**
 * @param {?} sibling
 * @param {?} nodes
 * @return {?}
 */function moveNodesAfterSibling(sibling,nodes){var/** @type {?} */parent=sibling.parentNode;if(nodes.length>0&&parent){var/** @type {?} */nextSibling=sibling.nextSibling;if(nextSibling){for(var/** @type {?} */i=0;i<nodes.length;i++){parent.insertBefore(nodes[i],nextSibling);}}else{for(var/** @type {?} */_i=0;_i<nodes.length;_i++){parent.appendChild(nodes[_i]);}}}}/**
 * @param {?} parent
 * @param {?} nodes
 * @return {?}
 */function appendNodes(parent,nodes){for(var/** @type {?} */i=0;i<nodes.length;i++){parent.appendChild(nodes[i]);}}/**
 * @param {?} eventHandler
 * @return {?}
 */function decoratePreventDefault(eventHandler){return function(event){var/** @type {?} */allowDefaultBehavior=eventHandler(event);if(allowDefaultBehavior===false){// TODO(tbosch): move preventDefault into event plugins...
event.preventDefault();event.returnValue=false;}};}var/** @type {?} */COMPONENT_REGEX=/%COMP%/g;var/** @type {?} */COMPONENT_VARIABLE='%COMP%';var/** @type {?} */HOST_ATTR='_nghost-'+COMPONENT_VARIABLE;var/** @type {?} */CONTENT_ATTR='_ngcontent-'+COMPONENT_VARIABLE;/**
 * @param {?} componentShortId
 * @return {?}
 */function shimContentAttribute(componentShortId){return CONTENT_ATTR.replace(COMPONENT_REGEX,componentShortId);}/**
 * @param {?} componentShortId
 * @return {?}
 */function shimHostAttribute(componentShortId){return HOST_ATTR.replace(COMPONENT_REGEX,componentShortId);}/**
 * @param {?} compId
 * @param {?} styles
 * @param {?} target
 * @return {?}
 */function flattenStyles(compId,styles,target){for(var/** @type {?} */i=0;i<styles.length;i++){var/** @type {?} */style=styles[i];if(Array.isArray(style)){flattenStyles(compId,style,target);}else{style=style.replace(COMPONENT_REGEX,compId);target.push(style);}}return target;}var/** @type {?} */NS_PREFIX_RE=/^:([^:]+):(.+)$/;/**
 * @param {?} name
 * @return {?}
 */function isNamespaced(name){return name[0]===':';}/**
 * @param {?} name
 * @return {?}
 */function splitNamespace(name){var/** @type {?} */match=name.match(NS_PREFIX_RE);return[match[1],match[2]];}var DomRendererFactoryV2=function(){/**
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     */function DomRendererFactoryV2(eventManager,sharedStylesHost){_classCallCheck(this,DomRendererFactoryV2);this.eventManager=eventManager;this.sharedStylesHost=sharedStylesHost;this.rendererByCompId=new Map();this.defaultRenderer=new DefaultDomRendererV2(eventManager);}_createClass(DomRendererFactoryV2,[{key:'createRenderer',/**
     * @param {?} element
     * @param {?} type
     * @return {?}
     */value:function createRenderer(element,type){if(!element||!type){return this.defaultRenderer;}switch(type.encapsulation){case __WEBPACK_IMPORTED_MODULE_1__angular_core__["r" /* ViewEncapsulation */].Emulated:{var/** @type {?} */renderer=this.rendererByCompId.get(type.id);if(!renderer){renderer=new EmulatedEncapsulationDomRendererV2(this.eventManager,this.sharedStylesHost,type);this.rendererByCompId.set(type.id,renderer);}renderer.applyToHost(element);return renderer;}case __WEBPACK_IMPORTED_MODULE_1__angular_core__["r" /* ViewEncapsulation */].Native:return new ShadowDomRenderer(this.eventManager,this.sharedStylesHost,element,type);default:{if(!this.rendererByCompId.has(type.id)){var/** @type {?} */styles=flattenStyles(type.id,type.styles,[]);this.sharedStylesHost.addStyles(styles);this.rendererByCompId.set(type.id,this.defaultRenderer);}return this.defaultRenderer;}}}}]);return DomRendererFactoryV2;}();DomRendererFactoryV2.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */DomRendererFactoryV2.ctorParameters=function(){return[{type:EventManager},{type:DomSharedStylesHost}];};var DefaultDomRendererV2=function(){/**
     * @param {?} eventManager
     */function DefaultDomRendererV2(eventManager){_classCallCheck(this,DefaultDomRendererV2);this.eventManager=eventManager;this.data=Object.create(null);}/**
     * @return {?}
     */_createClass(DefaultDomRendererV2,[{key:'destroy',value:function destroy(){}/**
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'createElement',value:function createElement(name,namespace){if(namespace){return document.createElementNS(NAMESPACE_URIS[namespace],name);}return document.createElement(name);}/**
     * @param {?} value
     * @return {?}
     */},{key:'createComment',value:function createComment(value){return document.createComment(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(value){return document.createTextNode(value);}/**
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){parent.appendChild(newChild);}/**
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){if(parent){parent.insertBefore(newChild,refChild);}}/**
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){if(parent){parent.removeChild(oldChild);}}/**
     * @param {?} selectorOrNode
     * @return {?}
     */},{key:'selectRootElement',value:function selectRootElement(selectorOrNode){var/** @type {?} */el=typeof selectorOrNode==='string'?document.querySelector(selectorOrNode):selectorOrNode;if(!el){throw new Error('The selector "'+selectorOrNode+'" did not match any elements');}el.textContent='';return el;}/**
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){return node.parentNode;}/**
     * @param {?} node
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(node){return node.nextSibling;}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @param {?=} namespace
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(el,name,value,namespace){if(namespace){el.setAttributeNS(NAMESPACE_URIS[namespace],namespace+':'+name,value);}else{el.setAttribute(name,value);}}/**
     * @param {?} el
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(el,name,namespace){if(namespace){el.removeAttributeNS(NAMESPACE_URIS[namespace],name);}else{el.removeAttribute(name);}}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'addClass',value:function addClass(el,name){el.classList.add(name);}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'removeClass',value:function removeClass(el,name){el.classList.remove(name);}/**
     * @param {?} el
     * @param {?} style
     * @param {?} value
     * @param {?} hasVendorPrefix
     * @param {?} hasImportant
     * @return {?}
     */},{key:'setStyle',value:function setStyle(el,style,value,hasVendorPrefix,hasImportant){if(hasVendorPrefix||hasImportant){el.style.setProperty(style,value,hasImportant?'important':'');}else{el.style[style]=value;}}/**
     * @param {?} el
     * @param {?} style
     * @param {?} hasVendorPrefix
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(el,style,hasVendorPrefix){if(hasVendorPrefix){el.style.removeProperty(style);}else{// IE requires '' instead of null
// see https://github.com/angular/angular/issues/7916
el.style[style]='';}}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){el[name]=value;}/**
     * @param {?} node
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(node,value){node.nodeValue=value;}/**
     * @param {?} target
     * @param {?} event
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(target,event,callback){if(typeof target==='string'){return this.eventManager.addGlobalEventListener(target,event,decoratePreventDefault(callback));}return this.eventManager.addEventListener(target,event,decoratePreventDefault(callback));}}]);return DefaultDomRendererV2;}();var EmulatedEncapsulationDomRendererV2=function(_DefaultDomRendererV){_inherits(EmulatedEncapsulationDomRendererV2,_DefaultDomRendererV);/**
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     * @param {?} component
     */function EmulatedEncapsulationDomRendererV2(eventManager,sharedStylesHost,component){_classCallCheck(this,EmulatedEncapsulationDomRendererV2);var _this16=_possibleConstructorReturn(this,(EmulatedEncapsulationDomRendererV2.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2)).call(this,eventManager));_this16.component=component;var styles=flattenStyles(component.id,component.styles,[]);sharedStylesHost.addStyles(styles);_this16.contentAttr=shimContentAttribute(component.id);_this16.hostAttr=shimHostAttribute(component.id);return _this16;}/**
     * @param {?} element
     * @return {?}
     */_createClass(EmulatedEncapsulationDomRendererV2,[{key:'applyToHost',value:function applyToHost(element){_get(EmulatedEncapsulationDomRendererV2.prototype.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2.prototype),'setAttribute',this).call(this,element,this.hostAttr,'');}/**
     * @param {?} parent
     * @param {?} name
     * @return {?}
     */},{key:'createElement',value:function createElement(parent,name){var/** @type {?} */el=_get(EmulatedEncapsulationDomRendererV2.prototype.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2.prototype),'createElement',this).call(this,parent,name);_get(EmulatedEncapsulationDomRendererV2.prototype.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2.prototype),'setAttribute',this).call(this,el,this.contentAttr,'');return el;}}]);return EmulatedEncapsulationDomRendererV2;}(DefaultDomRendererV2);var ShadowDomRenderer=function(_DefaultDomRendererV2){_inherits(ShadowDomRenderer,_DefaultDomRendererV2);/**
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     * @param {?} hostEl
     * @param {?} component
     */function ShadowDomRenderer(eventManager,sharedStylesHost,hostEl,component){_classCallCheck(this,ShadowDomRenderer);var _this17=_possibleConstructorReturn(this,(ShadowDomRenderer.__proto__||Object.getPrototypeOf(ShadowDomRenderer)).call(this,eventManager));_this17.sharedStylesHost=sharedStylesHost;_this17.hostEl=hostEl;_this17.component=component;_this17.shadowRoot=hostEl.createShadowRoot();_this17.sharedStylesHost.addHost(_this17.shadowRoot);var styles=flattenStyles(component.id,component.styles,[]);for(var i=0;i<styles.length;i++){var styleEl=document.createElement('style');styleEl.textContent=styles[i];_this17.shadowRoot.appendChild(styleEl);}return _this17;}/**
     * @param {?} node
     * @return {?}
     */_createClass(ShadowDomRenderer,[{key:'nodeOrShadowRoot',value:function nodeOrShadowRoot(node){return node===this.hostEl?this.shadowRoot:node;}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this.sharedStylesHost.removeHost(this.shadowRoot);}/**
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){return _get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'appendChild',this).call(this,this.nodeOrShadowRoot(parent),newChild);}/**
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){return _get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'insertBefore',this).call(this,this.nodeOrShadowRoot(parent),newChild,refChild);}/**
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){return _get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'removeChild',this).call(this,this.nodeOrShadowRoot(parent),oldChild);}/**
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){return this.nodeOrShadowRoot(_get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'parentNode',this).call(this,this.nodeOrShadowRoot(node)));}}]);return ShadowDomRenderer;}(DefaultDomRendererV2);var/** @type {?} */CORE_TOKENS={'ApplicationRef':__WEBPACK_IMPORTED_MODULE_1__angular_core__["w" /* ApplicationRef */],'NgZone':__WEBPACK_IMPORTED_MODULE_1__angular_core__["o" /* NgZone */]};var/** @type {?} */INSPECT_GLOBAL_NAME='ng.probe';var/** @type {?} */CORE_TOKENS_GLOBAL_NAME='ng.coreTokens';/**
 * Returns a {\@link DebugElement} for the given native DOM element, or
 * null if the given native element does not have an Angular view associated
 * with it.
 * @param {?} element
 * @return {?}
 */function inspectNativeElement(element){return __WEBPACK_IMPORTED_MODULE_1__angular_core__["R" /* getDebugNode */](element);}/**
 * Deprecated. Use the one from '\@angular/core'.
 * @deprecated
 */var NgProbeToken=/**
     * @param {?} name
     * @param {?} token
     */function NgProbeToken(name,token){_classCallCheck(this,NgProbeToken);this.name=name;this.token=token;};/**
 * @param {?} rootRenderer
 * @param {?} extraTokens
 * @param {?} coreTokens
 * @return {?}
 */function _createConditionalRootRenderer(rootRenderer,extraTokens,coreTokens){return __WEBPACK_IMPORTED_MODULE_1__angular_core__["h" /* isDevMode */]()?_createRootRenderer(rootRenderer,(extraTokens||[]).concat(coreTokens||[])):rootRenderer;}/**
 * @param {?} rootRenderer
 * @param {?} extraTokens
 * @return {?}
 */function _createRootRenderer(rootRenderer,extraTokens){getDOM().setGlobalVar(INSPECT_GLOBAL_NAME,inspectNativeElement);getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME,StringMapWrapper.merge(CORE_TOKENS,_ngProbeTokensToMap(extraTokens||[])));return new __WEBPACK_IMPORTED_MODULE_1__angular_core__["S" /* ɵDebugDomRootRenderer */](rootRenderer);}/**
 * @param {?} tokens
 * @return {?}
 */function _ngProbeTokensToMap(tokens){return tokens.reduce(function(prev,t){return prev[t.name]=t.token,prev;},{});}/**
 * Providers which support debugging Angular applications (e.g. via `ng.probe`).
 */var/** @type {?} */ELEMENT_PROBE_PROVIDERS=[{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["T" /* RootRenderer */],useFactory:_createConditionalRootRenderer,deps:[DomRootRenderer,[NgProbeToken,new __WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */]()],[__WEBPACK_IMPORTED_MODULE_1__angular_core__["U" /* NgProbeToken */],new __WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */]()]]}];var DomEventsPlugin=function(_EventManagerPlugin){_inherits(DomEventsPlugin,_EventManagerPlugin);/**
     * @param {?} doc
     */function DomEventsPlugin(doc){_classCallCheck(this,DomEventsPlugin);return _possibleConstructorReturn(this,(DomEventsPlugin.__proto__||Object.getPrototypeOf(DomEventsPlugin)).call(this,doc));}/**
     * @param {?} eventName
     * @return {?}
     */_createClass(DomEventsPlugin,[{key:'supports',value:function supports(eventName){return true;}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){element.addEventListener(eventName,/** @type {?} */handler,false);return function(){return element.removeEventListener(eventName,/** @type {?} */handler,false);};}}]);return DomEventsPlugin;}(EventManagerPlugin);DomEventsPlugin.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */DomEventsPlugin.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]}];};var/** @type {?} */EVENT_NAMES={// pan
'pan':true,'panstart':true,'panmove':true,'panend':true,'pancancel':true,'panleft':true,'panright':true,'panup':true,'pandown':true,// pinch
'pinch':true,'pinchstart':true,'pinchmove':true,'pinchend':true,'pinchcancel':true,'pinchin':true,'pinchout':true,// press
'press':true,'pressup':true,// rotate
'rotate':true,'rotatestart':true,'rotatemove':true,'rotateend':true,'rotatecancel':true,// swipe
'swipe':true,'swipeleft':true,'swiperight':true,'swipeup':true,'swipedown':true,// tap
'tap':true};/**
 * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure
 * Hammer gestures.
 *
 * @experimental
 */var/** @type {?} */HAMMER_GESTURE_CONFIG=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('HammerGestureConfig');/**
 * \@experimental
 */var HammerGestureConfig=function(){function HammerGestureConfig(){_classCallCheck(this,HammerGestureConfig);this.events=[];this.overrides={};}/**
     * @param {?} element
     * @return {?}
     */_createClass(HammerGestureConfig,[{key:'buildHammer',value:function buildHammer(element){var/** @type {?} */mc=new Hammer(element);mc.get('pinch').set({enable:true});mc.get('rotate').set({enable:true});for(var/** @type {?} */eventName in this.overrides){mc.get(eventName).set(this.overrides[eventName]);}return mc;}}]);return HammerGestureConfig;}();HammerGestureConfig.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */HammerGestureConfig.ctorParameters=function(){return[];};var HammerGesturesPlugin=function(_EventManagerPlugin2){_inherits(HammerGesturesPlugin,_EventManagerPlugin2);/**
     * @param {?} doc
     * @param {?} _config
     */function HammerGesturesPlugin(doc,_config){_classCallCheck(this,HammerGesturesPlugin);var _this19=_possibleConstructorReturn(this,(HammerGesturesPlugin.__proto__||Object.getPrototypeOf(HammerGesturesPlugin)).call(this,doc));_this19._config=_config;return _this19;}/**
     * @param {?} eventName
     * @return {?}
     */_createClass(HammerGesturesPlugin,[{key:'supports',value:function supports(eventName){if(!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase())&&!this.isCustomEvent(eventName)){return false;}if(!window.Hammer){throw new Error('Hammer.js is not loaded, can not bind '+eventName+' event');}return true;}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){var _this20=this;var/** @type {?} */zone=this.manager.getZone();eventName=eventName.toLowerCase();return zone.runOutsideAngular(function(){// Creating the manager bind events, must be done outside of angular
var/** @type {?} */mc=_this20._config.buildHammer(element);var/** @type {?} */callback=function callback(eventObj){zone.runGuarded(function(){handler(eventObj);});};mc.on(eventName,callback);return function(){return mc.off(eventName,callback);};});}/**
     * @param {?} eventName
     * @return {?}
     */},{key:'isCustomEvent',value:function isCustomEvent(eventName){return this._config.events.indexOf(eventName)>-1;}}]);return HammerGesturesPlugin;}(EventManagerPlugin);HammerGesturesPlugin.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */HammerGesturesPlugin.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]},{type:HammerGestureConfig,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[HAMMER_GESTURE_CONFIG]}]}];};var/** @type {?} */MODIFIER_KEYS=['alt','control','meta','shift'];var/** @type {?} */MODIFIER_KEY_GETTERS={'alt':function alt(event){return event.altKey;},'control':function control(event){return event.ctrlKey;},'meta':function meta(event){return event.metaKey;},'shift':function shift(event){return event.shiftKey;}};/**
 * \@experimental
 */var KeyEventsPlugin=function(_EventManagerPlugin3){_inherits(KeyEventsPlugin,_EventManagerPlugin3);/**
     * @param {?} doc
     */function KeyEventsPlugin(doc){_classCallCheck(this,KeyEventsPlugin);return _possibleConstructorReturn(this,(KeyEventsPlugin.__proto__||Object.getPrototypeOf(KeyEventsPlugin)).call(this,doc));}/**
     * @param {?} eventName
     * @return {?}
     */_createClass(KeyEventsPlugin,[{key:'supports',value:function supports(eventName){return KeyEventsPlugin.parseEventName(eventName)!=null;}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){var/** @type {?} */parsedEvent=KeyEventsPlugin.parseEventName(eventName);var/** @type {?} */outsideHandler=KeyEventsPlugin.eventCallback(parsedEvent['fullKey'],handler,this.manager.getZone());return this.manager.getZone().runOutsideAngular(function(){return getDOM().onAndCancel(element,parsedEvent['domEventName'],outsideHandler);});}/**
     * @param {?} eventName
     * @return {?}
     */}],[{key:'parseEventName',value:function parseEventName(eventName){var/** @type {?} */parts=eventName.toLowerCase().split('.');var/** @type {?} */domEventName=parts.shift();if(parts.length===0||!(domEventName==='keydown'||domEventName==='keyup')){return null;}var/** @type {?} */key=KeyEventsPlugin._normalizeKey(parts.pop());var/** @type {?} */fullKey='';MODIFIER_KEYS.forEach(function(modifierName){var/** @type {?} */index=parts.indexOf(modifierName);if(index>-1){parts.splice(index,1);fullKey+=modifierName+'.';}});fullKey+=key;if(parts.length!=0||key.length===0){// returning null instead of throwing to let another plugin process the event
return null;}var/** @type {?} */result={};result['domEventName']=domEventName;result['fullKey']=fullKey;return result;}/**
     * @param {?} event
     * @return {?}
     */},{key:'getEventFullKey',value:function getEventFullKey(event){var/** @type {?} */fullKey='';var/** @type {?} */key=getDOM().getEventKey(event);key=key.toLowerCase();if(key===' '){key='space';// for readability
}else if(key==='.'){key='dot';// because '.' is used as a separator in event names
}MODIFIER_KEYS.forEach(function(modifierName){if(modifierName!=key){var/** @type {?} */modifierGetter=MODIFIER_KEY_GETTERS[modifierName];if(modifierGetter(event)){fullKey+=modifierName+'.';}}});fullKey+=key;return fullKey;}/**
     * @param {?} fullKey
     * @param {?} handler
     * @param {?} zone
     * @return {?}
     */},{key:'eventCallback',value:function eventCallback(fullKey,handler,zone){return function(event/** TODO #9100 */){if(KeyEventsPlugin.getEventFullKey(event)===fullKey){zone.runGuarded(function(){return handler(event);});}};}/**
     * \@internal
     * @param {?} keyName
     * @return {?}
     */},{key:'_normalizeKey',value:function _normalizeKey(keyName){// TODO: switch to a Map if the mapping grows too much
switch(keyName){case'esc':return'escape';default:return keyName;}}}]);return KeyEventsPlugin;}(EventManagerPlugin);KeyEventsPlugin.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */KeyEventsPlugin.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]}];};/**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * This regular expression matches a subset of URLs that will not cause script
 * execution if used in URL context within a HTML document. Specifically, this
 * regular expression matches if (comment from here on and regex copied from
 * Soy's EscapingConventions):
 * (1) Either a protocol in a whitelist (http, https, mailto or ftp).
 * (2) or no protocol.  A protocol must be followed by a colon. The below
 *     allows that by allowing colons only after one of the characters [/?#].
 *     A colon after a hash (#) must be in the fragment.
 *     Otherwise, a colon after a (?) must be in a query.
 *     Otherwise, a colon after a single solidus (/) must be in a path.
 *     Otherwise, a colon after a double solidus (//) must be in the authority
 *     (before port).
 *
 * The pattern disallows &, used in HTML entity declarations before
 * one of the characters in [/?#]. This disallows HTML entities used in the
 * protocol name, which should never happen, e.g. "h&#116;tp" for "http".
 * It also disallows HTML entities in the first path part of a relative path,
 * e.g. "foo&lt;bar/baz".  Our existing escaping functions should not produce
 * that. More importantly, it disallows masking of a colon,
 * e.g. "javascript&#58;...".
 *
 * This regular expression was taken from the Closure sanitization library.
 */var/** @type {?} */SAFE_URL_PATTERN=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;/** A pattern that matches safe data URLs. Only matches image, video and audio types. */var/** @type {?} */DATA_URL_PATTERN=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;/**
 * @param {?} url
 * @return {?}
 */function sanitizeUrl(url){url=String(url);if(url.match(SAFE_URL_PATTERN)||url.match(DATA_URL_PATTERN))return url;if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["h" /* isDevMode */])()){getDOM().log('WARNING: sanitizing unsafe URL value '+url+' (see http://g.co/ng/security#xss)');}return'unsafe:'+url;}/**
 * @param {?} srcset
 * @return {?}
 */function sanitizeSrcset(srcset){srcset=String(srcset);return srcset.split(',').map(function(srcset){return sanitizeUrl(srcset.trim());}).join(', ');}/** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */var/** @type {?} */inertElement=null;/** Lazily initialized to make sure the DOM adapter gets set before use. */var/** @type {?} */DOM=null;/**
 * Returns an HTML element that is guaranteed to not execute code when creating elements in it.
 * @return {?}
 */function getInertElement(){if(inertElement)return inertElement;DOM=getDOM();// Prefer using <template> element if supported.
var/** @type {?} */templateEl=DOM.createElement('template');if('content'in templateEl)return templateEl;var/** @type {?} */doc=DOM.createHtmlDocument();inertElement=DOM.querySelector(doc,'body');if(inertElement==null){// usually there should be only one body element in the document, but IE doesn't have any, so we
// need to create one.
var/** @type {?} */html=DOM.createElement('html',doc);inertElement=DOM.createElement('body',doc);DOM.appendChild(html,inertElement);DOM.appendChild(doc,html);}return inertElement;}/**
 * @param {?} tags
 * @return {?}
 */function tagSet(tags){var/** @type {?} */res={};var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=tags.split(',')[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var t=_step4.value;res[t]=true;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}return res;}/**
 * @param {...?} sets
 * @return {?}
 */function merge(){var/** @type {?} */res={};for(var _len=arguments.length,sets=Array(_len),_key=0;_key<_len;_key++){sets[_key]=arguments[_key];}var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=sets[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var s=_step5.value;for(var/** @type {?} */v in s){if(s.hasOwnProperty(v))res[v]=true;}}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return res;}// Good source of info about elements and attributes
// http://dev.w3.org/html5/spec/Overview.html#semantics
// http://simon.html5.org/html-elements
// Safe Void Elements - HTML5
// http://dev.w3.org/html5/spec/Overview.html#void-elements
var/** @type {?} */VOID_ELEMENTS=tagSet('area,br,col,hr,img,wbr');// Elements that you can, intentionally, leave open (and which close themselves)
// http://dev.w3.org/html5/spec/Overview.html#optional-tags
var/** @type {?} */OPTIONAL_END_TAG_BLOCK_ELEMENTS=tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');var/** @type {?} */OPTIONAL_END_TAG_INLINE_ELEMENTS=tagSet('rp,rt');var/** @type {?} */OPTIONAL_END_TAG_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,OPTIONAL_END_TAG_BLOCK_ELEMENTS);// Safe Block Elements - HTML5
var/** @type {?} */BLOCK_ELEMENTS=merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS,tagSet('address,article,'+'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,'+'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));// Inline Elements - HTML5
var/** @type {?} */INLINE_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,tagSet('a,abbr,acronym,audio,b,'+'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,'+'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));var/** @type {?} */VALID_ELEMENTS=merge(VOID_ELEMENTS,BLOCK_ELEMENTS,INLINE_ELEMENTS,OPTIONAL_END_TAG_ELEMENTS);// Attributes that have href and hence need to be sanitized
var/** @type {?} */URI_ATTRS=tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');// Attributes that have special href set hence need to be sanitized
var/** @type {?} */SRCSET_ATTRS=tagSet('srcset');var/** @type {?} */HTML_ATTRS=tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,'+'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,'+'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,'+'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,'+'valign,value,vspace,width');// NB: This currently conciously doesn't support SVG. SVG sanitization has had several security
// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via
// innerHTML is required, SVG attributes should be added here.
// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those
// can be sanitized, but they increase security surface area without a legitimate use case, so they
// are left out here.
var/** @type {?} */VALID_ATTRS=merge(URI_ATTRS,SRCSET_ATTRS,HTML_ATTRS);/**
 * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe
 * attributes.
 */var SanitizingHtmlSerializer=function(){function SanitizingHtmlSerializer(){_classCallCheck(this,SanitizingHtmlSerializer);this.sanitizedSomething=false;this.buf=[];}/**
     * @param {?} el
     * @return {?}
     */_createClass(SanitizingHtmlSerializer,[{key:'sanitizeChildren',value:function sanitizeChildren(el){// This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.
// However this code never accesses properties off of `document` before deleting its contents
// again, so it shouldn't be vulnerable to DOM clobbering.
var/** @type {?} */current=el.firstChild;while(current){if(DOM.isElementNode(current)){this.startElement(/** @type {?} */current);}else if(DOM.isTextNode(current)){this.chars(DOM.nodeValue(current));}else{// Strip non-element, non-text nodes.
this.sanitizedSomething=true;}if(DOM.firstChild(current)){current=DOM.firstChild(current);continue;}while(current){// Leaving the element. Walk up and to the right, closing tags as we go.
if(DOM.isElementNode(current)){this.endElement(/** @type {?} */current);}if(DOM.nextSibling(current)){current=DOM.nextSibling(current);break;}current=DOM.parentElement(current);}}return this.buf.join('');}/**
     * @param {?} element
     * @return {?}
     */},{key:'startElement',value:function startElement(element){var _this22=this;var/** @type {?} */tagName=DOM.nodeName(element).toLowerCase();if(!VALID_ELEMENTS.hasOwnProperty(tagName)){this.sanitizedSomething=true;return;}this.buf.push('<');this.buf.push(tagName);DOM.attributeMap(element).forEach(function(value,attrName){var/** @type {?} */lower=attrName.toLowerCase();if(!VALID_ATTRS.hasOwnProperty(lower)){_this22.sanitizedSomething=true;return;}// TODO(martinprobst): Special case image URIs for data:image/...
if(URI_ATTRS[lower])value=sanitizeUrl(value);if(SRCSET_ATTRS[lower])value=sanitizeSrcset(value);_this22.buf.push(' ');_this22.buf.push(attrName);_this22.buf.push('="');_this22.buf.push(encodeEntities(value));_this22.buf.push('"');});this.buf.push('>');}/**
     * @param {?} current
     * @return {?}
     */},{key:'endElement',value:function endElement(current){var/** @type {?} */tagName=DOM.nodeName(current).toLowerCase();if(VALID_ELEMENTS.hasOwnProperty(tagName)&&!VOID_ELEMENTS.hasOwnProperty(tagName)){this.buf.push('</');this.buf.push(tagName);this.buf.push('>');}}/**
     * @param {?} chars
     * @return {?}
     */},{key:'chars',value:function chars(_chars/** TODO #9100 */){this.buf.push(encodeEntities(_chars));}}]);return SanitizingHtmlSerializer;}();// Regular Expressions for parsing tags and attributes
var/** @type {?} */SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;// ! to ~ is the ASCII range.
var/** @type {?} */NON_ALPHANUMERIC_REGEXP=/([^\#-~ |!])/g;/**
 * Escapes all potentially dangerous characters, so that the
 * resulting string can be safely inserted into attribute or
 * element text.
 * @param {?} value
 * @return {?}
 */function encodeEntities(value){return value.replace(/&/g,'&amp;').replace(SURROGATE_PAIR_REGEXP,function(match){var/** @type {?} */hi=match.charCodeAt(0);var/** @type {?} */low=match.charCodeAt(1);return'&#'+((hi-0xD800)*0x400+(low-0xDC00)+0x10000)+';';}).replace(NON_ALPHANUMERIC_REGEXP,function(match){return'&#'+match.charCodeAt(0)+';';}).replace(/</g,'&lt;').replace(/>/g,'&gt;');}/**
 * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
 * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').
 *
 * This is undesirable since we don't want to allow any of these custom attributes. This method
 * strips them all.
 * @param {?} el
 * @return {?}
 */function stripCustomNsAttrs(el){DOM.attributeMap(el).forEach(function(_,attrName){if(attrName==='xmlns:ns1'||attrName.indexOf('ns1:')===0){DOM.removeAttribute(el,attrName);}});var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=DOM.childNodesAsList(el)[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var n=_step6.value;if(DOM.isElementNode(n))stripCustomNsAttrs(/** @type {?} */n);}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}}/**
 * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to
 * the DOM in a browser environment.
 * @param {?} defaultDoc
 * @param {?} unsafeHtmlInput
 * @return {?}
 */function sanitizeHtml(defaultDoc,unsafeHtmlInput){try{var/** @type {?} */containerEl=getInertElement();// Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).
var/** @type {?} */unsafeHtml=unsafeHtmlInput?String(unsafeHtmlInput):'';// mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser
// trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.
var/** @type {?} */mXSSAttempts=5;var/** @type {?} */parsedHtml=unsafeHtml;do{if(mXSSAttempts===0){throw new Error('Failed to sanitize html because the input is unstable');}mXSSAttempts--;unsafeHtml=parsedHtml;DOM.setInnerHTML(containerEl,unsafeHtml);if(defaultDoc.documentMode){// strip custom-namespaced attributes on IE<=11
stripCustomNsAttrs(containerEl);}parsedHtml=DOM.getInnerHTML(containerEl);}while(unsafeHtml!==parsedHtml);var/** @type {?} */sanitizer=new SanitizingHtmlSerializer();var/** @type {?} */safeHtml=sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl)||containerEl);// Clear out the body element.
var/** @type {?} */parent=DOM.getTemplateContent(containerEl)||containerEl;var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=DOM.childNodesAsList(parent)[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var child=_step7.value;DOM.removeChild(parent,child);}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["h" /* isDevMode */])()&&sanitizer.sanitizedSomething){DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');}return safeHtml;}catch(e){// In case anything goes wrong, clear out inertElement to reset the entire DOM structure.
inertElement=null;throw e;}}/**
 * Regular expression for safe style values.
 *
 * Quotes (" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.
 *
 * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or
 * font-family) and hence could allow multiple values to get injected, but that should pose no risk
 * of XSS.
 *
 * The function expression checks only for XSS safety, not for CSS validity.
 *
 * This regular expression was taken from the Closure sanitization library, and augmented for
 * transformation values.
 */var/** @type {?} */VALUES='[-,."\'%_!# a-zA-Z0-9]+';var/** @type {?} */TRANSFORMATION_FNS='(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';var/** @type {?} */COLOR_FNS='(?:rgb|hsl)a?';var/** @type {?} */GRADIENTS='(?:repeating-)?(?:linear|radial)-gradient';var/** @type {?} */CSS3_FNS='(?:calc|attr)';var/** @type {?} */FN_ARGS='\\([-0-9.%, #a-zA-Z]+\\)';var/** @type {?} */SAFE_STYLE_VALUE=new RegExp('^('+VALUES+'|'+('(?:'+TRANSFORMATION_FNS+'|'+COLOR_FNS+'|'+GRADIENTS+'|'+CSS3_FNS+')')+(FN_ARGS+')$'),'g');/**
 * Matches a `url(...)` value with an arbitrary argument as long as it does
 * not contain parentheses.
 *
 * The URL value still needs to be sanitized separately.
 *
 * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted
 * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.
 * by observing whether scroll bars are displayed, or character ranges used by a font face
 * definition.
 *
 * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that
 * binding a URL value without further cooperation from the page will cause an information leak, and
 * if so, it is just a leak, not a full blown XSS vulnerability.
 *
 * Given the common use case, low likelihood of attack vector, and low impact of an attack, this
 * code is permissive and allows URLs that sanitize otherwise.
 */var/** @type {?} */URL_RE=/^url\(([^)]+)\)$/;/**
 * Checks that quotes (" and ') are properly balanced inside a string. Assumes
 * that neither escape (\) nor any other character that could result in
 * breaking out of a string parsing context are allowed;
 * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.
 *
 * This code was taken from the Closure sanitization library.
 * @param {?} value
 * @return {?}
 */function hasBalancedQuotes(value){var/** @type {?} */outsideSingle=true;var/** @type {?} */outsideDouble=true;for(var/** @type {?} */i=0;i<value.length;i++){var/** @type {?} */c=value.charAt(i);if(c==='\''&&outsideDouble){outsideSingle=!outsideSingle;}else if(c==='"'&&outsideSingle){outsideDouble=!outsideDouble;}}return outsideSingle&&outsideDouble;}/**
 * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single
 * value) and returns a value that is safe to use in a browser environment.
 * @param {?} value
 * @return {?}
 */function sanitizeStyle(value){value=String(value).trim();// Make sure it's actually a string.
if(!value)return'';// Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for
// reasoning behind this.
var/** @type {?} */urlMatch=value.match(URL_RE);if(urlMatch&&sanitizeUrl(urlMatch[1])===urlMatch[1]||value.match(SAFE_STYLE_VALUE)&&hasBalancedQuotes(value)){return value;// Safe style values.
}if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["h" /* isDevMode */])()){getDOM().log('WARNING: sanitizing unsafe style value '+value+' (see http://g.co/ng/security#xss).');}return'unsafe';}/**
 * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing
 * values to be safe to use in the different DOM contexts.
 *
 * For example, when binding a URL in an `<a [href]="someValue">` hyperlink, `someValue` will be
 * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on
 * the website.
 *
 * In specific situations, it might be necessary to disable sanitization, for example if the
 * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.
 * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`
 * methods, and then binding to that value from the template.
 *
 * These situations should be very rare, and extraordinary care must be taken to avoid creating a
 * Cross Site Scripting (XSS) security bug!
 *
 * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as
 * close as possible to the source of the value, to make it easy to verify no security bug is
 * created by its use.
 *
 * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that
 * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous
 * code. The sanitizer leaves safe values intact.
 *
 * \@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in
 * sanitization for the value passed in. Carefully check and audit all values and code paths going
 * into this call. Make sure any user data is appropriately escaped for this security context.
 * For more detail, see the [Security Guide](http://g.co/ng/security).
 *
 * \@stable
 * @abstract
 */var DomSanitizer=function(){function DomSanitizer(){_classCallCheck(this,DomSanitizer);}_createClass(DomSanitizer,[{key:'sanitize',/**
     * Sanitizes a value for use in the given SecurityContext.
     *
     * If value is trusted for the context, this method will unwrap the contained safe value and use
     * it directly. Otherwise, value will be sanitized to be safe in the given context, for example
     * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation
     * is responsible to make sure that the value can definitely be safely used in the given context.
     * @abstract
     * @param {?} context
     * @param {?} value
     * @return {?}
     */value:function sanitize(context,value){}/**
     * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML
     * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will
     * leave safe HTML intact, so in most situations this method should not be used.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustHtml',value:function bypassSecurityTrustHtml(value){}/**
     * Bypass security and trust the given value to be safe style value (CSS).
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustStyle',value:function bypassSecurityTrustStyle(value){}/**
     * Bypass security and trust the given value to be safe JavaScript.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustScript',value:function bypassSecurityTrustScript(value){}/**
     * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used
     * in hyperlinks or `<img src>`.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustUrl',value:function bypassSecurityTrustUrl(value){}/**
     * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may
     * be used to load executable code from, like `<script src>`, or `<iframe src>`.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustResourceUrl',value:function bypassSecurityTrustResourceUrl(value){}}]);return DomSanitizer;}();var DomSanitizerImpl=function(_DomSanitizer){_inherits(DomSanitizerImpl,_DomSanitizer);/**
     * @param {?} _doc
     */function DomSanitizerImpl(_doc){_classCallCheck(this,DomSanitizerImpl);var _this23=_possibleConstructorReturn(this,(DomSanitizerImpl.__proto__||Object.getPrototypeOf(DomSanitizerImpl)).call(this));_this23._doc=_doc;return _this23;}/**
     * @param {?} ctx
     * @param {?} value
     * @return {?}
     */_createClass(DomSanitizerImpl,[{key:'sanitize',value:function sanitize(ctx,value){if(value==null)return null;switch(ctx){case __WEBPACK_IMPORTED_MODULE_1__angular_core__["G" /* SecurityContext */].NONE:return value;case __WEBPACK_IMPORTED_MODULE_1__angular_core__["G" /* SecurityContext */].HTML:if(value instanceof SafeHtmlImpl)return value.changingThisBreaksApplicationSecurity;this.checkNotSafeValue(value,'HTML');return sanitizeHtml(this._doc,String(value));case __WEBPACK_IMPORTED_MODULE_1__angular_core__["G" /* SecurityContext */].STYLE:if(value instanceof SafeStyleImpl)return value.changingThisBreaksApplicationSecurity;this.checkNotSafeValue(value,'Style');return sanitizeStyle(value);case __WEBPACK_IMPORTED_MODULE_1__angular_core__["G" /* SecurityContext */].SCRIPT:if(value instanceof SafeScriptImpl)return value.changingThisBreaksApplicationSecurity;this.checkNotSafeValue(value,'Script');throw new Error('unsafe value used in a script context');case __WEBPACK_IMPORTED_MODULE_1__angular_core__["G" /* SecurityContext */].URL:if(value instanceof SafeResourceUrlImpl||value instanceof SafeUrlImpl){// Allow resource URLs in URL contexts, they are strictly more trusted.
return value.changingThisBreaksApplicationSecurity;}this.checkNotSafeValue(value,'URL');return sanitizeUrl(String(value));case __WEBPACK_IMPORTED_MODULE_1__angular_core__["G" /* SecurityContext */].RESOURCE_URL:if(value instanceof SafeResourceUrlImpl){return value.changingThisBreaksApplicationSecurity;}this.checkNotSafeValue(value,'ResourceURL');throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');default:throw new Error('Unexpected SecurityContext '+ctx+' (see http://g.co/ng/security#xss)');}}/**
     * @param {?} value
     * @param {?} expectedType
     * @return {?}
     */},{key:'checkNotSafeValue',value:function checkNotSafeValue(value,expectedType){if(value instanceof SafeValueImpl){throw new Error('Required a safe '+expectedType+', got a '+value.getTypeName()+' '+'(see http://g.co/ng/security#xss)');}}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustHtml',value:function bypassSecurityTrustHtml(value){return new SafeHtmlImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustStyle',value:function bypassSecurityTrustStyle(value){return new SafeStyleImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustScript',value:function bypassSecurityTrustScript(value){return new SafeScriptImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustUrl',value:function bypassSecurityTrustUrl(value){return new SafeUrlImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustResourceUrl',value:function bypassSecurityTrustResourceUrl(value){return new SafeResourceUrlImpl(value);}}]);return DomSanitizerImpl;}(DomSanitizer);DomSanitizerImpl.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */DomSanitizerImpl.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[DOCUMENT]}]}];};/**
 * @abstract
 */var SafeValueImpl=function(){/**
     * @param {?} changingThisBreaksApplicationSecurity
     */function SafeValueImpl(changingThisBreaksApplicationSecurity){_classCallCheck(this,SafeValueImpl);this.changingThisBreaksApplicationSecurity=changingThisBreaksApplicationSecurity;// empty
}/**
     * @abstract
     * @return {?}
     */_createClass(SafeValueImpl,[{key:'getTypeName',value:function getTypeName(){}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return'SafeValue must use [property]=binding: '+this.changingThisBreaksApplicationSecurity+' (see http://g.co/ng/security#xss)';}}]);return SafeValueImpl;}();var SafeHtmlImpl=function(_SafeValueImpl){_inherits(SafeHtmlImpl,_SafeValueImpl);function SafeHtmlImpl(){_classCallCheck(this,SafeHtmlImpl);return _possibleConstructorReturn(this,(SafeHtmlImpl.__proto__||Object.getPrototypeOf(SafeHtmlImpl)).apply(this,arguments));}_createClass(SafeHtmlImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'HTML';}}]);return SafeHtmlImpl;}(SafeValueImpl);var SafeStyleImpl=function(_SafeValueImpl2){_inherits(SafeStyleImpl,_SafeValueImpl2);function SafeStyleImpl(){_classCallCheck(this,SafeStyleImpl);return _possibleConstructorReturn(this,(SafeStyleImpl.__proto__||Object.getPrototypeOf(SafeStyleImpl)).apply(this,arguments));}_createClass(SafeStyleImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'Style';}}]);return SafeStyleImpl;}(SafeValueImpl);var SafeScriptImpl=function(_SafeValueImpl3){_inherits(SafeScriptImpl,_SafeValueImpl3);function SafeScriptImpl(){_classCallCheck(this,SafeScriptImpl);return _possibleConstructorReturn(this,(SafeScriptImpl.__proto__||Object.getPrototypeOf(SafeScriptImpl)).apply(this,arguments));}_createClass(SafeScriptImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'Script';}}]);return SafeScriptImpl;}(SafeValueImpl);var SafeUrlImpl=function(_SafeValueImpl4){_inherits(SafeUrlImpl,_SafeValueImpl4);function SafeUrlImpl(){_classCallCheck(this,SafeUrlImpl);return _possibleConstructorReturn(this,(SafeUrlImpl.__proto__||Object.getPrototypeOf(SafeUrlImpl)).apply(this,arguments));}_createClass(SafeUrlImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'URL';}}]);return SafeUrlImpl;}(SafeValueImpl);var SafeResourceUrlImpl=function(_SafeValueImpl5){_inherits(SafeResourceUrlImpl,_SafeValueImpl5);function SafeResourceUrlImpl(){_classCallCheck(this,SafeResourceUrlImpl);return _possibleConstructorReturn(this,(SafeResourceUrlImpl.__proto__||Object.getPrototypeOf(SafeResourceUrlImpl)).apply(this,arguments));}_createClass(SafeResourceUrlImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'ResourceURL';}}]);return SafeResourceUrlImpl;}(SafeValueImpl);var/** @type {?} */INTERNAL_BROWSER_PLATFORM_PROVIDERS=[{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["V" /* PLATFORM_ID */],useValue:__WEBPACK_IMPORTED_MODULE_0__angular_common__["c" /* ɵPLATFORM_BROWSER_ID */]},{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["W" /* PLATFORM_INITIALIZER */],useValue:initDomAdapter,multi:true},{provide:__WEBPACK_IMPORTED_MODULE_0__angular_common__["b" /* PlatformLocation */],useClass:BrowserPlatformLocation},{provide:DOCUMENT,useFactory:_document,deps:[]}];/**
 * @security Replacing built-in sanitization providers exposes the application to XSS risks.
 * Attacker-controlled data introduced by an unsanitized provider could expose your
 * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).
 * @experimental
 */var/** @type {?} */BROWSER_SANITIZATION_PROVIDERS=[{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["X" /* Sanitizer */],useExisting:DomSanitizer},{provide:DomSanitizer,useClass:DomSanitizerImpl}];/**
 * @stable
 */var/** @type {?} */platformBrowser=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Y" /* createPlatformFactory */])(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Z" /* platformCore */],'browser',INTERNAL_BROWSER_PLATFORM_PROVIDERS);/**
 * @return {?}
 */function initDomAdapter(){BrowserDomAdapter.makeCurrent();BrowserGetTestability.init();}/**
 * @return {?}
 */function errorHandler(){return new __WEBPACK_IMPORTED_MODULE_1__angular_core__["_0" /* ErrorHandler */]();}/**
 * @return {?}
 */function _document(){return document;}/**
 * @return {?}
 */function _resolveDefaultAnimationDriver(){if(getDOM().supportsWebAnimation()){return new WebAnimationsDriver();}return AnimationDriver.NOOP;}/**
 * The ng module for the browser.
 *
 * \@stable
 */var BrowserModule=function(){/**
     * @param {?} parentModule
     */function BrowserModule(parentModule){_classCallCheck(this,BrowserModule);if(parentModule){throw new Error('BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.');}}/**
     * Configures a browser-based application to transition from a server-rendered app, if
     * one is present on the page. The specified parameters must include an application id,
     * which must match between the client and server applications.
     *
     * \@experimental
     * @param {?} params
     * @return {?}
     */_createClass(BrowserModule,null,[{key:'withServerTransition',value:function withServerTransition(params){return{ngModule:BrowserModule,providers:[{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["Q" /* APP_ID */],useValue:params.appId},{provide:TRANSITION_ID,useExisting:__WEBPACK_IMPORTED_MODULE_1__angular_core__["Q" /* APP_ID */]},SERVER_TRANSITION_PROVIDERS]};}}]);return BrowserModule;}();BrowserModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["b" /* NgModule */],args:[{providers:[BROWSER_SANITIZATION_PROVIDERS,{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_0" /* ErrorHandler */],useFactory:errorHandler,deps:[]},{provide:EVENT_MANAGER_PLUGINS,useClass:DomEventsPlugin,multi:true},{provide:EVENT_MANAGER_PLUGINS,useClass:KeyEventsPlugin,multi:true},{provide:EVENT_MANAGER_PLUGINS,useClass:HammerGesturesPlugin,multi:true},{provide:HAMMER_GESTURE_CONFIG,useClass:HammerGestureConfig},{provide:DomRootRenderer,useClass:DomRootRenderer_},{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["T" /* RootRenderer */],useExisting:DomRootRenderer},DomRendererFactoryV2,{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_1" /* RendererFactoryV2 */],useExisting:DomRendererFactoryV2},{provide:SharedStylesHost,useExisting:DomSharedStylesHost},{provide:AnimationDriver,useFactory:_resolveDefaultAnimationDriver},DomSharedStylesHost,__WEBPACK_IMPORTED_MODULE_1__angular_core__["_2" /* Testability */],EventManager,ELEMENT_PROBE_PROVIDERS,Meta,Title],exports:[__WEBPACK_IMPORTED_MODULE_0__angular_common__["a" /* CommonModule */],__WEBPACK_IMPORTED_MODULE_1__angular_core__["_3" /* ApplicationModule */]]}]}];/** @nocollapse */BrowserModule.ctorParameters=function(){return[{type:BrowserModule,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["p" /* SkipSelf */]}]}];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * JS version of browser APIs. This library can only run in the browser.
 */var/** @type {?} */win=typeof window!=='undefined'&&window||{};var ChangeDetectionPerfRecord=/**
     * @param {?} msPerTick
     * @param {?} numTicks
     */function ChangeDetectionPerfRecord(msPerTick,numTicks){_classCallCheck(this,ChangeDetectionPerfRecord);this.msPerTick=msPerTick;this.numTicks=numTicks;};/**
 * Entry point for all Angular profiling-related debug tools. This object
 * corresponds to the `ng.profiler` in the dev console.
 */var AngularProfiler=function(){/**
     * @param {?} ref
     */function AngularProfiler(ref){_classCallCheck(this,AngularProfiler);this.appRef=ref.injector.get(__WEBPACK_IMPORTED_MODULE_1__angular_core__["w" /* ApplicationRef */]);}/**
     * Exercises change detection in a loop and then prints the average amount of
     * time in milliseconds how long a single round of change detection takes for
     * the current state of the UI. It runs a minimum of 5 rounds for a minimum
     * of 500 milliseconds.
     *
     * Optionally, a user may pass a `config` parameter containing a map of
     * options. Supported options are:
     *
     * `record` (boolean) - causes the profiler to record a CPU profile while
     * it exercises the change detector. Example:
     *
     * ```
     * ng.profiler.timeChangeDetection({record: true})
     * ```
     * @param {?} config
     * @return {?}
     */_createClass(AngularProfiler,[{key:'timeChangeDetection',value:function timeChangeDetection(config){var/** @type {?} */record=config&&config['record'];var/** @type {?} */profileName='Change Detection';// Profiler is not available in Android browsers, nor in IE 9 without dev tools opened
var/** @type {?} */isProfilerAvailable=isPresent(win.console.profile);if(record&&isProfilerAvailable){win.console.profile(profileName);}var/** @type {?} */start=getDOM().performanceNow();var/** @type {?} */numTicks=0;while(numTicks<5||getDOM().performanceNow()-start<500){this.appRef.tick();numTicks++;}var/** @type {?} */end=getDOM().performanceNow();if(record&&isProfilerAvailable){// need to cast to <any> because type checker thinks there's no argument
// while in fact there is:
//
// https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd
win.console.profileEnd(profileName);}var/** @type {?} */msPerTick=(end-start)/numTicks;win.console.log('ran '+numTicks+' change detection cycles');win.console.log(msPerTick.toFixed(2)+' ms per check');return new ChangeDetectionPerfRecord(msPerTick,numTicks);}}]);return AngularProfiler;}();var/** @type {?} */PROFILER_GLOBAL_NAME='ng.profiler';/**
 * Enabled Angular debug tools that are accessible via your browser's
 * developer console.
 *
 * Usage:
 *
 * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)
 * 1. Type `ng.` (usually the console will show auto-complete suggestion)
 * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`
 *    then hit Enter.
 *
 * \@experimental All debugging apis are currently experimental.
 * @param {?} ref
 * @return {?}
 */function enableDebugTools(ref){getDOM().setGlobalVar(PROFILER_GLOBAL_NAME,new AngularProfiler(ref));return ref;}/**
 * Disables Angular tools.
 *
 * \@experimental All debugging apis are currently experimental.
 * @return {?}
 */function disableDebugTools(){getDOM().setGlobalVar(PROFILER_GLOBAL_NAME,null);}/**
 * Predicates for use with {\@link DebugElement}'s query functions.
 *
 * \@experimental All debugging apis are currently experimental.
 */var By=function(){function By(){_classCallCheck(this,By);}_createClass(By,null,[{key:'all',/**
     * Match all elements.
     *
     * ## Example
     *
     * {\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
     * @return {?}
     */value:function all(){return function(debugElement){return true;};}/**
     * Match elements by the given CSS selector.
     *
     * ## Example
     *
     * {\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
     * @param {?} selector
     * @return {?}
     */},{key:'css',value:function css(selector){return function(debugElement){return isPresent(debugElement.nativeElement)?getDOM().elementMatches(debugElement.nativeElement,selector):false;};}/**
     * Match elements that have the given directive present.
     *
     * ## Example
     *
     * {\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
     * @param {?} type
     * @return {?}
     */},{key:'directive',value:function directive(type){return function(debugElement){return debugElement.providerTokens.indexOf(type)!==-1;};}}]);return By;}();/**
 * @stable
 */var/** @type {?} */VERSION=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["M" /* Version */]('4.0.0-rc.1');

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(31)))

/***/ }),
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var ObjectUnsubscribedError_1 = __webpack_require__(67);
/**
 * @class BehaviorSubject<T>
 */
var BehaviorSubject = (function (_super) {
    __extends(BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        _super.call(this);
        this._value = _value;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(Subject_1.Subject));
exports.BehaviorSubject = BehaviorSubject;
//# sourceMappingURL=BehaviorSubject.js.map

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
/**
 * Represents a push-based event or value that an {@link Observable} can emit.
 * This class is particularly useful for operators that manage notifications,
 * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and
 * others. Besides wrapping the actual delivered value, it also annotates it
 * with metadata of, for instance, what type of push message it is (`next`,
 * `error`, or `complete`).
 *
 * @see {@link materialize}
 * @see {@link dematerialize}
 * @see {@link observeOn}
 *
 * @class Notification<T>
 */
var Notification = (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    /**
     * Delivers to the given `observer` the value wrapped by this Notification.
     * @param {Observer} observer
     * @return
     */
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    /**
     * Given some {@link Observer} callbacks, deliver the value represented by the
     * current Notification to the correctly corresponding callback.
     * @param {function(value: T): void} next An Observer `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    /**
     * Takes an Observer or its individual callback functions, and calls `observe`
     * or `do` methods accordingly.
     * @param {Observer|function(value: T): void} nextOrObserver An Observer or
     * the `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    /**
     * Returns a simple Observable that just delivers the notification represented
     * by this Notification instance.
     * @return {any}
     */
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Observable_1.Observable.of(this.value);
            case 'E':
                return Observable_1.Observable.throw(this.error);
            case 'C':
                return Observable_1.Observable.empty();
        }
        throw new Error('unexpected notification kind value');
    };
    /**
     * A shortcut to create a Notification instance of the type `next` from a
     * given value.
     * @param {T} value The `next` value.
     * @return {Notification<T>} The "next" Notification representing the
     * argument.
     */
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return this.undefinedValueNotification;
    };
    /**
     * A shortcut to create a Notification instance of the type `error` from a
     * given error.
     * @param {any} [err] The `error` error.
     * @return {Notification<T>} The "error" Notification representing the
     * argument.
     */
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    /**
     * A shortcut to create a Notification instance of the type `complete`.
     * @return {Notification<any>} The valueless "complete" Notification.
     */
    Notification.createComplete = function () {
        return this.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());
exports.Notification = Notification;
//# sourceMappingURL=Notification.js.map

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var filter_1 = __webpack_require__(95);
Observable_1.Observable.prototype.filter = filter_1.filter;
//# sourceMappingURL=filter.js.map

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return this.lift(new MergeAllOperator(concurrent));
}
exports.mergeAll = mergeAll;
var MergeAllOperator = (function () {
    function MergeAllOperator(concurrent) {
        this.concurrent = concurrent;
    }
    MergeAllOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeAllSubscriber(observer, this.concurrent));
    };
    return MergeAllOperator;
}());
exports.MergeAllOperator = MergeAllOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeAllSubscriber = (function (_super) {
    __extends(MergeAllSubscriber, _super);
    function MergeAllSubscriber(destination, concurrent) {
        _super.call(this, destination);
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
    }
    MergeAllSubscriber.prototype._next = function (observable) {
        if (this.active < this.concurrent) {
            this.active++;
            this.add(subscribeToResult_1.subscribeToResult(this, observable));
        }
        else {
            this.buffer.push(observable);
        }
    };
    MergeAllSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeAllSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeAllSubscriber = MergeAllSubscriber;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(10);
var Action_1 = __webpack_require__(509);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsyncAction = (function (_super) {
    __extends(AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.pending = false;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (this.closed) {
            return this;
        }
        // Always replace the current state with the new state.
        this.state = state;
        // Set the pending flag indicating that this action has been scheduled, or
        // has recursively rescheduled itself.
        this.pending = true;
        var id = this.id;
        var scheduler = this.scheduler;
        //
        // Important implementation note:
        //
        // Actions only execute once by default, unless rescheduled from within the
        // scheduled callback. This allows us to implement single and repeat
        // actions via the same code path, without adding API surface area, as well
        // as mimic traditional recursion but across asynchronous boundaries.
        //
        // However, JS runtimes and timers distinguish between intervals achieved by
        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of
        // serial `setTimeout` calls can be individually delayed, which delays
        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to
        // guarantee the interval callback will be invoked more precisely to the
        // interval period, regardless of load.
        //
        // Therefore, we use `setInterval` to schedule single and repeat actions.
        // If the action reschedules itself with the same delay, the interval is not
        // canceled. If the action doesn't reschedule, or reschedules with a
        // different delay, the interval will be canceled after scheduled callback
        // execution.
        //
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.delay = delay;
        // If this action has already an async Id, don't request a new one.
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If this action is rescheduled with the same delay time, don't clear the interval id.
        if (delay !== null && this.delay === delay) {
            return id;
        }
        // Otherwise, if the action's delay time is different from the current delay,
        // clear the interval id
        return root_1.root.clearInterval(id) && undefined || undefined;
    };
    /**
     * Immediately executes this action and the `work` it contains.
     * @return {any}
     */
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            // Dequeue if the action didn't reschedule itself. Don't call
            // unsubscribe(), because the action could reschedule later.
            // For example:
            // ```
            // scheduler.schedule(function doWork(counter) {
            //   /* ... I'm a busy worker bee ... */
            //   var originalAction = this;
            //   /* wait 100ms before rescheduling the action */
            //   setTimeout(function () {
            //     originalAction.schedule(counter + 1);
            //   }, 100);
            // }, 1000);
            // ```
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.delay = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
    };
    return AsyncAction;
}(Action_1.Action));
exports.AsyncAction = AsyncAction;
//# sourceMappingURL=AsyncAction.js.map

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Scheduler_1 = __webpack_require__(284);
var AsyncScheduler = (function (_super) {
    __extends(AsyncScheduler, _super);
    function AsyncScheduler() {
        _super.apply(this, arguments);
        this.actions = [];
        /**
         * A flag to indicate whether the Scheduler is currently executing a batch of
         * queued actions.
         * @type {boolean}
         */
        this.active = false;
        /**
         * An internal ID used to track the latest asynchronous task such as those
         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and
         * others.
         * @type {any}
         */
        this.scheduled = undefined;
    }
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift()); // exhaust the scheduler queue
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(Scheduler_1.Scheduler));
exports.AsyncScheduler = AsyncScheduler;
//# sourceMappingURL=AsyncScheduler.js.map

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
function symbolIteratorPonyfill(root) {
    var Symbol = root.Symbol;
    if (typeof Symbol === 'function') {
        if (!Symbol.iterator) {
            Symbol.iterator = Symbol('iterator polyfill');
        }
        return Symbol.iterator;
    }
    else {
        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)
        var Set_1 = root.Set;
        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {
            return '@@iterator';
        }
        var Map_1 = root.Map;
        // required for compatability with es6-shim
        if (Map_1) {
            var keys = Object.getOwnPropertyNames(Map_1.prototype);
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.
                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {
                    return key;
                }
            }
        }
        return '@@iterator';
    }
}
exports.symbolIteratorPonyfill = symbolIteratorPonyfill;
exports.$$iterator = symbolIteratorPonyfill(root_1.root);
//# sourceMappingURL=iterator.js.map

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
function getSymbolObservable(context) {
    var $$observable;
    var Symbol = context.Symbol;
    if (typeof Symbol === 'function') {
        if (Symbol.observable) {
            $$observable = Symbol.observable;
        }
        else {
            $$observable = Symbol('observable');
            Symbol.observable = $$observable;
        }
    }
    else {
        $$observable = '@@observable';
    }
    return $$observable;
}
exports.getSymbolObservable = getSymbolObservable;
exports.$$observable = getSymbolObservable(root_1.root);
//# sourceMappingURL=observable.js.map

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */
var EmptyError = (function (_super) {
    __extends(EmptyError, _super);
    function EmptyError() {
        var err = _super.call(this, 'no elements in sequence');
        this.name = err.name = 'EmptyError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return EmptyError;
}(Error));
exports.EmptyError = EmptyError;
//# sourceMappingURL=EmptyError.js.map

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* unused harmony export NgLocaleLocalization */
/* unused harmony export NgLocalization */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommonModule; });
/* unused harmony export NgClass */
/* unused harmony export NgFor */
/* unused harmony export NgForOf */
/* unused harmony export NgIf */
/* unused harmony export NgPlural */
/* unused harmony export NgPluralCase */
/* unused harmony export NgStyle */
/* unused harmony export NgSwitch */
/* unused harmony export NgSwitchCase */
/* unused harmony export NgSwitchDefault */
/* unused harmony export NgTemplateOutlet */
/* unused harmony export NgComponentOutlet */
/* unused harmony export AsyncPipe */
/* unused harmony export DatePipe */
/* unused harmony export I18nPluralPipe */
/* unused harmony export I18nSelectPipe */
/* unused harmony export JsonPipe */
/* unused harmony export LowerCasePipe */
/* unused harmony export CurrencyPipe */
/* unused harmony export DecimalPipe */
/* unused harmony export PercentPipe */
/* unused harmony export SlicePipe */
/* unused harmony export UpperCasePipe */
/* unused harmony export TitleCasePipe */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PLATFORM_BROWSER_ID; });
/* unused harmony export ɵPLATFORM_SERVER_ID */
/* unused harmony export ɵPLATFORM_WORKER_APP_ID */
/* unused harmony export ɵPLATFORM_WORKER_UI_ID */
/* unused harmony export isPlatformBrowser */
/* unused harmony export isPlatformServer */
/* unused harmony export isPlatformWorkerApp */
/* unused harmony export isPlatformWorkerUi */
/* unused harmony export VERSION */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PlatformLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return LocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return APP_BASE_HREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return HashLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return PathLocationStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Location; });
/* unused harmony export ɵc */
/* unused harmony export ɵa */
/* unused harmony export ɵb */
/* unused harmony export ɵd */
var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * This class should not be used directly by an application developer. Instead, use
 * {\@link Location}.
 *
 * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform
 * agnostic.
 * This means that we can have different implementation of `PlatformLocation` for the different
 * platforms
 * that angular supports. For example, the default `PlatformLocation` is {\@link
 * BrowserPlatformLocation},
 * however when you run your app in a WebWorker you use {\@link WebWorkerPlatformLocation}.
 *
 * The `PlatformLocation` class is used directly by all implementations of {\@link LocationStrategy}
 * when
 * they need to interact with the DOM apis like pushState, popState, etc...
 *
 * {\@link LocationStrategy} in turn is used by the {\@link Location} service which is used directly
 * by
 * the {\@link Router} in order to navigate between routes. Since all interactions between {\@link
 * Router} /
 * {\@link Location} / {\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`
 * class
 * they are all platform independent.
 *
 * \@stable
 * @abstract
 */var PlatformLocation=function(){function PlatformLocation(){_classCallCheck(this,PlatformLocation);}_createClass(PlatformLocation,[{key:'getBaseHrefFromDOM',/**
     * @abstract
     * @return {?}
     */value:function getBaseHrefFromDOM(){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onPopState',value:function onPopState(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onHashChange',value:function onHashChange(fn){}/**
     * @return {?}
     */},{key:'replaceState',/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */value:function replaceState(state,title,url){}/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */},{key:'pushState',value:function pushState(state,title,url){}/**
     * @abstract
     * @return {?}
     */},{key:'forward',value:function forward(){}/**
     * @abstract
     * @return {?}
     */},{key:'back',value:function back(){}},{key:'pathname',get:function get(){return null;}/**
     * @return {?}
     */},{key:'search',get:function get(){return null;}/**
     * @return {?}
     */},{key:'hash',get:function get(){return null;}}]);return PlatformLocation;}();/**
 * `LocationStrategy` is responsible for representing and reading route state
 * from the browser's URL. Angular provides two strategies:
 * {\@link HashLocationStrategy} and {\@link PathLocationStrategy}.
 *
 * This is used under the hood of the {\@link Location} service.
 *
 * Applications should use the {\@link Router} or {\@link Location} services to
 * interact with application route state.
 *
 * For instance, {\@link HashLocationStrategy} produces URLs like
 * `http://example.com#/foo`, and {\@link PathLocationStrategy} produces
 * `http://example.com/foo` as an equivalent URL.
 *
 * See these two classes for more.
 *
 * \@stable
 * @abstract
 */var LocationStrategy=function(){function LocationStrategy(){_classCallCheck(this,LocationStrategy);}_createClass(LocationStrategy,[{key:'path',/**
     * @abstract
     * @param {?=} includeHash
     * @return {?}
     */value:function path(includeHash){}/**
     * @abstract
     * @param {?} internal
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(internal){}/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'pushState',value:function pushState(state,title,url,queryParams){}/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state,title,url,queryParams){}/**
     * @abstract
     * @return {?}
     */},{key:'forward',value:function forward(){}/**
     * @abstract
     * @return {?}
     */},{key:'back',value:function back(){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onPopState',value:function onPopState(fn){}/**
     * @abstract
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(){}}]);return LocationStrategy;}();/**
 * The `APP_BASE_HREF` token represents the base href to be used with the
 * {@link PathLocationStrategy}.
 *
 * If you're using {@link PathLocationStrategy}, you must provide a provider to a string
 * representing the URL prefix that should be preserved when generating and recognizing
 * URLs.
 *
 * ### Example
 *
 * ```typescript
 * import {Component, NgModule} from '@angular/core';
 * import {APP_BASE_HREF} from '@angular/common';
 *
 * @NgModule({
 *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]
 * })
 * class AppModule {}
 * ```
 *
 * @stable
 */var/** @type {?} */APP_BASE_HREF=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('appBaseHref');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */globalScope=void 0;if(typeof window==='undefined'){if(typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope){// TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
globalScope=self;}else{globalScope=global;}}else{globalScope=window;}// Need to declare a new variable for global here since TypeScript
// exports the original value of the symbol.
var/** @type {?} */_global=globalScope;/**
 * @param {?} type
 * @return {?}
 */function getTypeNameForDebugging(type){return type['name']||(typeof type==='undefined'?'undefined':_typeof(type));}// TODO: remove calls to assert in production environment
// Note: Can't just export this and import in in other files
// as `assert` is a reserved keyword in Dart
_global.assert=function assert(condition){// TODO: to be fixed properly via #2830, noop for now
};/**
 * @param {?} obj
 * @return {?}
 */function isPresent(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank(obj){return obj==null;}/**
 * @param {?} token
 * @return {?}
 */function stringify(token){if(typeof token==='string'){return token;}if(token==null){return''+token;}if(token.overriddenName){return''+token.overriddenName;}if(token.name){return''+token.name;}var/** @type {?} */res=token.toString();var/** @type {?} */newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}var NumberWrapper=function(){function NumberWrapper(){_classCallCheck(this,NumberWrapper);}_createClass(NumberWrapper,null,[{key:'parseIntAutoRadix',/**
     * @param {?} text
     * @return {?}
     */value:function parseIntAutoRadix(text){var/** @type {?} */result=parseInt(text);if(isNaN(result)){throw new Error('Invalid integer literal when parsing '+text);}return result;}/**
     * @param {?} value
     * @return {?}
     */},{key:'isNumeric',value:function isNumeric(value){return!isNaN(value-parseFloat(value));}}]);return NumberWrapper;}();/**
 * @param {?} o
 * @return {?}
 */function isJsObject(o){return o!==null&&(typeof o==='function'||(typeof o==='undefined'?'undefined':_typeof(o))==='object');}var/** @type {?} */_symbolIterator=null;/**
 * @return {?}
 */function getSymbolIterator(){if(!_symbolIterator){if(globalScope.Symbol&&Symbol.iterator){_symbolIterator=Symbol.iterator;}else{// es6-shim specific logic
var/** @type {?} */keys=Object.getOwnPropertyNames(Map.prototype);for(var/** @type {?} */i=0;i<keys.length;++i){var/** @type {?} */key=keys[i];if(key!=='entries'&&key!=='size'&&Map.prototype[key]===Map.prototype['entries']){_symbolIterator=key;}}}}return _symbolIterator;}/**
 * \@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.
 * \@description
 * Depending on which {\@link LocationStrategy} is used, `Location` will either persist
 * to the URL's path or the URL's hash segment.
 *
 * Note: it's better to use {\@link Router#navigate} service to trigger route changes. Use
 * `Location` only if you need to interact with or create normalized URLs outside of
 * routing.
 *
 * `Location` is responsible for normalizing the URL against the application's base href.
 * A normalized URL is absolute from the URL host, includes the application's base href, and has no
 * trailing slash:
 * - `/my/app/user/123` is normalized
 * - `my/app/user/123` **is not** normalized
 * - `/my/app/user/123/` **is not** normalized
 *
 * ### Example
 * {\@example common/location/ts/path_location_component.ts region='LocationComponent'}
 * \@stable
 */var Location=function(){/**
     * @param {?} platformStrategy
     */function Location(platformStrategy){var _this=this;_classCallCheck(this,Location);/** @internal */this._subject=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();this._platformStrategy=platformStrategy;var browserBaseHref=this._platformStrategy.getBaseHref();this._baseHref=Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));this._platformStrategy.onPopState(function(ev){_this._subject.emit({'url':_this.path(true),'pop':true,'type':ev.type});});}/**
     * @param {?=} includeHash
     * @return {?}
     */_createClass(Location,[{key:'path',value:function path(){var includeHash=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return this.normalize(this._platformStrategy.path(includeHash));}/**
     * Normalizes the given path and compares to the current normalized path.
     * @param {?} path
     * @param {?=} query
     * @return {?}
     */},{key:'isCurrentPathEqualTo',value:function isCurrentPathEqualTo(path){var query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';return this.path()==this.normalize(path+Location.normalizeQueryParams(query));}/**
     * Given a string representing a URL, returns the normalized URL path without leading or
     * trailing slashes.
     * @param {?} url
     * @return {?}
     */},{key:'normalize',value:function normalize(url){return Location.stripTrailingSlash(_stripBaseHref(this._baseHref,_stripIndexHtml(url)));}/**
     * Given a string representing a URL, returns the platform-specific external URL path.
     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one
     * before normalizing. This method will also add a hash if `HashLocationStrategy` is
     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
     * @param {?} url
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(url){if(url&&url[0]!=='/'){url='/'+url;}return this._platformStrategy.prepareExternalUrl(url);}/**
     * Changes the browsers URL to the normalized version of the given URL, and pushes a
     * new item onto the platform's history.
     * @param {?} path
     * @param {?=} query
     * @return {?}
     */},{key:'go',value:function go(path){var query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';this._platformStrategy.pushState(null,'',path,query);}/**
     * Changes the browsers URL to the normalized version of the given URL, and replaces
     * the top item on the platform's history stack.
     * @param {?} path
     * @param {?=} query
     * @return {?}
     */},{key:'replaceState',value:function replaceState(path){var query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';this._platformStrategy.replaceState(null,'',path,query);}/**
     * Navigates forward in the platform's history.
     * @return {?}
     */},{key:'forward',value:function forward(){this._platformStrategy.forward();}/**
     * Navigates back in the platform's history.
     * @return {?}
     */},{key:'back',value:function back(){this._platformStrategy.back();}/**
     * Subscribe to the platform's `popState` events.
     * @param {?} onNext
     * @param {?=} onThrow
     * @param {?=} onReturn
     * @return {?}
     */},{key:'subscribe',value:function subscribe(onNext){var onThrow=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var onReturn=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return this._subject.subscribe({next:onNext,error:onThrow,complete:onReturn});}/**
     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as
     * is.
     * @param {?} params
     * @return {?}
     */}],[{key:'normalizeQueryParams',value:function normalizeQueryParams(params){return params&&params[0]!=='?'?'?'+params:params;}/**
     * Given 2 parts of a url, join them with a slash if needed.
     * @param {?} start
     * @param {?} end
     * @return {?}
     */},{key:'joinWithSlash',value:function joinWithSlash(start,end){if(start.length==0){return end;}if(end.length==0){return start;}var/** @type {?} */slashes=0;if(start.endsWith('/')){slashes++;}if(end.startsWith('/')){slashes++;}if(slashes==2){return start+end.substring(1);}if(slashes==1){return start+end;}return start+'/'+end;}/**
     * If url has a trailing slash, remove it, otherwise return url as is.
     * @param {?} url
     * @return {?}
     */},{key:'stripTrailingSlash',value:function stripTrailingSlash(url){return url.replace(/\/$/,'');}}]);return Location;}();Location.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */Location.ctorParameters=function(){return[{type:LocationStrategy}];};/**
 * @param {?} baseHref
 * @param {?} url
 * @return {?}
 */function _stripBaseHref(baseHref,url){return baseHref&&url.startsWith(baseHref)?url.substring(baseHref.length):url;}/**
 * @param {?} url
 * @return {?}
 */function _stripIndexHtml(url){return url.replace(/\/index.html$/,'');}/**
 * \@whatItDoes Use URL hash for storing application location data.
 * \@description
 * `HashLocationStrategy` is a {\@link LocationStrategy} used to configure the
 * {\@link Location} service to represent its state in the
 * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)
 * of the browser's URL.
 *
 * For instance, if you call `location.go('/foo')`, the browser's URL will become
 * `example.com#/foo`.
 *
 * ### Example
 *
 * {\@example common/location/ts/hash_location_component.ts region='LocationComponent'}
 *
 * \@stable
 */var HashLocationStrategy=function(_LocationStrategy){_inherits(HashLocationStrategy,_LocationStrategy);/**
     * @param {?} _platformLocation
     * @param {?=} _baseHref
     */function HashLocationStrategy(_platformLocation,_baseHref){_classCallCheck(this,HashLocationStrategy);var _this2=_possibleConstructorReturn(this,(HashLocationStrategy.__proto__||Object.getPrototypeOf(HashLocationStrategy)).call(this));_this2._platformLocation=_platformLocation;_this2._baseHref='';if(isPresent(_baseHref)){_this2._baseHref=_baseHref;}return _this2;}/**
     * @param {?} fn
     * @return {?}
     */_createClass(HashLocationStrategy,[{key:'onPopState',value:function onPopState(fn){this._platformLocation.onPopState(fn);this._platformLocation.onHashChange(fn);}/**
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(){return this._baseHref;}/**
     * @param {?=} includeHash
     * @return {?}
     */},{key:'path',value:function path(){var includeHash=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;// the hash value is always prefixed with a `#`
// and if it is empty then it will stay empty
var/** @type {?} */path=this._platformLocation.hash;if(!isPresent(path))path='#';return path.length>0?path.substring(1):path;}/**
     * @param {?} internal
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(internal){var/** @type {?} */url=Location.joinWithSlash(this._baseHref,internal);return url.length>0?'#'+url:url;}/**
     * @param {?} state
     * @param {?} title
     * @param {?} path
     * @param {?} queryParams
     * @return {?}
     */},{key:'pushState',value:function pushState(state,title,path,queryParams){var/** @type {?} */url=this.prepareExternalUrl(path+Location.normalizeQueryParams(queryParams));if(url.length==0){url=this._platformLocation.pathname;}this._platformLocation.pushState(state,title,url);}/**
     * @param {?} state
     * @param {?} title
     * @param {?} path
     * @param {?} queryParams
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state,title,path,queryParams){var/** @type {?} */url=this.prepareExternalUrl(path+Location.normalizeQueryParams(queryParams));if(url.length==0){url=this._platformLocation.pathname;}this._platformLocation.replaceState(state,title,url);}/**
     * @return {?}
     */},{key:'forward',value:function forward(){this._platformLocation.forward();}/**
     * @return {?}
     */},{key:'back',value:function back(){this._platformLocation.back();}}]);return HashLocationStrategy;}(LocationStrategy);HashLocationStrategy.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */HashLocationStrategy.ctorParameters=function(){return[{type:PlatformLocation},{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[APP_BASE_HREF]}]}];};/**
 * \@whatItDoes Use URL for storing application location data.
 * \@description
 * `PathLocationStrategy` is a {\@link LocationStrategy} used to configure the
 * {\@link Location} service to represent its state in the
 * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the
 * browser's URL.
 *
 * If you're using `PathLocationStrategy`, you must provide a {\@link APP_BASE_HREF}
 * or add a base element to the document. This URL prefix that will be preserved
 * when generating and recognizing URLs.
 *
 * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * Similarly, if you add `<base href='/my/app'/>` to the document and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * ### Example
 *
 * {\@example common/location/ts/path_location_component.ts region='LocationComponent'}
 *
 * \@stable
 */var PathLocationStrategy=function(_LocationStrategy2){_inherits(PathLocationStrategy,_LocationStrategy2);/**
     * @param {?} _platformLocation
     * @param {?=} href
     */function PathLocationStrategy(_platformLocation,href){_classCallCheck(this,PathLocationStrategy);var _this3=_possibleConstructorReturn(this,(PathLocationStrategy.__proto__||Object.getPrototypeOf(PathLocationStrategy)).call(this));_this3._platformLocation=_platformLocation;if(isBlank(href)){href=_this3._platformLocation.getBaseHrefFromDOM();}if(isBlank(href)){throw new Error('No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.');}_this3._baseHref=href;return _this3;}/**
     * @param {?} fn
     * @return {?}
     */_createClass(PathLocationStrategy,[{key:'onPopState',value:function onPopState(fn){this._platformLocation.onPopState(fn);this._platformLocation.onHashChange(fn);}/**
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(){return this._baseHref;}/**
     * @param {?} internal
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(internal){return Location.joinWithSlash(this._baseHref,internal);}/**
     * @param {?=} includeHash
     * @return {?}
     */},{key:'path',value:function path(){var includeHash=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var/** @type {?} */pathname=this._platformLocation.pathname+Location.normalizeQueryParams(this._platformLocation.search);var/** @type {?} */hash=this._platformLocation.hash;return hash&&includeHash?''+pathname+hash:pathname;}/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'pushState',value:function pushState(state,title,url,queryParams){var/** @type {?} */externalUrl=this.prepareExternalUrl(url+Location.normalizeQueryParams(queryParams));this._platformLocation.pushState(state,title,externalUrl);}/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state,title,url,queryParams){var/** @type {?} */externalUrl=this.prepareExternalUrl(url+Location.normalizeQueryParams(queryParams));this._platformLocation.replaceState(state,title,externalUrl);}/**
     * @return {?}
     */},{key:'forward',value:function forward(){this._platformLocation.forward();}/**
     * @return {?}
     */},{key:'back',value:function back(){this._platformLocation.back();}}]);return PathLocationStrategy;}(LocationStrategy);PathLocationStrategy.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */PathLocationStrategy.ctorParameters=function(){return[{type:PlatformLocation},{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[APP_BASE_HREF]}]}];};/**
 * \@experimental
 * @abstract
 */var NgLocalization=function(){function NgLocalization(){_classCallCheck(this,NgLocalization);}_createClass(NgLocalization,[{key:'getPluralCategory',/**
     * @abstract
     * @param {?} value
     * @return {?}
     */value:function getPluralCategory(value){}}]);return NgLocalization;}();/**
 * Returns the plural category for a given value.
 * - "=value" when the case exists,
 * - the plural category otherwise
 *
 * \@internal
 * @param {?} value
 * @param {?} cases
 * @param {?} ngLocalization
 * @return {?}
 */function getPluralCategory(value,cases,ngLocalization){var/** @type {?} */key='='+value;if(cases.indexOf(key)>-1){return key;}key=ngLocalization.getPluralCategory(value);if(cases.indexOf(key)>-1){return key;}if(cases.indexOf('other')>-1){return'other';}throw new Error('No plural message found for value "'+value+'"');}/**
 * Returns the plural case based on the locale
 *
 * \@experimental
 */var NgLocaleLocalization=function(_NgLocalization){_inherits(NgLocaleLocalization,_NgLocalization);/**
     * @param {?} locale
     */function NgLocaleLocalization(locale){_classCallCheck(this,NgLocaleLocalization);var _this4=_possibleConstructorReturn(this,(NgLocaleLocalization.__proto__||Object.getPrototypeOf(NgLocaleLocalization)).call(this));_this4.locale=locale;return _this4;}/**
     * @param {?} value
     * @return {?}
     */_createClass(NgLocaleLocalization,[{key:'getPluralCategory',value:function getPluralCategory(value){var/** @type {?} */plural=getPluralCase(this.locale,value);switch(plural){case Plural.Zero:return'zero';case Plural.One:return'one';case Plural.Two:return'two';case Plural.Few:return'few';case Plural.Many:return'many';default:return'other';}}}]);return NgLocaleLocalization;}(NgLocalization);NgLocaleLocalization.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */NgLocaleLocalization.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_4" /* LOCALE_ID */]]}]}];};var Plural={};Plural.Zero=0;Plural.One=1;Plural.Two=2;Plural.Few=3;Plural.Many=4;Plural.Other=5;Plural[Plural.Zero]="Zero";Plural[Plural.One]="One";Plural[Plural.Two]="Two";Plural[Plural.Few]="Few";Plural[Plural.Many]="Many";Plural[Plural.Other]="Other";/**
 * Returns the plural case based on the locale
 *
 * \@experimental
 * @param {?} locale
 * @param {?} nLike
 * @return {?}
 */function getPluralCase(locale,nLike){// TODO(vicb): lazy compute
if(typeof nLike==='string'){nLike=parseInt(/** @type {?} */nLike,10);}var/** @type {?} */n=nLike;var/** @type {?} */nDecimal=n.toString().replace(/^[^.]*\.?/,'');var/** @type {?} */i=Math.floor(Math.abs(n));var/** @type {?} */v=nDecimal.length;var/** @type {?} */f=parseInt(nDecimal,10);var/** @type {?} */t=parseInt(n.toString().replace(/^[^.]*\.?|0+$/g,''),10)||0;var/** @type {?} */lang=locale.split('-')[0].toLowerCase();switch(lang){case'af':case'asa':case'az':case'bem':case'bez':case'bg':case'brx':case'ce':case'cgg':case'chr':case'ckb':case'ee':case'el':case'eo':case'es':case'eu':case'fo':case'fur':case'gsw':case'ha':case'haw':case'hu':case'jgo':case'jmc':case'ka':case'kk':case'kkj':case'kl':case'ks':case'ksb':case'ky':case'lb':case'lg':case'mas':case'mgo':case'ml':case'mn':case'nb':case'nd':case'ne':case'nn':case'nnh':case'nyn':case'om':case'or':case'os':case'ps':case'rm':case'rof':case'rwk':case'saq':case'seh':case'sn':case'so':case'sq':case'ta':case'te':case'teo':case'tk':case'tr':case'ug':case'uz':case'vo':case'vun':case'wae':case'xog':if(n===1)return Plural.One;return Plural.Other;case'agq':case'bas':case'cu':case'dav':case'dje':case'dua':case'dyo':case'ebu':case'ewo':case'guz':case'kam':case'khq':case'ki':case'kln':case'kok':case'ksf':case'lrc':case'lu':case'luo':case'luy':case'mer':case'mfe':case'mgh':case'mua':case'mzn':case'nmg':case'nus':case'qu':case'rn':case'rw':case'sbp':case'twq':case'vai':case'yav':case'yue':case'zgh':case'ak':case'ln':case'mg':case'pa':case'ti':if(n===Math.floor(n)&&n>=0&&n<=1)return Plural.One;return Plural.Other;case'am':case'as':case'bn':case'fa':case'gu':case'hi':case'kn':case'mr':case'zu':if(i===0||n===1)return Plural.One;return Plural.Other;case'ar':if(n===0)return Plural.Zero;if(n===1)return Plural.One;if(n===2)return Plural.Two;if(n%100===Math.floor(n%100)&&n%100>=3&&n%100<=10)return Plural.Few;if(n%100===Math.floor(n%100)&&n%100>=11&&n%100<=99)return Plural.Many;return Plural.Other;case'ast':case'ca':case'de':case'en':case'et':case'fi':case'fy':case'gl':case'it':case'nl':case'sv':case'sw':case'ur':case'yi':if(i===1&&v===0)return Plural.One;return Plural.Other;case'be':if(n%10===1&&!(n%100===11))return Plural.One;if(n%10===Math.floor(n%10)&&n%10>=2&&n%10<=4&&!(n%100>=12&&n%100<=14))return Plural.Few;if(n%10===0||n%10===Math.floor(n%10)&&n%10>=5&&n%10<=9||n%100===Math.floor(n%100)&&n%100>=11&&n%100<=14)return Plural.Many;return Plural.Other;case'br':if(n%10===1&&!(n%100===11||n%100===71||n%100===91))return Plural.One;if(n%10===2&&!(n%100===12||n%100===72||n%100===92))return Plural.Two;if(n%10===Math.floor(n%10)&&(n%10>=3&&n%10<=4||n%10===9)&&!(n%100>=10&&n%100<=19||n%100>=70&&n%100<=79||n%100>=90&&n%100<=99))return Plural.Few;if(!(n===0)&&n%1e6===0)return Plural.Many;return Plural.Other;case'bs':case'hr':case'sr':if(v===0&&i%10===1&&!(i%100===11)||f%10===1&&!(f%100===11))return Plural.One;if(v===0&&i%10===Math.floor(i%10)&&i%10>=2&&i%10<=4&&!(i%100>=12&&i%100<=14)||f%10===Math.floor(f%10)&&f%10>=2&&f%10<=4&&!(f%100>=12&&f%100<=14))return Plural.Few;return Plural.Other;case'cs':case'sk':if(i===1&&v===0)return Plural.One;if(i===Math.floor(i)&&i>=2&&i<=4&&v===0)return Plural.Few;if(!(v===0))return Plural.Many;return Plural.Other;case'cy':if(n===0)return Plural.Zero;if(n===1)return Plural.One;if(n===2)return Plural.Two;if(n===3)return Plural.Few;if(n===6)return Plural.Many;return Plural.Other;case'da':if(n===1||!(t===0)&&(i===0||i===1))return Plural.One;return Plural.Other;case'dsb':case'hsb':if(v===0&&i%100===1||f%100===1)return Plural.One;if(v===0&&i%100===2||f%100===2)return Plural.Two;if(v===0&&i%100===Math.floor(i%100)&&i%100>=3&&i%100<=4||f%100===Math.floor(f%100)&&f%100>=3&&f%100<=4)return Plural.Few;return Plural.Other;case'ff':case'fr':case'hy':case'kab':if(i===0||i===1)return Plural.One;return Plural.Other;case'fil':if(v===0&&(i===1||i===2||i===3)||v===0&&!(i%10===4||i%10===6||i%10===9)||!(v===0)&&!(f%10===4||f%10===6||f%10===9))return Plural.One;return Plural.Other;case'ga':if(n===1)return Plural.One;if(n===2)return Plural.Two;if(n===Math.floor(n)&&n>=3&&n<=6)return Plural.Few;if(n===Math.floor(n)&&n>=7&&n<=10)return Plural.Many;return Plural.Other;case'gd':if(n===1||n===11)return Plural.One;if(n===2||n===12)return Plural.Two;if(n===Math.floor(n)&&(n>=3&&n<=10||n>=13&&n<=19))return Plural.Few;return Plural.Other;case'gv':if(v===0&&i%10===1)return Plural.One;if(v===0&&i%10===2)return Plural.Two;if(v===0&&(i%100===0||i%100===20||i%100===40||i%100===60||i%100===80))return Plural.Few;if(!(v===0))return Plural.Many;return Plural.Other;case'he':if(i===1&&v===0)return Plural.One;if(i===2&&v===0)return Plural.Two;if(v===0&&!(n>=0&&n<=10)&&n%10===0)return Plural.Many;return Plural.Other;case'is':if(t===0&&i%10===1&&!(i%100===11)||!(t===0))return Plural.One;return Plural.Other;case'ksh':if(n===0)return Plural.Zero;if(n===1)return Plural.One;return Plural.Other;case'kw':case'naq':case'se':case'smn':if(n===1)return Plural.One;if(n===2)return Plural.Two;return Plural.Other;case'lag':if(n===0)return Plural.Zero;if((i===0||i===1)&&!(n===0))return Plural.One;return Plural.Other;case'lt':if(n%10===1&&!(n%100>=11&&n%100<=19))return Plural.One;if(n%10===Math.floor(n%10)&&n%10>=2&&n%10<=9&&!(n%100>=11&&n%100<=19))return Plural.Few;if(!(f===0))return Plural.Many;return Plural.Other;case'lv':case'prg':if(n%10===0||n%100===Math.floor(n%100)&&n%100>=11&&n%100<=19||v===2&&f%100===Math.floor(f%100)&&f%100>=11&&f%100<=19)return Plural.Zero;if(n%10===1&&!(n%100===11)||v===2&&f%10===1&&!(f%100===11)||!(v===2)&&f%10===1)return Plural.One;return Plural.Other;case'mk':if(v===0&&i%10===1||f%10===1)return Plural.One;return Plural.Other;case'mt':if(n===1)return Plural.One;if(n===0||n%100===Math.floor(n%100)&&n%100>=2&&n%100<=10)return Plural.Few;if(n%100===Math.floor(n%100)&&n%100>=11&&n%100<=19)return Plural.Many;return Plural.Other;case'pl':if(i===1&&v===0)return Plural.One;if(v===0&&i%10===Math.floor(i%10)&&i%10>=2&&i%10<=4&&!(i%100>=12&&i%100<=14))return Plural.Few;if(v===0&&!(i===1)&&i%10===Math.floor(i%10)&&i%10>=0&&i%10<=1||v===0&&i%10===Math.floor(i%10)&&i%10>=5&&i%10<=9||v===0&&i%100===Math.floor(i%100)&&i%100>=12&&i%100<=14)return Plural.Many;return Plural.Other;case'pt':if(n===Math.floor(n)&&n>=0&&n<=2&&!(n===2))return Plural.One;return Plural.Other;case'ro':if(i===1&&v===0)return Plural.One;if(!(v===0)||n===0||!(n===1)&&n%100===Math.floor(n%100)&&n%100>=1&&n%100<=19)return Plural.Few;return Plural.Other;case'ru':case'uk':if(v===0&&i%10===1&&!(i%100===11))return Plural.One;if(v===0&&i%10===Math.floor(i%10)&&i%10>=2&&i%10<=4&&!(i%100>=12&&i%100<=14))return Plural.Few;if(v===0&&i%10===0||v===0&&i%10===Math.floor(i%10)&&i%10>=5&&i%10<=9||v===0&&i%100===Math.floor(i%100)&&i%100>=11&&i%100<=14)return Plural.Many;return Plural.Other;case'shi':if(i===0||n===1)return Plural.One;if(n===Math.floor(n)&&n>=2&&n<=10)return Plural.Few;return Plural.Other;case'si':if(n===0||n===1||i===0&&f===1)return Plural.One;return Plural.Other;case'sl':if(v===0&&i%100===1)return Plural.One;if(v===0&&i%100===2)return Plural.Two;if(v===0&&i%100===Math.floor(i%100)&&i%100>=3&&i%100<=4||!(v===0))return Plural.Few;return Plural.Other;case'tzm':if(n===Math.floor(n)&&n>=0&&n<=1||n===Math.floor(n)&&n>=11&&n<=99)return Plural.One;return Plural.Other;default:return Plural.Other;}}/**
 * @param {?} obj
 * @return {?}
 */function isListLikeIterable(obj){if(!isJsObject(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&getSymbolIterator()in obj;// JS Iterable have a Symbol.iterator prop
}/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Adds and removes CSS classes on an HTML element.
 *
 * \@howToUse
 * ```
 *     <some-element [ngClass]="'first second'">...</some-element>
 *
 *     <some-element [ngClass]="['first', 'second']">...</some-element>
 *
 *     <some-element [ngClass]="{'first': true, 'second': true, 'third': false}">...</some-element>
 *
 *     <some-element [ngClass]="stringExp|arrayExp|objExp">...</some-element>
 *
 *     <some-element [ngClass]="{'class1 class2 class3' : true}">...</some-element>
 * ```
 *
 * \@description
 *
 * The CSS classes are updated as follows, depending on the type of the expression evaluation:
 * - `string` - the CSS classes listed in the string (space delimited) are added,
 * - `Array` - the CSS classes declared as Array elements are added,
 * - `Object` - keys are CSS classes that get added when the expression given in the value
 *              evaluates to a truthy value, otherwise they are removed.
 *
 * \@stable
 */var NgClass=function(){/**
     * @param {?} _iterableDiffers
     * @param {?} _keyValueDiffers
     * @param {?} _ngEl
     * @param {?} _renderer
     */function NgClass(_iterableDiffers,_keyValueDiffers,_ngEl,_renderer){_classCallCheck(this,NgClass);this._iterableDiffers=_iterableDiffers;this._keyValueDiffers=_keyValueDiffers;this._ngEl=_ngEl;this._renderer=_renderer;this._initialClasses=[];}/**
     * @param {?} v
     * @return {?}
     */_createClass(NgClass,[{key:'ngDoCheck',/**
     * @return {?}
     */value:function ngDoCheck(){if(this._iterableDiffer){var/** @type {?} */iterableChanges=this._iterableDiffer.diff(/** @type {?} */this._rawClass);if(iterableChanges){this._applyIterableChanges(iterableChanges);}}else if(this._keyValueDiffer){var/** @type {?} */keyValueChanges=this._keyValueDiffer.diff(/** @type {?} */this._rawClass);if(keyValueChanges){this._applyKeyValueChanges(keyValueChanges);}}}/**
     * @param {?} rawClassVal
     * @return {?}
     */},{key:'_cleanupClasses',value:function _cleanupClasses(rawClassVal){this._applyClasses(rawClassVal,true);this._applyInitialClasses(false);}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyKeyValueChanges',value:function _applyKeyValueChanges(changes){var _this5=this;changes.forEachAddedItem(function(record){return _this5._toggleClass(record.key,record.currentValue);});changes.forEachChangedItem(function(record){return _this5._toggleClass(record.key,record.currentValue);});changes.forEachRemovedItem(function(record){if(record.previousValue){_this5._toggleClass(record.key,false);}});}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyIterableChanges',value:function _applyIterableChanges(changes){var _this6=this;changes.forEachAddedItem(function(record){if(typeof record.item==='string'){_this6._toggleClass(record.item,true);}else{throw new Error('NgClass can only toggle CSS classes expressed as strings, got '+stringify(record.item));}});changes.forEachRemovedItem(function(record){return _this6._toggleClass(record.item,false);});}/**
     * @param {?} isCleanup
     * @return {?}
     */},{key:'_applyInitialClasses',value:function _applyInitialClasses(isCleanup){var _this7=this;this._initialClasses.forEach(function(klass){return _this7._toggleClass(klass,!isCleanup);});}/**
     * @param {?} rawClassVal
     * @param {?} isCleanup
     * @return {?}
     */},{key:'_applyClasses',value:function _applyClasses(rawClassVal,isCleanup){var _this8=this;if(rawClassVal){if(Array.isArray(rawClassVal)||rawClassVal instanceof Set){rawClassVal.forEach(function(klass){return _this8._toggleClass(klass,!isCleanup);});}else{Object.keys(rawClassVal).forEach(function(klass){if(rawClassVal[klass]!=null)_this8._toggleClass(klass,!isCleanup);});}}}/**
     * @param {?} klass
     * @param {?} enabled
     * @return {?}
     */},{key:'_toggleClass',value:function _toggleClass(klass,enabled){var _this9=this;klass=klass.trim();if(klass){klass.split(/\s+/g).forEach(function(klass){_this9._renderer.setElementClass(_this9._ngEl.nativeElement,klass,!!enabled);});}}},{key:'klass',set:function set(v){this._applyInitialClasses(true);this._initialClasses=typeof v==='string'?v.split(/\s+/):[];this._applyInitialClasses(false);this._applyClasses(this._rawClass,false);}/**
     * @param {?} v
     * @return {?}
     */},{key:'ngClass',set:function set(v){this._cleanupClasses(this._rawClass);this._iterableDiffer=null;this._keyValueDiffer=null;this._rawClass=typeof v==='string'?v.split(/\s+/):v;if(this._rawClass){if(isListLikeIterable(this._rawClass)){this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create();}else{this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create();}}}}]);return NgClass;}();NgClass.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngClass]'}]}];/** @nocollapse */NgClass.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_5" /* IterableDiffers */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_6" /* KeyValueDiffers */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]}];};NgClass.propDecorators={'klass':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['class']}],'ngClass':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * Instantiates a single {\@link Component} type and inserts its Host View into current View.
 * `NgComponentOutlet` provides a declarative approach for dynamic component creation.
 *
 * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and
 * any existing component will get destroyed.
 *
 * ### Fine tune control
 *
 * You can control the component creation process by using the following optional attributes:
 *
 * * `ngComponentOutletInjector`: Optional custom {\@link Injector} that will be used as parent for
 * the Component. Defaults to the injector of the current view container.
 *
 * * `ngComponentOutletProviders`: Optional injectable objects ({\@link Provider}) that are visible
 * to the component.
 *
 * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content
 * section of the component, if exists.
 *
 * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other
 * module, then load a component from that module.
 *
 * ### Syntax
 *
 * Simple
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression"></ng-container>
 * ```
 *
 * Customized injector/content
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   injector: injectorExpression;
 *                                   content: contentNodesExpression;">
 * </ng-container>
 * ```
 *
 * Customized ngModuleFactory
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   ngModuleFactory: moduleFactory;">
 * </ng-container>
 * ```
 * # Example
 *
 * {\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}
 *
 * A more complete example with additional options:
 *
 * {\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}
 * A more complete example with ngModuleFactory:
 *
 * {\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}
 *
 * \@experimental
 */var NgComponentOutlet=function(){/**
     * @param {?} _viewContainerRef
     */function NgComponentOutlet(_viewContainerRef){_classCallCheck(this,NgComponentOutlet);this._viewContainerRef=_viewContainerRef;this._componentRef=null;this._moduleRef=null;}/**
     * @param {?} changes
     * @return {?}
     */_createClass(NgComponentOutlet,[{key:'ngOnChanges',value:function ngOnChanges(changes){if(this._componentRef){this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));}this._viewContainerRef.clear();this._componentRef=null;if(this.ngComponentOutlet){var/** @type {?} */injector=this.ngComponentOutletInjector||this._viewContainerRef.parentInjector;if(changes.ngComponentOutletNgModuleFactory){if(this._moduleRef)this._moduleRef.destroy();if(this.ngComponentOutletNgModuleFactory){this._moduleRef=this.ngComponentOutletNgModuleFactory.create(injector);}else{this._moduleRef=null;}}if(this._moduleRef){injector=this._moduleRef.injector;}var/** @type {?} */componentFactory=injector.get(__WEBPACK_IMPORTED_MODULE_0__angular_core__["v" /* ComponentFactoryResolver */]).resolveComponentFactory(this.ngComponentOutlet);this._componentRef=this._viewContainerRef.createComponent(componentFactory,this._viewContainerRef.length,injector,this.ngComponentOutletContent);}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._moduleRef)this._moduleRef.destroy();}}]);return NgComponentOutlet;}();NgComponentOutlet.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngComponentOutlet]'}]}];/** @nocollapse */NgComponentOutlet.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]}];};NgComponentOutlet.propDecorators={'ngComponentOutlet':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngComponentOutletInjector':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngComponentOutletContent':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngComponentOutletNgModuleFactory':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};var NgForOfRow=function(){/**
     * @param {?} $implicit
     * @param {?} index
     * @param {?} count
     */function NgForOfRow($implicit,index,count){_classCallCheck(this,NgForOfRow);this.$implicit=$implicit;this.index=index;this.count=count;}/**
     * @return {?}
     */_createClass(NgForOfRow,[{key:'first',get:function get(){return this.index===0;}/**
     * @return {?}
     */},{key:'last',get:function get(){return this.index===this.count-1;}/**
     * @return {?}
     */},{key:'even',get:function get(){return this.index%2===0;}/**
     * @return {?}
     */},{key:'odd',get:function get(){return!this.even;}}]);return NgForOfRow;}();/**
 * The `NgForOf` directive instantiates a template once per item from an iterable. The context
 * for each instantiated template inherits from the outer context with the given loop variable
 * set to the current item from the iterable.
 *
 * ### Local Variables
 *
 * `NgForOf` provides several exported values that can be aliased to local variables:
 *
 * * `index` will be set to the current loop iteration for each template context.
 * * `first` will be set to a boolean value indicating whether the item is the first one in the
 *   iteration.
 * * `last` will be set to a boolean value indicating whether the item is the last one in the
 *   iteration.
 * * `even` will be set to a boolean value indicating whether this item has an even index.
 * * `odd` will be set to a boolean value indicating whether this item has an odd index.
 *
 * ### Change Propagation
 *
 * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:
 *
 * * When an item is added, a new instance of the template is added to the DOM.
 * * When an item is removed, its template instance is removed from the DOM.
 * * When items are reordered, their respective templates are reordered in the DOM.
 * * Otherwise, the DOM element for that item will remain the same.
 *
 * Angular uses object identity to track insertions and deletions within the iterator and reproduce
 * those changes in the DOM. This has important implications for animations and any stateful
 * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can
 * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state
 * such as user input.
 *
 * It is possible for the identities of elements in the iterator to change while the data does not.
 * This can happen, for example, if the iterator produced from an RPC to the server, and that
 * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with
 * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old
 * elements were deleted and all new elements inserted). This is an expensive operation and should
 * be avoided if possible.
 *
 * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.
 * `trackBy` takes a function which has two arguments: `index` and `item`.
 * If `trackBy` is given, Angular tracks changes by the return value of the function.
 *
 * ### Syntax
 *
 * - `<li *ngFor="let item of items; let i = index; trackBy: trackByFn">...</li>`
 * - `<li template="ngFor let item of items; let i = index; trackBy: trackByFn">...</li>`
 *
 * With `<ng-template>` element:
 *
 * ```
 * <ng-template ngFor let-item [ngForOf]="items" let-i="index" [ngForTrackBy]="trackByFn">
 *   <li>...</li>
 * </ng-template>
 * ```
 *
 * ### Example
 *
 * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed
 * example.
 *
 * \@stable
 */var NgForOf=function(){/**
     * @param {?} _viewContainer
     * @param {?} _template
     * @param {?} _differs
     */function NgForOf(_viewContainer,_template,_differs){_classCallCheck(this,NgForOf);this._viewContainer=_viewContainer;this._template=_template;this._differs=_differs;this._differ=null;}/**
     * @param {?} fn
     * @return {?}
     */_createClass(NgForOf,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('ngForOf'in changes){// React on ngForOf changes only once all inputs have been initialized
var/** @type {?} */value=changes['ngForOf'].currentValue;if(!this._differ&&value){try{this._differ=this._differs.find(value).create(this.ngForTrackBy);}catch(e){throw new Error('Cannot find a differ supporting object \''+value+'\' of type \''+getTypeNameForDebugging(value)+'\'. NgFor only supports binding to Iterables such as Arrays.');}}}}/**
     * @return {?}
     */},{key:'ngDoCheck',value:function ngDoCheck(){if(this._differ){var/** @type {?} */changes=this._differ.diff(this.ngForOf);if(changes)this._applyChanges(changes);}}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyChanges',value:function _applyChanges(changes){var _this10=this;var/** @type {?} */insertTuples=[];changes.forEachOperation(function(item,adjustedPreviousIndex,currentIndex){if(item.previousIndex==null){var/** @type {?} */view=_this10._viewContainer.createEmbeddedView(_this10._template,new NgForOfRow(null,null,null),currentIndex);var/** @type {?} */tuple=new RecordViewTuple(item,view);insertTuples.push(tuple);}else if(currentIndex==null){_this10._viewContainer.remove(adjustedPreviousIndex);}else{var/** @type {?} */_view=_this10._viewContainer.get(adjustedPreviousIndex);_this10._viewContainer.move(_view,currentIndex);var/** @type {?} */_tuple=new RecordViewTuple(item,/** @type {?} */_view);insertTuples.push(_tuple);}});for(var/** @type {?} */i=0;i<insertTuples.length;i++){this._perViewChange(insertTuples[i].view,insertTuples[i].record);}for(var/** @type {?} */_i=0,/** @type {?} */ilen=this._viewContainer.length;_i<ilen;_i++){var/** @type {?} */viewRef=this._viewContainer.get(_i);viewRef.context.index=_i;viewRef.context.count=ilen;}changes.forEachIdentityChange(function(record){var/** @type {?} */viewRef=_this10._viewContainer.get(record.currentIndex);viewRef.context.$implicit=record.item;});}/**
     * @param {?} view
     * @param {?} record
     * @return {?}
     */},{key:'_perViewChange',value:function _perViewChange(view,record){view.context.$implicit=record.item;}},{key:'ngForTrackBy',set:function set(fn){if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])()&&fn!=null&&typeof fn!=='function'){// TODO(vicb): use a log service once there is a public one available
if(console&&console.warn){console.warn('trackBy must be a function, but received '+JSON.stringify(fn)+'. '+'See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.');}}this._trackByFn=fn;}/**
     * @return {?}
     */,get:function get(){return this._trackByFn;}/**
     * @param {?} value
     * @return {?}
     */},{key:'ngForTemplate',set:function set(value){// TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1
// The current type is too restrictive; a template that just uses index, for example,
// should be acceptable.
if(value){this._template=value;}}}]);return NgForOf;}();NgForOf.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngFor][ngForOf]'}]}];/** @nocollapse */NgForOf.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_5" /* IterableDiffers */]}];};NgForOf.propDecorators={'ngForOf':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngForTrackBy':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngForTemplate':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};var RecordViewTuple=/**
     * @param {?} record
     * @param {?} view
     */function RecordViewTuple(record,view){_classCallCheck(this,RecordViewTuple);this.record=record;this.view=view;};/**
 * @deprecated from v4.0.0 - Use NgForOf instead.
 */var/** @type {?} */NgFor=NgForOf;/**
 * Conditionally includes a template based on the value of an `expression`.
 *
 * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place
 * when expression is truthy or falsy respectively. Typically the:
 *  - `then` template is the inline template of `ngIf` unless bound to a different value.
 *  - `else` template is blank unless it is bound.
 *
 * # Most common usage
 *
 * The most common usage of the `ngIf` directive is to conditionally show the inline template as
 * seen in this example:
 * {\@example common/ngIf/ts/module.ts region='NgIfSimple'}
 *
 * # Showing an alternative template using `else`
 *
 * If it is necessary to display a template when the `expression` is falsy use the `else` template
 * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.
 * The template can be defined anywhere in the component view but is typically placed right after
 * `ngIf` for readability.
 *
 * {\@example common/ngIf/ts/module.ts region='NgIfElse'}
 *
 * # Using non-inlined `then` template
 *
 * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using
 * a binding (just like `else`). Because `then` and `else` are bindings, the template references can
 * change at runtime as shown in this example.
 *
 * {\@example common/ngIf/ts/module.ts region='NgIfThenElse'}
 *
 * # Storing conditional result in a variable
 *
 * A common pattern is that we need to show a set of properties from the same object. If the
 * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against
 * dereferencing a `null` value. This is especially the case when waiting on async data such as
 * when using the `async` pipe as shown in folowing example:
 *
 * ```
 * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!
 * ```
 *
 * There are several inefficiencies in the above example:
 *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the
 *    example above.
 *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.
 *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.
 *  - We have to place the `async` pipe in parenthesis.
 *
 * A better way to do this is to use `ngIf` and store the result of the condition in a local
 * variable as shown in the the example below:
 *
 * {\@example common/ngIf/ts/module.ts region='NgIfLet'}
 *
 * Notice that:
 *  - We use only one `async` pipe and hence only one subscription gets created.
 *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.
 *  - The local `user` can then be bound repeatedly in a more efficient way.
 *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only
 *    display the data if `userStream` returns a value.
 *  - We can display an alternative template while waiting for the data.
 *
 * ### Syntax
 *
 * Simple form:
 * - `<div *ngIf="condition">...</div>`
 * - `<div template="ngIf condition">...</div>`
 * - `<ng-template [ngIf]="condition"><div>...</div></ng-template>`
 *
 * Form with an else block:
 * ```
 * <div *ngIf="condition; else elseBlock">...</div>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * Form with a `then` and `else` block:
 * ```
 * <div *ngIf="condition; then thenBlock else elseBlock"></div>
 * <ng-template #thenBlock>...</ng-template>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * Form with storing the value locally:
 * ```
 * <div *ngIf="condition; else elseBlock; let value">{{value}}</div>
 * <ng-template #elseBlock>...</ng-template>
 * ```
 *
 * \@stable
 */var NgIf=function(){/**
     * @param {?} _viewContainer
     * @param {?} templateRef
     */function NgIf(_viewContainer,templateRef){_classCallCheck(this,NgIf);this._viewContainer=_viewContainer;this._context=new NgIfContext();this._thenTemplateRef=null;this._elseTemplateRef=null;this._thenViewRef=null;this._elseViewRef=null;this._thenTemplateRef=templateRef;}/**
     * @param {?} condition
     * @return {?}
     */_createClass(NgIf,[{key:'_updateView',/**
     * @return {?}
     */value:function _updateView(){if(this._context.$implicit){if(!this._thenViewRef){this._viewContainer.clear();this._elseViewRef=null;if(this._thenTemplateRef){this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context);}}}else{if(!this._elseViewRef){this._viewContainer.clear();this._thenViewRef=null;if(this._elseTemplateRef){this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context);}}}}},{key:'ngIf',set:function set(condition){this._context.$implicit=condition;this._updateView();}/**
     * @param {?} templateRef
     * @return {?}
     */},{key:'ngIfThen',set:function set(templateRef){this._thenTemplateRef=templateRef;this._thenViewRef=null;// clear previous view if any.
this._updateView();}/**
     * @param {?} templateRef
     * @return {?}
     */},{key:'ngIfElse',set:function set(templateRef){this._elseTemplateRef=templateRef;this._elseViewRef=null;// clear previous view if any.
this._updateView();}}]);return NgIf;}();NgIf.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngIf]'}]}];/** @nocollapse */NgIf.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */]}];};NgIf.propDecorators={'ngIf':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngIfThen':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngIfElse':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};var NgIfContext=function NgIfContext(){_classCallCheck(this,NgIfContext);this.$implicit=null;};var SwitchView=function(){/**
     * @param {?} _viewContainerRef
     * @param {?} _templateRef
     */function SwitchView(_viewContainerRef,_templateRef){_classCallCheck(this,SwitchView);this._viewContainerRef=_viewContainerRef;this._templateRef=_templateRef;this._created=false;}/**
     * @return {?}
     */_createClass(SwitchView,[{key:'create',value:function create(){this._created=true;this._viewContainerRef.createEmbeddedView(this._templateRef);}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this._created=false;this._viewContainerRef.clear();}/**
     * @param {?} created
     * @return {?}
     */},{key:'enforceState',value:function enforceState(created){if(created&&!this._created){this.create();}else if(!created&&this._created){this.destroy();}}}]);return SwitchView;}();/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch
 *             expression.
 *
 * \@howToUse
 * ```
 *     <container-element [ngSwitch]="switch_expression">
 *       <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *       <some-element *ngSwitchCase="match_expression_2">...</some-element>
 *       <some-other-element *ngSwitchCase="match_expression_3">...</some-other-element>
 *       <ng-container *ngSwitchCase="match_expression_3">
 *         <!-- use a ng-container to group multiple root nodes -->
 *         <inner-element></inner-element>
 *         <inner-other-element></inner-other-element>
 *       </ng-container>
 *       <some-element *ngSwitchDefault>...</some-element>
 *     </container-element>
 * ```
 * \@description
 *
 * `NgSwitch` stamps out nested views when their match expression value matches the value of the
 * switch expression.
 *
 * In other words:
 * - you define a container element (where you place the directive with a switch expression on the
 * `[ngSwitch]="..."` attribute)
 * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view
 * root elements.
 *
 * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will
 * be preserved at the location.
 *
 * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the
 * expression is evaluated.
 * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is
 * stamped out.
 *
 * \@stable
 */var NgSwitch=function(){function NgSwitch(){_classCallCheck(this,NgSwitch);this._defaultUsed=false;this._caseCount=0;this._lastCaseCheckIndex=0;this._lastCasesMatched=false;}/**
     * @param {?} newValue
     * @return {?}
     */_createClass(NgSwitch,[{key:'_addCase',/**
     * \@internal
     * @return {?}
     */value:function _addCase(){return this._caseCount++;}/**
     * \@internal
     * @param {?} view
     * @return {?}
     */},{key:'_addDefault',value:function _addDefault(view){if(!this._defaultViews){this._defaultViews=[];}this._defaultViews.push(view);}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_matchCase',value:function _matchCase(value){var/** @type {?} */matched=value==this._ngSwitch;this._lastCasesMatched=this._lastCasesMatched||matched;this._lastCaseCheckIndex++;if(this._lastCaseCheckIndex===this._caseCount){this._updateDefaultCases(!this._lastCasesMatched);this._lastCaseCheckIndex=0;this._lastCasesMatched=false;}return matched;}/**
     * @param {?} useDefault
     * @return {?}
     */},{key:'_updateDefaultCases',value:function _updateDefaultCases(useDefault){if(this._defaultViews&&useDefault!==this._defaultUsed){this._defaultUsed=useDefault;for(var/** @type {?} */i=0;i<this._defaultViews.length;i++){var/** @type {?} */defaultView=this._defaultViews[i];defaultView.enforceState(useDefault);}}}},{key:'ngSwitch',set:function set(newValue){this._ngSwitch=newValue;if(this._caseCount===0){this._updateDefaultCases(true);}}}]);return NgSwitch;}();NgSwitch.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngSwitch]'}]}];/** @nocollapse */NgSwitch.ctorParameters=function(){return[];};NgSwitch.propDecorators={'ngSwitch':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Creates a view that will be added/removed from the parent {\@link NgSwitch} when the
 *             given expression evaluate to respectively the same/different value as the switch
 *             expression.
 *
 * \@howToUse
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 * </container-element>
 * ```
 * \@description
 *
 * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch
 * expression.
 *
 * If multiple match expressions match the switch expression value, all of them are displayed.
 *
 * See {\@link NgSwitch} for more details and example.
 *
 * \@stable
 */var NgSwitchCase=function(){/**
     * @param {?} viewContainer
     * @param {?} templateRef
     * @param {?} ngSwitch
     */function NgSwitchCase(viewContainer,templateRef,ngSwitch){_classCallCheck(this,NgSwitchCase);this.ngSwitch=ngSwitch;ngSwitch._addCase();this._view=new SwitchView(viewContainer,templateRef);}/**
     * @return {?}
     */_createClass(NgSwitchCase,[{key:'ngDoCheck',value:function ngDoCheck(){this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));}}]);return NgSwitchCase;}();NgSwitchCase.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngSwitchCase]'}]}];/** @nocollapse */NgSwitchCase.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */]},{type:NgSwitch,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]}]}];};NgSwitchCase.propDecorators={'ngSwitchCase':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * \@ngModule CommonModule
 * \@whatItDoes Creates a view that is added to the parent {\@link NgSwitch} when no case expressions
 * match the
 *             switch expression.
 *
 * \@howToUse
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *   <some-other-element *ngSwitchDefault>...</some-other-element>
 * </container-element>
 * ```
 *
 * \@description
 *
 * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch
 * expression.
 *
 * See {\@link NgSwitch} for more details and example.
 *
 * \@stable
 */var NgSwitchDefault=/**
     * @param {?} viewContainer
     * @param {?} templateRef
     * @param {?} ngSwitch
     */function NgSwitchDefault(viewContainer,templateRef,ngSwitch){_classCallCheck(this,NgSwitchDefault);ngSwitch._addDefault(new SwitchView(viewContainer,templateRef));};NgSwitchDefault.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngSwitchDefault]'}]}];/** @nocollapse */NgSwitchDefault.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */]},{type:NgSwitch,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]}]}];};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.
 *
 * \@howToUse
 * ```
 * <some-element [ngPlural]="value">
 *   <template ngPluralCase="=0">there is nothing</template>
 *   <template ngPluralCase="=1">there is one</template>
 *   <template ngPluralCase="few">there are a few</template>
 * </some-element>
 * ```
 *
 * \@description
 *
 * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees
 * that match the switch expression's pluralization category.
 *
 * To use this directive you must provide a container element that sets the `[ngPlural]` attribute
 * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their
 * expression:
 * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value
 *   matches the switch expression exactly,
 * - otherwise, the view will be treated as a "category match", and will only display if exact
 *   value matches aren't found and the value maps to its category for the defined locale.
 *
 * See http://cldr.unicode.org/index/cldr-spec/plural-rules
 *
 * \@experimental
 */var NgPlural=function(){/**
     * @param {?} _localization
     */function NgPlural(_localization){_classCallCheck(this,NgPlural);this._localization=_localization;this._caseViews={};}/**
     * @param {?} value
     * @return {?}
     */_createClass(NgPlural,[{key:'addCase',/**
     * @param {?} value
     * @param {?} switchView
     * @return {?}
     */value:function addCase(value,switchView){this._caseViews[value]=switchView;}/**
     * @return {?}
     */},{key:'_updateView',value:function _updateView(){this._clearViews();var/** @type {?} */cases=Object.keys(this._caseViews);var/** @type {?} */key=getPluralCategory(this._switchValue,cases,this._localization);this._activateView(this._caseViews[key]);}/**
     * @return {?}
     */},{key:'_clearViews',value:function _clearViews(){if(this._activeView)this._activeView.destroy();}/**
     * @param {?} view
     * @return {?}
     */},{key:'_activateView',value:function _activateView(view){if(view){this._activeView=view;this._activeView.create();}}},{key:'ngPlural',set:function set(value){this._switchValue=value;this._updateView();}}]);return NgPlural;}();NgPlural.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngPlural]'}]}];/** @nocollapse */NgPlural.ctorParameters=function(){return[{type:NgLocalization}];};NgPlural.propDecorators={'ngPlural':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Creates a view that will be added/removed from the parent {\@link NgPlural} when the
 *             given expression matches the plural expression according to CLDR rules.
 *
 * \@howToUse
 * ```
 * <some-element [ngPlural]="value">
 *   <template ngPluralCase="=0">...</template>
 *   <template ngPluralCase="other">...</template>
 * </some-element>
 * ```
 *
 * See {\@link NgPlural} for more details and example.
 *
 * \@experimental
 */var NgPluralCase=/**
     * @param {?} value
     * @param {?} template
     * @param {?} viewContainer
     * @param {?} ngPlural
     */function NgPluralCase(value,template,viewContainer,ngPlural){_classCallCheck(this,NgPluralCase);this.value=value;var isANumber=!isNaN(Number(value));ngPlural.addCase(isANumber?'='+value:value,new SwitchView(viewContainer,template));};NgPluralCase.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngPluralCase]'}]}];/** @nocollapse */NgPluralCase.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */],args:['ngPluralCase']}]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]},{type:NgPlural,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]}]}];};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Update an HTML element styles.
 *
 * \@howToUse
 * ```
 * <some-element [ngStyle]="{'font-style': styleExp}">...</some-element>
 *
 * <some-element [ngStyle]="{'max-width.px': widthExp}">...</some-element>
 *
 * <some-element [ngStyle]="objExp">...</some-element>
 * ```
 *
 * \@description
 *
 * The styles are updated according to the value of the expression evaluation:
 * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),
 * - values are the values assigned to those properties (expressed in the given unit).
 *
 * \@stable
 */var NgStyle=function(){/**
     * @param {?} _differs
     * @param {?} _ngEl
     * @param {?} _renderer
     */function NgStyle(_differs,_ngEl,_renderer){_classCallCheck(this,NgStyle);this._differs=_differs;this._ngEl=_ngEl;this._renderer=_renderer;}/**
     * @param {?} v
     * @return {?}
     */_createClass(NgStyle,[{key:'ngDoCheck',/**
     * @return {?}
     */value:function ngDoCheck(){if(this._differ){var/** @type {?} */changes=this._differ.diff(this._ngStyle);if(changes){this._applyChanges(changes);}}}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyChanges',value:function _applyChanges(changes){var _this11=this;changes.forEachRemovedItem(function(record){return _this11._setStyle(record.key,null);});changes.forEachAddedItem(function(record){return _this11._setStyle(record.key,record.currentValue);});changes.forEachChangedItem(function(record){return _this11._setStyle(record.key,record.currentValue);});}/**
     * @param {?} nameAndUnit
     * @param {?} value
     * @return {?}
     */},{key:'_setStyle',value:function _setStyle(nameAndUnit,value){var _nameAndUnit$split=nameAndUnit.split('.'),_nameAndUnit$split2=_slicedToArray(_nameAndUnit$split,2),name=_nameAndUnit$split2[0],unit=_nameAndUnit$split2[1];value=value!=null&&unit?''+value+unit:value;this._renderer.setElementStyle(this._ngEl.nativeElement,name,/** @type {?} */value);}},{key:'ngStyle',set:function set(v){this._ngStyle=v;if(!this._differ&&v){this._differ=this._differs.find(v).create();}}}]);return NgStyle;}();NgStyle.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngStyle]'}]}];/** @nocollapse */NgStyle.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_6" /* KeyValueDiffers */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]}];};NgStyle.propDecorators={'ngStyle':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Inserts an embedded view from a prepared `TemplateRef`
 *
 * \@howToUse
 * ```
 * <ng-container *ngTemplateOutlet="templateRefExp; context: contextExp"></ng-container>
 * ```
 *
 * \@description
 *
 * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.
 * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding
 * by the local template `let` declarations.
 *
 * Note: using the key `$implicit` in the context object will set it's value as default.
 *
 * # Example
 *
 * {\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}
 *
 * \@experimental
 */var NgTemplateOutlet=function(){/**
     * @param {?} _viewContainerRef
     */function NgTemplateOutlet(_viewContainerRef){_classCallCheck(this,NgTemplateOutlet);this._viewContainerRef=_viewContainerRef;}/**
     * @deprecated v4.0.0 - Renamed to ngTemplateOutletContext.
     * @param {?} context
     * @return {?}
     */_createClass(NgTemplateOutlet,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if(this._viewRef){this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));}if(this.ngTemplateOutlet){this._viewRef=this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext);}}},{key:'ngOutletContext',set:function set(context){this.ngTemplateOutletContext=context;}}]);return NgTemplateOutlet;}();NgTemplateOutlet.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngTemplateOutlet]'}]}];/** @nocollapse */NgTemplateOutlet.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]}];};NgTemplateOutlet.propDecorators={'ngTemplateOutletContext':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngTemplateOutlet':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'ngOutletContext':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * A collection of Angular directives that are likely to be used in each and every Angular
 * application.
 */var/** @type {?} */COMMON_DIRECTIVES=[NgClass,NgComponentOutlet,NgForOf,NgIf,NgTemplateOutlet,NgStyle,NgSwitch,NgSwitchCase,NgSwitchDefault,NgPlural,NgPluralCase];/**
 * @param {?} type
 * @param {?} value
 * @return {?}
 */function invalidPipeArgumentError(type,value){return Error('InvalidPipeArgument: \''+value+'\' for pipe \''+stringify(type)+'\'');}var ObservableStrategy=function(){function ObservableStrategy(){_classCallCheck(this,ObservableStrategy);}_createClass(ObservableStrategy,[{key:'createSubscription',/**
     * @param {?} async
     * @param {?} updateLatestValue
     * @return {?}
     */value:function createSubscription(async,updateLatestValue){return async.subscribe({next:updateLatestValue,error:function error(e){throw e;}});}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'dispose',value:function dispose(subscription){subscription.unsubscribe();}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(subscription){subscription.unsubscribe();}}]);return ObservableStrategy;}();var PromiseStrategy=function(){function PromiseStrategy(){_classCallCheck(this,PromiseStrategy);}_createClass(PromiseStrategy,[{key:'createSubscription',/**
     * @param {?} async
     * @param {?} updateLatestValue
     * @return {?}
     */value:function createSubscription(async,updateLatestValue){return async.then(updateLatestValue,function(e){throw e;});}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'dispose',value:function dispose(subscription){}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(subscription){}}]);return PromiseStrategy;}();var/** @type {?} */_promiseStrategy=new PromiseStrategy();var/** @type {?} */_observableStrategy=new ObservableStrategy();/**
 * \@ngModule CommonModule
 * \@whatItDoes Unwraps a value from an asynchronous primitive.
 * \@howToUse `observable_or_promise_expression | async`
 * \@description
 * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has
 * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for
 * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid
 * potential memory leaks.
 *
 *
 * ## Examples
 *
 * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the
 * promise.
 *
 * {\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}
 *
 * It's also possible to use `async` with Observables. The example below binds the `time` Observable
 * to the view. The Observable continuously updates the view with the current time.
 *
 * {\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}
 *
 * \@stable
 */var AsyncPipe=function(){/**
     * @param {?} _ref
     */function AsyncPipe(_ref){_classCallCheck(this,AsyncPipe);this._ref=_ref;this._latestValue=null;this._latestReturnedValue=null;this._subscription=null;this._obj=null;this._strategy=null;}/**
     * @return {?}
     */_createClass(AsyncPipe,[{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._subscription){this._dispose();}}/**
     * @param {?} obj
     * @return {?}
     */},{key:'transform',value:function transform(obj){if(!this._obj){if(obj){this._subscribe(obj);}this._latestReturnedValue=this._latestValue;return this._latestValue;}if(obj!==this._obj){this._dispose();return this.transform(/** @type {?} */obj);}if(this._latestValue===this._latestReturnedValue){return this._latestReturnedValue;}this._latestReturnedValue=this._latestValue;return __WEBPACK_IMPORTED_MODULE_0__angular_core__["_7" /* WrappedValue */].wrap(this._latestValue);}/**
     * @param {?} obj
     * @return {?}
     */},{key:'_subscribe',value:function _subscribe(obj){var _this12=this;this._obj=obj;this._strategy=this._selectStrategy(obj);this._subscription=this._strategy.createSubscription(obj,function(value){return _this12._updateLatestValue(obj,value);});}/**
     * @param {?} obj
     * @return {?}
     */},{key:'_selectStrategy',value:function _selectStrategy(obj){if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["J" /* ɵisPromise */])(obj)){return _promiseStrategy;}if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["K" /* ɵisObservable */])(obj)){return _observableStrategy;}throw invalidPipeArgumentError(AsyncPipe,obj);}/**
     * @return {?}
     */},{key:'_dispose',value:function _dispose(){this._strategy.dispose(this._subscription);this._latestValue=null;this._latestReturnedValue=null;this._subscription=null;this._obj=null;}/**
     * @param {?} async
     * @param {?} value
     * @return {?}
     */},{key:'_updateLatestValue',value:function _updateLatestValue(async,value){if(async===this._obj){this._latestValue=value;this._ref.markForCheck();}}}]);return AsyncPipe;}();AsyncPipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'async',pure:false}]}];/** @nocollapse */AsyncPipe.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["C" /* ChangeDetectorRef */]}];};/**
 * Transforms text to lowercase.
 *
 * {\@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }
 *
 * \@stable
 */var LowerCasePipe=function(){function LowerCasePipe(){_classCallCheck(this,LowerCasePipe);}_createClass(LowerCasePipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(LowerCasePipe,value);}return value.toLowerCase();}}]);return LowerCasePipe;}();LowerCasePipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'lowercase'}]}];/** @nocollapse */LowerCasePipe.ctorParameters=function(){return[];};/**
 * Helper method to transform a single word to titlecase.
 *
 * \@stable
 * @param {?} word
 * @return {?}
 */function titleCaseWord(word){if(!word)return word;return word[0].toUpperCase()+word.substr(1).toLowerCase();}/**
 * Transforms text to titlecase.
 *
 * \@stable
 */var TitleCasePipe=function(){function TitleCasePipe(){_classCallCheck(this,TitleCasePipe);}_createClass(TitleCasePipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(TitleCasePipe,value);}return value.split(/\b/g).map(function(word){return titleCaseWord(word);}).join('');}}]);return TitleCasePipe;}();TitleCasePipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'titlecase'}]}];/** @nocollapse */TitleCasePipe.ctorParameters=function(){return[];};/**
 * Transforms text to uppercase.
 *
 * \@stable
 */var UpperCasePipe=function(){function UpperCasePipe(){_classCallCheck(this,UpperCasePipe);}_createClass(UpperCasePipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(UpperCasePipe,value);}return value.toUpperCase();}}]);return UpperCasePipe;}();UpperCasePipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'uppercase'}]}];/** @nocollapse */UpperCasePipe.ctorParameters=function(){return[];};var NumberFormatStyle={};NumberFormatStyle.Decimal=0;NumberFormatStyle.Percent=1;NumberFormatStyle.Currency=2;NumberFormatStyle[NumberFormatStyle.Decimal]="Decimal";NumberFormatStyle[NumberFormatStyle.Percent]="Percent";NumberFormatStyle[NumberFormatStyle.Currency]="Currency";var NumberFormatter=function(){function NumberFormatter(){_classCallCheck(this,NumberFormatter);}_createClass(NumberFormatter,null,[{key:'format',/**
     * @param {?} num
     * @param {?} locale
     * @param {?} style
     * @param {?=} __3
     * @return {?}
     */value:function format(num,locale,style){var _ref2=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},minimumIntegerDigits=_ref2.minimumIntegerDigits,minimumFractionDigits=_ref2.minimumFractionDigits,maximumFractionDigits=_ref2.maximumFractionDigits,currency=_ref2.currency,_ref2$currencyAsSymbo=_ref2.currencyAsSymbol,currencyAsSymbol=_ref2$currencyAsSymbo===undefined?false:_ref2$currencyAsSymbo;var/** @type {?} */options={minimumIntegerDigits:minimumIntegerDigits,minimumFractionDigits:minimumFractionDigits,maximumFractionDigits:maximumFractionDigits,style:NumberFormatStyle[style].toLowerCase()};if(style==NumberFormatStyle.Currency){options.currency=currency;options.currencyDisplay=currencyAsSymbol?'symbol':'code';}return new Intl.NumberFormat(locale,options).format(num);}}]);return NumberFormatter;}();var/** @type {?} */DATE_FORMATS_SPLIT=/((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;var/** @type {?} */PATTERN_ALIASES={// Keys are quoted so they do not get renamed during closure compilation.
'yMMMdjms':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',3),digitCondition('day',1),digitCondition('hour',1),digitCondition('minute',1),digitCondition('second',1)])),'yMdjm':datePartGetterFactory(combine([digitCondition('year',1),digitCondition('month',1),digitCondition('day',1),digitCondition('hour',1),digitCondition('minute',1)])),'yMMMMEEEEd':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',4),nameCondition('weekday',4),digitCondition('day',1)])),'yMMMMd':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',4),digitCondition('day',1)])),'yMMMd':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',3),digitCondition('day',1)])),'yMd':datePartGetterFactory(combine([digitCondition('year',1),digitCondition('month',1),digitCondition('day',1)])),'jms':datePartGetterFactory(combine([digitCondition('hour',1),digitCondition('second',1),digitCondition('minute',1)])),'jm':datePartGetterFactory(combine([digitCondition('hour',1),digitCondition('minute',1)]))};var/** @type {?} */DATE_FORMATS={// Keys are quoted so they do not get renamed.
'yyyy':datePartGetterFactory(digitCondition('year',4)),'yy':datePartGetterFactory(digitCondition('year',2)),'y':datePartGetterFactory(digitCondition('year',1)),'MMMM':datePartGetterFactory(nameCondition('month',4)),'MMM':datePartGetterFactory(nameCondition('month',3)),'MM':datePartGetterFactory(digitCondition('month',2)),'M':datePartGetterFactory(digitCondition('month',1)),'LLLL':datePartGetterFactory(nameCondition('month',4)),'L':datePartGetterFactory(nameCondition('month',1)),'dd':datePartGetterFactory(digitCondition('day',2)),'d':datePartGetterFactory(digitCondition('day',1)),'HH':digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',2),false)))),'H':hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',1),false))),'hh':digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',2),true)))),'h':hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',1),true))),'jj':datePartGetterFactory(digitCondition('hour',2)),'j':datePartGetterFactory(digitCondition('hour',1)),'mm':digitModifier(datePartGetterFactory(digitCondition('minute',2))),'m':datePartGetterFactory(digitCondition('minute',1)),'ss':digitModifier(datePartGetterFactory(digitCondition('second',2))),'s':datePartGetterFactory(digitCondition('second',1)),// while ISO 8601 requires fractions to be prefixed with `.` or `,`
// we can be just safely rely on using `sss` since we currently don't support single or two digit
// fractions
'sss':datePartGetterFactory(digitCondition('second',3)),'EEEE':datePartGetterFactory(nameCondition('weekday',4)),'EEE':datePartGetterFactory(nameCondition('weekday',3)),'EE':datePartGetterFactory(nameCondition('weekday',2)),'E':datePartGetterFactory(nameCondition('weekday',1)),'a':hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',1),true))),'Z':timeZoneGetter('short'),'z':timeZoneGetter('long'),'ww':datePartGetterFactory({}),// first Thursday of the year. not support ?
'w':datePartGetterFactory({}),// of the year not support ?
'G':datePartGetterFactory(nameCondition('era',1)),'GG':datePartGetterFactory(nameCondition('era',2)),'GGG':datePartGetterFactory(nameCondition('era',3)),'GGGG':datePartGetterFactory(nameCondition('era',4))};/**
 * @param {?} inner
 * @return {?}
 */function digitModifier(inner){return function(date,locale){var/** @type {?} */result=inner(date,locale);return result.length==1?'0'+result:result;};}/**
 * @param {?} inner
 * @return {?}
 */function hourClockExtractor(inner){return function(date,locale){return inner(date,locale).split(' ')[1];};}/**
 * @param {?} inner
 * @return {?}
 */function hourExtractor(inner){return function(date,locale){return inner(date,locale).split(' ')[0];};}/**
 * @param {?} date
 * @param {?} locale
 * @param {?} options
 * @return {?}
 */function intlDateFormat(date,locale,options){return new Intl.DateTimeFormat(locale,options).format(date).replace(/[\u200e\u200f]/g,'');}/**
 * @param {?} timezone
 * @return {?}
 */function timeZoneGetter(timezone){// To workaround `Intl` API restriction for single timezone let format with 24 hours
var/** @type {?} */options={hour:'2-digit',hour12:false,timeZoneName:timezone};return function(date,locale){var/** @type {?} */result=intlDateFormat(date,locale,options);// Then extract first 3 letters that related to hours
return result?result.substring(3):'';};}/**
 * @param {?} options
 * @param {?} value
 * @return {?}
 */function hour12Modify(options,value){options.hour12=value;return options;}/**
 * @param {?} prop
 * @param {?} len
 * @return {?}
 */function digitCondition(prop,len){var/** @type {?} */result={};result[prop]=len===2?'2-digit':'numeric';return result;}/**
 * @param {?} prop
 * @param {?} len
 * @return {?}
 */function nameCondition(prop,len){var/** @type {?} */result={};if(len<4){result[prop]=len>1?'short':'narrow';}else{result[prop]='long';}return result;}/**
 * @param {?} options
 * @return {?}
 */function combine(options){return Object.assign.apply(Object,[{}].concat(_toConsumableArray(options)));}/**
 * @param {?} ret
 * @return {?}
 */function datePartGetterFactory(ret){return function(date,locale){return intlDateFormat(date,locale,ret);};}var/** @type {?} */DATE_FORMATTER_CACHE=new Map();/**
 * @param {?} format
 * @param {?} date
 * @param {?} locale
 * @return {?}
 */function dateFormatter(format,date,locale){var/** @type {?} */fn=PATTERN_ALIASES[format];if(fn)return fn(date,locale);var/** @type {?} */cacheKey=format;var/** @type {?} */parts=DATE_FORMATTER_CACHE.get(cacheKey);if(!parts){parts=[];var/** @type {?} */match=void 0;DATE_FORMATS_SPLIT.exec(format);while(format){match=DATE_FORMATS_SPLIT.exec(format);if(match){parts=parts.concat(match.slice(1));format=parts.pop();}else{parts.push(format);format=null;}}DATE_FORMATTER_CACHE.set(cacheKey,parts);}return parts.reduce(function(text,part){var/** @type {?} */fn=DATE_FORMATS[part];return text+(fn?fn(date,locale):partToTime(part));},'');}/**
 * @param {?} part
 * @return {?}
 */function partToTime(part){return part==='\'\''?'\'':part.replace(/(^'|'$)/g,'').replace(/''/g,'\'');}var DateFormatter=function(){function DateFormatter(){_classCallCheck(this,DateFormatter);}_createClass(DateFormatter,null,[{key:'format',/**
     * @param {?} date
     * @param {?} locale
     * @param {?} pattern
     * @return {?}
     */value:function format(date,locale,pattern){return dateFormatter(pattern,date,locale);}}]);return DateFormatter;}();var/** @type {?} */ISO8601_DATE_REGEX=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a date according to locale rules.
 * \@howToUse `date_expression | date[:format]`
 * \@description
 *
 * Where:
 * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string
 * (https://www.w3.org/TR/NOTE-datetime).
 * - `format` indicates which date/time components to include. The format can be predefined as
 *   shown below or custom as shown in the table.
 *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)
 *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)
 *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)
 *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)
 *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)
 *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)
 *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)
 *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)
 *
 *
 *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |
 *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|
 *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |
 *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |
 *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |
 *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |
 *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |
 *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |
 *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|
 *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |
 *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |
 *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |
 *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |
 *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |
 *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |
 *
 * In javascript, only the components specified will be respected (not the ordering,
 * punctuations, ...) and details of the formatting will be dependent on the locale.
 *
 * Timezone of the formatted text will be the local system timezone of the end-user's machine.
 *
 * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not
 * applied and the formatted text will have the same day, month and year of the expression.
 *
 * WARNINGS:
 * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.
 *   Instead users should treat the date as an immutable object and change the reference when the
 *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run
 *   which would be an expensive operation).
 * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera
 *   browsers.
 *
 * ### Examples
 *
 * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)
 * in the _local_ time and locale is 'en-US':
 *
 * ```
 *     {{ dateObj | date }}               // output is 'Jun 15, 2015'
 *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'
 *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'
 *     {{ dateObj | date:'mmss' }}        // output is '43:11'
 * ```
 *
 * {\@example common/pipes/ts/date_pipe.ts region='DatePipe'}
 *
 * \@stable
 */var DatePipe=function(){/**
     * @param {?} _locale
     */function DatePipe(_locale){_classCallCheck(this,DatePipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} pattern
     * @return {?}
     */_createClass(DatePipe,[{key:'transform',value:function transform(value){var pattern=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'mediumDate';var/** @type {?} */date=void 0;if(isBlank$1(value)||value!==value)return null;if(typeof value==='string'){value=value.trim();}if(isDate(value)){date=value;}else if(NumberWrapper.isNumeric(value)){date=new Date(parseFloat(value));}else if(typeof value==='string'&&/^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)){/**
            * For ISO Strings without time the day, month and year must be extracted from the ISO String
            * before Date creation to avoid time offset and errors in the new Date.
            * If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
            * date, some browsers (e.g. IE 9) will throw an invalid Date error
            * If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the timeoffset
            * is applied
            * Note: ISO months are 0 for January, 1 for February, ...
            */var _value$split$map=value.split('-').map(function(val){return parseInt(val,10);}),_value$split$map2=_slicedToArray(_value$split$map,3),y=_value$split$map2[0],m=_value$split$map2[1],d=_value$split$map2[2];date=new Date(y,m-1,d);}else{date=new Date(value);}if(!isDate(date)){var/** @type {?} */match=void 0;if(typeof value==='string'&&(match=value.match(ISO8601_DATE_REGEX))){date=isoStringToDate(match);}else{throw invalidPipeArgumentError(DatePipe,value);}}return DateFormatter.format(date,this._locale,DatePipe._ALIASES[pattern]||pattern);}}]);return DatePipe;}();/** @internal */DatePipe._ALIASES={'medium':'yMMMdjms','short':'yMdjm','fullDate':'yMMMMEEEEd','longDate':'yMMMMd','mediumDate':'yMMMd','shortDate':'yMd','mediumTime':'jms','shortTime':'jm'};DatePipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'date',pure:true}]}];/** @nocollapse */DatePipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_4" /* LOCALE_ID */]]}]}];};/**
 * @param {?} obj
 * @return {?}
 */function isBlank$1(obj){return obj==null||obj==='';}/**
 * @param {?} obj
 * @return {?}
 */function isDate(obj){return obj instanceof Date&&!isNaN(obj.valueOf());}/**
 * @param {?} match
 * @return {?}
 */function isoStringToDate(match){var/** @type {?} */date=new Date(0);var/** @type {?} */tzHour=0;var/** @type {?} */tzMin=0;var/** @type {?} */dateSetter=match[8]?date.setUTCFullYear:date.setFullYear;var/** @type {?} */timeSetter=match[8]?date.setUTCHours:date.setHours;if(match[9]){tzHour=toInt(match[9]+match[10]);tzMin=toInt(match[9]+match[11]);}dateSetter.call(date,toInt(match[1]),toInt(match[2])-1,toInt(match[3]));var/** @type {?} */h=toInt(match[4]||'0')-tzHour;var/** @type {?} */m=toInt(match[5]||'0')-tzMin;var/** @type {?} */s=toInt(match[6]||'0');var/** @type {?} */ms=Math.round(parseFloat('0.'+(match[7]||0))*1000);timeSetter.call(date,h,m,s,ms);return date;}/**
 * @param {?} str
 * @return {?}
 */function toInt(str){return parseInt(str,10);}var/** @type {?} */_INTERPOLATION_REGEXP=/#/g;/**
 * \@ngModule CommonModule
 * \@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.
 * \@howToUse `expression | i18nPlural:mapping`
 * \@description
 *
 *  Where:
 *  - `expression` is a number.
 *  - `mapping` is an object that mimics the ICU format, see
 *    http://userguide.icu-project.org/formatparse/messages
 *
 *  ## Example
 *
 * {\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}
 *
 * \@experimental
 */var I18nPluralPipe=function(){/**
     * @param {?} _localization
     */function I18nPluralPipe(_localization){_classCallCheck(this,I18nPluralPipe);this._localization=_localization;}/**
     * @param {?} value
     * @param {?} pluralMap
     * @return {?}
     */_createClass(I18nPluralPipe,[{key:'transform',value:function transform(value,pluralMap){if(value==null)return'';if((typeof pluralMap==='undefined'?'undefined':_typeof(pluralMap))!=='object'||pluralMap===null){throw invalidPipeArgumentError(I18nPluralPipe,pluralMap);}var/** @type {?} */key=getPluralCategory(value,Object.keys(pluralMap),this._localization);return pluralMap[key].replace(_INTERPOLATION_REGEXP,value.toString());}}]);return I18nPluralPipe;}();I18nPluralPipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'i18nPlural',pure:true}]}];/** @nocollapse */I18nPluralPipe.ctorParameters=function(){return[{type:NgLocalization}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Generic selector that displays the string that matches the current value.
 * \@howToUse `expression | i18nSelect:mapping`
 * \@description
 *
 *  Where `mapping` is an object that indicates the text that should be displayed
 *  for different values of the provided `expression`.
 *  If none of the keys of the mapping match the value of the `expression`, then the content
 *  of the `other` key is returned when present, otherwise an empty string is returned.
 *
 *  ## Example
 *
 * {\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}
 *
 *  \@experimental
 */var I18nSelectPipe=function(){function I18nSelectPipe(){_classCallCheck(this,I18nSelectPipe);}_createClass(I18nSelectPipe,[{key:'transform',/**
     * @param {?} value
     * @param {?} mapping
     * @return {?}
     */value:function transform(value,mapping){if(value==null)return'';if((typeof mapping==='undefined'?'undefined':_typeof(mapping))!=='object'||typeof value!=='string'){throw invalidPipeArgumentError(I18nSelectPipe,mapping);}if(mapping.hasOwnProperty(value)){return mapping[value];}if(mapping.hasOwnProperty('other')){return mapping['other'];}return'';}}]);return I18nSelectPipe;}();I18nSelectPipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'i18nSelect',pure:true}]}];/** @nocollapse */I18nSelectPipe.ctorParameters=function(){return[];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Converts value into JSON string.
 * \@howToUse `expression | json`
 * \@description
 *
 * Converts value into string using `JSON.stringify`. Useful for debugging.
 *
 * ### Example
 * {\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}
 *
 * \@stable
 */var JsonPipe=function(){function JsonPipe(){_classCallCheck(this,JsonPipe);}_createClass(JsonPipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){return JSON.stringify(value,null,2);}}]);return JsonPipe;}();JsonPipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'json',pure:false}]}];/** @nocollapse */JsonPipe.ctorParameters=function(){return[];};var/** @type {?} */_NUMBER_FORMAT_REGEXP=/^(\d+)?\.((\d+)(-(\d+))?)?$/;/**
 * @param {?} pipe
 * @param {?} locale
 * @param {?} value
 * @param {?} style
 * @param {?} digits
 * @param {?=} currency
 * @param {?=} currencyAsSymbol
 * @return {?}
 */function formatNumber(pipe,locale,value,style,digits){var currency=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;var currencyAsSymbol=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;if(value==null)return null;// Convert strings to numbers
value=typeof value==='string'&&NumberWrapper.isNumeric(value)?+value:value;if(typeof value!=='number'){throw invalidPipeArgumentError(pipe,value);}var/** @type {?} */minInt=void 0;var/** @type {?} */minFraction=void 0;var/** @type {?} */maxFraction=void 0;if(style!==NumberFormatStyle.Currency){// rely on Intl default for currency
minInt=1;minFraction=0;maxFraction=3;}if(digits){var/** @type {?} */parts=digits.match(_NUMBER_FORMAT_REGEXP);if(parts===null){throw new Error(digits+' is not a valid digit info for number pipes');}if(parts[1]!=null){minInt=NumberWrapper.parseIntAutoRadix(parts[1]);}if(parts[3]!=null){minFraction=NumberWrapper.parseIntAutoRadix(parts[3]);}if(parts[5]!=null){maxFraction=NumberWrapper.parseIntAutoRadix(parts[5]);}}return NumberFormatter.format(/** @type {?} */value,locale,style,{minimumIntegerDigits:minInt,minimumFractionDigits:minFraction,maximumFractionDigits:maxFraction,currency:currency,currencyAsSymbol:currencyAsSymbol});}/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a number according to locale rules.
 * \@howToUse `number_expression | number[:digitInfo]`
 *
 * Formats a number as text. Group sizing and separator and other locale-specific
 * configurations are based on the active locale.
 *
 * where `expression` is a number:
 *  - `digitInfo` is a `string` which has a following format: <br>
 *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>
 *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.
 *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.
 *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.
 *
 * For more information on the acceptable range for each of these numbers and other
 * details see your native internationalization library.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See {\@linkDocs guide/browser-support} for details.
 *
 * ### Example
 *
 * {\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}
 *
 * \@stable
 */var DecimalPipe=function(){/**
     * @param {?} _locale
     */function DecimalPipe(_locale){_classCallCheck(this,DecimalPipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} digits
     * @return {?}
     */_createClass(DecimalPipe,[{key:'transform',value:function transform(value){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return formatNumber(DecimalPipe,this._locale,value,NumberFormatStyle.Decimal,digits);}}]);return DecimalPipe;}();DecimalPipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'number'}]}];/** @nocollapse */DecimalPipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_4" /* LOCALE_ID */]]}]}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a number as a percentage according to locale rules.
 * \@howToUse `number_expression | percent[:digitInfo]`
 *
 * \@description
 *
 * Formats a number as percentage.
 *
 * - `digitInfo` See {\@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See {\@linkDocs guide/browser-support} for details.
 *
 * ### Example
 *
 * {\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}
 *
 * \@stable
 */var PercentPipe=function(){/**
     * @param {?} _locale
     */function PercentPipe(_locale){_classCallCheck(this,PercentPipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} digits
     * @return {?}
     */_createClass(PercentPipe,[{key:'transform',value:function transform(value){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return formatNumber(PercentPipe,this._locale,value,NumberFormatStyle.Percent,digits);}}]);return PercentPipe;}();PercentPipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'percent'}]}];/** @nocollapse */PercentPipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_4" /* LOCALE_ID */]]}]}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a number as currency using locale rules.
 * \@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`
 * \@description
 *
 * Use `currency` to format a number as currency.
 *
 * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such
 *    as `USD` for the US dollar and `EUR` for the euro.
 * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.
 *   - `true`: use symbol (e.g. `$`).
 *   - `false`(default): use code (e.g. `USD`).
 * - `digitInfo` See {\@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See {\@linkDocs guide/browser-support} for details.
 *
 * ### Example
 *
 * {\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}
 *
 * \@stable
 */var CurrencyPipe=function(){/**
     * @param {?} _locale
     */function CurrencyPipe(_locale){_classCallCheck(this,CurrencyPipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} currencyCode
     * @param {?=} symbolDisplay
     * @param {?=} digits
     * @return {?}
     */_createClass(CurrencyPipe,[{key:'transform',value:function transform(value){var currencyCode=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'USD';var symbolDisplay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var digits=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;return formatNumber(CurrencyPipe,this._locale,value,NumberFormatStyle.Currency,digits,currencyCode,symbolDisplay);}}]);return CurrencyPipe;}();CurrencyPipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'currency'}]}];/** @nocollapse */CurrencyPipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_4" /* LOCALE_ID */]]}]}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Creates a new List or String containing a subset (slice) of the elements.
 * \@howToUse `array_or_string_expression | slice:start[:end]`
 * \@description
 *
 * Where the input expression is a `List` or `String`, and:
 * - `start`: The starting index of the subset to return.
 *   - **a positive integer**: return the item at `start` index and all items after
 *     in the list or string expression.
 *   - **a negative integer**: return the item at `start` index from the end and all items after
 *     in the list or string expression.
 *   - **if positive and greater than the size of the expression**: return an empty list or string.
 *   - **if negative and greater than the size of the expression**: return entire list or string.
 * - `end`: The ending index of the subset to return.
 *   - **omitted**: return all items until the end.
 *   - **if positive**: return all items before `end` index of the list or string.
 *   - **if negative**: return all items before `end` index from the end of the list or string.
 *
 * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`
 * and `String.prototype.slice()`.
 *
 * When operating on a [List], the returned list is always a copy even when all
 * the elements are being returned.
 *
 * When operating on a blank value, the pipe returns the blank value.
 *
 * ## List Example
 *
 * This `ngFor` example:
 *
 * {\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}
 *
 * produces the following:
 *
 *     <li>b</li>
 *     <li>c</li>
 *
 * ## String Examples
 *
 * {\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}
 *
 * \@stable
 */var SlicePipe=function(){function SlicePipe(){_classCallCheck(this,SlicePipe);}_createClass(SlicePipe,[{key:'transform',/**
     * @param {?} value
     * @param {?} start
     * @param {?=} end
     * @return {?}
     */value:function transform(value,start,end){if(value==null)return value;if(!this.supports(value)){throw invalidPipeArgumentError(SlicePipe,value);}return value.slice(start,end);}/**
     * @param {?} obj
     * @return {?}
     */},{key:'supports',value:function supports(obj){return typeof obj==='string'||Array.isArray(obj);}}]);return SlicePipe;}();SlicePipe.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */],args:[{name:'slice',pure:false}]}];/** @nocollapse */SlicePipe.ctorParameters=function(){return[];};/**
 * A collection of Angular pipes that are likely to be used in each and every application.
 */var/** @type {?} */COMMON_PIPES=[AsyncPipe,UpperCasePipe,LowerCasePipe,JsonPipe,SlicePipe,DecimalPipe,PercentPipe,TitleCasePipe,CurrencyPipe,DatePipe,I18nPluralPipe,I18nSelectPipe];/**
 * The module that includes all the basic Angular directives like {\@link NgIf}, {\@link NgForOf}, ...
 *
 * \@stable
 */var CommonModule=function CommonModule(){_classCallCheck(this,CommonModule);};CommonModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */],args:[{declarations:[COMMON_DIRECTIVES,COMMON_PIPES],exports:[COMMON_DIRECTIVES,COMMON_PIPES],providers:[{provide:NgLocalization,useClass:NgLocaleLocalization}]}]}];/** @nocollapse */CommonModule.ctorParameters=function(){return[];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */PLATFORM_BROWSER_ID='browser';var/** @type {?} */PLATFORM_SERVER_ID='server';var/** @type {?} */PLATFORM_WORKER_APP_ID='browserWorkerApp';var/** @type {?} */PLATFORM_WORKER_UI_ID='browserWorkerUi';/**
 * Returns whether a platform id represents a browser platform.
 * \@experimental
 * @param {?} platformId
 * @return {?}
 */function isPlatformBrowser(platformId){return platformId===PLATFORM_BROWSER_ID;}/**
 * Returns whether a platform id represents a server platform.
 * \@experimental
 * @param {?} platformId
 * @return {?}
 */function isPlatformServer(platformId){return platformId===PLATFORM_SERVER_ID;}/**
 * Returns whether a platform id represents a web worker app platform.
 * \@experimental
 * @param {?} platformId
 * @return {?}
 */function isPlatformWorkerApp(platformId){return platformId===PLATFORM_WORKER_APP_ID;}/**
 * Returns whether a platform id represents a web worker UI platform.
 * \@experimental
 * @param {?} platformId
 * @return {?}
 */function isPlatformWorkerUi(platformId){return platformId===PLATFORM_WORKER_UI_ID;}/**
 * @stable
 */var/** @type {?} */VERSION=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["M" /* Version */]('4.0.0-rc.1');

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(31)))

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_break_points_provider__ = __webpack_require__(70);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BreakPointRegistry; });


/**
 * Registry of 1..n MediaQuery breakpoint ranges
 * This is published as a provider and may be overriden from custom, application-specific ranges
 *
 */
var BreakPointRegistry = (function () {
    function BreakPointRegistry(_registry) {
        this._registry = _registry;
    }
    Object.defineProperty(BreakPointRegistry.prototype, "items", {
        /**
         * Accessor to raw list
         */
        get: function () {
            return this._registry.slice();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Search breakpoints by alias (e.g. gt-xs)
     */
    BreakPointRegistry.prototype.findByAlias = function (alias) {
        return this._registry.find(function (bp) { return bp.alias == alias; });
    };
    BreakPointRegistry.prototype.findByQuery = function (query) {
        return this._registry.find(function (bp) { return bp.mediaQuery == query; });
    };
    Object.defineProperty(BreakPointRegistry.prototype, "overlappings", {
        /**
         * Get all the breakpoints whose ranges could overlapping `normal` ranges;
         * e.g. gt-sm overlaps md, lg, and xl
         */
        get: function () {
            return this._registry.filter(function (it) { return it.overlapping == true; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BreakPointRegistry.prototype, "aliases", {
        /**
         * Get list of all registered (non-empty) breakpoint aliases
         */
        get: function () {
            return this._registry.map(function (it) { return it.alias; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BreakPointRegistry.prototype, "suffixes", {
        /**
         * Aliases are mapped to properties using suffixes
         * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'
         * for property layoutGtSM.
         */
        get: function () {
            return this._registry.map(function (it) { return it.suffix; });
        },
        enumerable: true,
        configurable: true
    });
    BreakPointRegistry.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
    ];
    /** @nocollapse */
    BreakPointRegistry.ctorParameters = function () { return [
        { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [__WEBPACK_IMPORTED_MODULE_1__providers_break_points_provider__["b" /* BREAKPOINTS */],] },] },
    ]; };
    return BreakPointRegistry;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/breakpoints/break-point-registry.js.map

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_filter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_filter__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__media_change__ = __webpack_require__(104);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MatchMedia; });





/**
 * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to
 * convert mediaQuery change callbacks to subscriber notifications. These notifications will be
 * performed within the ng Zone to trigger change detections and component updates.
 *
 * NOTE: both mediaQuery activations and de-activations are announced in notifications
 */
var MatchMedia = (function () {
    function MatchMedia(_zone) {
        this._zone = _zone;
        this._registry = new Map();
        this._source = new __WEBPACK_IMPORTED_MODULE_1_rxjs_BehaviorSubject__["BehaviorSubject"](new __WEBPACK_IMPORTED_MODULE_4__media_change__["a" /* MediaChange */](true));
        this._observable$ = this._source.asObservable();
    }
    /**
     * For the specified mediaQuery?
     */
    MatchMedia.prototype.isActive = function (mediaQuery) {
        if (this._registry.has(mediaQuery)) {
            var mql = this._registry.get(mediaQuery);
            return mql.matches;
        }
        return false;
    };
    /**
     * External observers can watch for all (or a specific) mql changes.
     * Typically used by the MediaQueryAdaptor; optionally available to components
     * who wish to use the MediaMonitor as mediaMonitor$ observable service.
     *
     * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will
     *       be announced.
     */
    MatchMedia.prototype.observe = function (mediaQuery) {
        this.registerQuery(mediaQuery);
        return this._observable$.filter(function (change) {
            return mediaQuery ? (change.mediaQuery === mediaQuery) : true;
        });
    };
    /**
     * Based on the BreakPointRegistry provider, register internal listeners for each unique
     * mediaQuery. Each listener emits specific MediaChange data to observers
     */
    MatchMedia.prototype.registerQuery = function (mediaQuery) {
        var _this = this;
        if (mediaQuery) {
            var mql = this._registry.get(mediaQuery);
            var onMQLEvent = function (e) {
                _this._zone.run(function () {
                    var change = new __WEBPACK_IMPORTED_MODULE_4__media_change__["a" /* MediaChange */](e.matches, mediaQuery);
                    _this._source.next(change);
                });
            };
            if (!mql) {
                mql = this._buildMQL(mediaQuery);
                mql.addListener(onMQLEvent);
                this._registry.set(mediaQuery, mql);
            }
            if (mql.matches) {
                onMQLEvent(mql); // Announce activate range for initial subscribers
            }
        }
    };
    /**
     * Call window.matchMedia() to build a MediaQueryList; which
     * supports 0..n listeners for activation/deactivation
     */
    MatchMedia.prototype._buildMQL = function (query) {
        prepareQueryCSS(query);
        var canListen = !!window.matchMedia('all').addListener;
        return canListen ? window.matchMedia(query) : {
            matches: query === 'all' || query === '',
            media: query,
            addListener: function () {
            },
            removeListener: function () {
            }
        };
    };
    MatchMedia.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
    ];
    /** @nocollapse */
    MatchMedia.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    ]; };
    return MatchMedia;
}());
/**
 * Private global registry for all dynamically-created, injected style tags
 * @see prepare(query)
 */
var ALL_STYLES = {};
/**
 * For Webkit engines that only trigger the MediaQueryListListener
 * when there is at least one CSS selector for the respective media query.
 *
 * @param query string The mediaQuery used to create a faux CSS selector
 *
 */
function prepareQueryCSS(query) {
    if (!ALL_STYLES[query]) {
        try {
            var style = document.createElement('style');
            style.setAttribute('type', 'text/css');
            if (!style['styleSheet']) {
                var cssText = "@media " + query + " {.fx-query-test{ }}";
                style.appendChild(document.createTextNode(cssText));
            }
            document.getElementsByTagName('head')[0].appendChild(style);
            // Store in private global registry
            ALL_STYLES[query] = style;
        }
        catch (e) {
            console.error(e);
        }
    }
}
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/match-media.js.map

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__ = __webpack_require__(34);
/* unused harmony export BrowserXhr */
/* unused harmony export JSONPBackend */
/* unused harmony export JSONPConnection */
/* unused harmony export CookieXSRFStrategy */
/* unused harmony export XHRBackend */
/* unused harmony export XHRConnection */
/* unused harmony export BaseRequestOptions */
/* unused harmony export RequestOptions */
/* unused harmony export BaseResponseOptions */
/* unused harmony export ResponseOptions */
/* unused harmony export ReadyState */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return RequestMethod; });
/* unused harmony export ResponseContentType */
/* unused harmony export ResponseType */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Headers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Http; });
/* unused harmony export Jsonp */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HttpModule; });
/* unused harmony export JsonpModule */
/* unused harmony export Connection */
/* unused harmony export ConnectionBackend */
/* unused harmony export XSRFStrategy */
/* unused harmony export Request */
/* unused harmony export Response */
/* unused harmony export QueryEncoder */
/* unused harmony export URLSearchParams */
/* unused harmony export VERSION */
/* unused harmony export ɵg */
/* unused harmony export ɵa */
/* unused harmony export ɵe */
/* unused harmony export ɵb */
/* unused harmony export ɵc */
/* unused harmony export ɵd */
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * A backend for http that uses the `XMLHttpRequest` browser API.
 *
 * Take care not to evaluate this in non-browser contexts.
 *
 * \@experimental
 */var BrowserXhr=function(){function BrowserXhr(){_classCallCheck(this,BrowserXhr);}/**
     * @return {?}
     */_createClass(BrowserXhr,[{key:'build',value:function build(){return new XMLHttpRequest();}}]);return BrowserXhr;}();BrowserXhr.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */BrowserXhr.ctorParameters=function(){return[];};var RequestMethod={};RequestMethod.Get=0;RequestMethod.Post=1;RequestMethod.Put=2;RequestMethod.Delete=3;RequestMethod.Options=4;RequestMethod.Head=5;RequestMethod.Patch=6;RequestMethod[RequestMethod.Get]="Get";RequestMethod[RequestMethod.Post]="Post";RequestMethod[RequestMethod.Put]="Put";RequestMethod[RequestMethod.Delete]="Delete";RequestMethod[RequestMethod.Options]="Options";RequestMethod[RequestMethod.Head]="Head";RequestMethod[RequestMethod.Patch]="Patch";var ReadyState={};ReadyState.Unsent=0;ReadyState.Open=1;ReadyState.HeadersReceived=2;ReadyState.Loading=3;ReadyState.Done=4;ReadyState.Cancelled=5;ReadyState[ReadyState.Unsent]="Unsent";ReadyState[ReadyState.Open]="Open";ReadyState[ReadyState.HeadersReceived]="HeadersReceived";ReadyState[ReadyState.Loading]="Loading";ReadyState[ReadyState.Done]="Done";ReadyState[ReadyState.Cancelled]="Cancelled";var ResponseType={};ResponseType.Basic=0;ResponseType.Cors=1;ResponseType.Default=2;ResponseType.Error=3;ResponseType.Opaque=4;ResponseType[ResponseType.Basic]="Basic";ResponseType[ResponseType.Cors]="Cors";ResponseType[ResponseType.Default]="Default";ResponseType[ResponseType.Error]="Error";ResponseType[ResponseType.Opaque]="Opaque";var ContentType={};ContentType.NONE=0;ContentType.JSON=1;ContentType.FORM=2;ContentType.FORM_DATA=3;ContentType.TEXT=4;ContentType.BLOB=5;ContentType.ARRAY_BUFFER=6;ContentType[ContentType.NONE]="NONE";ContentType[ContentType.JSON]="JSON";ContentType[ContentType.FORM]="FORM";ContentType[ContentType.FORM_DATA]="FORM_DATA";ContentType[ContentType.TEXT]="TEXT";ContentType[ContentType.BLOB]="BLOB";ContentType[ContentType.ARRAY_BUFFER]="ARRAY_BUFFER";var ResponseContentType={};ResponseContentType.Text=0;ResponseContentType.Json=1;ResponseContentType.ArrayBuffer=2;ResponseContentType.Blob=3;ResponseContentType[ResponseContentType.Text]="Text";ResponseContentType[ResponseContentType.Json]="Json";ResponseContentType[ResponseContentType.ArrayBuffer]="ArrayBuffer";ResponseContentType[ResponseContentType.Blob]="Blob";/**
 * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as
 * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).
 *
 * The only known difference between this `Headers` implementation and the spec is the
 * lack of an `entries` method.
 *
 * ### Example
 *
 * ```
 * import {Headers} from '\@angular/http';
 *
 * var firstHeaders = new Headers();
 * firstHeaders.append('Content-Type', 'image/jpeg');
 * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'
 *
 * // Create headers from Plain Old JavaScript Object
 * var secondHeaders = new Headers({
 *   'X-My-Custom-Header': 'Angular'
 * });
 * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'
 *
 * var thirdHeaders = new Headers(secondHeaders);
 * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'
 * ```
 *
 * \@experimental
 */var Headers=function(){/**
     * @param {?=} headers
     */function Headers(headers){var _this=this;_classCallCheck(this,Headers);/** @internal header names are lower case */this._headers=new Map();/** @internal map lower case names to actual names */this._normalizedNames=new Map();if(!headers){return;}if(headers instanceof Headers){headers.forEach(function(values,name){values.forEach(function(value){return _this.append(name,value);});});return;}Object.keys(headers).forEach(function(name){var values=Array.isArray(headers[name])?headers[name]:[headers[name]];_this.delete(name);values.forEach(function(value){return _this.append(name,value);});});}/**
     * Returns a new Headers instance from the given DOMString of Response Headers
     * @param {?} headersString
     * @return {?}
     */_createClass(Headers,[{key:'append',/**
     * Appends a header to existing list of header values for a given header name.
     * @param {?} name
     * @param {?} value
     * @return {?}
     */value:function append(name,value){var/** @type {?} */values=this.getAll(name);if(values===null){this.set(name,value);}else{values.push(value);}}/**
     * Deletes all header values for the given name.
     * @param {?} name
     * @return {?}
     */},{key:'delete',value:function _delete(name){var/** @type {?} */lcName=name.toLowerCase();this._normalizedNames.delete(lcName);this._headers.delete(lcName);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEach',value:function forEach(fn){var _this2=this;this._headers.forEach(function(values,lcName){return fn(values,_this2._normalizedNames.get(lcName),_this2._headers);});}/**
     * Returns first header that matches given name.
     * @param {?} name
     * @return {?}
     */},{key:'get',value:function get(name){var/** @type {?} */values=this.getAll(name);if(values===null){return null;}return values.length>0?values[0]:null;}/**
     * Checks for existence of header by given name.
     * @param {?} name
     * @return {?}
     */},{key:'has',value:function has(name){return this._headers.has(name.toLowerCase());}/**
     * Returns the names of the headers
     * @return {?}
     */},{key:'keys',value:function keys(){return Array.from(this._normalizedNames.values());}/**
     * Sets or overrides header value for given name.
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(name,value){if(Array.isArray(value)){if(value.length){this._headers.set(name.toLowerCase(),[value.join(',')]);}}else{this._headers.set(name.toLowerCase(),[value]);}this.mayBeSetNormalizedName(name);}/**
     * Returns values of all headers.
     * @return {?}
     */},{key:'values',value:function values(){return Array.from(this._headers.values());}/**
     * @return {?}
     */},{key:'toJSON',value:function toJSON(){var _this3=this;var/** @type {?} */serialized={};this._headers.forEach(function(values,name){var/** @type {?} */split=[];values.forEach(function(v){return split.push.apply(split,_toConsumableArray(v.split(',')));});serialized[_this3._normalizedNames.get(name)]=split;});return serialized;}/**
     * Returns list of header values for a given name.
     * @param {?} name
     * @return {?}
     */},{key:'getAll',value:function getAll(name){return this.has(name)?this._headers.get(name.toLowerCase()):null;}/**
     * This method is not implemented.
     * @return {?}
     */},{key:'entries',value:function entries(){throw new Error('"entries" method is not implemented on Headers class');}/**
     * @param {?} name
     * @return {?}
     */},{key:'mayBeSetNormalizedName',value:function mayBeSetNormalizedName(name){var/** @type {?} */lcName=name.toLowerCase();if(!this._normalizedNames.has(lcName)){this._normalizedNames.set(lcName,name);}}}],[{key:'fromResponseHeaderString',value:function fromResponseHeaderString(headersString){var/** @type {?} */headers=new Headers();headersString.split('\n').forEach(function(line){var/** @type {?} */index=line.indexOf(':');if(index>0){var/** @type {?} */name=line.slice(0,index);var/** @type {?} */value=line.slice(index+1).trim();headers.set(name,value);}});return headers;}}]);return Headers;}();/**
 * Creates a response options object to be optionally provided when instantiating a
 * {\@link Response}.
 *
 * This class is based on the `ResponseInit` description in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#responseinit).
 *
 * All values are null by default. Typical defaults can be found in the
 * {\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.
 *
 * This class may be used in tests to build {\@link Response Responses} for
 * mock responses (see {\@link MockBackend}).
 *
 * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))
 *
 * ```typescript
 * import {ResponseOptions, Response} from '\@angular/http';
 *
 * var options = new ResponseOptions({
 *   body: '{"name":"Jeff"}'
 * });
 * var res = new Response(options);
 *
 * console.log('res.json():', res.json()); // Object {name: "Jeff"}
 * ```
 *
 * \@experimental
 */var ResponseOptions=function(){/**
     * @param {?=} __0
     */function ResponseOptions(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},body=_ref.body,status=_ref.status,headers=_ref.headers,statusText=_ref.statusText,type=_ref.type,url=_ref.url;_classCallCheck(this,ResponseOptions);this.body=body!=null?body:null;this.status=status!=null?status:null;this.headers=headers!=null?headers:null;this.statusText=statusText!=null?statusText:null;this.type=type!=null?type:null;this.url=url!=null?url:null;}/**
     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to
     * override
     * existing values. This method will not change the values of the instance on which it is being
     * called.
     *
     * This may be useful when sharing a base `ResponseOptions` object inside tests,
     * where certain properties may change from test to test.
     *
     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))
     *
     * ```typescript
     * import {ResponseOptions, Response} from '\@angular/http';
     *
     * var options = new ResponseOptions({
     *   body: {name: 'Jeff'}
     * });
     * var res = new Response(options.merge({
     *   url: 'https://google.com'
     * }));
     * console.log('options.url:', options.url); // null
     * console.log('res.json():', res.json()); // Object {name: "Jeff"}
     * console.log('res.url:', res.url); // https://google.com
     * ```
     * @param {?=} options
     * @return {?}
     */_createClass(ResponseOptions,[{key:'merge',value:function merge(options){return new ResponseOptions({body:options&&options.body!=null?options.body:this.body,status:options&&options.status!=null?options.status:this.status,headers:options&&options.headers!=null?options.headers:this.headers,statusText:options&&options.statusText!=null?options.statusText:this.statusText,type:options&&options.type!=null?options.type:this.type,url:options&&options.url!=null?options.url:this.url});}}]);return ResponseOptions;}();/**
 * Subclass of {\@link ResponseOptions}, with default values.
 *
 * Default values:
 *  * status: 200
 *  * headers: empty {\@link Headers} object
 *
 * This class could be extended and bound to the {\@link ResponseOptions} class
 * when configuring an {\@link Injector}, in order to override the default options
 * used by {\@link Http} to create {\@link Response Responses}.
 *
 * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))
 *
 * ```typescript
 * import {provide} from '\@angular/core';
 * import {bootstrap} from '\@angular/platform-browser/browser';
 * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from
 * '\@angular/http';
 * import {App} from './myapp';
 *
 * class MyOptions extends BaseResponseOptions {
 *   headers:Headers = new Headers({network: 'github'});
 * }
 *
 * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);
 * ```
 *
 * The options could also be extended when manually creating a {\@link Response}
 * object.
 *
 * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))
 *
 * ```
 * import {BaseResponseOptions, Response} from '\@angular/http';
 *
 * var options = new BaseResponseOptions();
 * var res = new Response(options.merge({
 *   body: 'Angular',
 *   headers: new Headers({framework: 'angular'})
 * }));
 * console.log('res.headers.get("framework"):', res.headers.get('framework')); // angular
 * console.log('res.text():', res.text()); // Angular;
 * ```
 *
 * \@experimental
 */var BaseResponseOptions=function(_ResponseOptions){_inherits(BaseResponseOptions,_ResponseOptions);function BaseResponseOptions(){_classCallCheck(this,BaseResponseOptions);return _possibleConstructorReturn(this,(BaseResponseOptions.__proto__||Object.getPrototypeOf(BaseResponseOptions)).call(this,{status:200,statusText:'Ok',type:ResponseType.Default,headers:new Headers()}));}return BaseResponseOptions;}(ResponseOptions);BaseResponseOptions.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */BaseResponseOptions.ctorParameters=function(){return[];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * Abstract class from which real backends are derived.
 *
 * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given
 * {\@link Request}.
 *
 * \@experimental
 * @abstract
 */var ConnectionBackend=function(){function ConnectionBackend(){_classCallCheck(this,ConnectionBackend);}_createClass(ConnectionBackend,[{key:'createConnection',/**
     * @abstract
     * @param {?} request
     * @return {?}
     */value:function createConnection(request){}}]);return ConnectionBackend;}();/**
 * Abstract class from which real connections are derived.
 *
 * \@experimental
 * @abstract
 */var Connection=function Connection(){_classCallCheck(this,Connection);};/**
 * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.
 *
 * \@experimental
 * @abstract
 */var XSRFStrategy=function(){function XSRFStrategy(){_classCallCheck(this,XSRFStrategy);}_createClass(XSRFStrategy,[{key:'configureRequest',/**
     * @abstract
     * @param {?} req
     * @return {?}
     */value:function configureRequest(req){}}]);return XSRFStrategy;}();/**
 * @param {?} method
 * @return {?}
 */function normalizeMethodName(method){if(typeof method!=='string')return method;switch(method.toUpperCase()){case'GET':return RequestMethod.Get;case'POST':return RequestMethod.Post;case'PUT':return RequestMethod.Put;case'DELETE':return RequestMethod.Delete;case'OPTIONS':return RequestMethod.Options;case'HEAD':return RequestMethod.Head;case'PATCH':return RequestMethod.Patch;}throw new Error('Invalid request method. The method "'+method+'" is not supported.');}var/** @type {?} */isSuccess=function isSuccess(status){return status>=200&&status<300;};/**
 * @param {?} xhr
 * @return {?}
 */function getResponseURL(xhr){if('responseURL'in xhr){return xhr.responseURL;}if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){return xhr.getResponseHeader('X-Request-URL');}return;}/**
 * @param {?} input
 * @return {?}
 */function stringToArrayBuffer(input){var/** @type {?} */view=new Uint16Array(input.length);for(var/** @type {?} */i=0,/** @type {?} */strLen=input.length;i<strLen;i++){view[i]=input.charCodeAt(i);}return view.buffer;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 * @param {?=} rawParams
 * @return {?}
 */function paramParser(){var rawParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var/** @type {?} */map=new Map();if(rawParams.length>0){var/** @type {?} */params=rawParams.split('&');params.forEach(function(param){var/** @type {?} */eqIdx=param.indexOf('=');var _ref2=eqIdx==-1?[param,'']:[param.slice(0,eqIdx),param.slice(eqIdx+1)],_ref3=_slicedToArray(_ref2,2),key=_ref3[0],val=_ref3[1];var/** @type {?} */list=map.get(key)||[];list.push(val);map.set(key,list);});}return map;}/**
 * \@experimental
 *
 */var QueryEncoder=function(){function QueryEncoder(){_classCallCheck(this,QueryEncoder);}_createClass(QueryEncoder,[{key:'encodeKey',/**
     * @param {?} k
     * @return {?}
     */value:function encodeKey(k){return standardEncoding(k);}/**
     * @param {?} v
     * @return {?}
     */},{key:'encodeValue',value:function encodeValue(v){return standardEncoding(v);}}]);return QueryEncoder;}();/**
 * @param {?} v
 * @return {?}
 */function standardEncoding(v){return encodeURIComponent(v).replace(/%40/gi,'@').replace(/%3A/gi,':').replace(/%24/gi,'$').replace(/%2C/gi,',').replace(/%3B/gi,';').replace(/%2B/gi,'+').replace(/%3D/gi,'=').replace(/%3F/gi,'?').replace(/%2F/gi,'/');}/**
 * Map-like representation of url search parameters, based on
 * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,
 * with several extensions for merging URLSearchParams objects:
 *   - setAll()
 *   - appendAll()
 *   - replaceAll()
 *
 * This class accepts an optional second parameter of ${\@link QueryEncoder},
 * which is used to serialize parameters before making a request. By default,
 * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,
 * and then un-encodes certain characters that are allowed to be part of the query
 * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.
 *
 * These are the characters that are not encoded: `! $ \' ( ) * + , ; A 9 - . _ ~ ? /`
 *
 * If the set of allowed query characters is not acceptable for a particular backend,
 * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.
 *
 * ```
 * import {URLSearchParams, QueryEncoder} from '\@angular/http';
 * class MyQueryEncoder extends QueryEncoder {
 *   encodeKey(k: string): string {
 *     return myEncodingFunction(k);
 *   }
 *
 *   encodeValue(v: string): string {
 *     return myEncodingFunction(v);
 *   }
 * }
 *
 * let params = new URLSearchParams('', new MyQueryEncoder());
 * ```
 * \@experimental
 */var URLSearchParams=function(){/**
     * @param {?=} rawParams
     * @param {?=} queryEncoder
     */function URLSearchParams(){var rawParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var queryEncoder=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new QueryEncoder();_classCallCheck(this,URLSearchParams);this.rawParams=rawParams;this.queryEncoder=queryEncoder;this.paramsMap=paramParser(rawParams);}/**
     * @return {?}
     */_createClass(URLSearchParams,[{key:'clone',value:function clone(){var/** @type {?} */clone=new URLSearchParams('',this.queryEncoder);clone.appendAll(this);return clone;}/**
     * @param {?} param
     * @return {?}
     */},{key:'has',value:function has(param){return this.paramsMap.has(param);}/**
     * @param {?} param
     * @return {?}
     */},{key:'get',value:function get(param){var/** @type {?} */storedParam=this.paramsMap.get(param);return Array.isArray(storedParam)?storedParam[0]:null;}/**
     * @param {?} param
     * @return {?}
     */},{key:'getAll',value:function getAll(param){return this.paramsMap.get(param)||[];}/**
     * @param {?} param
     * @param {?} val
     * @return {?}
     */},{key:'set',value:function set(param,val){if(val===void 0||val===null){this.delete(param);return;}var/** @type {?} */list=this.paramsMap.get(param)||[];list.length=0;list.push(val);this.paramsMap.set(param,list);}/**
     * @param {?} searchParams
     * @return {?}
     */},{key:'setAll',value:function setAll(searchParams){var _this5=this;searchParams.paramsMap.forEach(function(value,param){var/** @type {?} */list=_this5.paramsMap.get(param)||[];list.length=0;list.push(value[0]);_this5.paramsMap.set(param,list);});}/**
     * @param {?} param
     * @param {?} val
     * @return {?}
     */},{key:'append',value:function append(param,val){if(val===void 0||val===null)return;var/** @type {?} */list=this.paramsMap.get(param)||[];list.push(val);this.paramsMap.set(param,list);}/**
     * @param {?} searchParams
     * @return {?}
     */},{key:'appendAll',value:function appendAll(searchParams){var _this6=this;searchParams.paramsMap.forEach(function(value,param){var/** @type {?} */list=_this6.paramsMap.get(param)||[];for(var/** @type {?} */i=0;i<value.length;++i){list.push(value[i]);}_this6.paramsMap.set(param,list);});}/**
     * @param {?} searchParams
     * @return {?}
     */},{key:'replaceAll',value:function replaceAll(searchParams){var _this7=this;searchParams.paramsMap.forEach(function(value,param){var/** @type {?} */list=_this7.paramsMap.get(param)||[];list.length=0;for(var/** @type {?} */i=0;i<value.length;++i){list.push(value[i]);}_this7.paramsMap.set(param,list);});}/**
     * @return {?}
     */},{key:'toString',value:function toString(){var _this8=this;var/** @type {?} */paramsList=[];this.paramsMap.forEach(function(values,k){values.forEach(function(v){return paramsList.push(_this8.queryEncoder.encodeKey(k)+'='+_this8.queryEncoder.encodeValue(v));});});return paramsList.join('&');}/**
     * @param {?} param
     * @return {?}
     */},{key:'delete',value:function _delete(param){this.paramsMap.delete(param);}}]);return URLSearchParams;}();/**
 * HTTP request body used by both {\@link Request} and {\@link Response}
 * https://fetch.spec.whatwg.org/#body
 * @abstract
 */var Body=function(){function Body(){_classCallCheck(this,Body);}_createClass(Body,[{key:'json',/**
     * Attempts to return body as parsed `JSON` object, or raises an exception.
     * @return {?}
     */value:function json(){if(typeof this._body==='string'){return JSON.parse(/** @type {?} */this._body);}if(this._body instanceof ArrayBuffer){return JSON.parse(this.text());}return this._body;}/**
     * Returns the body as a string, presuming `toString()` can be called on the response body.
     * @return {?}
     */},{key:'text',value:function text(){if(this._body instanceof URLSearchParams){return this._body.toString();}if(this._body instanceof ArrayBuffer){return String.fromCharCode.apply(null,new Uint16Array(/** @type {?} */this._body));}if(this._body==null){return'';}if(_typeof(this._body)==='object'){return JSON.stringify(this._body,null,2);}return this._body.toString();}/**
     * Return the body as an ArrayBuffer
     * @return {?}
     */},{key:'arrayBuffer',value:function arrayBuffer(){if(this._body instanceof ArrayBuffer){return this._body;}return stringToArrayBuffer(this.text());}/**
     * Returns the request's body as a Blob, assuming that body exists.
     * @return {?}
     */},{key:'blob',value:function blob(){if(this._body instanceof Blob){return this._body;}if(this._body instanceof ArrayBuffer){return new Blob([this._body]);}throw new Error('The request body isn\'t either a blob or an array buffer');}}]);return Body;}();/**
 * Creates `Response` instances from provided values.
 *
 * Though this object isn't
 * usually instantiated by end-users, it is the primary object interacted with when it comes time to
 * add data to a view.
 *
 * ### Example
 *
 * ```
 * http.request('my-friends.txt').subscribe(response => this.friends = response.text());
 * ```
 *
 * The Response's interface is inspired by the Response constructor defined in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body
 * can be accessed many times. There are other differences in the implementation, but this is the
 * most significant.
 *
 * \@experimental
 */var Response=function(_Body){_inherits(Response,_Body);/**
     * @param {?} responseOptions
     */function Response(responseOptions){_classCallCheck(this,Response);var _this9=_possibleConstructorReturn(this,(Response.__proto__||Object.getPrototypeOf(Response)).call(this));_this9._body=responseOptions.body;_this9.status=responseOptions.status;_this9.ok=_this9.status>=200&&_this9.status<=299;_this9.statusText=responseOptions.statusText;_this9.headers=responseOptions.headers;_this9.type=responseOptions.type;_this9.url=responseOptions.url;return _this9;}/**
     * @return {?}
     */_createClass(Response,[{key:'toString',value:function toString(){return'Response with status: '+this.status+' '+this.statusText+' for URL: '+this.url;}}]);return Response;}(Body);var/** @type {?} */_nextRequestId=0;var/** @type {?} */JSONP_HOME='__ng_jsonp__';var/** @type {?} */_jsonpConnections=null;/**
 * @return {?}
 */function _getJsonpConnections(){var/** @type {?} */w=(typeof window==='undefined'?'undefined':_typeof(window))=='object'?window:{};if(_jsonpConnections===null){_jsonpConnections=w[JSONP_HOME]={};}return _jsonpConnections;}var BrowserJsonp=function(){function BrowserJsonp(){_classCallCheck(this,BrowserJsonp);}_createClass(BrowserJsonp,[{key:'build',/**
     * @param {?} url
     * @return {?}
     */value:function build(url){var/** @type {?} */node=document.createElement('script');node.src=url;return node;}/**
     * @return {?}
     */},{key:'nextRequestID',value:function nextRequestID(){return'__req'+_nextRequestId++;}/**
     * @param {?} id
     * @return {?}
     */},{key:'requestCallback',value:function requestCallback(id){return JSONP_HOME+'.'+id+'.finished';}/**
     * @param {?} id
     * @param {?} connection
     * @return {?}
     */},{key:'exposeConnection',value:function exposeConnection(id,connection){var/** @type {?} */connections=_getJsonpConnections();connections[id]=connection;}/**
     * @param {?} id
     * @return {?}
     */},{key:'removeConnection',value:function removeConnection(id){var/** @type {?} */connections=_getJsonpConnections();connections[id]=null;}/**
     * @param {?} node
     * @return {?}
     */},{key:'send',value:function send(node){document.body.appendChild(/** @type {?} */node);}/**
     * @param {?} node
     * @return {?}
     */},{key:'cleanup',value:function cleanup(node){if(node.parentNode){node.parentNode.removeChild(/** @type {?} */node);}}}]);return BrowserJsonp;}();BrowserJsonp.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */BrowserJsonp.ctorParameters=function(){return[];};var/** @type {?} */JSONP_ERR_NO_CALLBACK='JSONP injected script did not invoke callback.';var/** @type {?} */JSONP_ERR_WRONG_METHOD='JSONP requests must use GET request method.';/**
 * Abstract base class for an in-flight JSONP request.
 *
 * \@experimental
 * @abstract
 */var JSONPConnection=function(){function JSONPConnection(){_classCallCheck(this,JSONPConnection);}_createClass(JSONPConnection,[{key:'finished',/**
     * Callback called when the JSONP request completes, to notify the application
     * of the new data.
     * @abstract
     * @param {?=} data
     * @return {?}
     */value:function finished(data){}}]);return JSONPConnection;}();var JSONPConnection_=function(_JSONPConnection){_inherits(JSONPConnection_,_JSONPConnection);/**
     * @param {?} req
     * @param {?} _dom
     * @param {?=} baseResponseOptions
     */function JSONPConnection_(req,_dom,baseResponseOptions){_classCallCheck(this,JSONPConnection_);var _this10=_possibleConstructorReturn(this,(JSONPConnection_.__proto__||Object.getPrototypeOf(JSONPConnection_)).call(this));_this10._dom=_dom;_this10.baseResponseOptions=baseResponseOptions;_this10._finished=false;if(req.method!==RequestMethod.Get){throw new TypeError(JSONP_ERR_WRONG_METHOD);}_this10.request=req;_this10.response=new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function(responseObserver){_this10.readyState=ReadyState.Loading;var id=_this10._id=_dom.nextRequestID();_dom.exposeConnection(id,_this10);// Workaround Dart
// url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);
var callback=_dom.requestCallback(_this10._id);var url=req.url;if(url.indexOf('=JSONP_CALLBACK&')>-1){url=url.replace('=JSONP_CALLBACK&','='+callback+'&');}else if(url.lastIndexOf('=JSONP_CALLBACK')===url.length-'=JSONP_CALLBACK'.length){url=url.substring(0,url.length-'=JSONP_CALLBACK'.length)+('='+callback);}var script=_this10._script=_dom.build(url);var onLoad=function onLoad(event){if(_this10.readyState===ReadyState.Cancelled)return;_this10.readyState=ReadyState.Done;_dom.cleanup(script);if(!_this10._finished){var _responseOptions=new ResponseOptions({body:JSONP_ERR_NO_CALLBACK,type:ResponseType.Error,url:url});if(baseResponseOptions){_responseOptions=baseResponseOptions.merge(_responseOptions);}responseObserver.error(new Response(_responseOptions));return;}var responseOptions=new ResponseOptions({body:_this10._responseData,url:url});if(_this10.baseResponseOptions){responseOptions=_this10.baseResponseOptions.merge(responseOptions);}responseObserver.next(new Response(responseOptions));responseObserver.complete();};var onError=function onError(error){if(_this10.readyState===ReadyState.Cancelled)return;_this10.readyState=ReadyState.Done;_dom.cleanup(script);var responseOptions=new ResponseOptions({body:error.message,type:ResponseType.Error});if(baseResponseOptions){responseOptions=baseResponseOptions.merge(responseOptions);}responseObserver.error(new Response(responseOptions));};script.addEventListener('load',onLoad);script.addEventListener('error',onError);_dom.send(script);return function(){_this10.readyState=ReadyState.Cancelled;script.removeEventListener('load',onLoad);script.removeEventListener('error',onError);_this10._dom.cleanup(script);};});return _this10;}/**
     * @param {?=} data
     * @return {?}
     */_createClass(JSONPConnection_,[{key:'finished',value:function finished(data){// Don't leak connections
this._finished=true;this._dom.removeConnection(this._id);if(this.readyState===ReadyState.Cancelled)return;this._responseData=data;}}]);return JSONPConnection_;}(JSONPConnection);/**
 * A {\@link ConnectionBackend} that uses the JSONP strategy of making requests.
 *
 * \@experimental
 * @abstract
 */var JSONPBackend=function(_ConnectionBackend){_inherits(JSONPBackend,_ConnectionBackend);function JSONPBackend(){_classCallCheck(this,JSONPBackend);return _possibleConstructorReturn(this,(JSONPBackend.__proto__||Object.getPrototypeOf(JSONPBackend)).apply(this,arguments));}return JSONPBackend;}(ConnectionBackend);var JSONPBackend_=function(_JSONPBackend){_inherits(JSONPBackend_,_JSONPBackend);/**
     * @param {?} _browserJSONP
     * @param {?} _baseResponseOptions
     */function JSONPBackend_(_browserJSONP,_baseResponseOptions){_classCallCheck(this,JSONPBackend_);var _this12=_possibleConstructorReturn(this,(JSONPBackend_.__proto__||Object.getPrototypeOf(JSONPBackend_)).call(this));_this12._browserJSONP=_browserJSONP;_this12._baseResponseOptions=_baseResponseOptions;return _this12;}/**
     * @param {?} request
     * @return {?}
     */_createClass(JSONPBackend_,[{key:'createConnection',value:function createConnection(request){return new JSONPConnection_(request,this._browserJSONP,this._baseResponseOptions);}}]);return JSONPBackend_;}(JSONPBackend);JSONPBackend_.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */JSONPBackend_.ctorParameters=function(){return[{type:BrowserJsonp},{type:ResponseOptions}];};var/** @type {?} */XSSI_PREFIX=/^\)\]\}',?\n/;/**
 * Creates connections using `XMLHttpRequest`. Given a fully-qualified
 * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the
 * request.
 *
 * This class would typically not be created or interacted with directly inside applications, though
 * the {\@link MockConnection} may be interacted with in tests.
 *
 * \@experimental
 */var XHRConnection=function(){/**
     * @param {?} req
     * @param {?} browserXHR
     * @param {?=} baseResponseOptions
     */function XHRConnection(req,browserXHR,baseResponseOptions){var _this13=this;_classCallCheck(this,XHRConnection);this.request=req;this.response=new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function(responseObserver){var _xhr=browserXHR.build();_xhr.open(RequestMethod[req.method].toUpperCase(),req.url);if(req.withCredentials!=null){_xhr.withCredentials=req.withCredentials;}// load event handler
var onLoad=function onLoad(){// normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
var status=_xhr.status===1223?204:_xhr.status;var body=null;// HTTP 204 means no content
if(status!==204){// responseText is the old-school way of retrieving response (supported by IE8 & 9)
// response/responseType properties were introduced in ResourceLoader Level2 spec
// (supported by IE10)
body=typeof _xhr.response==='undefined'?_xhr.responseText:_xhr.response;// Implicitly strip a potential XSSI prefix.
if(typeof body==='string'){body=body.replace(XSSI_PREFIX,'');}}// fix status code when it is 0 (0 status is undocumented).
// Occurs when accessing file resources or on Android 4.1 stock browser
// while retrieving files from application cache.
if(status===0){status=body?200:0;}var headers=Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());// IE 9 does not provide the way to get URL of response
var url=getResponseURL(_xhr)||req.url;var statusText=_xhr.statusText||'OK';var responseOptions=new ResponseOptions({body:body,status:status,headers:headers,statusText:statusText,url:url});if(baseResponseOptions!=null){responseOptions=baseResponseOptions.merge(responseOptions);}var response=new Response(responseOptions);response.ok=isSuccess(status);if(response.ok){responseObserver.next(response);// TODO(gdi2290): defer complete if array buffer until done
responseObserver.complete();return;}responseObserver.error(response);};// error event handler
var onError=function onError(err){var responseOptions=new ResponseOptions({body:err,type:ResponseType.Error,status:_xhr.status,statusText:_xhr.statusText});if(baseResponseOptions!=null){responseOptions=baseResponseOptions.merge(responseOptions);}responseObserver.error(new Response(responseOptions));};_this13.setDetectedContentType(req,_xhr);if(req.headers==null){req.headers=new Headers();}if(!req.headers.has('Accept')){req.headers.append('Accept','application/json, text/plain, */*');}req.headers.forEach(function(values,name){return _xhr.setRequestHeader(name,values.join(','));});// Select the correct buffer type to store the response
if(req.responseType!=null&&_xhr.responseType!=null){switch(req.responseType){case ResponseContentType.ArrayBuffer:_xhr.responseType='arraybuffer';break;case ResponseContentType.Json:_xhr.responseType='json';break;case ResponseContentType.Text:_xhr.responseType='text';break;case ResponseContentType.Blob:_xhr.responseType='blob';break;default:throw new Error('The selected responseType is not supported');}}_xhr.addEventListener('load',onLoad);_xhr.addEventListener('error',onError);_xhr.send(_this13.request.getBody());return function(){_xhr.removeEventListener('load',onLoad);_xhr.removeEventListener('error',onError);_xhr.abort();};});}/**
     * @param {?} req
     * @param {?} _xhr
     * @return {?}
     */_createClass(XHRConnection,[{key:'setDetectedContentType',value:function setDetectedContentType(req/** TODO Request */,_xhr/** XMLHttpRequest */){// Skip if a custom Content-Type header is provided
if(req.headers!=null&&req.headers.get('Content-Type')!=null){return;}// Set the detected content type
switch(req.contentType){case ContentType.NONE:break;case ContentType.JSON:_xhr.setRequestHeader('content-type','application/json');break;case ContentType.FORM:_xhr.setRequestHeader('content-type','application/x-www-form-urlencoded;charset=UTF-8');break;case ContentType.TEXT:_xhr.setRequestHeader('content-type','text/plain');break;case ContentType.BLOB:var/** @type {?} */blob=req.blob();if(blob.type){_xhr.setRequestHeader('content-type',blob.type);}break;}}}]);return XHRConnection;}();/**
 * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application
 * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)
 * for more information on XSRF.
 *
 * Applications can configure custom cookie and header names by binding an instance of this class
 * with different `cookieName` and `headerName` values. See the main HTTP documentation for more
 * details.
 *
 * \@experimental
 */var CookieXSRFStrategy=function(){/**
     * @param {?=} _cookieName
     * @param {?=} _headerName
     */function CookieXSRFStrategy(){var _cookieName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'XSRF-TOKEN';var _headerName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'X-XSRF-TOKEN';_classCallCheck(this,CookieXSRFStrategy);this._cookieName=_cookieName;this._headerName=_headerName;}/**
     * @param {?} req
     * @return {?}
     */_createClass(CookieXSRFStrategy,[{key:'configureRequest',value:function configureRequest(req){var/** @type {?} */xsrfToken=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__["f" /* ɵgetDOM */])().getCookie(this._cookieName);if(xsrfToken){req.headers.set(this._headerName,xsrfToken);}}}]);return CookieXSRFStrategy;}();/**
 * Creates {\@link XHRConnection} instances.
 *
 * This class would typically not be used by end users, but could be
 * overridden if a different backend implementation should be used,
 * such as in a node backend.
 *
 * ### Example
 *
 * ```
 * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\@angular/http';
 * \@Component({
 *   viewProviders: [
 *     HTTP_PROVIDERS,
 *     {provide: Http, useFactory: (backend, options) => {
 *       return new Http(backend, options);
 *     }, deps: [MyNodeBackend, BaseRequestOptions]}]
 * })
 * class MyComponent {
 *   constructor(http:Http) {
 *     http.request('people.json').subscribe(res => this.people = res.json());
 *   }
 * }
 * ```
 * \@experimental
 */var XHRBackend=function(){/**
     * @param {?} _browserXHR
     * @param {?} _baseResponseOptions
     * @param {?} _xsrfStrategy
     */function XHRBackend(_browserXHR,_baseResponseOptions,_xsrfStrategy){_classCallCheck(this,XHRBackend);this._browserXHR=_browserXHR;this._baseResponseOptions=_baseResponseOptions;this._xsrfStrategy=_xsrfStrategy;}/**
     * @param {?} request
     * @return {?}
     */_createClass(XHRBackend,[{key:'createConnection',value:function createConnection(request){this._xsrfStrategy.configureRequest(request);return new XHRConnection(request,this._browserXHR,this._baseResponseOptions);}}]);return XHRBackend;}();XHRBackend.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */XHRBackend.ctorParameters=function(){return[{type:BrowserXhr},{type:ResponseOptions},{type:XSRFStrategy}];};/**
 * Creates a request options object to be optionally provided when instantiating a
 * {\@link Request}.
 *
 * This class is based on the `RequestInit` description in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#requestinit).
 *
 * All values are null by default. Typical defaults can be found in the {\@link BaseRequestOptions}
 * class, which sub-classes `RequestOptions`.
 *
 * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))
 *
 * ```typescript
 * import {RequestOptions, Request, RequestMethod} from '\@angular/http';
 *
 * var options = new RequestOptions({
 *   method: RequestMethod.Post,
 *   url: 'https://google.com'
 * });
 * var req = new Request(options);
 * console.log('req.method:', RequestMethod[req.method]); // Post
 * console.log('options.url:', options.url); // https://google.com
 * ```
 *
 * \@experimental
 */var RequestOptions=function(){_createClass(RequestOptions,[{key:'search',/**
     * @deprecated from 4.0.0. Use params instead.
     * @return {?}
     */get:function get(){return this.params;}/**
     * @deprecated from 4.0.0. Use params instead.
     * @param {?} params
     * @return {?}
     */,set:function set(params){this.params=params;}/**
     * @param {?=} __0
     */}]);function RequestOptions(){var _ref4=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},method=_ref4.method,headers=_ref4.headers,body=_ref4.body,url=_ref4.url,search=_ref4.search,params=_ref4.params,withCredentials=_ref4.withCredentials,responseType=_ref4.responseType;_classCallCheck(this,RequestOptions);this.method=method!=null?normalizeMethodName(method):null;this.headers=headers!=null?headers:null;this.body=body!=null?body:null;this.url=url!=null?url:null;this.params=this._mergeSearchParams(params||search);this.withCredentials=withCredentials!=null?withCredentials:null;this.responseType=responseType!=null?responseType:null;}/**
     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override
     * existing values. This method will not change the values of the instance on which it is being
     * called.
     *
     * Note that `headers` and `search` will override existing values completely if present in
     * the `options` object. If these values should be merged, it should be done prior to calling
     * `merge` on the `RequestOptions` instance.
     *
     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))
     *
     * ```typescript
     * import {RequestOptions, Request, RequestMethod} from '\@angular/http';
     *
     * var options = new RequestOptions({
     *   method: RequestMethod.Post
     * });
     * var req = new Request(options.merge({
     *   url: 'https://google.com'
     * }));
     * console.log('req.method:', RequestMethod[req.method]); // Post
     * console.log('options.url:', options.url); // null
     * console.log('req.url:', req.url); // https://google.com
     * ```
     * @param {?=} options
     * @return {?}
     */_createClass(RequestOptions,[{key:'merge',value:function merge(options){return new RequestOptions({method:options&&options.method!=null?options.method:this.method,headers:options&&options.headers!=null?options.headers:new Headers(this.headers),body:options&&options.body!=null?options.body:this.body,url:options&&options.url!=null?options.url:this.url,params:options&&this._mergeSearchParams(options.params||options.search),withCredentials:options&&options.withCredentials!=null?options.withCredentials:this.withCredentials,responseType:options&&options.responseType!=null?options.responseType:this.responseType});}/**
     * @param {?} params
     * @return {?}
     */},{key:'_mergeSearchParams',value:function _mergeSearchParams(params){if(!params)return this.params;if(params instanceof URLSearchParams){return params.clone();}if(typeof params==='string'){return new URLSearchParams(params);}return this._parseParams(params);}/**
     * @param {?=} objParams
     * @return {?}
     */},{key:'_parseParams',value:function _parseParams(){var _this14=this;var objParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var/** @type {?} */params=new URLSearchParams();Object.keys(objParams).forEach(function(key){var/** @type {?} */value=objParams[key];if(Array.isArray(value)){value.forEach(function(item){return _this14._appendParam(key,item,params);});}else{_this14._appendParam(key,value,params);}});return params;}/**
     * @param {?} key
     * @param {?} value
     * @param {?} params
     * @return {?}
     */},{key:'_appendParam',value:function _appendParam(key,value,params){if(typeof value!=='string'){value=JSON.stringify(value);}params.append(key,value);}}]);return RequestOptions;}();/**
 * Subclass of {\@link RequestOptions}, with default values.
 *
 * Default values:
 *  * method: {\@link RequestMethod RequestMethod.Get}
 *  * headers: empty {\@link Headers} object
 *
 * This class could be extended and bound to the {\@link RequestOptions} class
 * when configuring an {\@link Injector}, in order to override the default options
 * used by {\@link Http} to create and send {\@link Request Requests}.
 *
 * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))
 *
 * ```typescript
 * import {provide} from '\@angular/core';
 * import {bootstrap} from '\@angular/platform-browser/browser';
 * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '\@angular/http';
 * import {App} from './myapp';
 *
 * class MyOptions extends BaseRequestOptions {
 *   search: string = 'coreTeam=true';
 * }
 *
 * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);
 * ```
 *
 * The options could also be extended when manually creating a {\@link Request}
 * object.
 *
 * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))
 *
 * ```
 * import {BaseRequestOptions, Request, RequestMethod} from '\@angular/http';
 *
 * var options = new BaseRequestOptions();
 * var req = new Request(options.merge({
 *   method: RequestMethod.Post,
 *   url: 'https://google.com'
 * }));
 * console.log('req.method:', RequestMethod[req.method]); // Post
 * console.log('options.url:', options.url); // null
 * console.log('req.url:', req.url); // https://google.com
 * ```
 *
 * \@experimental
 */var BaseRequestOptions=function(_RequestOptions){_inherits(BaseRequestOptions,_RequestOptions);function BaseRequestOptions(){_classCallCheck(this,BaseRequestOptions);return _possibleConstructorReturn(this,(BaseRequestOptions.__proto__||Object.getPrototypeOf(BaseRequestOptions)).call(this,{method:RequestMethod.Get,headers:new Headers()}));}return BaseRequestOptions;}(RequestOptions);BaseRequestOptions.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */BaseRequestOptions.ctorParameters=function(){return[];};/**
 * Creates `Request` instances from provided values.
 *
 * The Request's interface is inspired by the Request constructor defined in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#request-class),
 * but is considered a static value whose body can be accessed many times. There are other
 * differences in the implementation, but this is the most significant.
 *
 * `Request` instances are typically created by higher-level classes, like {\@link Http} and
 * {\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.
 * One such example is when creating services that wrap higher-level services, like {\@link Http},
 * where it may be useful to generate a `Request` with arbitrary headers and search params.
 *
 * ```typescript
 * import {Injectable, Injector} from '\@angular/core';
 * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\@angular/http';
 *
 * \@Injectable()
 * class AutoAuthenticator {
 *   constructor(public http:Http) {}
 *   request(url:string) {
 *     return this.http.request(new Request({
 *       method: RequestMethod.Get,
 *       url: url,
 *       search: 'password=123'
 *     }));
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);
 * var authenticator = injector.get(AutoAuthenticator);
 * authenticator.request('people.json').subscribe(res => {
 *   //URL should have included '?password=123'
 *   console.log('people', res.json());
 * });
 * ```
 *
 * \@experimental
 */var Request=function(_Body2){_inherits(Request,_Body2);/**
     * @param {?} requestOptions
     */function Request(requestOptions){_classCallCheck(this,Request);// TODO: assert that url is present
var _this16=_possibleConstructorReturn(this,(Request.__proto__||Object.getPrototypeOf(Request)).call(this));var url=requestOptions.url;_this16.url=requestOptions.url;if(requestOptions.params){var params=requestOptions.params.toString();if(params.length>0){var prefix='?';if(_this16.url.indexOf('?')!=-1){prefix=_this16.url[_this16.url.length-1]=='&'?'':'&';}// TODO: just delete search-query-looking string in url?
_this16.url=url+prefix+params;}}_this16._body=requestOptions.body;_this16.method=normalizeMethodName(requestOptions.method);// TODO(jeffbcross): implement behavior
// Defaults to 'omit', consistent with browser
_this16.headers=new Headers(requestOptions.headers);_this16.contentType=_this16.detectContentType();_this16.withCredentials=requestOptions.withCredentials;_this16.responseType=requestOptions.responseType;return _this16;}/**
     * Returns the content type enum based on header options.
     * @return {?}
     */_createClass(Request,[{key:'detectContentType',value:function detectContentType(){switch(this.headers.get('content-type')){case'application/json':return ContentType.JSON;case'application/x-www-form-urlencoded':return ContentType.FORM;case'multipart/form-data':return ContentType.FORM_DATA;case'text/plain':case'text/html':return ContentType.TEXT;case'application/octet-stream':return this._body instanceof ArrayBuffer$1?ContentType.ARRAY_BUFFER:ContentType.BLOB;default:return this.detectContentTypeFromBody();}}/**
     * Returns the content type of request's body based on its type.
     * @return {?}
     */},{key:'detectContentTypeFromBody',value:function detectContentTypeFromBody(){if(this._body==null){return ContentType.NONE;}else if(this._body instanceof URLSearchParams){return ContentType.FORM;}else if(this._body instanceof FormData){return ContentType.FORM_DATA;}else if(this._body instanceof Blob$1){return ContentType.BLOB;}else if(this._body instanceof ArrayBuffer$1){return ContentType.ARRAY_BUFFER;}else if(this._body&&_typeof(this._body)==='object'){return ContentType.JSON;}else{return ContentType.TEXT;}}/**
     * Returns the request's body according to its type. If body is undefined, return
     * null.
     * @return {?}
     */},{key:'getBody',value:function getBody(){switch(this.contentType){case ContentType.JSON:return this.text();case ContentType.FORM:return this.text();case ContentType.FORM_DATA:return this._body;case ContentType.TEXT:return this.text();case ContentType.BLOB:return this.blob();case ContentType.ARRAY_BUFFER:return this.arrayBuffer();default:return null;}}}]);return Request;}(Body);var/** @type {?} */noop=function noop(){};var/** @type {?} */w=(typeof window==='undefined'?'undefined':_typeof(window))=='object'?window:noop;var/** @type {?} */FormData=w[/** TODO #9100 */'FormData']||noop;var/** @type {?} */Blob$1=w[/** TODO #9100 */'Blob']||noop;var/** @type {?} */ArrayBuffer$1=w[/** TODO #9100 */'ArrayBuffer']||noop;/**
 * @param {?} backend
 * @param {?} request
 * @return {?}
 */function httpRequest(backend,request){return backend.createConnection(request).response;}/**
 * @param {?} defaultOpts
 * @param {?} providedOpts
 * @param {?} method
 * @param {?} url
 * @return {?}
 */function mergeOptions(defaultOpts,providedOpts,method,url){var/** @type {?} */newOptions=defaultOpts;if(providedOpts){// Hack so Dart can used named parameters
return newOptions.merge(new RequestOptions({method:providedOpts.method||method,url:providedOpts.url||url,search:providedOpts.search,params:providedOpts.params,headers:providedOpts.headers,body:providedOpts.body,withCredentials:providedOpts.withCredentials,responseType:providedOpts.responseType}));}return newOptions.merge(new RequestOptions({method:method,url:url}));}/**
 * Performs http requests using `XMLHttpRequest` as the default backend.
 *
 * `Http` is available as an injectable class, with methods to perform http requests. Calling
 * `request` returns an `Observable` which will emit a single {\@link Response} when a
 * response is received.
 *
 * ### Example
 *
 * ```typescript
 * import {Http, HTTP_PROVIDERS} from '\@angular/http';
 * import 'rxjs/add/operator/map'
 * \@Component({
 *   selector: 'http-app',
 *   viewProviders: [HTTP_PROVIDERS],
 *   templateUrl: 'people.html'
 * })
 * class PeopleComponent {
 *   constructor(http: Http) {
 *     http.get('people.json')
 *       // Call map on the response observable to get the parsed people object
 *       .map(res => res.json())
 *       // Subscribe to the observable to get the parsed people object and attach it to the
 *       // component
 *       .subscribe(people => this.people = people);
 *   }
 * }
 * ```
 *
 *
 * ### Example
 *
 * ```
 * http.get('people.json').subscribe((res:Response) => this.people = res.json());
 * ```
 *
 * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a "Backend" (
 * {\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing
 * the {\@link XHRBackend} provider, as in the following example:
 *
 * ### Example
 *
 * ```typescript
 * import {BaseRequestOptions, Http} from '\@angular/http';
 * import {MockBackend} from '\@angular/http/testing';
 * var injector = Injector.resolveAndCreate([
 *   BaseRequestOptions,
 *   MockBackend,
 *   {provide: Http, useFactory:
 *       function(backend, defaultOptions) {
 *         return new Http(backend, defaultOptions);
 *       },
 *       deps: [MockBackend, BaseRequestOptions]}
 * ]);
 * var http = injector.get(Http);
 * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));
 * ```
 *
 * \@experimental
 */var Http=function(){/**
     * @param {?} _backend
     * @param {?} _defaultOptions
     */function Http(_backend,_defaultOptions){_classCallCheck(this,Http);this._backend=_backend;this._defaultOptions=_defaultOptions;}/**
     * Performs any type of http request. First argument is required, and can either be a url or
     * a {\@link Request} instance. If the first argument is a url, an optional {\@link RequestOptions}
     * object can be provided as the 2nd argument. The options object will be merged with the values
     * of {\@link BaseRequestOptions} before performing the request.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */_createClass(Http,[{key:'request',value:function request(url,options){var/** @type {?} */responseObservable=void 0;if(typeof url==='string'){responseObservable=httpRequest(this._backend,new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Get,/** @type {?} */url)));}else if(url instanceof Request){responseObservable=httpRequest(this._backend,url);}else{throw new Error('First argument must be a url string or Request instance.');}return responseObservable;}/**
     * Performs a request with `get` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'get',value:function get(url,options){return this.request(new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Get,url)));}/**
     * Performs a request with `post` http method.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */},{key:'post',value:function post(url,body,options){return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({body:body})),options,RequestMethod.Post,url)));}/**
     * Performs a request with `put` http method.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */},{key:'put',value:function put(url,body,options){return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({body:body})),options,RequestMethod.Put,url)));}/**
     * Performs a request with `delete` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'delete',value:function _delete(url,options){return this.request(new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Delete,url)));}/**
     * Performs a request with `patch` http method.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */},{key:'patch',value:function patch(url,body,options){return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({body:body})),options,RequestMethod.Patch,url)));}/**
     * Performs a request with `head` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'head',value:function head(url,options){return this.request(new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Head,url)));}/**
     * Performs a request with `options` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'options',value:function options(url,_options){return this.request(new Request(mergeOptions(this._defaultOptions,_options,RequestMethod.Options,url)));}}]);return Http;}();Http.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */Http.ctorParameters=function(){return[{type:ConnectionBackend},{type:RequestOptions}];};/**
 * \@experimental
 */var Jsonp=function(_Http){_inherits(Jsonp,_Http);/**
     * @param {?} backend
     * @param {?} defaultOptions
     */function Jsonp(backend,defaultOptions){_classCallCheck(this,Jsonp);return _possibleConstructorReturn(this,(Jsonp.__proto__||Object.getPrototypeOf(Jsonp)).call(this,backend,defaultOptions));}/**
     * Performs any type of http request. First argument is required, and can either be a url or
     * a {\@link Request} instance. If the first argument is a url, an optional {\@link RequestOptions}
     * object can be provided as the 2nd argument. The options object will be merged with the values
     * of {\@link BaseRequestOptions} before performing the request.
     *
     * \@security Regular XHR is the safest alternative to JSONP for most applications, and is
     * supported by all current browsers. Because JSONP creates a `<script>` element with
     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted
     * source could expose your application to XSS risks. Data exposed by JSONP may also be
     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for
     * future security issues (e.g. content sniffing).  For more detail, see the
     * [Security Guide](http://g.co/ng/security).
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */_createClass(Jsonp,[{key:'request',value:function request(url,options){var/** @type {?} */responseObservable=void 0;if(typeof url==='string'){url=new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Get,/** @type {?} */url));}if(url instanceof Request){if(url.method!==RequestMethod.Get){throw new Error('JSONP requests must use GET request method.');}responseObservable=httpRequest(this._backend,url);}else{throw new Error('First argument must be a url string or Request instance.');}return responseObservable;}}]);return Jsonp;}(Http);Jsonp.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */Jsonp.ctorParameters=function(){return[{type:ConnectionBackend},{type:RequestOptions}];};/**
 * @return {?}
 */function _createDefaultCookieXSRFStrategy(){return new CookieXSRFStrategy();}/**
 * @param {?} xhrBackend
 * @param {?} requestOptions
 * @return {?}
 */function httpFactory(xhrBackend,requestOptions){return new Http(xhrBackend,requestOptions);}/**
 * @param {?} jsonpBackend
 * @param {?} requestOptions
 * @return {?}
 */function jsonpFactory(jsonpBackend,requestOptions){return new Jsonp(jsonpBackend,requestOptions);}/**
 * The module that includes http's providers
 *
 * \@experimental
 */var HttpModule=function HttpModule(){_classCallCheck(this,HttpModule);};HttpModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */],args:[{providers:[// TODO(pascal): use factory type annotations once supported in DI
// issue: https://github.com/angular/angular/issues/3183
{provide:Http,useFactory:httpFactory,deps:[XHRBackend,RequestOptions]},BrowserXhr,{provide:RequestOptions,useClass:BaseRequestOptions},{provide:ResponseOptions,useClass:BaseResponseOptions},XHRBackend,{provide:XSRFStrategy,useFactory:_createDefaultCookieXSRFStrategy}]}]}];/** @nocollapse */HttpModule.ctorParameters=function(){return[];};/**
 * The module that includes jsonp's providers
 *
 * \@experimental
 */var JsonpModule=function JsonpModule(){_classCallCheck(this,JsonpModule);};JsonpModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */],args:[{providers:[// TODO(pascal): use factory type annotations once supported in DI
// issue: https://github.com/angular/angular/issues/3183
{provide:Jsonp,useFactory:jsonpFactory,deps:[JSONPBackend,RequestOptions]},BrowserJsonp,{provide:RequestOptions,useClass:BaseRequestOptions},{provide:ResponseOptions,useClass:BaseResponseOptions},{provide:JSONPBackend,useClass:JSONPBackend_}]}]}];/** @nocollapse */JsonpModule.ctorParameters=function(){return[];};/**
 * @stable
 */var/** @type {?} */VERSION=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["M" /* Version */]('4.0.0-rc.1');


/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__ = __webpack_require__(140);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_operator_concatMap__ = __webpack_require__(145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_operator_concatMap__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_every__ = __webpack_require__(147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_every___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_every__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_first__ = __webpack_require__(149);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_first___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_first__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__ = __webpack_require__(96);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_reduce__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_reduce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_reduce__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_operator_concatAll__ = __webpack_require__(144);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_operator_concatAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_rxjs_operator_concatAll__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_util_EmptyError__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_util_EmptyError___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_rxjs_util_EmptyError__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_observable_fromPromise__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_rxjs_observable_fromPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_operator_last__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_operator_last___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_rxjs_operator_last__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_operator_mergeAll__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_operator_mergeAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_rxjs_operator_mergeAll__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__angular_platform_browser__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_rxjs_operator_filter__ = __webpack_require__(95);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20_rxjs_operator_filter__);
/* unused harmony export RouterLink */
/* unused harmony export RouterLinkWithHref */
/* unused harmony export RouterLinkActive */
/* unused harmony export RouterOutlet */
/* unused harmony export NavigationCancel */
/* unused harmony export NavigationEnd */
/* unused harmony export NavigationError */
/* unused harmony export NavigationStart */
/* unused harmony export RouteConfigLoadEnd */
/* unused harmony export RouteConfigLoadStart */
/* unused harmony export RoutesRecognized */
/* unused harmony export RouteReuseStrategy */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Router; });
/* unused harmony export ROUTES */
/* unused harmony export ROUTER_CONFIGURATION */
/* unused harmony export ROUTER_INITIALIZER */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return RouterModule; });
/* unused harmony export provideRoutes */
/* unused harmony export RouterOutletMap */
/* unused harmony export NoPreloading */
/* unused harmony export PreloadAllModules */
/* unused harmony export PreloadingStrategy */
/* unused harmony export RouterPreloader */
/* unused harmony export ActivatedRoute */
/* unused harmony export ActivatedRouteSnapshot */
/* unused harmony export RouterState */
/* unused harmony export RouterStateSnapshot */
/* unused harmony export PRIMARY_OUTLET */
/* unused harmony export UrlHandlingStrategy */
/* unused harmony export DefaultUrlSerializer */
/* unused harmony export UrlSegment */
/* unused harmony export UrlSegmentGroup */
/* unused harmony export UrlSerializer */
/* unused harmony export UrlTree */
/* unused harmony export VERSION */
/* unused harmony export ɵROUTER_PROVIDERS */
/* unused harmony export ɵflatten */
/* unused harmony export ɵa */
/* unused harmony export ɵg */
/* unused harmony export ɵd */
/* unused harmony export ɵc */
/* unused harmony export ɵh */
/* unused harmony export ɵf */
/* unused harmony export ɵb */
/* unused harmony export ɵe */
/* unused harmony export ɵi */
/* unused harmony export ɵj */
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * \@whatItDoes Represents an event triggered when a navigation starts.
 *
 * \@stable
 */var NavigationStart=function(){/**
     * @param {?} id
     * @param {?} url
     */function NavigationStart(id,url){_classCallCheck(this,NavigationStart);this.id=id;this.url=url;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass(NavigationStart,[{key:'toString',value:function toString(){return'NavigationStart(id: '+this.id+', url: \''+this.url+'\')';}}]);return NavigationStart;}();/**
 * \@whatItDoes Represents an event triggered when a navigation ends successfully.
 *
 * \@stable
 */var NavigationEnd=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} urlAfterRedirects
     */function NavigationEnd(id,url,urlAfterRedirects){_classCallCheck(this,NavigationEnd);this.id=id;this.url=url;this.urlAfterRedirects=urlAfterRedirects;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass(NavigationEnd,[{key:'toString',value:function toString(){return'NavigationEnd(id: '+this.id+', url: \''+this.url+'\', urlAfterRedirects: \''+this.urlAfterRedirects+'\')';}}]);return NavigationEnd;}();/**
 * \@whatItDoes Represents an event triggered when a navigation is canceled.
 *
 * \@stable
 */var NavigationCancel=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} reason
     */function NavigationCancel(id,url,reason){_classCallCheck(this,NavigationCancel);this.id=id;this.url=url;this.reason=reason;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass(NavigationCancel,[{key:'toString',value:function toString(){return'NavigationCancel(id: '+this.id+', url: \''+this.url+'\')';}}]);return NavigationCancel;}();/**
 * \@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.
 *
 * \@stable
 */var NavigationError=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} error
     */function NavigationError(id,url,error){_classCallCheck(this,NavigationError);this.id=id;this.url=url;this.error=error;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass(NavigationError,[{key:'toString',value:function toString(){return'NavigationError(id: '+this.id+', url: \''+this.url+'\', error: '+this.error+')';}}]);return NavigationError;}();/**
 * \@whatItDoes Represents an event triggered when routes are recognized.
 *
 * \@stable
 */var RoutesRecognized=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} urlAfterRedirects
     * @param {?} state
     */function RoutesRecognized(id,url,urlAfterRedirects,state){_classCallCheck(this,RoutesRecognized);this.id=id;this.url=url;this.urlAfterRedirects=urlAfterRedirects;this.state=state;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass(RoutesRecognized,[{key:'toString',value:function toString(){return'RoutesRecognized(id: '+this.id+', url: \''+this.url+'\', urlAfterRedirects: \''+this.urlAfterRedirects+'\', state: '+this.state+')';}}]);return RoutesRecognized;}();/**
 * \@whatItDoes Represents an event triggered before lazy loading a route config.
 *
 * \@experimental
 */var RouteConfigLoadStart=function(){/**
     * @param {?} route
     */function RouteConfigLoadStart(route){_classCallCheck(this,RouteConfigLoadStart);this.route=route;}/**
     * @return {?}
     */_createClass(RouteConfigLoadStart,[{key:'toString',value:function toString(){return'RouteConfigLoadStart(path: '+this.route.path+')';}}]);return RouteConfigLoadStart;}();/**
 * \@whatItDoes Represents an event triggered when a route has been lazy loaded.
 *
 * \@experimental
 */var RouteConfigLoadEnd=function(){/**
     * @param {?} route
     */function RouteConfigLoadEnd(route){_classCallCheck(this,RouteConfigLoadEnd);this.route=route;}/**
     * @return {?}
     */_createClass(RouteConfigLoadEnd,[{key:'toString',value:function toString(){return'RouteConfigLoadEnd(path: '+this.route.path+')';}}]);return RouteConfigLoadEnd;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @whatItDoes Name of the primary outlet.
 *
 * @stable
 */var/** @type {?} */PRIMARY_OUTLET='primary';var/** @type {?} */NAVIGATION_CANCELING_ERROR='ngNavigationCancelingError';/**
 * @param {?} message
 * @return {?}
 */function navigationCancelingError(message){var/** @type {?} */error=Error('NavigationCancelingError: '+message);error[NAVIGATION_CANCELING_ERROR]=true;return error;}/**
 * @param {?} error
 * @return {?}
 */function isNavigationCancelingError(error){return error[NAVIGATION_CANCELING_ERROR];}/**
 * @param {?} segments
 * @param {?} segmentGroup
 * @param {?} route
 * @return {?}
 */function defaultUrlMatcher(segments,segmentGroup,route){var/** @type {?} */path=route.path;var/** @type {?} */parts=path.split('/');var/** @type {?} */posParams={};var/** @type {?} */consumed=[];var/** @type {?} */currentIndex=0;for(var/** @type {?} */i=0;i<parts.length;++i){if(currentIndex>=segments.length)return null;var/** @type {?} */current=segments[currentIndex];var/** @type {?} */p=parts[i];var/** @type {?} */isPosParam=p.startsWith(':');if(!isPosParam&&p!==current.path)return null;if(isPosParam){posParams[p.substring(1)]=current;}consumed.push(current);currentIndex++;}if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||currentIndex<segments.length)){return null;}else{return{consumed:consumed,posParams:posParams};}}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function shallowEqualArrays(a,b){if(a.length!==b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(!shallowEqual(a[i],b[i]))return false;}return true;}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function shallowEqual(a,b){var/** @type {?} */k1=Object.keys(a);var/** @type {?} */k2=Object.keys(b);if(k1.length!=k2.length){return false;}var/** @type {?} */key=void 0;for(var/** @type {?} */i=0;i<k1.length;i++){key=k1[i];if(a[key]!==b[key]){return false;}}return true;}/**
 * @param {?} a
 * @return {?}
 */function flatten(a){var/** @type {?} */target=[];for(var/** @type {?} */i=0;i<a.length;++i){for(var/** @type {?} */j=0;j<a[i].length;++j){target.push(a[i][j]);}}return target;}/**
 * @param {?} a
 * @return {?}
 */function last(a){return a.length>0?a[a.length-1]:null;}/**
 * @param {?} m1
 * @param {?} m2
 * @return {?}
 */function merge(m1,m2){var/** @type {?} */m={};for(var/** @type {?} */attr in m1){if(m1.hasOwnProperty(attr)){m[attr]=m1[attr];}}for(var/** @type {?} */_attr in m2){if(m2.hasOwnProperty(_attr)){m[_attr]=m2[_attr];}}return m;}/**
 * @param {?} map
 * @param {?} callback
 * @return {?}
 */function forEach(map,callback){for(var/** @type {?} */prop in map){if(map.hasOwnProperty(prop)){callback(map[prop],prop);}}}/**
 * @param {?} obj
 * @param {?} fn
 * @return {?}
 */function waitForMap(obj,fn){var/** @type {?} */waitFor=[];var/** @type {?} */res={};forEach(obj,function(a,k){if(k===PRIMARY_OUTLET){waitFor.push(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(fn(k,a),function(_){res[k]=_;return _;}));}});forEach(obj,function(a,k){if(k!==PRIMARY_OUTLET){waitFor.push(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(fn(k,a),function(_){res[k]=_;return _;}));}});if(waitFor.length>0){var/** @type {?} */concatted$=__WEBPACK_IMPORTED_MODULE_14_rxjs_operator_concatAll__["concatAll"].call(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"].apply(undefined,waitFor));var/** @type {?} */last$=__WEBPACK_IMPORTED_MODULE_17_rxjs_operator_last__["last"].call(concatted$);return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(last$,function(){return res;});}return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(res);}/**
 * @param {?} observables
 * @return {?}
 */function andObservables(observables){var/** @type {?} */merged$=__WEBPACK_IMPORTED_MODULE_18_rxjs_operator_mergeAll__["mergeAll"].call(observables);return __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_every__["every"].call(merged$,function(result){return result===true;});}/**
 * @param {?} value
 * @return {?}
 */function wrapIntoObservable(value){if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["K" /* ɵisObservable */])(value)){return value;}if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["J" /* ɵisPromise */])(value)){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_16_rxjs_observable_fromPromise__["fromPromise"])(value);}return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(value);}/**
 * @docsNotRequired
 * @experimental
 */var/** @type {?} */ROUTES=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('ROUTES');var LoadedRouterConfig=/**
     * @param {?} routes
     * @param {?} injector
     * @param {?} factoryResolver
     * @param {?} injectorFactory
     */function LoadedRouterConfig(routes,injector,factoryResolver,injectorFactory){_classCallCheck(this,LoadedRouterConfig);this.routes=routes;this.injector=injector;this.factoryResolver=factoryResolver;this.injectorFactory=injectorFactory;};var RouterConfigLoader=function(){/**
     * @param {?} loader
     * @param {?} compiler
     * @param {?=} onLoadStartListener
     * @param {?=} onLoadEndListener
     */function RouterConfigLoader(loader,compiler,onLoadStartListener,onLoadEndListener){_classCallCheck(this,RouterConfigLoader);this.loader=loader;this.compiler=compiler;this.onLoadStartListener=onLoadStartListener;this.onLoadEndListener=onLoadEndListener;}/**
     * @param {?} parentInjector
     * @param {?} route
     * @return {?}
     */_createClass(RouterConfigLoader,[{key:'load',value:function load(parentInjector,route){var _this=this;if(this.onLoadStartListener){this.onLoadStartListener(route);}var/** @type {?} */moduleFactory$=this.loadModuleFactory(route.loadChildren);return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(moduleFactory$,function(factory){if(_this.onLoadEndListener){_this.onLoadEndListener(route);}var/** @type {?} */module=factory.create(parentInjector);var/** @type {?} */injectorFactory=function injectorFactory(parent){return factory.create(parent).injector;};return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)),module.injector,module.componentFactoryResolver,injectorFactory);});}/**
     * @param {?} loadChildren
     * @return {?}
     */},{key:'loadModuleFactory',value:function loadModuleFactory(loadChildren){var _this2=this;if(typeof loadChildren==='string'){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_16_rxjs_observable_fromPromise__["fromPromise"])(this.loader.load(loadChildren));}else{var/** @type {?} */offlineMode=this.compiler instanceof __WEBPACK_IMPORTED_MODULE_1__angular_core__["_9" /* Compiler */];return __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(wrapIntoObservable(loadChildren()),function(t){return offlineMode?__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(/** @type {?} */t):__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_16_rxjs_observable_fromPromise__["fromPromise"])(_this2.compiler.compileModuleAsync(t));});}}}]);return RouterConfigLoader;}();/**
 * @return {?}
 */function createEmptyUrlTree(){return new UrlTree(new UrlSegmentGroup([],{}),{},null);}/**
 * @param {?} container
 * @param {?} containee
 * @param {?} exact
 * @return {?}
 */function containsTree(container,containee,exact){if(exact){return equalQueryParams(container.queryParams,containee.queryParams)&&equalSegmentGroups(container.root,containee.root);}return containsQueryParams(container.queryParams,containee.queryParams)&&containsSegmentGroup(container.root,containee.root);}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function equalQueryParams(container,containee){return shallowEqual(container,containee);}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function equalSegmentGroups(container,containee){if(!equalPath(container.segments,containee.segments))return false;if(container.numberOfChildren!==containee.numberOfChildren)return false;for(var/** @type {?} */c in containee.children){if(!container.children[c])return false;if(!equalSegmentGroups(container.children[c],containee.children[c]))return false;}return true;}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function containsQueryParams(container,containee){return Object.keys(containee).length<=Object.keys(container).length&&Object.keys(containee).every(function(key){return containee[key]===container[key];});}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function containsSegmentGroup(container,containee){return containsSegmentGroupHelper(container,containee,containee.segments);}/**
 * @param {?} container
 * @param {?} containee
 * @param {?} containeePaths
 * @return {?}
 */function containsSegmentGroupHelper(container,containee,containeePaths){if(container.segments.length>containeePaths.length){var/** @type {?} */current=container.segments.slice(0,containeePaths.length);if(!equalPath(current,containeePaths))return false;if(containee.hasChildren())return false;return true;}else if(container.segments.length===containeePaths.length){if(!equalPath(container.segments,containeePaths))return false;for(var/** @type {?} */c in containee.children){if(!container.children[c])return false;if(!containsSegmentGroup(container.children[c],containee.children[c]))return false;}return true;}else{var/** @type {?} */_current=containeePaths.slice(0,container.segments.length);var/** @type {?} */next=containeePaths.slice(container.segments.length);if(!equalPath(container.segments,_current))return false;if(!container.children[PRIMARY_OUTLET])return false;return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET],containee,next);}}/**
 * \@whatItDoes Represents the parsed URL.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree =
 *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');
 *     const f = tree.fragment; // return 'fragment'
 *     const q = tree.queryParams; // returns {debug: 'true'}
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'
 *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'
 *     g.children['support'].segments; // return 1 segment 'help'
 *   }
 * }
 * ```
 *
 * \@description
 *
 * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a
 * serialized tree.
 * UrlTree is a data structure that provides a lot of affordances in dealing with URLs
 *
 * \@stable
 */var UrlTree=function(){/**
     * \@internal
     * @param {?} root
     * @param {?} queryParams
     * @param {?} fragment
     */function UrlTree(root,queryParams,fragment){_classCallCheck(this,UrlTree);this.root=root;this.queryParams=queryParams;this.fragment=fragment;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass(UrlTree,[{key:'toString',value:function toString(){return new DefaultUrlSerializer().serialize(this);}}]);return UrlTree;}();/**
 * \@whatItDoes Represents the parsed URL segment group.
 *
 * See {\@link UrlTree} for more information.
 *
 * \@stable
 */var UrlSegmentGroup=function(){/**
     * @param {?} segments
     * @param {?} children
     */function UrlSegmentGroup(segments,children){var _this3=this;_classCallCheck(this,UrlSegmentGroup);this.segments=segments;this.children=children;/** The parent node in the url tree */this.parent=null;forEach(children,function(v,k){return v.parent=_this3;});}/**
     * Wether the segment has child segments
     * @return {?}
     */_createClass(UrlSegmentGroup,[{key:'hasChildren',value:function hasChildren(){return this.numberOfChildren>0;}/**
     * Number of child segments
     * @return {?}
     */},{key:'toString',/**
     * \@docsNotRequired
     * @return {?}
     */value:function toString(){return serializePaths(this);}},{key:'numberOfChildren',get:function get(){return Object.keys(this.children).length;}}]);return UrlSegmentGroup;}();/**
 * \@whatItDoes Represents a single URL segment.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree = router.parseUrl('/team;id=33');
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments;
 *     s[0].path; // returns 'team'
 *     s[0].parameters; // returns {id: 33}
 *   }
 * }
 * ```
 *
 * \@description
 *
 * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix
 * parameters associated with the segment.
 *
 * \@stable
 */var UrlSegment=function(){/**
     * @param {?} path
     * @param {?} parameters
     */function UrlSegment(path,parameters){_classCallCheck(this,UrlSegment);this.path=path;this.parameters=parameters;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass(UrlSegment,[{key:'toString',value:function toString(){return serializePath(this);}}]);return UrlSegment;}();/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function equalSegments(a,b){if(a.length!==b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i].path!==b[i].path)return false;if(!shallowEqual(a[i].parameters,b[i].parameters))return false;}return true;}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function equalPath(a,b){if(a.length!==b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i].path!==b[i].path)return false;}return true;}/**
 * @param {?} segment
 * @param {?} fn
 * @return {?}
 */function mapChildrenIntoArray(segment,fn){var/** @type {?} */res=[];forEach(segment.children,function(child,childOutlet){if(childOutlet===PRIMARY_OUTLET){res=res.concat(fn(child,childOutlet));}});forEach(segment.children,function(child,childOutlet){if(childOutlet!==PRIMARY_OUTLET){res=res.concat(fn(child,childOutlet));}});return res;}/**
 * \@whatItDoes Serializes and deserializes a URL string into a URL tree.
 *
 * \@description The url serialization strategy is customizable. You can
 * make all URLs case insensitive by providing a custom UrlSerializer.
 *
 * See {\@link DefaultUrlSerializer} for an example of a URL serializer.
 *
 * \@stable
 * @abstract
 */var UrlSerializer=function(){function UrlSerializer(){_classCallCheck(this,UrlSerializer);}_createClass(UrlSerializer,[{key:'parse',/**
     * Parse a url into a {\@link UrlTree}
     * @abstract
     * @param {?} url
     * @return {?}
     */value:function parse(url){}/**
     * Converts a {\@link UrlTree} into a url
     * @abstract
     * @param {?} tree
     * @return {?}
     */},{key:'serialize',value:function serialize(tree){}}]);return UrlSerializer;}();/**
 * \@whatItDoes A default implementation of the {\@link UrlSerializer}.
 *
 * \@description
 *
 * Example URLs:
 *
 * ```
 * /inbox/33(popup:compose)
 * /inbox/33;open=true/messages/44
 * ```
 *
 * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the
 * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to
 * specify route specific parameters.
 *
 * \@stable
 */var DefaultUrlSerializer=function(){function DefaultUrlSerializer(){_classCallCheck(this,DefaultUrlSerializer);}_createClass(DefaultUrlSerializer,[{key:'parse',/**
     * Parses a url into a {\@link UrlTree}
     * @param {?} url
     * @return {?}
     */value:function parse(url){var/** @type {?} */p=new UrlParser(url);return new UrlTree(p.parseRootSegment(),p.parseQueryParams(),p.parseFragment());}/**
     * Converts a {\@link UrlTree} into a url
     * @param {?} tree
     * @return {?}
     */},{key:'serialize',value:function serialize(tree){var/** @type {?} */segment='/'+serializeSegment(tree.root,true);var/** @type {?} */query=serializeQueryParams(tree.queryParams);var/** @type {?} */fragment=tree.fragment!==null&&tree.fragment!==undefined?'#'+encodeURI(tree.fragment):'';return''+segment+query+fragment;}}]);return DefaultUrlSerializer;}();/**
 * @param {?} segment
 * @return {?}
 */function serializePaths(segment){return segment.segments.map(function(p){return serializePath(p);}).join('/');}/**
 * @param {?} segment
 * @param {?} root
 * @return {?}
 */function serializeSegment(segment,root){if(segment.hasChildren()&&root){var/** @type {?} */primary=segment.children[PRIMARY_OUTLET]?serializeSegment(segment.children[PRIMARY_OUTLET],false):'';var/** @type {?} */children=[];forEach(segment.children,function(v,k){if(k!==PRIMARY_OUTLET){children.push(k+':'+serializeSegment(v,false));}});if(children.length>0){return primary+'('+children.join('//')+')';}else{return''+primary;}}else if(segment.hasChildren()&&!root){var/** @type {?} */_children=mapChildrenIntoArray(segment,function(v,k){if(k===PRIMARY_OUTLET){return[serializeSegment(segment.children[PRIMARY_OUTLET],false)];}else{return[k+':'+serializeSegment(v,false)];}});return serializePaths(segment)+'/('+_children.join('//')+')';}else{return serializePaths(segment);}}/**
 * @param {?} s
 * @return {?}
 */function encode(s){return encodeURIComponent(s);}/**
 * @param {?} s
 * @return {?}
 */function decode(s){return decodeURIComponent(s);}/**
 * @param {?} path
 * @return {?}
 */function serializePath(path){return''+encode(path.path)+serializeParams(path.parameters);}/**
 * @param {?} params
 * @return {?}
 */function serializeParams(params){return pairs(params).map(function(p){return';'+encode(p.first)+'='+encode(p.second);}).join('');}/**
 * @param {?} params
 * @return {?}
 */function serializeQueryParams(params){var/** @type {?} */strParams=Object.keys(params).map(function(name){var/** @type {?} */value=params[name];return Array.isArray(value)?value.map(function(v){return encode(name)+'='+encode(v);}).join('&'):encode(name)+'='+encode(value);});return strParams.length?'?'+strParams.join("&"):'';}var Pair=/**
     * @param {?} first
     * @param {?} second
     */function Pair(first,second){_classCallCheck(this,Pair);this.first=first;this.second=second;};/**
 * @param {?} obj
 * @return {?}
 */function pairs(obj){var/** @type {?} */res=[];for(var/** @type {?} */prop in obj){if(obj.hasOwnProperty(prop)){res.push(new Pair(prop,obj[prop]));}}return res;}var/** @type {?} */SEGMENT_RE=/^[^\/()?;=&#]+/;/**
 * @param {?} str
 * @return {?}
 */function matchSegments(str){SEGMENT_RE.lastIndex=0;var/** @type {?} */match=str.match(SEGMENT_RE);return match?match[0]:'';}var/** @type {?} */QUERY_PARAM_RE=/^[^=?&#]+/;/**
 * @param {?} str
 * @return {?}
 */function matchQueryParams(str){QUERY_PARAM_RE.lastIndex=0;var/** @type {?} */match=str.match(SEGMENT_RE);return match?match[0]:'';}var/** @type {?} */QUERY_PARAM_VALUE_RE=/^[^?&#]+/;/**
 * @param {?} str
 * @return {?}
 */function matchUrlQueryParamValue(str){QUERY_PARAM_VALUE_RE.lastIndex=0;var/** @type {?} */match=str.match(QUERY_PARAM_VALUE_RE);return match?match[0]:'';}var UrlParser=function(){/**
     * @param {?} url
     */function UrlParser(url){_classCallCheck(this,UrlParser);this.url=url;this.remaining=url;}/**
     * @param {?} str
     * @return {?}
     */_createClass(UrlParser,[{key:'peekStartsWith',value:function peekStartsWith(str){return this.remaining.startsWith(str);}/**
     * @param {?} str
     * @return {?}
     */},{key:'capture',value:function capture(str){if(!this.remaining.startsWith(str)){throw new Error('Expected "'+str+'".');}this.remaining=this.remaining.substring(str.length);}/**
     * @return {?}
     */},{key:'parseRootSegment',value:function parseRootSegment(){if(this.remaining.startsWith('/')){this.capture('/');}if(this.remaining===''||this.remaining.startsWith('?')||this.remaining.startsWith('#')){return new UrlSegmentGroup([],{});}return new UrlSegmentGroup([],this.parseChildren());}/**
     * @return {?}
     */},{key:'parseChildren',value:function parseChildren(){if(this.remaining.length==0){return{};}if(this.peekStartsWith('/')){this.capture('/');}var/** @type {?} */paths=[];if(!this.peekStartsWith('(')){paths.push(this.parseSegments());}while(this.peekStartsWith('/')&&!this.peekStartsWith('//')&&!this.peekStartsWith('/(')){this.capture('/');paths.push(this.parseSegments());}var/** @type {?} */children={};if(this.peekStartsWith('/(')){this.capture('/');children=this.parseParens(true);}var/** @type {?} */res={};if(this.peekStartsWith('(')){res=this.parseParens(false);}if(paths.length>0||Object.keys(children).length>0){res[PRIMARY_OUTLET]=new UrlSegmentGroup(paths,children);}return res;}/**
     * @return {?}
     */},{key:'parseSegments',value:function parseSegments(){var/** @type {?} */path=matchSegments(this.remaining);if(path===''&&this.peekStartsWith(';')){throw new Error('Empty path url segment cannot have parameters: \''+this.remaining+'\'.');}this.capture(path);var/** @type {?} */matrixParams={};if(this.peekStartsWith(';')){matrixParams=this.parseMatrixParams();}return new UrlSegment(decode(path),matrixParams);}/**
     * @return {?}
     */},{key:'parseQueryParams',value:function parseQueryParams(){var/** @type {?} */params={};if(this.peekStartsWith('?')){this.capture('?');this.parseQueryParam(params);while(this.remaining.length>0&&this.peekStartsWith('&')){this.capture('&');this.parseQueryParam(params);}}return params;}/**
     * @return {?}
     */},{key:'parseFragment',value:function parseFragment(){if(this.peekStartsWith('#')){return decodeURI(this.remaining.substring(1));}return null;}/**
     * @return {?}
     */},{key:'parseMatrixParams',value:function parseMatrixParams(){var/** @type {?} */params={};while(this.remaining.length>0&&this.peekStartsWith(';')){this.capture(';');this.parseParam(params);}return params;}/**
     * @param {?} params
     * @return {?}
     */},{key:'parseParam',value:function parseParam(params){var/** @type {?} */key=matchSegments(this.remaining);if(!key){return;}this.capture(key);var/** @type {?} */value='';if(this.peekStartsWith('=')){this.capture('=');var/** @type {?} */valueMatch=matchSegments(this.remaining);if(valueMatch){value=valueMatch;this.capture(value);}}params[decode(key)]=decode(value);}/**
     * @param {?} params
     * @return {?}
     */},{key:'parseQueryParam',value:function parseQueryParam(params){var/** @type {?} */key=matchQueryParams(this.remaining);if(!key){return;}this.capture(key);var/** @type {?} */value='';if(this.peekStartsWith('=')){this.capture('=');var/** @type {?} */valueMatch=matchUrlQueryParamValue(this.remaining);if(valueMatch){value=valueMatch;this.capture(value);}}var/** @type {?} */decodedKey=decode(key);var/** @type {?} */decodedVal=decode(value);if(params.hasOwnProperty(decodedKey)){// Append to existing values
var/** @type {?} */currentVal=params[decodedKey];if(!Array.isArray(currentVal)){currentVal=[currentVal];params[decodedKey]=currentVal;}currentVal.push(decodedVal);}else{// Create a new value
params[decodedKey]=decodedVal;}}/**
     * @param {?} allowPrimary
     * @return {?}
     */},{key:'parseParens',value:function parseParens(allowPrimary){var/** @type {?} */segments={};this.capture('(');while(!this.peekStartsWith(')')&&this.remaining.length>0){var/** @type {?} */path=matchSegments(this.remaining);var/** @type {?} */next=this.remaining[path.length];// if is is not one of these characters, then the segment was unescaped
// or the group was not closed
if(next!=='/'&&next!==')'&&next!==';'){throw new Error('Cannot parse url \''+this.url+'\'');}var/** @type {?} */outletName=void 0;if(path.indexOf(':')>-1){outletName=path.substr(0,path.indexOf(':'));this.capture(outletName);this.capture(':');}else if(allowPrimary){outletName=PRIMARY_OUTLET;}var/** @type {?} */children=this.parseChildren();segments[outletName]=Object.keys(children).length===1?children[PRIMARY_OUTLET]:new UrlSegmentGroup([],children);if(this.peekStartsWith('//')){this.capture('//');}}this.capture(')');return segments;}}]);return UrlParser;}();var NoMatch=/**
     * @param {?=} segmentGroup
     */function NoMatch(){var segmentGroup=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,NoMatch);this.segmentGroup=segmentGroup;};var AbsoluteRedirect=/**
     * @param {?} urlTree
     */function AbsoluteRedirect(urlTree){_classCallCheck(this,AbsoluteRedirect);this.urlTree=urlTree;};/**
 * @param {?} segmentGroup
 * @return {?}
 */function noMatch(segmentGroup){return new __WEBPACK_IMPORTED_MODULE_12_rxjs_Observable__["Observable"](function(obs){return obs.error(new NoMatch(segmentGroup));});}/**
 * @param {?} newTree
 * @return {?}
 */function absoluteRedirect(newTree){return new __WEBPACK_IMPORTED_MODULE_12_rxjs_Observable__["Observable"](function(obs){return obs.error(new AbsoluteRedirect(newTree));});}/**
 * @param {?} redirectTo
 * @return {?}
 */function namedOutletsRedirect(redirectTo){return new __WEBPACK_IMPORTED_MODULE_12_rxjs_Observable__["Observable"](function(obs){return obs.error(new Error('Only absolute redirects can have named outlets. redirectTo: \''+redirectTo+'\''));});}/**
 * @param {?} route
 * @return {?}
 */function canLoadFails(route){return new __WEBPACK_IMPORTED_MODULE_12_rxjs_Observable__["Observable"](function(obs){return obs.error(navigationCancelingError('Cannot load children because the guard of the route "path: \''+route.path+'\'" returned false'));});}/**
 * @param {?} injector
 * @param {?} configLoader
 * @param {?} urlSerializer
 * @param {?} urlTree
 * @param {?} config
 * @return {?}
 */function applyRedirects(injector,configLoader,urlSerializer,urlTree,config){return new ApplyRedirects(injector,configLoader,urlSerializer,urlTree,config).apply();}var ApplyRedirects=function(){/**
     * @param {?} injector
     * @param {?} configLoader
     * @param {?} urlSerializer
     * @param {?} urlTree
     * @param {?} config
     */function ApplyRedirects(injector,configLoader,urlSerializer,urlTree,config){_classCallCheck(this,ApplyRedirects);this.injector=injector;this.configLoader=configLoader;this.urlSerializer=urlSerializer;this.urlTree=urlTree;this.config=config;this.allowRedirects=true;}/**
     * @return {?}
     */_createClass(ApplyRedirects,[{key:'apply',value:function apply(){var _this4=this;var/** @type {?} */expanded$=this.expandSegmentGroup(this.injector,this.config,this.urlTree.root,PRIMARY_OUTLET);var/** @type {?} */urlTrees$=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(expanded$,function(rootSegmentGroup){return _this4.createUrlTree(rootSegmentGroup,_this4.urlTree.queryParams,_this4.urlTree.fragment);});return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch__["_catch"].call(urlTrees$,function(e){if(e instanceof AbsoluteRedirect){// after an absolute redirect we do not apply any more redirects!
_this4.allowRedirects=false;// we need to run matching, so we can fetch all lazy-loaded modules
return _this4.match(e.urlTree);}if(e instanceof NoMatch){throw _this4.noMatchError(e);}throw e;});}/**
     * @param {?} tree
     * @return {?}
     */},{key:'match',value:function match(tree){var _this5=this;var/** @type {?} */expanded$=this.expandSegmentGroup(this.injector,this.config,tree.root,PRIMARY_OUTLET);var/** @type {?} */mapped$=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(expanded$,function(rootSegmentGroup){return _this5.createUrlTree(rootSegmentGroup,tree.queryParams,tree.fragment);});return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch__["_catch"].call(mapped$,function(e){if(e instanceof NoMatch){throw _this5.noMatchError(e);}throw e;});}/**
     * @param {?} e
     * @return {?}
     */},{key:'noMatchError',value:function noMatchError(e){return new Error('Cannot match any routes. URL Segment: \''+e.segmentGroup+'\'');}/**
     * @param {?} rootCandidate
     * @param {?} queryParams
     * @param {?} fragment
     * @return {?}
     */},{key:'createUrlTree',value:function createUrlTree(rootCandidate,queryParams,fragment){var/** @type {?} */root=rootCandidate.segments.length>0?new UrlSegmentGroup([],_defineProperty({},PRIMARY_OUTLET,rootCandidate)):rootCandidate;return new UrlTree(root,queryParams,fragment);}/**
     * @param {?} injector
     * @param {?} routes
     * @param {?} segmentGroup
     * @param {?} outlet
     * @return {?}
     */},{key:'expandSegmentGroup',value:function expandSegmentGroup(injector,routes,segmentGroup,outlet){if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(this.expandChildren(injector,routes,segmentGroup),function(children){return new UrlSegmentGroup([],children);});}return this.expandSegment(injector,segmentGroup,routes,segmentGroup.segments,outlet,true);}/**
     * @param {?} injector
     * @param {?} routes
     * @param {?} segmentGroup
     * @return {?}
     */},{key:'expandChildren',value:function expandChildren(injector,routes,segmentGroup){var _this6=this;return waitForMap(segmentGroup.children,function(childOutlet,child){return _this6.expandSegmentGroup(injector,routes,child,childOutlet);});}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} segments
     * @param {?} outlet
     * @param {?} allowRedirects
     * @return {?}
     */},{key:'expandSegment',value:function expandSegment(injector,segmentGroup,routes,segments,outlet,allowRedirects){var _this7=this;var/** @type {?} */routes$=__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"].apply(undefined,_toConsumableArray(routes));var/** @type {?} */processedRoutes$=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(routes$,function(r){var/** @type {?} */expanded$=_this7.expandSegmentAgainstRoute(injector,segmentGroup,routes,r,segments,outlet,allowRedirects);return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch__["_catch"].call(expanded$,function(e){if(e instanceof NoMatch){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(null);}throw e;});});var/** @type {?} */concattedProcessedRoutes$=__WEBPACK_IMPORTED_MODULE_14_rxjs_operator_concatAll__["concatAll"].call(processedRoutes$);var/** @type {?} */first$=__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_first__["first"].call(concattedProcessedRoutes$,function(s){return!!s;});return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch__["_catch"].call(first$,function(e,_){if(e instanceof __WEBPACK_IMPORTED_MODULE_15_rxjs_util_EmptyError__["EmptyError"]){if(_this7.noLeftoversInUrl(segmentGroup,segments,outlet)){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(new UrlSegmentGroup([],{}));}throw new NoMatch(segmentGroup);}throw e;});}/**
     * @param {?} segmentGroup
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'noLeftoversInUrl',value:function noLeftoversInUrl(segmentGroup,segments,outlet){return segments.length===0&&!segmentGroup.children[outlet];}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} route
     * @param {?} paths
     * @param {?} outlet
     * @param {?} allowRedirects
     * @return {?}
     */},{key:'expandSegmentAgainstRoute',value:function expandSegmentAgainstRoute(injector,segmentGroup,routes,route,paths,outlet,allowRedirects){if(getOutlet$1(route)!==outlet){return noMatch(segmentGroup);}if(route.redirectTo!==undefined&&!(allowRedirects&&this.allowRedirects)){return noMatch(segmentGroup);}if(route.redirectTo===undefined){return this.matchSegmentAgainstRoute(injector,segmentGroup,route,paths);}return this.expandSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,paths,outlet);}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} route
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'expandSegmentAgainstRouteUsingRedirect',value:function expandSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,segments,outlet){if(route.path==='**'){return this.expandWildCardWithParamsAgainstRouteUsingRedirect(injector,routes,route,outlet);}return this.expandRegularSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,segments,outlet);}/**
     * @param {?} injector
     * @param {?} routes
     * @param {?} route
     * @param {?} outlet
     * @return {?}
     */},{key:'expandWildCardWithParamsAgainstRouteUsingRedirect',value:function expandWildCardWithParamsAgainstRouteUsingRedirect(injector,routes,route,outlet){var _this8=this;var/** @type {?} */newTree=this.applyRedirectCommands([],route.redirectTo,{});if(route.redirectTo.startsWith('/')){return absoluteRedirect(newTree);}return __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(this.lineralizeSegments(route,newTree),function(newSegments){var/** @type {?} */group=new UrlSegmentGroup(newSegments,{});return _this8.expandSegment(injector,group,routes,newSegments,outlet,false);});}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} route
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'expandRegularSegmentAgainstRouteUsingRedirect',value:function expandRegularSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,segments,outlet){var _this9=this;var _match=match(segmentGroup,route,segments),matched=_match.matched,consumedSegments=_match.consumedSegments,lastChild=_match.lastChild,positionalParamSegments=_match.positionalParamSegments;if(!matched)return noMatch(segmentGroup);var/** @type {?} */newTree=this.applyRedirectCommands(consumedSegments,route.redirectTo,/** @type {?} */positionalParamSegments);if(route.redirectTo.startsWith('/')){return absoluteRedirect(newTree);}return __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(this.lineralizeSegments(route,newTree),function(newSegments){return _this9.expandSegment(injector,segmentGroup,routes,newSegments.concat(segments.slice(lastChild)),outlet,false);});}/**
     * @param {?} injector
     * @param {?} rawSegmentGroup
     * @param {?} route
     * @param {?} segments
     * @return {?}
     */},{key:'matchSegmentAgainstRoute',value:function matchSegmentAgainstRoute(injector,rawSegmentGroup,route,segments){var _this10=this;if(route.path==='**'){if(route.loadChildren){return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(this.configLoader.load(injector,route),function(cfg){route._loadedConfig=cfg;return new UrlSegmentGroup(segments,{});});}return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(new UrlSegmentGroup(segments,{}));}var _match2=match(rawSegmentGroup,route,segments),matched=_match2.matched,consumedSegments=_match2.consumedSegments,lastChild=_match2.lastChild;if(!matched)return noMatch(rawSegmentGroup);var/** @type {?} */rawSlicedSegments=segments.slice(lastChild);var/** @type {?} */childConfig$=this.getChildConfig(injector,route);return __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(childConfig$,function(routerConfig){var/** @type {?} */childInjector=routerConfig.injector;var/** @type {?} */childConfig=routerConfig.routes;var _split=split(rawSegmentGroup,consumedSegments,rawSlicedSegments,childConfig),segmentGroup=_split.segmentGroup,slicedSegments=_split.slicedSegments;if(slicedSegments.length===0&&segmentGroup.hasChildren()){var/** @type {?} */_expanded$=_this10.expandChildren(childInjector,childConfig,segmentGroup);return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(_expanded$,function(children){return new UrlSegmentGroup(consumedSegments,children);});}if(childConfig.length===0&&slicedSegments.length===0){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(new UrlSegmentGroup(consumedSegments,{}));}var/** @type {?} */expanded$=_this10.expandSegment(childInjector,segmentGroup,childConfig,slicedSegments,PRIMARY_OUTLET,true);return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(expanded$,function(cs){return new UrlSegmentGroup(consumedSegments.concat(cs.segments),cs.children);});});}/**
     * @param {?} injector
     * @param {?} route
     * @return {?}
     */},{key:'getChildConfig',value:function getChildConfig(injector,route){var _this11=this;if(route.children){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(new LoadedRouterConfig(route.children,injector,null,null));}if(route.loadChildren){return __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(runGuards(injector,route),function(shouldLoad){if(shouldLoad){return route._loadedConfig?__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(route._loadedConfig):__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(_this11.configLoader.load(injector,route),function(cfg){route._loadedConfig=cfg;return cfg;});}return canLoadFails(route);});}return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(new LoadedRouterConfig([],injector,null,null));}/**
     * @param {?} route
     * @param {?} urlTree
     * @return {?}
     */},{key:'lineralizeSegments',value:function lineralizeSegments(route,urlTree){var/** @type {?} */res=[];var/** @type {?} */c=urlTree.root;while(true){res=res.concat(c.segments);if(c.numberOfChildren===0){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(res);}if(c.numberOfChildren>1||!c.children[PRIMARY_OUTLET]){return namedOutletsRedirect(route.redirectTo);}c=c.children[PRIMARY_OUTLET];}}/**
     * @param {?} segments
     * @param {?} redirectTo
     * @param {?} posParams
     * @return {?}
     */},{key:'applyRedirectCommands',value:function applyRedirectCommands(segments,redirectTo,posParams){return this.applyRedirectCreatreUrlTree(redirectTo,this.urlSerializer.parse(redirectTo),segments,posParams);}/**
     * @param {?} redirectTo
     * @param {?} urlTree
     * @param {?} segments
     * @param {?} posParams
     * @return {?}
     */},{key:'applyRedirectCreatreUrlTree',value:function applyRedirectCreatreUrlTree(redirectTo,urlTree,segments,posParams){var/** @type {?} */newRoot=this.createSegmentGroup(redirectTo,urlTree.root,segments,posParams);return new UrlTree(newRoot,this.createQueryParams(urlTree.queryParams,this.urlTree.queryParams),urlTree.fragment);}/**
     * @param {?} redirectToParams
     * @param {?} actualParams
     * @return {?}
     */},{key:'createQueryParams',value:function createQueryParams(redirectToParams,actualParams){var/** @type {?} */res={};forEach(redirectToParams,function(v,k){res[k]=v.startsWith(':')?actualParams[v.substring(1)]:v;});return res;}/**
     * @param {?} redirectTo
     * @param {?} group
     * @param {?} segments
     * @param {?} posParams
     * @return {?}
     */},{key:'createSegmentGroup',value:function createSegmentGroup(redirectTo,group,segments,posParams){var _this12=this;var/** @type {?} */updatedSegments=this.createSegments(redirectTo,group.segments,segments,posParams);var/** @type {?} */children={};forEach(group.children,function(child,name){children[name]=_this12.createSegmentGroup(redirectTo,child,segments,posParams);});return new UrlSegmentGroup(updatedSegments,children);}/**
     * @param {?} redirectTo
     * @param {?} redirectToSegments
     * @param {?} actualSegments
     * @param {?} posParams
     * @return {?}
     */},{key:'createSegments',value:function createSegments(redirectTo,redirectToSegments,actualSegments,posParams){var _this13=this;return redirectToSegments.map(function(s){return s.path.startsWith(':')?_this13.findPosParam(redirectTo,s,posParams):_this13.findOrReturn(s,actualSegments);});}/**
     * @param {?} redirectTo
     * @param {?} redirectToUrlSegment
     * @param {?} posParams
     * @return {?}
     */},{key:'findPosParam',value:function findPosParam(redirectTo,redirectToUrlSegment,posParams){var/** @type {?} */pos=posParams[redirectToUrlSegment.path.substring(1)];if(!pos)throw new Error('Cannot redirect to \''+redirectTo+'\'. Cannot find \''+redirectToUrlSegment.path+'\'.');return pos;}/**
     * @param {?} redirectToUrlSegment
     * @param {?} actualSegments
     * @return {?}
     */},{key:'findOrReturn',value:function findOrReturn(redirectToUrlSegment,actualSegments){var/** @type {?} */idx=0;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=actualSegments[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var s=_step.value;if(s.path===redirectToUrlSegment.path){actualSegments.splice(idx);return s;}idx++;}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return redirectToUrlSegment;}}]);return ApplyRedirects;}();/**
 * @param {?} injector
 * @param {?} route
 * @return {?}
 */function runGuards(injector,route){var/** @type {?} */canLoad=route.canLoad;if(!canLoad||canLoad.length===0)return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(true);var/** @type {?} */obs=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(canLoad),function(c){var/** @type {?} */guard=injector.get(c);return wrapIntoObservable(guard.canLoad?guard.canLoad(route):guard(route));});return andObservables(obs);}/**
 * @param {?} segmentGroup
 * @param {?} route
 * @param {?} segments
 * @return {?}
 */function match(segmentGroup,route,segments){var/** @type {?} */noMatch={matched:false,consumedSegments:/** @type {?} */[],lastChild:0,positionalParamSegments:{}};if(route.path===''){if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||segments.length>0)){return{matched:false,consumedSegments:[],lastChild:0,positionalParamSegments:{}};}return{matched:true,consumedSegments:[],lastChild:0,positionalParamSegments:{}};}var/** @type {?} */matcher=route.matcher||defaultUrlMatcher;var/** @type {?} */res=matcher(segments,segmentGroup,route);if(!res)return noMatch;return{matched:true,consumedSegments:res.consumed,lastChild:res.consumed.length,positionalParamSegments:res.posParams};}/**
 * @param {?} segmentGroup
 * @param {?} consumedSegments
 * @param {?} slicedSegments
 * @param {?} config
 * @return {?}
 */function split(segmentGroup,consumedSegments,slicedSegments,config){if(slicedSegments.length>0&&containsEmptyPathRedirectsWithNamedOutlets(segmentGroup,slicedSegments,config)){var/** @type {?} */s=new UrlSegmentGroup(consumedSegments,createChildrenForEmptySegments(config,new UrlSegmentGroup(slicedSegments,segmentGroup.children)));return{segmentGroup:mergeTrivialChildren(s),slicedSegments:[]};}if(slicedSegments.length===0&&containsEmptyPathRedirects(segmentGroup,slicedSegments,config)){var/** @type {?} */_s=new UrlSegmentGroup(segmentGroup.segments,addEmptySegmentsToChildrenIfNeeded(segmentGroup,slicedSegments,config,segmentGroup.children));return{segmentGroup:mergeTrivialChildren(_s),slicedSegments:slicedSegments};}return{segmentGroup:segmentGroup,slicedSegments:slicedSegments};}/**
 * @param {?} s
 * @return {?}
 */function mergeTrivialChildren(s){if(s.numberOfChildren===1&&s.children[PRIMARY_OUTLET]){var/** @type {?} */c=s.children[PRIMARY_OUTLET];return new UrlSegmentGroup(s.segments.concat(c.segments),c.children);}return s;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @param {?} children
 * @return {?}
 */function addEmptySegmentsToChildrenIfNeeded(segmentGroup,slicedSegments,routes,children){var/** @type {?} */res={};var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=routes[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var r=_step2.value;if(emptyPathRedirect(segmentGroup,slicedSegments,r)&&!children[getOutlet$1(r)]){res[getOutlet$1(r)]=new UrlSegmentGroup([],{});}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return merge(children,res);}/**
 * @param {?} routes
 * @param {?} primarySegmentGroup
 * @return {?}
 */function createChildrenForEmptySegments(routes,primarySegmentGroup){var/** @type {?} */res={};res[PRIMARY_OUTLET]=primarySegmentGroup;var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=routes[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var r=_step3.value;if(r.path===''&&getOutlet$1(r)!==PRIMARY_OUTLET){res[getOutlet$1(r)]=new UrlSegmentGroup([],{});}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return res;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathRedirect(segmentGroup,slicedSegments,r)&&getOutlet$1(r)!==PRIMARY_OUTLET;}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathRedirects(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathRedirect(segmentGroup,slicedSegments,r);}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} r
 * @return {?}
 */function emptyPathRedirect(segmentGroup,slicedSegments,r){if((segmentGroup.hasChildren()||slicedSegments.length>0)&&r.pathMatch==='full'){return false;}return r.path===''&&r.redirectTo!==undefined;}/**
 * @param {?} route
 * @return {?}
 */function getOutlet$1(route){return route.outlet?route.outlet:PRIMARY_OUTLET;}/**
 * @param {?} config
 * @param {?=} parentPath
 * @return {?}
 */function validateConfig(config){var parentPath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';// forEach doesn't iterate undefined values
for(var/** @type {?} */i=0;i<config.length;i++){var/** @type {?} */route=config[i];var/** @type {?} */fullPath=getFullPath(parentPath,route);validateNode(route,fullPath);}}/**
 * @param {?} route
 * @param {?} fullPath
 * @return {?}
 */function validateNode(route,fullPath){if(!route){throw new Error('\n      Invalid configuration of route \''+fullPath+'\': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: \'\', redirectTo: \'/dashboard\', pathMatch: \'full\' },\n        { path: \'dashboard\',  component: DashboardComponent },, << two commas\n        { path: \'detail/:id\', component: HeroDetailComponent }\n      ];\n    ');}if(Array.isArray(route)){throw new Error('Invalid configuration of route \''+fullPath+'\': Array cannot be specified');}if(!route.component&&route.outlet&&route.outlet!==PRIMARY_OUTLET){throw new Error('Invalid configuration of route \''+fullPath+'\': a componentless route cannot have a named outlet set');}if(route.redirectTo&&route.children){throw new Error('Invalid configuration of route \''+fullPath+'\': redirectTo and children cannot be used together');}if(route.redirectTo&&route.loadChildren){throw new Error('Invalid configuration of route \''+fullPath+'\': redirectTo and loadChildren cannot be used together');}if(route.children&&route.loadChildren){throw new Error('Invalid configuration of route \''+fullPath+'\': children and loadChildren cannot be used together');}if(route.redirectTo&&route.component){throw new Error('Invalid configuration of route \''+fullPath+'\': redirectTo and component cannot be used together');}if(route.path&&route.matcher){throw new Error('Invalid configuration of route \''+fullPath+'\': path and matcher cannot be used together');}if(route.redirectTo===void 0&&!route.component&&!route.children&&!route.loadChildren){throw new Error('Invalid configuration of route \''+fullPath+'\'. One of the following must be provided: component, redirectTo, children or loadChildren');}if(route.path===void 0&&route.matcher===void 0){throw new Error('Invalid configuration of route \''+fullPath+'\': routes must have either a path or a matcher specified');}if(typeof route.path==='string'&&route.path.charAt(0)==='/'){throw new Error('Invalid configuration of route \''+fullPath+'\': path cannot start with a slash');}if(route.path===''&&route.redirectTo!==void 0&&route.pathMatch===void 0){var/** @type {?} */exp='The default value of \'pathMatch\' is \'prefix\', but often the intent is to use \'full\'.';throw new Error('Invalid configuration of route \'{path: "'+fullPath+'", redirectTo: "'+route.redirectTo+'"}\': please provide \'pathMatch\'. '+exp);}if(route.pathMatch!==void 0&&route.pathMatch!=='full'&&route.pathMatch!=='prefix'){throw new Error('Invalid configuration of route \''+fullPath+'\': pathMatch can only be set to \'prefix\' or \'full\'');}if(route.children){validateConfig(route.children,fullPath);}}/**
 * @param {?} parentPath
 * @param {?} currentRoute
 * @return {?}
 */function getFullPath(parentPath,currentRoute){if(!currentRoute){return parentPath;}if(!parentPath&&!currentRoute.path){return'';}else if(parentPath&&!currentRoute.path){return parentPath+'/';}else if(!parentPath&&currentRoute.path){return currentRoute.path;}else{return parentPath+'/'+currentRoute.path;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Tree=function(){/**
     * @param {?} root
     */function Tree(root){_classCallCheck(this,Tree);this._root=root;}/**
     * @return {?}
     */_createClass(Tree,[{key:'parent',/**
     * \@internal
     * @param {?} t
     * @return {?}
     */value:function parent(t){var/** @type {?} */p=this.pathFromRoot(t);return p.length>1?p[p.length-2]:null;}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'children',value:function children(t){var/** @type {?} */n=findNode(t,this._root);return n?n.children.map(function(t){return t.value;}):[];}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'firstChild',value:function firstChild(t){var/** @type {?} */n=findNode(t,this._root);return n&&n.children.length>0?n.children[0].value:null;}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'siblings',value:function siblings(t){var/** @type {?} */p=findPath(t,this._root,[]);if(p.length<2)return[];var/** @type {?} */c=p[p.length-2].children.map(function(c){return c.value;});return c.filter(function(cc){return cc!==t;});}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'pathFromRoot',value:function pathFromRoot(t){return findPath(t,this._root,[]).map(function(s){return s.value;});}},{key:'root',get:function get(){return this._root.value;}}]);return Tree;}();/**
 * @param {?} expected
 * @param {?} c
 * @return {?}
 */function findNode(expected,c){if(expected===c.value)return c;var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=c.children[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var cc=_step4.value;var/** @type {?} */r=findNode(expected,cc);if(r)return r;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}return null;}/**
 * @param {?} expected
 * @param {?} c
 * @param {?} collected
 * @return {?}
 */function findPath(expected,c,collected){collected.push(c);if(expected===c.value)return collected;var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=c.children[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var cc=_step5.value;var/** @type {?} */cloned=collected.slice(0);var/** @type {?} */r=findPath(expected,cc,cloned);if(r.length>0)return r;}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return[];}var TreeNode=function(){/**
     * @param {?} value
     * @param {?} children
     */function TreeNode(value,children){_classCallCheck(this,TreeNode);this.value=value;this.children=children;}/**
     * @return {?}
     */_createClass(TreeNode,[{key:'toString',value:function toString(){return'TreeNode('+this.value+')';}}]);return TreeNode;}();/**
 * \@whatItDoes Represents the state of the router.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const root: ActivatedRoute = state.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * \@description
 * RouterState is a tree of activated routes. Every node in this tree knows about the "consumed" URL
 * segments,
 * the extracted parameters, and the resolved data.
 *
 * See {\@link ActivatedRoute} for more information.
 *
 * \@stable
 */var RouterState=function(_Tree){_inherits(RouterState,_Tree);/**
     * \@internal
     * @param {?} root
     * @param {?} snapshot
     */function RouterState(root,snapshot){_classCallCheck(this,RouterState);var _this14=_possibleConstructorReturn(this,(RouterState.__proto__||Object.getPrototypeOf(RouterState)).call(this,root));_this14.snapshot=snapshot;setRouterStateSnapshot(_this14,root);return _this14;}/**
     * @return {?}
     */_createClass(RouterState,[{key:'toString',value:function toString(){return this.snapshot.toString();}}]);return RouterState;}(Tree);/**
 * @param {?} urlTree
 * @param {?} rootComponent
 * @return {?}
 */function createEmptyState(urlTree,rootComponent){var/** @type {?} */snapshot=createEmptyStateSnapshot(urlTree,rootComponent);var/** @type {?} */emptyUrl=new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"]([new UrlSegment('',{})]);var/** @type {?} */emptyParams=new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"]({});var/** @type {?} */emptyData=new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"]({});var/** @type {?} */emptyQueryParams=new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"]({});var/** @type {?} */fragment=new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"]('');var/** @type {?} */activated=new ActivatedRoute(emptyUrl,emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,snapshot.root);activated.snapshot=snapshot.root;return new RouterState(new TreeNode(activated,[]),snapshot);}/**
 * @param {?} urlTree
 * @param {?} rootComponent
 * @return {?}
 */function createEmptyStateSnapshot(urlTree,rootComponent){var/** @type {?} */emptyParams={};var/** @type {?} */emptyData={};var/** @type {?} */emptyQueryParams={};var/** @type {?} */fragment='';var/** @type {?} */activated=new ActivatedRouteSnapshot([],emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,null,urlTree.root,-1,{});return new RouterStateSnapshot('',new TreeNode(activated,[]));}/**
 * \@whatItDoes Contains the information about a route associated with a component loaded in an
 * outlet.
 * An `ActivatedRoute` can also be used to traverse the router state tree.
 *
 * \@howToUse
 *
 * ```
 * \@Component({...})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: Observable<string> = route.params.map(p => p.id);
 *     const url: Observable<string> = route.url.map(segments => segments.join(''));
 *     // route.data includes both `data` and `resolve`
 *     const user = route.data.map(d => d.user);
 *   }
 * }
 * ```
 *
 * \@stable
 */var ActivatedRoute=function(){/**
     * \@internal
     * @param {?} url
     * @param {?} params
     * @param {?} queryParams
     * @param {?} fragment
     * @param {?} data
     * @param {?} outlet
     * @param {?} component
     * @param {?} futureSnapshot
     */function ActivatedRoute(url,params,queryParams,fragment,data,outlet,component,futureSnapshot){_classCallCheck(this,ActivatedRoute);this.url=url;this.params=params;this.queryParams=queryParams;this.fragment=fragment;this.data=data;this.outlet=outlet;this.component=component;this._futureSnapshot=futureSnapshot;}/**
     * The configuration used to match this route
     * @return {?}
     */_createClass(ActivatedRoute,[{key:'toString',/**
     * @return {?}
     */value:function toString(){return this.snapshot?this.snapshot.toString():'Future('+this._futureSnapshot+')';}},{key:'routeConfig',get:function get(){return this._futureSnapshot.routeConfig;}/**
     * The root of the router state
     * @return {?}
     */},{key:'root',get:function get(){return this._routerState.root;}/**
     * The parent of this route in the router state tree
     * @return {?}
     */},{key:'parent',get:function get(){return this._routerState.parent(this);}/**
     * The first child of this route in the router state tree
     * @return {?}
     */},{key:'firstChild',get:function get(){return this._routerState.firstChild(this);}/**
     * The children of this route in the router state tree
     * @return {?}
     */},{key:'children',get:function get(){return this._routerState.children(this);}/**
     * The path from the root of the router state tree to this route
     * @return {?}
     */},{key:'pathFromRoot',get:function get(){return this._routerState.pathFromRoot(this);}}]);return ActivatedRoute;}();/**
 * \@internal
 * @param {?} route
 * @return {?}
 */function inheritedParamsDataResolve(route){var/** @type {?} */pathToRoot=route.pathFromRoot;var/** @type {?} */inhertingStartingFrom=pathToRoot.length-1;while(inhertingStartingFrom>=1){var/** @type {?} */current=pathToRoot[inhertingStartingFrom];var/** @type {?} */parent=pathToRoot[inhertingStartingFrom-1];// current route is an empty path => inherits its parent's params and data
if(current.routeConfig&&current.routeConfig.path===''){inhertingStartingFrom--;}else if(!parent.component){inhertingStartingFrom--;}else{break;}}return pathToRoot.slice(inhertingStartingFrom).reduce(function(res,curr){var/** @type {?} */params=merge(res.params,curr.params);var/** @type {?} */data=merge(res.data,curr.data);var/** @type {?} */resolve=merge(res.resolve,curr._resolvedData);return{params:params,data:data,resolve:resolve};},/** @type {?} */{params:{},data:{},resolve:{}});}/**
 * \@whatItDoes Contains the information about a route associated with a component loaded in an
 * outlet
 * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router
 * state tree.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'./my-component.html'})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: string = route.snapshot.params.id;
 *     const url: string = route.snapshot.url.join('');
 *     const user = route.snapshot.data.user;
 *   }
 * }
 * ```
 *
 * \@stable
 */var ActivatedRouteSnapshot=function(){/**
     * \@internal
     * @param {?} url
     * @param {?} params
     * @param {?} queryParams
     * @param {?} fragment
     * @param {?} data
     * @param {?} outlet
     * @param {?} component
     * @param {?} routeConfig
     * @param {?} urlSegment
     * @param {?} lastPathIndex
     * @param {?} resolve
     */function ActivatedRouteSnapshot(url,params,queryParams,fragment,data,outlet,component,routeConfig,urlSegment,lastPathIndex,resolve){_classCallCheck(this,ActivatedRouteSnapshot);this.url=url;this.params=params;this.queryParams=queryParams;this.fragment=fragment;this.data=data;this.outlet=outlet;this.component=component;this._routeConfig=routeConfig;this._urlSegment=urlSegment;this._lastPathIndex=lastPathIndex;this._resolve=resolve;}/**
     * The configuration used to match this route
     * @return {?}
     */_createClass(ActivatedRouteSnapshot,[{key:'toString',/**
     * @return {?}
     */value:function toString(){var/** @type {?} */url=this.url.map(function(segment){return segment.toString();}).join('/');var/** @type {?} */matched=this._routeConfig?this._routeConfig.path:'';return'Route(url:\''+url+'\', path:\''+matched+'\')';}},{key:'routeConfig',get:function get(){return this._routeConfig;}/**
     * The root of the router state
     * @return {?}
     */},{key:'root',get:function get(){return this._routerState.root;}/**
     * The parent of this route in the router state tree
     * @return {?}
     */},{key:'parent',get:function get(){return this._routerState.parent(this);}/**
     * The first child of this route in the router state tree
     * @return {?}
     */},{key:'firstChild',get:function get(){return this._routerState.firstChild(this);}/**
     * The children of this route in the router state tree
     * @return {?}
     */},{key:'children',get:function get(){return this._routerState.children(this);}/**
     * The path from the root of the router state tree to this route
     * @return {?}
     */},{key:'pathFromRoot',get:function get(){return this._routerState.pathFromRoot(this);}}]);return ActivatedRouteSnapshot;}();/**
 * \@whatItDoes Represents the state of the router at a moment in time.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const snapshot: RouterStateSnapshot = state.snapshot;
 *     const root: ActivatedRouteSnapshot = snapshot.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * \@description
 * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about
 * the "consumed" URL segments, the extracted parameters, and the resolved data.
 *
 * \@stable
 */var RouterStateSnapshot=function(_Tree2){_inherits(RouterStateSnapshot,_Tree2);/**
     * \@internal
     * @param {?} url
     * @param {?} root
     */function RouterStateSnapshot(url,root){_classCallCheck(this,RouterStateSnapshot);var _this15=_possibleConstructorReturn(this,(RouterStateSnapshot.__proto__||Object.getPrototypeOf(RouterStateSnapshot)).call(this,root));_this15.url=url;setRouterStateSnapshot(_this15,root);return _this15;}/**
     * @return {?}
     */_createClass(RouterStateSnapshot,[{key:'toString',value:function toString(){return serializeNode(this._root);}}]);return RouterStateSnapshot;}(Tree);/**
 * @param {?} state
 * @param {?} node
 * @return {?}
 */function setRouterStateSnapshot(state,node){node.value._routerState=state;node.children.forEach(function(c){return setRouterStateSnapshot(state,c);});}/**
 * @param {?} node
 * @return {?}
 */function serializeNode(node){var/** @type {?} */c=node.children.length>0?' { '+node.children.map(serializeNode).join(", ")+' } ':'';return''+node.value+c;}/**
 * The expectation is that the activate route is created with the right set of parameters.
 * So we push new values into the observables only when they are not the initial values.
 * And we detect that by checking if the snapshot field is set.
 * @param {?} route
 * @return {?}
 */function advanceActivatedRoute(route){if(route.snapshot){var/** @type {?} */currentSnapshot=route.snapshot;route.snapshot=route._futureSnapshot;if(!shallowEqual(currentSnapshot.queryParams,route._futureSnapshot.queryParams)){route.queryParams.next(route._futureSnapshot.queryParams);}if(currentSnapshot.fragment!==route._futureSnapshot.fragment){route.fragment.next(route._futureSnapshot.fragment);}if(!shallowEqual(currentSnapshot.params,route._futureSnapshot.params)){route.params.next(route._futureSnapshot.params);}if(!shallowEqualArrays(currentSnapshot.url,route._futureSnapshot.url)){route.url.next(route._futureSnapshot.url);}if(!equalParamsAndUrlSegments(currentSnapshot,route._futureSnapshot)){route.data.next(route._futureSnapshot.data);}}else{route.snapshot=route._futureSnapshot;// this is for resolved data
route.data.next(route._futureSnapshot.data);}}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function equalParamsAndUrlSegments(a,b){var/** @type {?} */equalUrlParams=shallowEqual(a.params,b.params)&&equalSegments(a.url,b.url);var/** @type {?} */parentsMismatch=!a.parent!==!b.parent;return equalUrlParams&&!parentsMismatch&&(!a.parent||equalParamsAndUrlSegments(a.parent,b.parent));}/**
 * @param {?} routeReuseStrategy
 * @param {?} curr
 * @param {?} prevState
 * @return {?}
 */function createRouterState(routeReuseStrategy,curr,prevState){var/** @type {?} */root=createNode(routeReuseStrategy,curr._root,prevState?prevState._root:undefined);return new RouterState(root,curr);}/**
 * @param {?} routeReuseStrategy
 * @param {?} curr
 * @param {?=} prevState
 * @return {?}
 */function createNode(routeReuseStrategy,curr,prevState){// reuse an activated route that is currently displayed on the screen
if(prevState&&routeReuseStrategy.shouldReuseRoute(curr.value,prevState.value.snapshot)){var/** @type {?} */value=prevState.value;value._futureSnapshot=curr.value;var/** @type {?} */children=createOrReuseChildren(routeReuseStrategy,curr,prevState);return new TreeNode(value,children);}else if(routeReuseStrategy.retrieve(curr.value)){var/** @type {?} */_tree=routeReuseStrategy.retrieve(curr.value).route;setFutureSnapshotsOfActivatedRoutes(curr,_tree);return _tree;}else{var/** @type {?} */_value=createActivatedRoute(curr.value);var/** @type {?} */_children2=curr.children.map(function(c){return createNode(routeReuseStrategy,c);});return new TreeNode(_value,_children2);}}/**
 * @param {?} curr
 * @param {?} result
 * @return {?}
 */function setFutureSnapshotsOfActivatedRoutes(curr,result){if(curr.value.routeConfig!==result.value.routeConfig){throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');}if(curr.children.length!==result.children.length){throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');}result.value._futureSnapshot=curr.value;for(var/** @type {?} */i=0;i<curr.children.length;++i){setFutureSnapshotsOfActivatedRoutes(curr.children[i],result.children[i]);}}/**
 * @param {?} routeReuseStrategy
 * @param {?} curr
 * @param {?} prevState
 * @return {?}
 */function createOrReuseChildren(routeReuseStrategy,curr,prevState){return curr.children.map(function(child){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=prevState.children[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var p=_step6.value;if(routeReuseStrategy.shouldReuseRoute(p.value.snapshot,child.value)){return createNode(routeReuseStrategy,child,p);}}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}return createNode(routeReuseStrategy,child);});}/**
 * @param {?} c
 * @return {?}
 */function createActivatedRoute(c){return new ActivatedRoute(new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](c.url),new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](c.params),new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](c.queryParams),new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](c.fragment),new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](c.data),c.outlet,c.component,c);}/**
 * @param {?} route
 * @param {?} urlTree
 * @param {?} commands
 * @param {?} queryParams
 * @param {?} fragment
 * @return {?}
 */function _createUrlTree(route,urlTree,commands,queryParams,fragment){if(commands.length===0){return tree(urlTree.root,urlTree.root,urlTree,queryParams,fragment);}var/** @type {?} */nav=computeNavigation(commands);if(nav.toRoot()){return tree(urlTree.root,new UrlSegmentGroup([],{}),urlTree,queryParams,fragment);}var/** @type {?} */startingPosition=findStartingPosition(nav,urlTree,route);var/** @type {?} */segmentGroup=startingPosition.processChildren?updateSegmentGroupChildren(startingPosition.segmentGroup,startingPosition.index,nav.commands):updateSegmentGroup(startingPosition.segmentGroup,startingPosition.index,nav.commands);return tree(startingPosition.segmentGroup,segmentGroup,urlTree,queryParams,fragment);}/**
 * @param {?} command
 * @return {?}
 */function isMatrixParams(command){return(typeof command==='undefined'?'undefined':_typeof(command))==='object'&&command!=null&&!command.outlets&&!command.segmentPath;}/**
 * @param {?} oldSegmentGroup
 * @param {?} newSegmentGroup
 * @param {?} urlTree
 * @param {?} queryParams
 * @param {?} fragment
 * @return {?}
 */function tree(oldSegmentGroup,newSegmentGroup,urlTree,queryParams,fragment){if(urlTree.root===oldSegmentGroup){return new UrlTree(newSegmentGroup,stringify(queryParams),fragment);}return new UrlTree(replaceSegment(urlTree.root,oldSegmentGroup,newSegmentGroup),stringify(queryParams),fragment);}/**
 * @param {?} current
 * @param {?} oldSegment
 * @param {?} newSegment
 * @return {?}
 */function replaceSegment(current,oldSegment,newSegment){var/** @type {?} */children={};forEach(current.children,function(c,outletName){if(c===oldSegment){children[outletName]=newSegment;}else{children[outletName]=replaceSegment(c,oldSegment,newSegment);}});return new UrlSegmentGroup(current.segments,children);}var Navigation=function(){/**
     * @param {?} isAbsolute
     * @param {?} numberOfDoubleDots
     * @param {?} commands
     */function Navigation(isAbsolute,numberOfDoubleDots,commands){_classCallCheck(this,Navigation);this.isAbsolute=isAbsolute;this.numberOfDoubleDots=numberOfDoubleDots;this.commands=commands;if(isAbsolute&&commands.length>0&&isMatrixParams(commands[0])){throw new Error('Root segment cannot have matrix parameters');}var cmdWithOutlet=commands.find(function(c){return(typeof c==='undefined'?'undefined':_typeof(c))==='object'&&c!=null&&c.outlets;});if(cmdWithOutlet&&cmdWithOutlet!==last(commands)){throw new Error('{outlets:{}} has to be the last command');}}/**
     * @return {?}
     */_createClass(Navigation,[{key:'toRoot',value:function toRoot(){return this.isAbsolute&&this.commands.length===1&&this.commands[0]=='/';}}]);return Navigation;}();/**
 * Transforms commands to a normalized `Navigation`
 * @param {?} commands
 * @return {?}
 */function computeNavigation(commands){if(typeof commands[0]==='string'&&commands.length===1&&commands[0]==='/'){return new Navigation(true,0,commands);}var/** @type {?} */numberOfDoubleDots=0;var/** @type {?} */isAbsolute=false;var/** @type {?} */res=commands.reduce(function(res,cmd,cmdIdx){if((typeof cmd==='undefined'?'undefined':_typeof(cmd))==='object'&&cmd!=null){if(cmd.outlets){var/** @type {?} */outlets={};forEach(cmd.outlets,function(commands,name){outlets[name]=typeof commands==='string'?commands.split('/'):commands;});return[].concat(_toConsumableArray(res),[{outlets:outlets}]);}if(cmd.segmentPath){return[].concat(_toConsumableArray(res),[cmd.segmentPath]);}}if(!(typeof cmd==='string')){return[].concat(_toConsumableArray(res),[cmd]);}if(cmdIdx===0){cmd.split('/').forEach(function(urlPart,partIndex){if(partIndex==0&&urlPart==='.'){}else if(partIndex==0&&urlPart===''){isAbsolute=true;}else if(urlPart==='..'){numberOfDoubleDots++;}else if(urlPart!=''){res.push(urlPart);}});return res;}return[].concat(_toConsumableArray(res),[cmd]);},[]);return new Navigation(isAbsolute,numberOfDoubleDots,res);}var Position=/**
     * @param {?} segmentGroup
     * @param {?} processChildren
     * @param {?} index
     */function Position(segmentGroup,processChildren,index){_classCallCheck(this,Position);this.segmentGroup=segmentGroup;this.processChildren=processChildren;this.index=index;};/**
 * @param {?} nav
 * @param {?} tree
 * @param {?} route
 * @return {?}
 */function findStartingPosition(nav,tree,route){if(nav.isAbsolute){return new Position(tree.root,true,0);}if(route.snapshot._lastPathIndex===-1){return new Position(route.snapshot._urlSegment,true,0);}var/** @type {?} */modifier=isMatrixParams(nav.commands[0])?0:1;var/** @type {?} */index=route.snapshot._lastPathIndex+modifier;return createPositionApplyingDoubleDots(route.snapshot._urlSegment,index,nav.numberOfDoubleDots);}/**
 * @param {?} group
 * @param {?} index
 * @param {?} numberOfDoubleDots
 * @return {?}
 */function createPositionApplyingDoubleDots(group,index,numberOfDoubleDots){var/** @type {?} */g=group;var/** @type {?} */ci=index;var/** @type {?} */dd=numberOfDoubleDots;while(dd>ci){dd-=ci;g=g.parent;if(!g){throw new Error('Invalid number of \'../\'');}ci=g.segments.length;}return new Position(g,false,ci-dd);}/**
 * @param {?} command
 * @return {?}
 */function getPath(command){if((typeof command==='undefined'?'undefined':_typeof(command))==='object'&&command!=null&&command.outlets){return command.outlets[PRIMARY_OUTLET];}return''+command;}/**
 * @param {?} commands
 * @return {?}
 */function getOutlets(commands){if(!(_typeof(commands[0])==='object'))return _defineProperty({},PRIMARY_OUTLET,commands);if(commands[0].outlets===undefined)return _defineProperty({},PRIMARY_OUTLET,commands);return commands[0].outlets;}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function updateSegmentGroup(segmentGroup,startIndex,commands){if(!segmentGroup){segmentGroup=new UrlSegmentGroup([],{});}if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return updateSegmentGroupChildren(segmentGroup,startIndex,commands);}var/** @type {?} */m=prefixedWith(segmentGroup,startIndex,commands);var/** @type {?} */slicedCommands=commands.slice(m.commandIndex);if(m.match&&m.pathIndex<segmentGroup.segments.length){var/** @type {?} */g=new UrlSegmentGroup(segmentGroup.segments.slice(0,m.pathIndex),{});g.children[PRIMARY_OUTLET]=new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex),segmentGroup.children);return updateSegmentGroupChildren(g,0,slicedCommands);}else if(m.match&&slicedCommands.length===0){return new UrlSegmentGroup(segmentGroup.segments,{});}else if(m.match&&!segmentGroup.hasChildren()){return createNewSegmentGroup(segmentGroup,startIndex,commands);}else if(m.match){return updateSegmentGroupChildren(segmentGroup,0,slicedCommands);}else{return createNewSegmentGroup(segmentGroup,startIndex,commands);}}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function updateSegmentGroupChildren(segmentGroup,startIndex,commands){if(commands.length===0){return new UrlSegmentGroup(segmentGroup.segments,{});}else{var/** @type {?} */outlets=getOutlets(commands);var/** @type {?} */children={};forEach(outlets,function(commands,outlet){if(commands!==null){children[outlet]=updateSegmentGroup(segmentGroup.children[outlet],startIndex,commands);}});forEach(segmentGroup.children,function(child,childOutlet){if(outlets[childOutlet]===undefined){children[childOutlet]=child;}});return new UrlSegmentGroup(segmentGroup.segments,children);}}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function prefixedWith(segmentGroup,startIndex,commands){var/** @type {?} */currentCommandIndex=0;var/** @type {?} */currentPathIndex=startIndex;var/** @type {?} */noMatch={match:false,pathIndex:0,commandIndex:0};while(currentPathIndex<segmentGroup.segments.length){if(currentCommandIndex>=commands.length)return noMatch;var/** @type {?} */path=segmentGroup.segments[currentPathIndex];var/** @type {?} */curr=getPath(commands[currentCommandIndex]);var/** @type {?} */next=currentCommandIndex<commands.length-1?commands[currentCommandIndex+1]:null;if(currentPathIndex>0&&curr===undefined)break;if(curr&&next&&(typeof next==='undefined'?'undefined':_typeof(next))==='object'&&next.outlets===undefined){if(!compare(curr,next,path))return noMatch;currentCommandIndex+=2;}else{if(!compare(curr,{},path))return noMatch;currentCommandIndex++;}currentPathIndex++;}return{match:true,pathIndex:currentPathIndex,commandIndex:currentCommandIndex};}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function createNewSegmentGroup(segmentGroup,startIndex,commands){var/** @type {?} */paths=segmentGroup.segments.slice(0,startIndex);var/** @type {?} */i=0;while(i<commands.length){if(_typeof(commands[i])==='object'&&commands[i].outlets!==undefined){var/** @type {?} */children=createNewSegmentChildren(commands[i].outlets);return new UrlSegmentGroup(paths,children);}// if we start with an object literal, we need to reuse the path part from the segment
if(i===0&&isMatrixParams(commands[0])){var/** @type {?} */p=segmentGroup.segments[startIndex];paths.push(new UrlSegment(p.path,commands[0]));i++;continue;}var/** @type {?} */curr=getPath(commands[i]);var/** @type {?} */next=i<commands.length-1?commands[i+1]:null;if(curr&&next&&isMatrixParams(next)){paths.push(new UrlSegment(curr,stringify(next)));i+=2;}else{paths.push(new UrlSegment(curr,{}));i++;}}return new UrlSegmentGroup(paths,{});}/**
 * @param {?} outlets
 * @return {?}
 */function createNewSegmentChildren(outlets){var/** @type {?} */children={};forEach(outlets,function(commands,outlet){if(commands!==null){children[outlet]=createNewSegmentGroup(new UrlSegmentGroup([],{}),0,commands);}});return children;}/**
 * @param {?} params
 * @return {?}
 */function stringify(params){var/** @type {?} */res={};forEach(params,function(v,k){return res[k]=''+v;});return res;}/**
 * @param {?} path
 * @param {?} params
 * @param {?} segment
 * @return {?}
 */function compare(path,params,segment){return path==segment.path&&shallowEqual(params,segment.parameters);}var NoMatch$1=function NoMatch$1(){_classCallCheck(this,NoMatch$1);};/**
 * @param {?} rootComponentType
 * @param {?} config
 * @param {?} urlTree
 * @param {?} url
 * @return {?}
 */function recognize(rootComponentType,config,urlTree,url){return new Recognizer(rootComponentType,config,urlTree,url).recognize();}var Recognizer=function(){/**
     * @param {?} rootComponentType
     * @param {?} config
     * @param {?} urlTree
     * @param {?} url
     */function Recognizer(rootComponentType,config,urlTree,url){_classCallCheck(this,Recognizer);this.rootComponentType=rootComponentType;this.config=config;this.urlTree=urlTree;this.url=url;}/**
     * @return {?}
     */_createClass(Recognizer,[{key:'recognize',value:function recognize(){try{var/** @type {?} */rootSegmentGroup=split$1(this.urlTree.root,[],[],this.config).segmentGroup;var/** @type {?} */children=this.processSegmentGroup(this.config,rootSegmentGroup,PRIMARY_OUTLET);var/** @type {?} */root=new ActivatedRouteSnapshot([],Object.freeze({}),Object.freeze(this.urlTree.queryParams),this.urlTree.fragment,{},PRIMARY_OUTLET,this.rootComponentType,null,this.urlTree.root,-1,{});var/** @type {?} */rootNode=new TreeNode(root,children);var/** @type {?} */routeState=new RouterStateSnapshot(this.url,rootNode);this.inheriteParamsAndData(routeState._root);return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(routeState);}catch(e){return new __WEBPACK_IMPORTED_MODULE_12_rxjs_Observable__["Observable"](function(obs){return obs.error(e);});}}/**
     * @param {?} routeNode
     * @return {?}
     */},{key:'inheriteParamsAndData',value:function inheriteParamsAndData(routeNode){var _this16=this;var/** @type {?} */route=routeNode.value;var/** @type {?} */i=inheritedParamsDataResolve(route);route.params=Object.freeze(i.params);route.data=Object.freeze(i.data);routeNode.children.forEach(function(n){return _this16.inheriteParamsAndData(n);});}/**
     * @param {?} config
     * @param {?} segmentGroup
     * @param {?} outlet
     * @return {?}
     */},{key:'processSegmentGroup',value:function processSegmentGroup(config,segmentGroup,outlet){if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return this.processChildren(config,segmentGroup);}else{return this.processSegment(config,segmentGroup,segmentGroup.segments,outlet);}}/**
     * @param {?} config
     * @param {?} segmentGroup
     * @return {?}
     */},{key:'processChildren',value:function processChildren(config,segmentGroup){var _this17=this;var/** @type {?} */children=mapChildrenIntoArray(segmentGroup,function(child,childOutlet){return _this17.processSegmentGroup(config,child,childOutlet);});checkOutletNameUniqueness(children);sortActivatedRouteSnapshots(children);return children;}/**
     * @param {?} config
     * @param {?} segmentGroup
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'processSegment',value:function processSegment(config,segmentGroup,segments,outlet){var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=config[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var r=_step7.value;try{return this.processSegmentAgainstRoute(r,segmentGroup,segments,outlet);}catch(e){if(!(e instanceof NoMatch$1))throw e;}}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}if(this.noLeftoversInUrl(segmentGroup,segments,outlet)){return[];}else{throw new NoMatch$1();}}/**
     * @param {?} segmentGroup
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'noLeftoversInUrl',value:function noLeftoversInUrl(segmentGroup,segments,outlet){return segments.length===0&&!segmentGroup.children[outlet];}/**
     * @param {?} route
     * @param {?} rawSegment
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'processSegmentAgainstRoute',value:function processSegmentAgainstRoute(route,rawSegment,segments,outlet){if(route.redirectTo)throw new NoMatch$1();if((route.outlet?route.outlet:PRIMARY_OUTLET)!==outlet)throw new NoMatch$1();if(route.path==='**'){var/** @type {?} */params=segments.length>0?last(segments).parameters:{};var/** @type {?} */_snapshot=new ActivatedRouteSnapshot(segments,params,Object.freeze(this.urlTree.queryParams),this.urlTree.fragment,getData(route),outlet,route.component,route,getSourceSegmentGroup(rawSegment),getPathIndexShift(rawSegment)+segments.length,getResolve(route));return[new TreeNode(_snapshot,[])];}var _match$=match$1(rawSegment,route,segments),consumedSegments=_match$.consumedSegments,parameters=_match$.parameters,lastChild=_match$.lastChild;var/** @type {?} */rawSlicedSegments=segments.slice(lastChild);var/** @type {?} */childConfig=getChildConfig(route);var _split$=split$1(rawSegment,consumedSegments,rawSlicedSegments,childConfig),segmentGroup=_split$.segmentGroup,slicedSegments=_split$.slicedSegments;var/** @type {?} */snapshot=new ActivatedRouteSnapshot(consumedSegments,parameters,Object.freeze(this.urlTree.queryParams),this.urlTree.fragment,getData(route),outlet,route.component,route,getSourceSegmentGroup(rawSegment),getPathIndexShift(rawSegment)+consumedSegments.length,getResolve(route));if(slicedSegments.length===0&&segmentGroup.hasChildren()){var/** @type {?} */children=this.processChildren(childConfig,segmentGroup);return[new TreeNode(snapshot,children)];}else if(childConfig.length===0&&slicedSegments.length===0){return[new TreeNode(snapshot,[])];}else{var/** @type {?} */_children3=this.processSegment(childConfig,segmentGroup,slicedSegments,PRIMARY_OUTLET);return[new TreeNode(snapshot,_children3)];}}}]);return Recognizer;}();/**
 * @param {?} nodes
 * @return {?}
 */function sortActivatedRouteSnapshots(nodes){nodes.sort(function(a,b){if(a.value.outlet===PRIMARY_OUTLET)return-1;if(b.value.outlet===PRIMARY_OUTLET)return 1;return a.value.outlet.localeCompare(b.value.outlet);});}/**
 * @param {?} route
 * @return {?}
 */function getChildConfig(route){if(route.children){return route.children;}else if(route.loadChildren){return route._loadedConfig.routes;}else{return[];}}/**
 * @param {?} segmentGroup
 * @param {?} route
 * @param {?} segments
 * @return {?}
 */function match$1(segmentGroup,route,segments){if(route.path===''){if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||segments.length>0)){throw new NoMatch$1();}else{return{consumedSegments:[],lastChild:0,parameters:{}};}}var/** @type {?} */matcher=route.matcher||defaultUrlMatcher;var/** @type {?} */res=matcher(segments,segmentGroup,route);if(!res)throw new NoMatch$1();var/** @type {?} */posParams={};forEach(res.posParams,function(v,k){posParams[k]=v.path;});var/** @type {?} */parameters=merge(posParams,res.consumed[res.consumed.length-1].parameters);return{consumedSegments:res.consumed,lastChild:res.consumed.length,parameters:parameters};}/**
 * @param {?} nodes
 * @return {?}
 */function checkOutletNameUniqueness(nodes){var/** @type {?} */names={};nodes.forEach(function(n){var/** @type {?} */routeWithSameOutletName=names[n.value.outlet];if(routeWithSameOutletName){var/** @type {?} */p=routeWithSameOutletName.url.map(function(s){return s.toString();}).join('/');var/** @type {?} */c=n.value.url.map(function(s){return s.toString();}).join('/');throw new Error('Two segments cannot have the same outlet name: \''+p+'\' and \''+c+'\'.');}names[n.value.outlet]=n.value;});}/**
 * @param {?} segmentGroup
 * @return {?}
 */function getSourceSegmentGroup(segmentGroup){var/** @type {?} */s=segmentGroup;while(s._sourceSegment){s=s._sourceSegment;}return s;}/**
 * @param {?} segmentGroup
 * @return {?}
 */function getPathIndexShift(segmentGroup){var/** @type {?} */s=segmentGroup;var/** @type {?} */res=s._segmentIndexShift?s._segmentIndexShift:0;while(s._sourceSegment){s=s._sourceSegment;res+=s._segmentIndexShift?s._segmentIndexShift:0;}return res-1;}/**
 * @param {?} segmentGroup
 * @param {?} consumedSegments
 * @param {?} slicedSegments
 * @param {?} config
 * @return {?}
 */function split$1(segmentGroup,consumedSegments,slicedSegments,config){if(slicedSegments.length>0&&containsEmptyPathMatchesWithNamedOutlets(segmentGroup,slicedSegments,config)){var/** @type {?} */s=new UrlSegmentGroup(consumedSegments,createChildrenForEmptyPaths(segmentGroup,consumedSegments,config,new UrlSegmentGroup(slicedSegments,segmentGroup.children)));s._sourceSegment=segmentGroup;s._segmentIndexShift=consumedSegments.length;return{segmentGroup:s,slicedSegments:[]};}else if(slicedSegments.length===0&&containsEmptyPathMatches(segmentGroup,slicedSegments,config)){var/** @type {?} */_s2=new UrlSegmentGroup(segmentGroup.segments,addEmptyPathsToChildrenIfNeeded(segmentGroup,slicedSegments,config,segmentGroup.children));_s2._sourceSegment=segmentGroup;_s2._segmentIndexShift=consumedSegments.length;return{segmentGroup:_s2,slicedSegments:slicedSegments};}else{var/** @type {?} */_s3=new UrlSegmentGroup(segmentGroup.segments,segmentGroup.children);_s3._sourceSegment=segmentGroup;_s3._segmentIndexShift=consumedSegments.length;return{segmentGroup:_s3,slicedSegments:slicedSegments};}}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @param {?} children
 * @return {?}
 */function addEmptyPathsToChildrenIfNeeded(segmentGroup,slicedSegments,routes,children){var/** @type {?} */res={};var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=routes[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var r=_step8.value;if(emptyPathMatch(segmentGroup,slicedSegments,r)&&!children[getOutlet$2(r)]){var/** @type {?} */s=new UrlSegmentGroup([],{});s._sourceSegment=segmentGroup;s._segmentIndexShift=segmentGroup.segments.length;res[getOutlet$2(r)]=s;}}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}return merge(children,res);}/**
 * @param {?} segmentGroup
 * @param {?} consumedSegments
 * @param {?} routes
 * @param {?} primarySegment
 * @return {?}
 */function createChildrenForEmptyPaths(segmentGroup,consumedSegments,routes,primarySegment){var/** @type {?} */res={};res[PRIMARY_OUTLET]=primarySegment;primarySegment._sourceSegment=segmentGroup;primarySegment._segmentIndexShift=consumedSegments.length;var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=routes[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var r=_step9.value;if(r.path===''&&getOutlet$2(r)!==PRIMARY_OUTLET){var/** @type {?} */s=new UrlSegmentGroup([],{});s._sourceSegment=segmentGroup;s._segmentIndexShift=consumedSegments.length;res[getOutlet$2(r)]=s;}}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}return res;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathMatchesWithNamedOutlets(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathMatch(segmentGroup,slicedSegments,r)&&getOutlet$2(r)!==PRIMARY_OUTLET;}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathMatches(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathMatch(segmentGroup,slicedSegments,r);}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} r
 * @return {?}
 */function emptyPathMatch(segmentGroup,slicedSegments,r){if((segmentGroup.hasChildren()||slicedSegments.length>0)&&r.pathMatch==='full')return false;return r.path===''&&r.redirectTo===undefined;}/**
 * @param {?} route
 * @return {?}
 */function getOutlet$2(route){return route.outlet?route.outlet:PRIMARY_OUTLET;}/**
 * @param {?} route
 * @return {?}
 */function getData(route){return route.data?route.data:{};}/**
 * @param {?} route
 * @return {?}
 */function getResolve(route){return route.resolve?route.resolve:{};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * \@whatItDoes Contains all the router outlets created in a component.
 *
 * \@stable
 */var RouterOutletMap=function(){function RouterOutletMap(){_classCallCheck(this,RouterOutletMap);/** @internal */this._outlets={};}/**
     * Adds an outlet to this map.
     * @param {?} name
     * @param {?} outlet
     * @return {?}
     */_createClass(RouterOutletMap,[{key:'registerOutlet',value:function registerOutlet(name,outlet){this._outlets[name]=outlet;}/**
     * Removes an outlet from this map.
     * @param {?} name
     * @return {?}
     */},{key:'removeOutlet',value:function removeOutlet(name){this._outlets[name]=undefined;}}]);return RouterOutletMap;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * \@whatItDoes Provides a way to migrate AngularJS applications to Angular.
 *
 * \@experimental
 * @abstract
 */var UrlHandlingStrategy=function(){function UrlHandlingStrategy(){_classCallCheck(this,UrlHandlingStrategy);}_createClass(UrlHandlingStrategy,[{key:'shouldProcessUrl',/**
     * Tells the router if this URL should be processed.
     *
     * When it returns true, the router will execute the regular navigation.
     * When it returns false, the router will set the router state to an empty state.
     * As a result, all the active components will be destroyed.
     *
     * @abstract
     * @param {?} url
     * @return {?}
     */value:function shouldProcessUrl(url){}/**
     * Extracts the part of the URL that should be handled by the router.
     * The rest of the URL will remain untouched.
     * @abstract
     * @param {?} url
     * @return {?}
     */},{key:'extract',value:function extract(url){}/**
     * Merges the URL fragment with the rest of the URL.
     * @abstract
     * @param {?} newUrlPart
     * @param {?} rawUrl
     * @return {?}
     */},{key:'merge',value:function merge(newUrlPart,rawUrl){}}]);return UrlHandlingStrategy;}();/**
 * \@experimental
 */var DefaultUrlHandlingStrategy=function(){function DefaultUrlHandlingStrategy(){_classCallCheck(this,DefaultUrlHandlingStrategy);}_createClass(DefaultUrlHandlingStrategy,[{key:'shouldProcessUrl',/**
     * @param {?} url
     * @return {?}
     */value:function shouldProcessUrl(url){return true;}/**
     * @param {?} url
     * @return {?}
     */},{key:'extract',value:function extract(url){return url;}/**
     * @param {?} newUrlPart
     * @param {?} wholeUrl
     * @return {?}
     */},{key:'merge',value:function merge(newUrlPart,wholeUrl){return newUrlPart;}}]);return DefaultUrlHandlingStrategy;}();/**
 * @param {?} error
 * @return {?}
 */function defaultErrorHandler(error){throw error;}/**
 * Does not detach any subtrees. Reuses routes as long as their route config is the same.
 */var DefaultRouteReuseStrategy=function(){function DefaultRouteReuseStrategy(){_classCallCheck(this,DefaultRouteReuseStrategy);}_createClass(DefaultRouteReuseStrategy,[{key:'shouldDetach',/**
     * @param {?} route
     * @return {?}
     */value:function shouldDetach(route){return false;}/**
     * @param {?} route
     * @param {?} detachedTree
     * @return {?}
     */},{key:'store',value:function store(route,detachedTree){}/**
     * @param {?} route
     * @return {?}
     */},{key:'shouldAttach',value:function shouldAttach(route){return false;}/**
     * @param {?} route
     * @return {?}
     */},{key:'retrieve',value:function retrieve(route){return null;}/**
     * @param {?} future
     * @param {?} curr
     * @return {?}
     */},{key:'shouldReuseRoute',value:function shouldReuseRoute(future,curr){return future.routeConfig===curr.routeConfig;}}]);return DefaultRouteReuseStrategy;}();/**
 * \@whatItDoes Provides the navigation and url manipulation capabilities.
 *
 * See {\@link Routes} for more details and examples.
 *
 * \@ngModule RouterModule
 *
 * \@stable
 */var Router=function(){/**
     * @param {?} rootComponentType
     * @param {?} urlSerializer
     * @param {?} outletMap
     * @param {?} location
     * @param {?} injector
     * @param {?} loader
     * @param {?} compiler
     * @param {?} config
     */function Router(rootComponentType,urlSerializer,outletMap,location,injector,loader,compiler,config){var _this18=this;_classCallCheck(this,Router);this.rootComponentType=rootComponentType;this.urlSerializer=urlSerializer;this.outletMap=outletMap;this.location=location;this.injector=injector;this.config=config;this.navigations=new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](null);this.routerEvents=new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();this.navigationId=0;/**
         * Error handler that is invoked when a navigation errors.
         *
         * See {@link ErrorHandler} for more information.
         */this.errorHandler=defaultErrorHandler;/**
         * Indicates if at least one navigation happened.
         */this.navigated=false;/**
         * Extracts and merges URLs. Used for AngularJS to Angular migrations.
         */this.urlHandlingStrategy=new DefaultUrlHandlingStrategy();this.routeReuseStrategy=new DefaultRouteReuseStrategy();var onLoadStart=function onLoadStart(r){return _this18.triggerEvent(new RouteConfigLoadStart(r));};var onLoadEnd=function onLoadEnd(r){return _this18.triggerEvent(new RouteConfigLoadEnd(r));};this.resetConfig(config);this.currentUrlTree=createEmptyUrlTree();this.rawUrlTree=this.currentUrlTree;this.configLoader=new RouterConfigLoader(loader,compiler,onLoadStart,onLoadEnd);this.currentRouterState=createEmptyState(this.currentUrlTree,this.rootComponentType);this.processNavigations();}/**
     * \@internal
     * TODO: this should be removed once the constructor of the router made internal
     * @param {?} rootComponentType
     * @return {?}
     */_createClass(Router,[{key:'resetRootComponentType',value:function resetRootComponentType(rootComponentType){this.rootComponentType=rootComponentType;// TODO: vsavkin router 4.0 should make the root component set to null
// this will simplify the lifecycle of the router.
this.currentRouterState.root.component=this.rootComponentType;}/**
     * Sets up the location change listener and performs the initial navigation.
     * @return {?}
     */},{key:'initialNavigation',value:function initialNavigation(){this.setUpLocationChangeListener();if(this.navigationId===0){this.navigateByUrl(this.location.path(true),{replaceUrl:true});}}/**
     * Sets up the location change listener.
     * @return {?}
     */},{key:'setUpLocationChangeListener',value:function setUpLocationChangeListener(){var _this19=this;// Zone.current.wrap is needed because of the issue with RxJS scheduler,
// which does not work properly with zone.js in IE and Safari
if(!this.locationSubscription){this.locationSubscription=this.location.subscribe(Zone.current.wrap(function(change){var/** @type {?} */rawUrlTree=_this19.urlSerializer.parse(change['url']);var/** @type {?} */source=change['type']==='popstate'?'popstate':'hashchange';setTimeout(function(){_this19.scheduleNavigation(rawUrlTree,source,{replaceUrl:true});},0);}));}}/**
     * The current route state
     * @return {?}
     */},{key:'triggerEvent',/**
     * \@internal
     * @param {?} e
     * @return {?}
     */value:function triggerEvent(e){this.routerEvents.next(e);}/**
     * Resets the configuration used for navigation and generating links.
     *
     * ### Usage
     *
     * ```
     * router.resetConfig([
     *  { path: 'team/:id', component: TeamCmp, children: [
     *    { path: 'simple', component: SimpleCmp },
     *    { path: 'user/:name', component: UserCmp }
     *  ]}
     * ]);
     * ```
     * @param {?} config
     * @return {?}
     */},{key:'resetConfig',value:function resetConfig(config){validateConfig(config);this.config=config;}/**
     * \@docsNotRequired
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.dispose();}/**
     * Disposes of the router
     * @return {?}
     */},{key:'dispose',value:function dispose(){if(this.locationSubscription){this.locationSubscription.unsubscribe();this.locationSubscription=null;}}/**
     * Applies an array of commands to the current url tree and creates a new url tree.
     *
     * When given an activate route, applies the given commands starting from the route.
     * When not given a route, applies the given command starting from the root.
     *
     * ### Usage
     *
     * ```
     * // create /team/33/user/11
     * router.createUrlTree(['/team', 33, 'user', 11]);
     *
     * // create /team/33;expand=true/user/11
     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
     *
     * // you can collapse static segments like this (this works only with the first passed-in value):
     * router.createUrlTree(['/team/33/user', userId]);
     *
     * // If the first segment can contain slashes, and you do not want the router to split it, you
     * // can do the following:
     *
     * router.createUrlTree([{segmentPath: '/one/two'}]);
     *
     * // create /team/33/(user/11//right:chat)
     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
     *
     * // remove the right secondary node
     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
     *
     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
     *
     * // navigate to /team/33/user/11/details
     * router.createUrlTree(['details'], {relativeTo: route});
     *
     * // navigate to /team/33/user/22
     * router.createUrlTree(['../22'], {relativeTo: route});
     *
     * // navigate to /team/44/user/22
     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
     * ```
     * @param {?} commands
     * @param {?=} __1
     * @return {?}
     */},{key:'createUrlTree',value:function createUrlTree(commands){var _ref4=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},relativeTo=_ref4.relativeTo,queryParams=_ref4.queryParams,fragment=_ref4.fragment,preserveQueryParams=_ref4.preserveQueryParams,queryParamsHandling=_ref4.queryParamsHandling,preserveFragment=_ref4.preserveFragment;if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["h" /* isDevMode */])()&&preserveQueryParams&&console&&console.warn){console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');}var/** @type {?} */a=relativeTo||this.routerState.root;var/** @type {?} */f=preserveFragment?this.currentUrlTree.fragment:fragment;var/** @type {?} */q=null;if(queryParamsHandling){switch(queryParamsHandling){case'merge':q=merge(this.currentUrlTree.queryParams,queryParams);break;case'preserve':q=this.currentUrlTree.queryParams;break;default:q=queryParams;}}else{q=preserveQueryParams?this.currentUrlTree.queryParams:queryParams;}return _createUrlTree(a,this.currentUrlTree,commands,q,f);}/**
     * Navigate based on the provided url. This navigation is always absolute.
     *
     * Returns a promise that:
     * - resolves to 'true' when navigation succeeds,
     * - resolves to 'false' when navigation fails,
     * - is rejected when an error happens.
     *
     * ### Usage
     *
     * ```
     * router.navigateByUrl("/team/33/user/11");
     *
     * // Navigate without updating the URL
     * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
     * ```
     *
     * In opposite to `navigate`, `navigateByUrl` takes a whole URL
     * and does not apply any delta to the current one.
     * @param {?} url
     * @param {?=} extras
     * @return {?}
     */},{key:'navigateByUrl',value:function navigateByUrl(url){var extras=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{skipLocationChange:false};var/** @type {?} */urlTree=url instanceof UrlTree?url:this.parseUrl(url);var/** @type {?} */mergedTree=this.urlHandlingStrategy.merge(urlTree,this.rawUrlTree);return this.scheduleNavigation(mergedTree,'imperative',extras);}/**
     * Navigate based on the provided array of commands and a starting point.
     * If no starting route is provided, the navigation is absolute.
     *
     * Returns a promise that:
     * - resolves to 'true' when navigation succeeds,
     * - resolves to 'false' when navigation fails,
     * - is rejected when an error happens.
     *
     * ### Usage
     *
     * ```
     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
     *
     * // Navigate without updating the URL
     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
     * ```
     *
     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current
     * URL.
     * @param {?} commands
     * @param {?=} extras
     * @return {?}
     */},{key:'navigate',value:function navigate(commands){var extras=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{skipLocationChange:false};validateCommands(commands);if(_typeof(extras.queryParams)==='object'&&extras.queryParams!==null){extras.queryParams=this.removeEmptyProps(extras.queryParams);}return this.navigateByUrl(this.createUrlTree(commands,extras),extras);}/**
     * Serializes a {\@link UrlTree} into a string
     * @param {?} url
     * @return {?}
     */},{key:'serializeUrl',value:function serializeUrl(url){return this.urlSerializer.serialize(url);}/**
     * Parses a string into a {\@link UrlTree}
     * @param {?} url
     * @return {?}
     */},{key:'parseUrl',value:function parseUrl(url){return this.urlSerializer.parse(url);}/**
     * Returns whether the url is activated
     * @param {?} url
     * @param {?} exact
     * @return {?}
     */},{key:'isActive',value:function isActive(url,exact){if(url instanceof UrlTree){return containsTree(this.currentUrlTree,url,exact);}else{var/** @type {?} */urlTree=this.urlSerializer.parse(url);return containsTree(this.currentUrlTree,urlTree,exact);}}/**
     * @param {?} params
     * @return {?}
     */},{key:'removeEmptyProps',value:function removeEmptyProps(params){return Object.keys(params).reduce(function(result,key){var/** @type {?} */value=params[key];if(value!==null&&value!==undefined){result[key]=value;}return result;},{});}/**
     * @return {?}
     */},{key:'processNavigations',value:function processNavigations(){var _this20=this;__WEBPACK_IMPORTED_MODULE_6_rxjs_operator_concatMap__["concatMap"].call(this.navigations,function(nav){if(nav){_this20.executeScheduledNavigation(nav);// a failed navigation should not stop the router from processing
// further navigations => the catch
return nav.promise.catch(function(){});}else{return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(null);}}).subscribe(function(){});}/**
     * @param {?} rawUrl
     * @param {?} source
     * @param {?} extras
     * @return {?}
     */},{key:'scheduleNavigation',value:function scheduleNavigation(rawUrl,source,extras){var/** @type {?} */lastNavigation=this.navigations.value;// If the user triggers a navigation imperatively (e.g., by using navigateByUrl),
// and that navigation results in 'replaceState' that leads to the same URL,
// we should skip those.
if(lastNavigation&&source!=='imperative'&&lastNavigation.source==='imperative'&&lastNavigation.rawUrl.toString()===rawUrl.toString()){return null;// return value is not used
}// Because of a bug in IE and Edge, the location class fires two events (popstate and
// hashchange) every single time. The second one should be ignored. Otherwise, the URL will
// flicker.
if(lastNavigation&&source=='hashchange'&&lastNavigation.source==='popstate'&&lastNavigation.rawUrl.toString()===rawUrl.toString()){return null;// return value is not used
}var/** @type {?} */resolve=null;var/** @type {?} */reject=null;var/** @type {?} */promise=new Promise(function(res,rej){resolve=res;reject=rej;});var/** @type {?} */id=++this.navigationId;this.navigations.next({id:id,source:source,rawUrl:rawUrl,extras:extras,resolve:resolve,reject:reject,promise:promise});// Make sure that the error is propagated even though `processNavigations` catch
// handler does not rethrow
return promise.catch(function(e){return Promise.reject(e);});}/**
     * @param {?} __0
     * @return {?}
     */},{key:'executeScheduledNavigation',value:function executeScheduledNavigation(_ref5){var _this21=this;var id=_ref5.id,rawUrl=_ref5.rawUrl,extras=_ref5.extras,resolve=_ref5.resolve,reject=_ref5.reject;var/** @type {?} */url=this.urlHandlingStrategy.extract(rawUrl);var/** @type {?} */urlTransition=!this.navigated||url.toString()!==this.currentUrlTree.toString();if(urlTransition&&this.urlHandlingStrategy.shouldProcessUrl(rawUrl)){this.routerEvents.next(new NavigationStart(id,this.serializeUrl(url)));Promise.resolve().then(function(_){return _this21.runNavigate(url,rawUrl,extras.skipLocationChange,extras.replaceUrl,id,null);}).then(resolve,reject);}else if(urlTransition&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){this.routerEvents.next(new NavigationStart(id,this.serializeUrl(url)));Promise.resolve().then(function(_){return _this21.runNavigate(url,rawUrl,false,false,id,createEmptyState(url,_this21.rootComponentType).snapshot);}).then(resolve,reject);}else{this.rawUrlTree=rawUrl;resolve(null);}}/**
     * @param {?} url
     * @param {?} rawUrl
     * @param {?} shouldPreventPushState
     * @param {?} shouldReplaceUrl
     * @param {?} id
     * @param {?} precreatedState
     * @return {?}
     */},{key:'runNavigate',value:function runNavigate(url,rawUrl,shouldPreventPushState,shouldReplaceUrl,id,precreatedState){var _this22=this;if(id!==this.navigationId){this.location.go(this.urlSerializer.serialize(this.currentUrlTree));this.routerEvents.next(new NavigationCancel(id,this.serializeUrl(url),'Navigation ID '+id+' is not equal to the current navigation id '+this.navigationId));return Promise.resolve(false);}return new Promise(function(resolvePromise,rejectPromise){// create an observable of the url and route state snapshot
// this operation do not result in any side effects
var/** @type {?} */urlAndSnapshot$=void 0;if(!precreatedState){var/** @type {?} */redirectsApplied$=applyRedirects(_this22.injector,_this22.configLoader,_this22.urlSerializer,url,_this22.config);urlAndSnapshot$=__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(redirectsApplied$,function(appliedUrl){return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(recognize(_this22.rootComponentType,_this22.config,appliedUrl,_this22.serializeUrl(appliedUrl)),function(snapshot){_this22.routerEvents.next(new RoutesRecognized(id,_this22.serializeUrl(url),_this22.serializeUrl(appliedUrl),snapshot));return{appliedUrl:appliedUrl,snapshot:snapshot};});});}else{urlAndSnapshot$=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])({appliedUrl:url,snapshot:precreatedState});}// run preactivation: guards and data resolvers
var/** @type {?} */preActivation=void 0;var/** @type {?} */preactivationTraverse$=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(urlAndSnapshot$,function(_ref6){var appliedUrl=_ref6.appliedUrl,snapshot=_ref6.snapshot;preActivation=new PreActivation(snapshot,_this22.currentRouterState.snapshot,_this22.injector);preActivation.traverse(_this22.outletMap);return{appliedUrl:appliedUrl,snapshot:snapshot};});var/** @type {?} */preactivationCheckGuards=__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(preactivationTraverse$,function(_ref7){var appliedUrl=_ref7.appliedUrl,snapshot=_ref7.snapshot;if(_this22.navigationId!==id)return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(false);return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(preActivation.checkGuards(),function(shouldActivate){return{appliedUrl:appliedUrl,snapshot:snapshot,shouldActivate:shouldActivate};});});var/** @type {?} */preactivationResolveData$=__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(preactivationCheckGuards,function(p){if(_this22.navigationId!==id)return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(false);if(p.shouldActivate){return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(preActivation.resolveData(),function(){return p;});}else{return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(p);}});// create router state
// this operation has side effects => route state is being affected
var/** @type {?} */routerState$=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(preactivationResolveData$,function(_ref8){var appliedUrl=_ref8.appliedUrl,snapshot=_ref8.snapshot,shouldActivate=_ref8.shouldActivate;if(shouldActivate){var/** @type {?} */state=createRouterState(_this22.routeReuseStrategy,snapshot,_this22.currentRouterState);return{appliedUrl:appliedUrl,state:state,shouldActivate:shouldActivate};}else{return{appliedUrl:appliedUrl,state:null,shouldActivate:shouldActivate};}});// applied the new router state
// this operation has side effects
var/** @type {?} */navigationIsSuccessful=void 0;var/** @type {?} */storedState=_this22.currentRouterState;var/** @type {?} */storedUrl=_this22.currentUrlTree;routerState$.forEach(function(_ref9){var appliedUrl=_ref9.appliedUrl,state=_ref9.state,shouldActivate=_ref9.shouldActivate;if(!shouldActivate||id!==_this22.navigationId){navigationIsSuccessful=false;return;}_this22.currentUrlTree=appliedUrl;_this22.rawUrlTree=_this22.urlHandlingStrategy.merge(_this22.currentUrlTree,rawUrl);_this22.currentRouterState=state;if(!shouldPreventPushState){var/** @type {?} */path=_this22.urlSerializer.serialize(_this22.rawUrlTree);if(_this22.location.isCurrentPathEqualTo(path)||shouldReplaceUrl){_this22.location.replaceState(path);}else{_this22.location.go(path);}}new ActivateRoutes(_this22.routeReuseStrategy,state,storedState).activate(_this22.outletMap);navigationIsSuccessful=true;}).then(function(){if(navigationIsSuccessful){_this22.navigated=true;_this22.routerEvents.next(new NavigationEnd(id,_this22.serializeUrl(url),_this22.serializeUrl(_this22.currentUrlTree)));resolvePromise(true);}else{_this22.resetUrlToCurrentUrlTree();_this22.routerEvents.next(new NavigationCancel(id,_this22.serializeUrl(url),''));resolvePromise(false);}},function(e){if(isNavigationCancelingError(e)){_this22.resetUrlToCurrentUrlTree();_this22.navigated=true;_this22.routerEvents.next(new NavigationCancel(id,_this22.serializeUrl(url),e.message));resolvePromise(false);}else{_this22.routerEvents.next(new NavigationError(id,_this22.serializeUrl(url),e));try{resolvePromise(_this22.errorHandler(e));}catch(ee){rejectPromise(ee);}}_this22.currentRouterState=storedState;_this22.currentUrlTree=storedUrl;_this22.rawUrlTree=_this22.urlHandlingStrategy.merge(_this22.currentUrlTree,rawUrl);_this22.location.replaceState(_this22.serializeUrl(_this22.rawUrlTree));});});}/**
     * @return {?}
     */},{key:'resetUrlToCurrentUrlTree',value:function resetUrlToCurrentUrlTree(){var/** @type {?} */path=this.urlSerializer.serialize(this.rawUrlTree);this.location.replaceState(path);}},{key:'routerState',get:function get(){return this.currentRouterState;}/**
     * The current url
     * @return {?}
     */},{key:'url',get:function get(){return this.serializeUrl(this.currentUrlTree);}/**
     * An observable of router events
     * @return {?}
     */},{key:'events',get:function get(){return this.routerEvents;}}]);return Router;}();var CanActivate=function(){/**
     * @param {?} path
     */function CanActivate(path){_classCallCheck(this,CanActivate);this.path=path;}/**
     * @return {?}
     */_createClass(CanActivate,[{key:'route',get:function get(){return this.path[this.path.length-1];}}]);return CanActivate;}();var CanDeactivate=/**
     * @param {?} component
     * @param {?} route
     */function CanDeactivate(component,route){_classCallCheck(this,CanDeactivate);this.component=component;this.route=route;};var PreActivation=function(){/**
     * @param {?} future
     * @param {?} curr
     * @param {?} injector
     */function PreActivation(future,curr,injector){_classCallCheck(this,PreActivation);this.future=future;this.curr=curr;this.injector=injector;this.checks=[];}/**
     * @param {?} parentOutletMap
     * @return {?}
     */_createClass(PreActivation,[{key:'traverse',value:function traverse(parentOutletMap){var/** @type {?} */futureRoot=this.future._root;var/** @type {?} */currRoot=this.curr?this.curr._root:null;this.traverseChildRoutes(futureRoot,currRoot,parentOutletMap,[futureRoot.value]);}/**
     * @return {?}
     */},{key:'checkGuards',value:function checkGuards(){var _this23=this;if(this.checks.length===0)return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(true);var/** @type {?} */checks$=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(this.checks);var/** @type {?} */runningChecks$=__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(checks$,function(s){if(s instanceof CanActivate){return andObservables(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])([_this23.runCanActivateChild(s.path),_this23.runCanActivate(s.route)]));}else if(s instanceof CanDeactivate){// workaround https://github.com/Microsoft/TypeScript/issues/7271
var/** @type {?} */s2=s;return _this23.runCanDeactivate(s2.component,s2.route);}else{throw new Error('Cannot be reached');}});return __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_every__["every"].call(runningChecks$,function(result){return result===true;});}/**
     * @return {?}
     */},{key:'resolveData',value:function resolveData(){var _this24=this;if(this.checks.length===0)return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(null);var/** @type {?} */checks$=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(this.checks);var/** @type {?} */runningChecks$=__WEBPACK_IMPORTED_MODULE_6_rxjs_operator_concatMap__["concatMap"].call(checks$,function(s){if(s instanceof CanActivate){return _this24.runResolve(s.route);}else{return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(null);}});return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_reduce__["reduce"].call(runningChecks$,function(_,__){return _;});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} outletMap
     * @param {?} futurePath
     * @return {?}
     */},{key:'traverseChildRoutes',value:function traverseChildRoutes(futureNode,currNode,outletMap,futurePath){var _this25=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this25.traverseRoutes(c,prevChildren[c.value.outlet],outletMap,futurePath.concat([c.value]));delete prevChildren[c.value.outlet];});forEach(prevChildren,function(v,k){return _this25.deactiveRouteAndItsChildren(v,outletMap._outlets[k]);});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} parentOutletMap
     * @param {?} futurePath
     * @return {?}
     */},{key:'traverseRoutes',value:function traverseRoutes(futureNode,currNode,parentOutletMap,futurePath){var/** @type {?} */future=futureNode.value;var/** @type {?} */curr=currNode?currNode.value:null;var/** @type {?} */outlet=parentOutletMap?parentOutletMap._outlets[futureNode.value.outlet]:null;// reusing the node
if(curr&&future._routeConfig===curr._routeConfig){if(this.shouldRunGuardsAndResolvers(curr,future,future._routeConfig.runGuardsAndResolvers)){this.checks.push(new CanDeactivate(outlet.component,curr),new CanActivate(futurePath));}else{// we need to set the data
future.data=curr.data;future._resolvedData=curr._resolvedData;}// If we have a component, we need to go through an outlet.
if(future.component){this.traverseChildRoutes(futureNode,currNode,outlet?outlet.outletMap:null,futurePath);}else{this.traverseChildRoutes(futureNode,currNode,parentOutletMap,futurePath);}}else{if(curr){this.deactiveRouteAndItsChildren(currNode,outlet);}this.checks.push(new CanActivate(futurePath));// If we have a component, we need to go through an outlet.
if(future.component){this.traverseChildRoutes(futureNode,null,outlet?outlet.outletMap:null,futurePath);}else{this.traverseChildRoutes(futureNode,null,parentOutletMap,futurePath);}}}/**
     * @param {?} curr
     * @param {?} future
     * @param {?} mode
     * @return {?}
     */},{key:'shouldRunGuardsAndResolvers',value:function shouldRunGuardsAndResolvers(curr,future,mode){switch(mode){case'always':return true;case'paramsOrQueryParamsChange':return!equalParamsAndUrlSegments(curr,future)||!shallowEqual(curr.queryParams,future.queryParams);case'paramsChange':default:return!equalParamsAndUrlSegments(curr,future);}}/**
     * @param {?} route
     * @param {?} outlet
     * @return {?}
     */},{key:'deactiveRouteAndItsChildren',value:function deactiveRouteAndItsChildren(route,outlet){var _this26=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(route);var/** @type {?} */r=route.value;forEach(prevChildren,function(v,k){if(!r.component){_this26.deactiveRouteAndItsChildren(v,outlet);}else if(!!outlet){_this26.deactiveRouteAndItsChildren(v,outlet.outletMap._outlets[k]);}else{_this26.deactiveRouteAndItsChildren(v,null);}});if(!r.component){this.checks.push(new CanDeactivate(null,r));}else if(outlet&&outlet.isActivated){this.checks.push(new CanDeactivate(outlet.component,r));}else{this.checks.push(new CanDeactivate(null,r));}}/**
     * @param {?} future
     * @return {?}
     */},{key:'runCanActivate',value:function runCanActivate(future){var _this27=this;var/** @type {?} */canActivate=future._routeConfig?future._routeConfig.canActivate:null;if(!canActivate||canActivate.length===0)return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(true);var/** @type {?} */obs=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(canActivate),function(c){var/** @type {?} */guard=_this27.getToken(c,future);var/** @type {?} */observable=void 0;if(guard.canActivate){observable=wrapIntoObservable(guard.canActivate(future,_this27.future));}else{observable=wrapIntoObservable(guard(future,_this27.future));}return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_first__["first"].call(observable);});return andObservables(obs);}/**
     * @param {?} path
     * @return {?}
     */},{key:'runCanActivateChild',value:function runCanActivateChild(path){var _this28=this;var/** @type {?} */future=path[path.length-1];var/** @type {?} */canActivateChildGuards=path.slice(0,path.length-1).reverse().map(function(p){return _this28.extractCanActivateChild(p);}).filter(function(_){return _!==null;});return andObservables(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(canActivateChildGuards),function(d){var/** @type {?} */obs=__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(d.guards),function(c){var/** @type {?} */guard=_this28.getToken(c,d.node);var/** @type {?} */observable=void 0;if(guard.canActivateChild){observable=wrapIntoObservable(guard.canActivateChild(future,_this28.future));}else{observable=wrapIntoObservable(guard(future,_this28.future));}return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_first__["first"].call(observable);});return andObservables(obs);}));}/**
     * @param {?} p
     * @return {?}
     */},{key:'extractCanActivateChild',value:function extractCanActivateChild(p){var/** @type {?} */canActivateChild=p._routeConfig?p._routeConfig.canActivateChild:null;if(!canActivateChild||canActivateChild.length===0)return null;return{node:p,guards:canActivateChild};}/**
     * @param {?} component
     * @param {?} curr
     * @return {?}
     */},{key:'runCanDeactivate',value:function runCanDeactivate(component,curr){var _this29=this;var/** @type {?} */canDeactivate=curr&&curr._routeConfig?curr._routeConfig.canDeactivate:null;if(!canDeactivate||canDeactivate.length===0)return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(true);var/** @type {?} */canDeactivate$=__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(canDeactivate),function(c){var/** @type {?} */guard=_this29.getToken(c,curr);var/** @type {?} */observable=void 0;if(guard.canDeactivate){observable=wrapIntoObservable(guard.canDeactivate(component,curr,_this29.curr,_this29.future));}else{observable=wrapIntoObservable(guard(component,curr,_this29.curr,_this29.future));}return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_first__["first"].call(observable);});return __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_every__["every"].call(canDeactivate$,function(result){return result===true;});}/**
     * @param {?} future
     * @return {?}
     */},{key:'runResolve',value:function runResolve(future){var/** @type {?} */resolve=future._resolve;return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_map__["map"].call(this.resolveNode(resolve,future),function(resolvedData){future._resolvedData=resolvedData;future.data=merge(future.data,inheritedParamsDataResolve(future).resolve);return null;});}/**
     * @param {?} resolve
     * @param {?} future
     * @return {?}
     */},{key:'resolveNode',value:function resolveNode(resolve,future){var _this30=this;return waitForMap(resolve,function(k,v){var/** @type {?} */resolver=_this30.getToken(v,future);return resolver.resolve?wrapIntoObservable(resolver.resolve(future,_this30.future)):wrapIntoObservable(resolver(future,_this30.future));});}/**
     * @param {?} token
     * @param {?} snapshot
     * @return {?}
     */},{key:'getToken',value:function getToken(token,snapshot){var/** @type {?} */config=closestLoadedConfig(snapshot);var/** @type {?} */injector=config?config.injector:this.injector;return injector.get(token);}}]);return PreActivation;}();var ActivateRoutes=function(){/**
     * @param {?} routeReuseStrategy
     * @param {?} futureState
     * @param {?} currState
     */function ActivateRoutes(routeReuseStrategy,futureState,currState){_classCallCheck(this,ActivateRoutes);this.routeReuseStrategy=routeReuseStrategy;this.futureState=futureState;this.currState=currState;}/**
     * @param {?} parentOutletMap
     * @return {?}
     */_createClass(ActivateRoutes,[{key:'activate',value:function activate(parentOutletMap){var/** @type {?} */futureRoot=this.futureState._root;var/** @type {?} */currRoot=this.currState?this.currState._root:null;this.deactivateChildRoutes(futureRoot,currRoot,parentOutletMap);advanceActivatedRoute(this.futureState.root);this.activateChildRoutes(futureRoot,currRoot,parentOutletMap);}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} outletMap
     * @return {?}
     */},{key:'deactivateChildRoutes',value:function deactivateChildRoutes(futureNode,currNode,outletMap){var _this31=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this31.deactivateRoutes(c,prevChildren[c.value.outlet],outletMap);delete prevChildren[c.value.outlet];});forEach(prevChildren,function(v,k){return _this31.deactiveRouteAndItsChildren(v,outletMap);});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} outletMap
     * @return {?}
     */},{key:'activateChildRoutes',value:function activateChildRoutes(futureNode,currNode,outletMap){var _this32=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this32.activateRoutes(c,prevChildren[c.value.outlet],outletMap);});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'deactivateRoutes',value:function deactivateRoutes(futureNode,currNode,parentOutletMap){var/** @type {?} */future=futureNode.value;var/** @type {?} */curr=currNode?currNode.value:null;// reusing the node
if(future===curr){// If we have a normal route, we need to go through an outlet.
if(future.component){var/** @type {?} */outlet=getOutlet(parentOutletMap,future);this.deactivateChildRoutes(futureNode,currNode,outlet.outletMap);}else{this.deactivateChildRoutes(futureNode,currNode,parentOutletMap);}}else{if(curr){this.deactiveRouteAndItsChildren(currNode,parentOutletMap);}}}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'activateRoutes',value:function activateRoutes(futureNode,currNode,parentOutletMap){var/** @type {?} */future=futureNode.value;var/** @type {?} */curr=currNode?currNode.value:null;// reusing the node
if(future===curr){// advance the route to push the parameters
advanceActivatedRoute(future);// If we have a normal route, we need to go through an outlet.
if(future.component){var/** @type {?} */outlet=getOutlet(parentOutletMap,future);this.activateChildRoutes(futureNode,currNode,outlet.outletMap);}else{this.activateChildRoutes(futureNode,currNode,parentOutletMap);}}else{// if we have a normal route, we need to advance the route
// and place the component into the outlet. After that recurse.
if(future.component){advanceActivatedRoute(future);var/** @type {?} */_outlet=getOutlet(parentOutletMap,futureNode.value);if(this.routeReuseStrategy.shouldAttach(future.snapshot)){var/** @type {?} */stored=this.routeReuseStrategy.retrieve(future.snapshot);this.routeReuseStrategy.store(future.snapshot,null);_outlet.attach(stored.componentRef,stored.route.value);advanceActivatedRouteNodeAndItsChildren(stored.route);}else{var/** @type {?} */outletMap=new RouterOutletMap();this.placeComponentIntoOutlet(outletMap,future,_outlet);this.activateChildRoutes(futureNode,null,outletMap);}}else{advanceActivatedRoute(future);this.activateChildRoutes(futureNode,null,parentOutletMap);}}}/**
     * @param {?} outletMap
     * @param {?} future
     * @param {?} outlet
     * @return {?}
     */},{key:'placeComponentIntoOutlet',value:function placeComponentIntoOutlet(outletMap,future,outlet){var/** @type {?} */resolved=[{provide:ActivatedRoute,useValue:future},{provide:RouterOutletMap,useValue:outletMap}];var/** @type {?} */config=parentLoadedConfig(future.snapshot);var/** @type {?} */resolver=null;var/** @type {?} */injector=null;if(config){injector=config.injectorFactory(outlet.locationInjector);resolver=config.factoryResolver;resolved.push({provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["v" /* ComponentFactoryResolver */],useValue:resolver});}else{injector=outlet.locationInjector;resolver=outlet.locationFactoryResolver;}outlet.activate(future,resolver,injector,__WEBPACK_IMPORTED_MODULE_1__angular_core__["_10" /* ReflectiveInjector */].resolve(resolved),outletMap);}/**
     * @param {?} route
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'deactiveRouteAndItsChildren',value:function deactiveRouteAndItsChildren(route,parentOutletMap){if(this.routeReuseStrategy.shouldDetach(route.value.snapshot)){this.detachAndStoreRouteSubtree(route,parentOutletMap);}else{this.deactiveRouteAndOutlet(route,parentOutletMap);}}/**
     * @param {?} route
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'detachAndStoreRouteSubtree',value:function detachAndStoreRouteSubtree(route,parentOutletMap){var/** @type {?} */outlet=getOutlet(parentOutletMap,route.value);var/** @type {?} */componentRef=outlet.detach();this.routeReuseStrategy.store(route.value.snapshot,{componentRef:componentRef,route:route});}/**
     * @param {?} route
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'deactiveRouteAndOutlet',value:function deactiveRouteAndOutlet(route,parentOutletMap){var _this33=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(route);var/** @type {?} */outlet=null;// getOutlet throws when cannot find the right outlet,
// which can happen if an outlet was in an NgIf and was removed
try{outlet=getOutlet(parentOutletMap,route.value);}catch(e){return;}var/** @type {?} */childOutletMap=outlet.outletMap;forEach(prevChildren,function(v,k){if(route.value.component){_this33.deactiveRouteAndItsChildren(v,childOutletMap);}else{_this33.deactiveRouteAndItsChildren(v,parentOutletMap);}});if(outlet&&outlet.isActivated){outlet.deactivate();}}}]);return ActivateRoutes;}();/**
 * @param {?} node
 * @return {?}
 */function advanceActivatedRouteNodeAndItsChildren(node){advanceActivatedRoute(node.value);node.children.forEach(advanceActivatedRouteNodeAndItsChildren);}/**
 * @param {?} snapshot
 * @return {?}
 */function parentLoadedConfig(snapshot){var/** @type {?} */s=snapshot.parent;while(s){var/** @type {?} */c=s._routeConfig;if(c&&c._loadedConfig)return c._loadedConfig;if(c&&c.component)return null;s=s.parent;}return null;}/**
 * @param {?} snapshot
 * @return {?}
 */function closestLoadedConfig(snapshot){if(!snapshot)return null;var/** @type {?} */s=snapshot.parent;while(s){var/** @type {?} */c=s._routeConfig;if(c&&c._loadedConfig)return c._loadedConfig;s=s.parent;}return null;}/**
 * @param {?} node
 * @return {?}
 */function nodeChildrenAsMap(node){return node?node.children.reduce(function(m,c){m[c.value.outlet]=c;return m;},{}):{};}/**
 * @param {?} outletMap
 * @param {?} route
 * @return {?}
 */function getOutlet(outletMap,route){var/** @type {?} */outlet=outletMap._outlets[route.outlet];if(!outlet){var/** @type {?} */componentName=route.component.name;if(route.outlet===PRIMARY_OUTLET){throw new Error('Cannot find primary outlet to load \''+componentName+'\'');}else{throw new Error('Cannot find the outlet '+route.outlet+' to load \''+componentName+'\'');}}return outlet;}/**
 * @param {?} commands
 * @return {?}
 */function validateCommands(commands){for(var/** @type {?} */i=0;i<commands.length;i++){var/** @type {?} */cmd=commands[i];if(cmd==null){throw new Error('The requested path contains '+cmd+' segment at index '+i);}}}/**
 * \@whatItDoes Lets you link to specific parts of your app.
 *
 * \@howToUse
 *
 * Consider the following route configuration:
 * `[{ path: 'user/:name', component: UserCmp }]`
 *
 * When linking to this `user/:name` route, you can write:
 * `<a routerLink='/user/bob'>link to user component</a>`
 *
 * \@description
 *
 * The RouterLink directives let you link to specific parts of your app.
 *
 * When the link is static, you can use the directive as follows:
 * `<a routerLink="/user/bob">link to user component</a>`
 *
 * If you use dynamic values to generate the link, you can pass an array of path
 * segments, followed by the params for each segment.
 *
 * For instance `['/team', teamId, 'user', userName, {details: true}]`
 * means that we want to generate a link to `/team/11/user/bob;details=true`.
 *
 * Multiple static segments can be merged into one
 * (e.g., `['/team/11/user', userName, {details: true}]`).
 *
 * The first segment name can be prepended with `/`, `./`, or `../`:
 * * If the first segment begins with `/`, the router will look up the route from the root of the
 *   app.
 * * If the first segment begins with `./`, or doesn't begin with a slash, the router will
 *   instead look in the children of the current activated route.
 * * And if the first segment begins with `../`, the router will go up one level.
 *
 * You can set query params and fragment as follows:
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" fragment="education">
 *   link to user component
 * </a>
 * ```
 * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.
 *
 * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the
 * directive to preserve the current query params and fragment:
 *
 * ```
 * <a [routerLink]="['/user/bob']" preserveQueryParams preserveFragment>
 *   link to user component
 * </a>
 * ```
 *
 * You can tell the directive to how to handle queryParams, available options are:
 *  - 'merge' merge the queryParams into the current queryParams
 *  - 'preserve' prserve the current queryParams
 *  - default / '' use the queryParams only
 *  same options for {\@link NavigationExtras.queryParamsHandling}
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" queryParamsHandling="merge">
 *   link to user component
 * </a>
 * ```
 *
 * The router link directive always treats the provided input as a delta to the current url.
 *
 * For instance, if the current url is `/user/(box//aux:team)`.
 *
 * Then the following link `<a [routerLink]="['/user/jim']">Jim</a>` will generate the link
 * `/user/(jim//aux:team)`.
 *
 * \@ngModule RouterModule
 *
 * See {\@link Router.createUrlTree} for more information.
 *
 * \@stable
 */var RouterLink=function(){/**
     * @param {?} router
     * @param {?} route
     * @param {?} tabIndex
     * @param {?} renderer
     * @param {?} el
     */function RouterLink(router,route,tabIndex,renderer,el){_classCallCheck(this,RouterLink);this.router=router;this.route=route;this.commands=[];if(tabIndex==null){renderer.setElementAttribute(el.nativeElement,'tabindex','0');}}/**
     * @param {?} commands
     * @return {?}
     */_createClass(RouterLink,[{key:'onClick',/**
     * @return {?}
     */value:function onClick(){var/** @type {?} */extras={skipLocationChange:attrBoolValue(this.skipLocationChange),replaceUrl:attrBoolValue(this.replaceUrl)};this.router.navigateByUrl(this.urlTree,extras);return true;}/**
     * @return {?}
     */},{key:'routerLink',set:function set(commands){if(commands!=null){this.commands=Array.isArray(commands)?commands:[commands];}else{this.commands=[];}}/**
     * @deprecated 4.0.0 use `queryParamsHandling` instead.
     * @param {?} value
     * @return {?}
     */},{key:'preserveQueryParams',set:function set(value){if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["h" /* isDevMode */])()&&console&&console.warn){console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');}this.preserve=value;}},{key:'urlTree',get:function get(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:attrBoolValue(this.preserve),queryParamsHandling:this.queryParamsHandling,preserveFragment:attrBoolValue(this.preserveFragment)});}}]);return RouterLink;}();RouterLink.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["e" /* Directive */],args:[{selector:':not(a)[routerLink]'}]}];/** @nocollapse */RouterLink.ctorParameters=function(){return[{type:Router},{type:ActivatedRoute},{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["E" /* Attribute */],args:['tabindex']}]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["m" /* ElementRef */]}];};RouterLink.propDecorators={'queryParams':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'fragment':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'queryParamsHandling':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'preserveFragment':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'skipLocationChange':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'replaceUrl':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'routerLink':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'preserveQueryParams':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'onClick':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["L" /* HostListener */],args:['click']}]};/**
 * \@whatItDoes Lets you link to specific parts of your app.
 *
 * See {\@link RouterLink} for more information.
 *
 * \@ngModule RouterModule
 *
 * \@stable
 */var RouterLinkWithHref=function(){/**
     * @param {?} router
     * @param {?} route
     * @param {?} locationStrategy
     */function RouterLinkWithHref(router,route,locationStrategy){var _this34=this;_classCallCheck(this,RouterLinkWithHref);this.router=router;this.route=route;this.locationStrategy=locationStrategy;this.commands=[];this.subscription=router.events.subscribe(function(s){if(s instanceof NavigationEnd){_this34.updateTargetUrlAndHref();}});}/**
     * @param {?} commands
     * @return {?}
     */_createClass(RouterLinkWithHref,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){this.updateTargetUrlAndHref();}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.subscription.unsubscribe();}/**
     * @param {?} button
     * @param {?} ctrlKey
     * @param {?} metaKey
     * @return {?}
     */},{key:'onClick',value:function onClick(button,ctrlKey,metaKey){if(button!==0||ctrlKey||metaKey){return true;}if(typeof this.target==='string'&&this.target!='_self'){return true;}var/** @type {?} */extras={skipLocationChange:attrBoolValue(this.skipLocationChange),replaceUrl:attrBoolValue(this.replaceUrl)};this.router.navigateByUrl(this.urlTree,extras);return false;}/**
     * @return {?}
     */},{key:'updateTargetUrlAndHref',value:function updateTargetUrlAndHref(){this.href=this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));}/**
     * @return {?}
     */},{key:'routerLink',set:function set(commands){if(commands!=null){this.commands=Array.isArray(commands)?commands:[commands];}else{this.commands=[];}}/**
     * @param {?} value
     * @return {?}
     */},{key:'preserveQueryParams',set:function set(value){if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["h" /* isDevMode */])()&&console&&console.warn){console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');}this.preserve=value;}},{key:'urlTree',get:function get(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:attrBoolValue(this.preserve),queryParamsHandling:this.queryParamsHandling,preserveFragment:attrBoolValue(this.preserveFragment)});}}]);return RouterLinkWithHref;}();RouterLinkWithHref.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["e" /* Directive */],args:[{selector:'a[routerLink]'}]}];/** @nocollapse */RouterLinkWithHref.ctorParameters=function(){return[{type:Router},{type:ActivatedRoute},{type:__WEBPACK_IMPORTED_MODULE_0__angular_common__["d" /* LocationStrategy */]}];};RouterLinkWithHref.propDecorators={'target':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["l" /* HostBinding */],args:['attr.target']},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'queryParams':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'fragment':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'queryParamsHandling':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'preserveFragment':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'skipLocationChange':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'replaceUrl':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'href':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["l" /* HostBinding */]}],'routerLink':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'preserveQueryParams':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'onClick':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["L" /* HostListener */],args:['click',['$event.button','$event.ctrlKey','$event.metaKey']]}]};/**
 * @param {?} s
 * @return {?}
 */function attrBoolValue(s){return s===''||!!s;}/**
 * \@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.
 *
 * \@howToUse
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link">Bob</a>
 * ```
 *
 * \@description
 *
 * The RouterLinkActive directive lets you add a CSS class to an element when the link's route
 * becomes active.
 *
 * Consider the following example:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link">Bob</a>
 * ```
 *
 * When the url is either '/user' or '/user/bob', the active-link class will
 * be added to the `a` tag. If the url changes, the class will be removed.
 *
 * You can set more than one class, as follows:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="class1 class2">Bob</a>
 * <a routerLink="/user/bob" [routerLinkActive]="['class1', 'class2']">Bob</a>
 * ```
 *
 * You can configure RouterLinkActive by passing `exact: true`. This will add the classes
 * only when the url matches the link exactly.
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link" [routerLinkActiveOptions]="{exact:
 * true}">Bob</a>
 * ```
 *
 * You can assign the RouterLinkActive instance to a template variable and directly check
 * the `isActive` status.
 * ```
 * <a routerLink="/user/bob" routerLinkActive #rla="routerLinkActive">
 *   Bob {{ rla.isActive ? '(already open)' : ''}}
 * </a>
 * ```
 *
 * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.
 *
 * ```
 * <div routerLinkActive="active-link" [routerLinkActiveOptions]="{exact: true}">
 *   <a routerLink="/user/jim">Jim</a>
 *   <a routerLink="/user/bob">Bob</a>
 * </div>
 * ```
 *
 * This will set the active-link class on the div tag if the url is either '/user/jim' or
 * '/user/bob'.
 *
 * \@ngModule RouterModule
 *
 * \@stable
 */var RouterLinkActive=function(){/**
     * @param {?} router
     * @param {?} element
     * @param {?} renderer
     * @param {?} cdr
     */function RouterLinkActive(router,element,renderer,cdr){var _this35=this;_classCallCheck(this,RouterLinkActive);this.router=router;this.element=element;this.renderer=renderer;this.cdr=cdr;this.classes=[];this.active=false;this.routerLinkActiveOptions={exact:false};this.subscription=router.events.subscribe(function(s){if(s instanceof NavigationEnd){_this35.update();}});}/**
     * @return {?}
     */_createClass(RouterLinkActive,[{key:'ngAfterContentInit',/**
     * @return {?}
     */value:function ngAfterContentInit(){var _this36=this;this.links.changes.subscribe(function(_){return _this36.update();});this.linksWithHrefs.changes.subscribe(function(_){return _this36.update();});this.update();}/**
     * @param {?} data
     * @return {?}
     */},{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){this.update();}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.subscription.unsubscribe();}/**
     * @return {?}
     */},{key:'update',value:function update(){var _this37=this;if(!this.links||!this.linksWithHrefs||!this.router.navigated)return;var/** @type {?} */hasActiveLinks=this.hasActiveLinks();// react only when status has changed to prevent unnecessary dom updates
if(this.active!==hasActiveLinks){this.active=hasActiveLinks;this.classes.forEach(function(c){return _this37.renderer.setElementClass(_this37.element.nativeElement,c,hasActiveLinks);});this.cdr.detectChanges();}}/**
     * @param {?} router
     * @return {?}
     */},{key:'isLinkActive',value:function isLinkActive(router){var _this38=this;return function(link){return router.isActive(link.urlTree,_this38.routerLinkActiveOptions.exact);};}/**
     * @return {?}
     */},{key:'hasActiveLinks',value:function hasActiveLinks(){return this.links.some(this.isLinkActive(this.router))||this.linksWithHrefs.some(this.isLinkActive(this.router));}},{key:'isActive',get:function get(){return this.active;}},{key:'routerLinkActive',set:function set(data){var/** @type {?} */classes=Array.isArray(data)?data:data.split(' ');this.classes=classes.filter(function(c){return!!c;});}}]);return RouterLinkActive;}();RouterLinkActive.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["e" /* Directive */],args:[{selector:'[routerLinkActive]',exportAs:'routerLinkActive'}]}];/** @nocollapse */RouterLinkActive.ctorParameters=function(){return[{type:Router},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["m" /* ElementRef */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["C" /* ChangeDetectorRef */]}];};RouterLinkActive.propDecorators={'links':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["z" /* ContentChildren */],args:[RouterLink,{descendants:true}]}],'linksWithHrefs':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["z" /* ContentChildren */],args:[RouterLinkWithHref,{descendants:true}]}],'routerLinkActiveOptions':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}],'routerLinkActive':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["j" /* Input */]}]};/**
 * \@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router
 * state.
 *
 * \@howToUse
 *
 * ```
 * <router-outlet></router-outlet>
 * <router-outlet name='left'></router-outlet>
 * <router-outlet name='right'></router-outlet>
 * ```
 *
 * A router outlet will emit an activate event any time a new component is being instantiated,
 * and a deactivate event when it is being destroyed.
 *
 * ```
 * <router-outlet
 *   (activate)='onActivate($event)'
 *   (deactivate)='onDeactivate($event)'></router-outlet>
 * ```
 * \@ngModule RouterModule
 *
 * \@stable
 */var RouterOutlet=function(){/**
     * @param {?} parentOutletMap
     * @param {?} location
     * @param {?} resolver
     * @param {?} name
     */function RouterOutlet(parentOutletMap,location,resolver,name){_classCallCheck(this,RouterOutlet);this.parentOutletMap=parentOutletMap;this.location=location;this.resolver=resolver;this.name=name;this.activateEvents=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["i" /* EventEmitter */]();this.deactivateEvents=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["i" /* EventEmitter */]();parentOutletMap.registerOutlet(name?name:PRIMARY_OUTLET,this);}/**
     * @return {?}
     */_createClass(RouterOutlet,[{key:'ngOnDestroy',value:function ngOnDestroy(){this.parentOutletMap.removeOutlet(this.name?this.name:PRIMARY_OUTLET);}/**
     * @return {?}
     */},{key:'detach',/**
     * @return {?}
     */value:function detach(){if(!this.activated)throw new Error('Outlet is not activated');this.location.detach();var/** @type {?} */r=this.activated;this.activated=null;this._activatedRoute=null;return r;}/**
     * @param {?} ref
     * @param {?} activatedRoute
     * @return {?}
     */},{key:'attach',value:function attach(ref,activatedRoute){this.activated=ref;this._activatedRoute=activatedRoute;this.location.insert(ref.hostView);}/**
     * @return {?}
     */},{key:'deactivate',value:function deactivate(){if(this.activated){var/** @type {?} */c=this.component;this.activated.destroy();this.activated=null;this._activatedRoute=null;this.deactivateEvents.emit(c);}}/**
     * @param {?} activatedRoute
     * @param {?} resolver
     * @param {?} injector
     * @param {?} providers
     * @param {?} outletMap
     * @return {?}
     */},{key:'activate',value:function activate(activatedRoute,resolver,injector,providers,outletMap){if(this.isActivated){throw new Error('Cannot activate an already activated outlet');}this.outletMap=outletMap;this._activatedRoute=activatedRoute;var/** @type {?} */snapshot=activatedRoute._futureSnapshot;var/** @type {?} */component=snapshot._routeConfig.component;var/** @type {?} */factory=resolver.resolveComponentFactory(component);var/** @type {?} */inj=__WEBPACK_IMPORTED_MODULE_1__angular_core__["_10" /* ReflectiveInjector */].fromResolvedProviders(providers,injector);this.activated=this.location.createComponent(factory,this.location.length,inj,[]);this.activated.changeDetectorRef.detectChanges();this.activateEvents.emit(this.activated.instance);}},{key:'locationInjector',get:function get(){return this.location.injector;}/**
     * @return {?}
     */},{key:'locationFactoryResolver',get:function get(){return this.resolver;}/**
     * @return {?}
     */},{key:'isActivated',get:function get(){return!!this.activated;}/**
     * @return {?}
     */},{key:'component',get:function get(){if(!this.activated)throw new Error('Outlet is not activated');return this.activated.instance;}/**
     * @return {?}
     */},{key:'activatedRoute',get:function get(){if(!this.activated)throw new Error('Outlet is not activated');return this._activatedRoute;}}]);return RouterOutlet;}();RouterOutlet.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["e" /* Directive */],args:[{selector:'router-outlet'}]}];/** @nocollapse */RouterOutlet.ctorParameters=function(){return[{type:RouterOutletMap},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["u" /* ViewContainerRef */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["v" /* ComponentFactoryResolver */]},{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["E" /* Attribute */],args:['name']}]}];};RouterOutlet.propDecorators={'activateEvents':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["k" /* Output */],args:['activate']}],'deactivateEvents':[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["k" /* Output */],args:['deactivate']}]};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * \@whatItDoes Provides a way to customize when activated routes get reused.
 *
 * \@experimental
 * @abstract
 */var RouteReuseStrategy=function(){function RouteReuseStrategy(){_classCallCheck(this,RouteReuseStrategy);}_createClass(RouteReuseStrategy,[{key:'shouldDetach',/**
     * Determines if this route (and its subtree) should be detached to be reused later
     * @abstract
     * @param {?} route
     * @return {?}
     */value:function shouldDetach(route){}/**
     * Stores the detached route
     * @abstract
     * @param {?} route
     * @param {?} handle
     * @return {?}
     */},{key:'store',value:function store(route,handle){}/**
     * Determines if this route (and its subtree) should be reattached
     * @abstract
     * @param {?} route
     * @return {?}
     */},{key:'shouldAttach',value:function shouldAttach(route){}/**
     * Retrieves the previously stored route
     * @abstract
     * @param {?} route
     * @return {?}
     */},{key:'retrieve',value:function retrieve(route){}/**
     * Determines if a route should be reused
     * @abstract
     * @param {?} future
     * @param {?} curr
     * @return {?}
     */},{key:'shouldReuseRoute',value:function shouldReuseRoute(future,curr){}}]);return RouteReuseStrategy;}();/**
 * \@whatItDoes Provides a preloading strategy.
 *
 * \@experimental
 * @abstract
 */var PreloadingStrategy=function(){function PreloadingStrategy(){_classCallCheck(this,PreloadingStrategy);}_createClass(PreloadingStrategy,[{key:'preload',/**
     * @abstract
     * @param {?} route
     * @param {?} fn
     * @return {?}
     */value:function preload(route,fn){}}]);return PreloadingStrategy;}();/**
 * \@whatItDoes Provides a preloading strategy that preloads all modules as quicky as possible.
 *
 * \@howToUse
 *
 * ```
 * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})
 * ```
 *
 * \@experimental
 */var PreloadAllModules=function(){function PreloadAllModules(){_classCallCheck(this,PreloadAllModules);}_createClass(PreloadAllModules,[{key:'preload',/**
     * @param {?} route
     * @param {?} fn
     * @return {?}
     */value:function preload(route,fn){return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_catch__["_catch"].call(fn(),function(){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(null);});}}]);return PreloadAllModules;}();/**
 * \@whatItDoes Provides a preloading strategy that does not preload any modules.
 *
 * \@description
 *
 * This strategy is enabled by default.
 *
 * \@experimental
 */var NoPreloading=function(){function NoPreloading(){_classCallCheck(this,NoPreloading);}_createClass(NoPreloading,[{key:'preload',/**
     * @param {?} route
     * @param {?} fn
     * @return {?}
     */value:function preload(route,fn){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_of__["of"])(null);}}]);return NoPreloading;}();/**
 * The preloader optimistically loads all router configurations to
 * make navigations into lazily-loaded sections of the application faster.
 *
 * The preloader runs in the background. When the router bootstraps, the preloader
 * starts listening to all navigation events. After every such event, the preloader
 * will check if any configurations can be loaded lazily.
 *
 * If a route is protected by `canLoad` guards, the preloaded will not load it.
 *
 * \@stable
 */var RouterPreloader=function(){/**
     * @param {?} router
     * @param {?} moduleLoader
     * @param {?} compiler
     * @param {?} injector
     * @param {?} preloadingStrategy
     */function RouterPreloader(router,moduleLoader,compiler,injector,preloadingStrategy){_classCallCheck(this,RouterPreloader);this.router=router;this.injector=injector;this.preloadingStrategy=preloadingStrategy;var onStartLoad=function onStartLoad(r){return router.triggerEvent(new RouteConfigLoadStart(r));};var onEndLoad=function onEndLoad(r){return router.triggerEvent(new RouteConfigLoadEnd(r));};this.loader=new RouterConfigLoader(moduleLoader,compiler,onStartLoad,onEndLoad);}_createClass(RouterPreloader,[{key:'setUpPreloading',/**
     * @return {?}
     */value:function setUpPreloading(){var _this39=this;var/** @type {?} */navigations=__WEBPACK_IMPORTED_MODULE_20_rxjs_operator_filter__["filter"].call(this.router.events,function(e){return e instanceof NavigationEnd;});this.subscription=__WEBPACK_IMPORTED_MODULE_6_rxjs_operator_concatMap__["concatMap"].call(navigations,function(){return _this39.preload();}).subscribe(function(){});}/**
     * @return {?}
     */},{key:'preload',value:function preload(){return this.processRoutes(this.injector,this.router.config);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.subscription.unsubscribe();}/**
     * @param {?} injector
     * @param {?} routes
     * @return {?}
     */},{key:'processRoutes',value:function processRoutes(injector,routes){var/** @type {?} */res=[];var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=routes[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var c=_step10.value;// we already have the config loaded, just recurse
if(c.loadChildren&&!c.canLoad&&c._loadedConfig){var/** @type {?} */childConfig=c._loadedConfig;res.push(this.processRoutes(childConfig.injector,childConfig.routes));}else if(c.loadChildren&&!c.canLoad){res.push(this.preloadConfig(injector,c));}else if(c.children){res.push(this.processRoutes(injector,c.children));}}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}return __WEBPACK_IMPORTED_MODULE_18_rxjs_operator_mergeAll__["mergeAll"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_from__["from"])(res));}/**
     * @param {?} injector
     * @param {?} route
     * @return {?}
     */},{key:'preloadConfig',value:function preloadConfig(injector,route){var _this40=this;return this.preloadingStrategy.preload(route,function(){var/** @type {?} */loaded=_this40.loader.load(injector,route);return __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_mergeMap__["mergeMap"].call(loaded,function(config){var/** @type {?} */c=route;c._loadedConfig=config;return _this40.processRoutes(config.injector,config.routes);});});}}]);return RouterPreloader;}();RouterPreloader.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */RouterPreloader.ctorParameters=function(){return[{type:Router},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_11" /* NgModuleFactoryLoader */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_9" /* Compiler */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["x" /* Injector */]},{type:PreloadingStrategy}];};/**
 * @whatItDoes Contains a list of directives
 * @stable
 */var/** @type {?} */ROUTER_DIRECTIVES=[RouterOutlet,RouterLink,RouterLinkWithHref,RouterLinkActive];/**
 * @whatItDoes Is used in DI to configure the router.
 * @stable
 */var/** @type {?} */ROUTER_CONFIGURATION=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('ROUTER_CONFIGURATION');/**
 * @docsNotRequired
 */var/** @type {?} */ROUTER_FORROOT_GUARD=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('ROUTER_FORROOT_GUARD');var/** @type {?} */ROUTER_PROVIDERS=[__WEBPACK_IMPORTED_MODULE_0__angular_common__["e" /* Location */],{provide:UrlSerializer,useClass:DefaultUrlSerializer},{provide:Router,useFactory:setupRouter,deps:[__WEBPACK_IMPORTED_MODULE_1__angular_core__["w" /* ApplicationRef */],UrlSerializer,RouterOutletMap,__WEBPACK_IMPORTED_MODULE_0__angular_common__["e" /* Location */],__WEBPACK_IMPORTED_MODULE_1__angular_core__["x" /* Injector */],__WEBPACK_IMPORTED_MODULE_1__angular_core__["_11" /* NgModuleFactoryLoader */],__WEBPACK_IMPORTED_MODULE_1__angular_core__["_9" /* Compiler */],ROUTES,ROUTER_CONFIGURATION,[UrlHandlingStrategy,new __WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */]()],[RouteReuseStrategy,new __WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */]()]]},RouterOutletMap,{provide:ActivatedRoute,useFactory:rootRoute,deps:[Router]},{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_11" /* NgModuleFactoryLoader */],useClass:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_12" /* SystemJsNgModuleLoader */]},RouterPreloader,NoPreloading,PreloadAllModules,{provide:ROUTER_CONFIGURATION,useValue:{enableTracing:false}}];/**
 * @return {?}
 */function routerNgProbeToken(){return new __WEBPACK_IMPORTED_MODULE_1__angular_core__["U" /* NgProbeToken */]('Router',Router);}/**
 * \@whatItDoes Adds router directives and providers.
 *
 * \@howToUse
 *
 * RouterModule can be imported multiple times: once per lazily-loaded bundle.
 * Since the router deals with a global shared resource--location, we cannot have
 * more than one router service active.
 *
 * That is why there are two ways to create the module: `RouterModule.forRoot` and
 * `RouterModule.forChild`.
 *
 * * `forRoot` creates a module that contains all the directives, the given routes, and the router
 *   service itself.
 * * `forChild` creates a module that contains all the directives and the given routes, but does not
 *   include the router service.
 *
 * When registered at the root, the module should be used as follows
 *
 * ```
 * \@NgModule({
 *   imports: [RouterModule.forRoot(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * For submodules and lazy loaded submodules the module should be used as follows:
 *
 * ```
 * \@NgModule({
 *   imports: [RouterModule.forChild(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * \@description
 *
 * Managing state transitions is one of the hardest parts of building applications. This is
 * especially true on the web, where you also need to ensure that the state is reflected in the URL.
 * In addition, we often want to split applications into multiple bundles and load them on demand.
 * Doing this transparently is not trivial.
 *
 * The Angular router solves these problems. Using the router, you can declaratively specify
 * application states, manage state transitions while taking care of the URL, and load bundles on
 * demand.
 *
 * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an
 * overview of how the router should be used.
 *
 * \@stable
 */var RouterModule=function(){/**
     * @param {?} guard
     */function RouterModule(guard){_classCallCheck(this,RouterModule);}/**
     * Creates a module with all the router providers and directives. It also optionally sets up an
     * application listener to perform an initial navigation.
     *
     * Options:
     * * `enableTracing` makes the router log all its internal events to the console.
     * * `useHash` enables the location strategy that uses the URL fragment instead of the history
     * API.
     * * `initialNavigation` disables the initial navigation.
     * * `errorHandler` provides a custom error handler.
     * @param {?} routes
     * @param {?=} config
     * @return {?}
     */_createClass(RouterModule,null,[{key:'forRoot',value:function forRoot(routes,config){return{ngModule:RouterModule,providers:[ROUTER_PROVIDERS,provideRoutes(routes),{provide:ROUTER_FORROOT_GUARD,useFactory:provideForRootGuard,deps:[[Router,new __WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */](),new __WEBPACK_IMPORTED_MODULE_1__angular_core__["p" /* SkipSelf */]()]]},{provide:ROUTER_CONFIGURATION,useValue:config?config:{}},{provide:__WEBPACK_IMPORTED_MODULE_0__angular_common__["d" /* LocationStrategy */],useFactory:provideLocationStrategy,deps:[__WEBPACK_IMPORTED_MODULE_0__angular_common__["b" /* PlatformLocation */],[new __WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */](__WEBPACK_IMPORTED_MODULE_0__angular_common__["f" /* APP_BASE_HREF */]),new __WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */]()],ROUTER_CONFIGURATION]},{provide:PreloadingStrategy,useExisting:config&&config.preloadingStrategy?config.preloadingStrategy:NoPreloading},{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["U" /* NgProbeToken */],multi:true,useFactory:routerNgProbeToken},provideRouterInitializer()]};}/**
     * Creates a module with all the router directives and a provider registering routes.
     * @param {?} routes
     * @return {?}
     */},{key:'forChild',value:function forChild(routes){return{ngModule:RouterModule,providers:[provideRoutes(routes)]};}}]);return RouterModule;}();RouterModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["b" /* NgModule */],args:[{declarations:ROUTER_DIRECTIVES,exports:ROUTER_DIRECTIVES}]}];/** @nocollapse */RouterModule.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["g" /* Inject */],args:[ROUTER_FORROOT_GUARD]}]}];};/**
 * @param {?} platformLocationStrategy
 * @param {?} baseHref
 * @param {?=} options
 * @return {?}
 */function provideLocationStrategy(platformLocationStrategy,baseHref){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return options.useHash?new __WEBPACK_IMPORTED_MODULE_0__angular_common__["g" /* HashLocationStrategy */](platformLocationStrategy,baseHref):new __WEBPACK_IMPORTED_MODULE_0__angular_common__["h" /* PathLocationStrategy */](platformLocationStrategy,baseHref);}/**
 * @param {?} router
 * @return {?}
 */function provideForRootGuard(router){if(router){throw new Error('RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.');}return'guarded';}/**
 * \@whatItDoes Registers routes.
 *
 * \@howToUse
 *
 * ```
 * \@NgModule({
 *   imports: [RouterModule.forChild(ROUTES)],
 *   providers: [provideRoutes(EXTRA_ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * \@stable
 * @param {?} routes
 * @return {?}
 */function provideRoutes(routes){return[{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_13" /* ANALYZE_FOR_ENTRY_COMPONENTS */],multi:true,useValue:routes},{provide:ROUTES,multi:true,useValue:routes}];}/**
 * @param {?} ref
 * @param {?} urlSerializer
 * @param {?} outletMap
 * @param {?} location
 * @param {?} injector
 * @param {?} loader
 * @param {?} compiler
 * @param {?} config
 * @param {?=} opts
 * @param {?=} urlHandlingStrategy
 * @param {?=} routeReuseStrategy
 * @return {?}
 */function setupRouter(ref,urlSerializer,outletMap,location,injector,loader,compiler,config){var opts=arguments.length>8&&arguments[8]!==undefined?arguments[8]:{};var urlHandlingStrategy=arguments[9];var routeReuseStrategy=arguments[10];var/** @type {?} */router=new Router(null,urlSerializer,outletMap,location,injector,loader,compiler,flatten(config));if(urlHandlingStrategy){router.urlHandlingStrategy=urlHandlingStrategy;}if(routeReuseStrategy){router.routeReuseStrategy=routeReuseStrategy;}if(opts.errorHandler){router.errorHandler=opts.errorHandler;}if(opts.enableTracing){var/** @type {?} */dom=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_19__angular_platform_browser__["f" /* ɵgetDOM */])();router.events.subscribe(function(e){dom.logGroup('Router Event: '+e.constructor.name);dom.log(e.toString());dom.log(e);dom.logGroupEnd();});}return router;}/**
 * @param {?} router
 * @return {?}
 */function rootRoute(router){return router.routerState.root;}/**
 * @param {?} router
 * @param {?} ref
 * @param {?} preloader
 * @param {?} opts
 * @return {?}
 */function initialRouterNavigation(router,ref,preloader,opts){return function(bootstrappedComponentRef){if(bootstrappedComponentRef!==ref.components[0]){return;}router.resetRootComponentType(ref.componentTypes[0]);preloader.setUpPreloading();if(opts.initialNavigation===false){router.setUpLocationChangeListener();}else{router.initialNavigation();}};}/**
 * A token for the router initializer that will be called after the app is bootstrapped.
 *
 * @experimental
 */var/** @type {?} */ROUTER_INITIALIZER=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["I" /* InjectionToken */]('Router Initializer');/**
 * @return {?}
 */function provideRouterInitializer(){return[{provide:ROUTER_INITIALIZER,useFactory:initialRouterNavigation,deps:[Router,__WEBPACK_IMPORTED_MODULE_1__angular_core__["w" /* ApplicationRef */],RouterPreloader,ROUTER_CONFIGURATION]},{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_14" /* APP_BOOTSTRAP_LISTENER */],multi:true,useExisting:ROUTER_INITIALIZER}];}/**
 * @stable
 */var/** @type {?} */VERSION=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["M" /* Version */]('4.0.0-rc.1');


/***/ }),
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscription_1 = __webpack_require__(7);
/**
 * @class AsyncSubject<T>
 */
var AsyncSubject = (function (_super) {
    __extends(AsyncSubject, _super);
    function AsyncSubject() {
        _super.apply(this, arguments);
        this.value = null;
        this.hasNext = false;
        this.hasCompleted = false;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(Subject_1.Subject));
exports.AsyncSubject = AsyncSubject;
//# sourceMappingURL=AsyncSubject.js.map

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */
function map(project, thisArg) {
    if (typeof project !== 'function') {
        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
    }
    return this.lift(new MapOperator(project, thisArg));
}
exports.map = map;
var MapOperator = (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());
exports.MapOperator = MapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapSubscriber = (function (_super) {
    __extends(MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        _super.call(this, destination);
        this.project = project;
        this.count = 0;
        this.thisArg = thisArg || this;
    }
    // NOTE: This looks unoptimized, but it's actually purposefully NOT
    // using try/catch optimizations.
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=map.js.map

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:disable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */
function reduce(accumulator, seed) {
    var hasSeed = false;
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return this.lift(new ReduceOperator(accumulator, seed, hasSeed));
}
exports.reduce = reduce;
var ReduceOperator = (function () {
    function ReduceOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) { hasSeed = false; }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ReduceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ReduceOperator;
}());
exports.ReduceOperator = ReduceOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ReduceSubscriber = (function (_super) {
    __extends(ReduceSubscriber, _super);
    function ReduceSubscriber(destination, accumulator, seed, hasSeed) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this.hasSeed = hasSeed;
        this.index = 0;
        this.hasValue = false;
        this.acc = seed;
        if (!this.hasSeed) {
            this.index++;
        }
    }
    ReduceSubscriber.prototype._next = function (value) {
        if (this.hasValue || (this.hasValue = this.hasSeed)) {
            this._tryReduce(value);
        }
        else {
            this.acc = value;
            this.hasValue = true;
        }
    };
    ReduceSubscriber.prototype._tryReduce = function (value) {
        var result;
        try {
            result = this.accumulator(this.acc, value, this.index++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.acc = result;
    };
    ReduceSubscriber.prototype._complete = function () {
        if (this.hasValue || this.hasSeed) {
            this.destination.next(this.acc);
        }
        this.destination.complete();
    };
    return ReduceSubscriber;
}(Subscriber_1.Subscriber));
exports.ReduceSubscriber = ReduceSubscriber;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
var Symbol = root_1.root.Symbol;
exports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?
    Symbol.for('rxSubscriber') : '@@rxSubscriber';
//# sourceMappingURL=rxSubscriber.js.map

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
var ArgumentOutOfRangeError = (function (_super) {
    __extends(ArgumentOutOfRangeError, _super);
    function ArgumentOutOfRangeError() {
        var err = _super.call(this, 'argument out of range');
        this.name = err.name = 'ArgumentOutOfRangeError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ArgumentOutOfRangeError;
}(Error));
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */
var ObjectUnsubscribedError = (function (_super) {
    __extends(ObjectUnsubscribedError, _super);
    function ObjectUnsubscribedError() {
        var err = _super.call(this, 'object unsubscribed');
        this.name = err.name = 'ObjectUnsubscribedError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ObjectUnsubscribedError;
}(Error));
exports.ObjectUnsubscribedError = ObjectUnsubscribedError;
//# sourceMappingURL=ObjectUnsubscribedError.js.map

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
exports.isDate = isDate;
//# sourceMappingURL=isDate.js.map

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isFunction(x) {
    return typeof x === 'function';
}
exports.isFunction = isFunction;
//# sourceMappingURL=isFunction.js.map

/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* unused harmony export RESPONSIVE_ALIASES */
/* unused harmony export RAW_DEFAULTS */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return BREAKPOINTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BreakPointsProvider; });

var RESPONSIVE_ALIASES = [
    'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'
];
var RAW_DEFAULTS = [
    {
        alias: 'xs',
        suffix: 'Xs',
        overlapping: false,
        mediaQuery: 'screen and (max-width: 599px)'
    },
    {
        alias: 'gt-xs',
        suffix: 'GtXs',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 600px)'
    },
    {
        alias: 'sm',
        suffix: 'Sm',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)'
    },
    {
        alias: 'gt-sm',
        suffix: 'GtSm',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 960px)'
    },
    {
        alias: 'md',
        suffix: 'Md',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)'
    },
    {
        alias: 'gt-md',
        suffix: 'GtMd',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 1280px)'
    },
    {
        alias: 'lg',
        suffix: 'Lg',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)'
    },
    {
        alias: 'gt-lg',
        suffix: 'GtLg',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 1920px)'
    },
    {
        alias: 'xl',
        suffix: 'Xl',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 1921px)' // should be distinct from 'gt-lg' range
    }
];
/**
 *  Opaque Token unique to the flex-layout library.
 *  Use this token when build a custom provider (see below).
 */
var BREAKPOINTS = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["d" /* OpaqueToken */]('fxRawBreakpoints');
/**
 *  Provider to return observable to ALL known BreakPoint(s)
 *  Developers should build custom providers to override
 *  this default BreakPointRegistry dataset provider
 *  NOTE: !! custom breakpoints lists MUST contain the following aliases & suffixes:
 *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]
 */
var BreakPointsProvider = {
    provide: BREAKPOINTS,
    useValue: RAW_DEFAULTS
};
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/providers/break-points-provider.js.map

/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__object_extend__ = __webpack_require__(32);
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeAlias;

/**
 * For the specified MediaChange, make sure it contains the breakpoint alias
 * and suffix (if available).
 */
function mergeAlias(dest, source) {
    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__object_extend__["a" /* extendObject */])(dest, source ? {
        mqAlias: source.alias,
        suffix: source.suffix
    } : {});
}
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/utils/add-alias.js.map

/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_operator_toPromise__ = __webpack_require__(158);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_observable_fromPromise__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_fromPromise__);
/* unused harmony export AbstractControlDirective */
/* unused harmony export AbstractFormGroupDirective */
/* unused harmony export CheckboxControlValueAccessor */
/* unused harmony export ControlContainer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return NG_VALUE_ACCESSOR; });
/* unused harmony export DefaultValueAccessor */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return NgControl; });
/* unused harmony export NgControlStatus */
/* unused harmony export NgControlStatusGroup */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return NgForm; });
/* unused harmony export NgModel */
/* unused harmony export NgModelGroup */
/* unused harmony export RadioControlValueAccessor */
/* unused harmony export FormControlDirective */
/* unused harmony export FormControlName */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return FormGroupDirective; });
/* unused harmony export FormArrayName */
/* unused harmony export FormGroupName */
/* unused harmony export NgSelectOption */
/* unused harmony export SelectControlValueAccessor */
/* unused harmony export SelectMultipleControlValueAccessor */
/* unused harmony export CheckboxRequiredValidator */
/* unused harmony export EmailValidator */
/* unused harmony export MaxLengthValidator */
/* unused harmony export MinLengthValidator */
/* unused harmony export PatternValidator */
/* unused harmony export RequiredValidator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return FormBuilder; });
/* unused harmony export AbstractControl */
/* unused harmony export FormArray */
/* unused harmony export FormControl */
/* unused harmony export FormGroup */
/* unused harmony export NG_ASYNC_VALIDATORS */
/* unused harmony export NG_VALIDATORS */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return Validators; });
/* unused harmony export VERSION */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FormsModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ReactiveFormsModule; });
/* unused harmony export ɵba */
/* unused harmony export ɵz */
/* unused harmony export ɵx */
/* unused harmony export ɵy */
/* unused harmony export ɵa */
/* unused harmony export ɵb */
/* unused harmony export ɵc */
/* unused harmony export ɵd */
/* unused harmony export ɵe */
/* unused harmony export ɵf */
/* unused harmony export ɵg */
/* unused harmony export ɵbf */
/* unused harmony export ɵbb */
/* unused harmony export ɵbc */
/* unused harmony export ɵh */
/* unused harmony export ɵi */
/* unused harmony export ɵbd */
/* unused harmony export ɵbe */
/* unused harmony export ɵj */
/* unused harmony export ɵk */
/* unused harmony export ɵl */
/* unused harmony export ɵn */
/* unused harmony export ɵm */
/* unused harmony export ɵo */
/* unused harmony export ɵq */
/* unused harmony export ɵp */
/* unused harmony export ɵs */
/* unused harmony export ɵt */
/* unused harmony export ɵv */
/* unused harmony export ɵu */
/* unused harmony export ɵw */
/* unused harmony export ɵr */
var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * Base class for control directives.
 *
 * Only used internally in the forms module.
 *
 * \@stable
 * @abstract
 */var AbstractControlDirective=function(){function AbstractControlDirective(){_classCallCheck(this,AbstractControlDirective);}_createClass(AbstractControlDirective,[{key:'reset',/**
     * @param {?=} value
     * @return {?}
     */value:function reset(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;if(this.control)this.control.reset(value);}/**
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'hasError',value:function hasError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return this.control?this.control.hasError(errorCode,path):false;}/**
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'getError',value:function getError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return this.control?this.control.getError(errorCode,path):null;}},{key:'control',/**
     * @return {?}
     */get:function get(){throw new Error('unimplemented');}/**
     * @return {?}
     */},{key:'value',get:function get(){return this.control?this.control.value:null;}/**
     * @return {?}
     */},{key:'valid',get:function get(){return this.control?this.control.valid:null;}/**
     * @return {?}
     */},{key:'invalid',get:function get(){return this.control?this.control.invalid:null;}/**
     * @return {?}
     */},{key:'pending',get:function get(){return this.control?this.control.pending:null;}/**
     * @return {?}
     */},{key:'errors',get:function get(){return this.control?this.control.errors:null;}/**
     * @return {?}
     */},{key:'pristine',get:function get(){return this.control?this.control.pristine:null;}/**
     * @return {?}
     */},{key:'dirty',get:function get(){return this.control?this.control.dirty:null;}/**
     * @return {?}
     */},{key:'touched',get:function get(){return this.control?this.control.touched:null;}/**
     * @return {?}
     */},{key:'untouched',get:function get(){return this.control?this.control.untouched:null;}/**
     * @return {?}
     */},{key:'disabled',get:function get(){return this.control?this.control.disabled:null;}/**
     * @return {?}
     */},{key:'enabled',get:function get(){return this.control?this.control.enabled:null;}/**
     * @return {?}
     */},{key:'statusChanges',get:function get(){return this.control?this.control.statusChanges:null;}/**
     * @return {?}
     */},{key:'valueChanges',get:function get(){return this.control?this.control.valueChanges:null;}/**
     * @return {?}
     */},{key:'path',get:function get(){return null;}}]);return AbstractControlDirective;}();/**
 * A directive that contains multiple {\@link NgControl}s.
 *
 * Only used by the forms module.
 *
 * \@stable
 */var ControlContainer=function(_AbstractControlDirec){_inherits(ControlContainer,_AbstractControlDirec);function ControlContainer(){_classCallCheck(this,ControlContainer);return _possibleConstructorReturn(this,(ControlContainer.__proto__||Object.getPrototypeOf(ControlContainer)).apply(this,arguments));}_createClass(ControlContainer,[{key:'formDirective',/**
     * Get the form to which this container belongs.
     * @return {?}
     */get:function get(){return null;}/**
     * Get the path to this container.
     * @return {?}
     */},{key:'path',get:function get(){return null;}}]);return ControlContainer;}(AbstractControlDirective);/**
 * @param {?} obj
 * @return {?}
 */function isPresent(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank(obj){return obj==null;}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function looseIdentical(a,b){return a===b||typeof a==='number'&&typeof b==='number'&&isNaN(a)&&isNaN(b);}/**
 * @param {?} o
 * @return {?}
 */function isJsObject(o){return o!==null&&(typeof o==='function'||(typeof o==='undefined'?'undefined':_typeof(o))==='object');}/**
 * @param {?} obj
 * @return {?}
 */function isPrimitive(obj){return!isJsObject(obj);}/**
 * Wraps Javascript Objects
 */var StringMapWrapper=function(){function StringMapWrapper(){_classCallCheck(this,StringMapWrapper);}_createClass(StringMapWrapper,null,[{key:'merge',/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */value:function merge(m1,m2){var/** @type {?} */m={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(m1)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var k=_step.value;m[k]=m1[k];}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(m2)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _k=_step2.value;m[_k]=m2[_k];}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return m;}/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */},{key:'equals',value:function equals(m1,m2){var/** @type {?} */k1=Object.keys(m1);var/** @type {?} */k2=Object.keys(m2);if(k1.length!=k2.length){return false;}for(var/** @type {?} */i=0;i<k1.length;i++){var/** @type {?} */key=k1[i];if(m1[key]!==m2[key]){return false;}}return true;}}]);return StringMapWrapper;}();var ListWrapper=function(){function ListWrapper(){_classCallCheck(this,ListWrapper);}_createClass(ListWrapper,null,[{key:'findLast',/**
     * @param {?} arr
     * @param {?} condition
     * @return {?}
     */value:function findLast(arr,condition){for(var/** @type {?} */i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
     * @param {?} list
     * @param {?} items
     * @return {?}
     */},{key:'removeAll',value:function removeAll(list,items){for(var/** @type {?} */i=0;i<items.length;++i){var/** @type {?} */index=list.indexOf(items[i]);if(index>-1){list.splice(index,1);}}}/**
     * @param {?} list
     * @param {?} el
     * @return {?}
     */},{key:'remove',value:function remove(list,el){var/** @type {?} */index=list.indexOf(el);if(index>-1){list.splice(index,1);return true;}return false;}/**
     * @param {?} a
     * @param {?} b
     * @return {?}
     */},{key:'equals',value:function equals(a,b){if(a.length!=b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i]!==b[i])return false;}return true;}/**
     * @param {?} list
     * @return {?}
     */},{key:'flatten',value:function flatten(list){return list.reduce(function(flat,item){var/** @type {?} */flatItem=Array.isArray(item)?ListWrapper.flatten(item):item;return flat.concat(flatItem);},[]);}}]);return ListWrapper;}();/**
 * @param {?} value
 * @return {?}
 */function isEmptyInputValue(value){// we don't check for string here so it also works with arrays
return value==null||value.length===0;}/**
 * Providers for validators to be used for {@link FormControl}s in a form.
 *
 * Provide this using `multi: true` to add validators.
 *
 * ### Example
 *
 * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}
 * @stable
 */var/** @type {?} */NG_VALIDATORS=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('NgValidators');/**
 * Providers for asynchronous validators to be used for {@link FormControl}s
 * in a form.
 *
 * Provide this using `multi: true` to add validators.
 *
 * See {@link NG_VALIDATORS} for more details.
 *
 * @stable
 */var/** @type {?} */NG_ASYNC_VALIDATORS=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('NgAsyncValidators');var/** @type {?} */EMAIL_REGEXP=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;/**
 * Provides a set of validators used by form controls.
 *
 * A validator is a function that processes a {\@link FormControl} or collection of
 * controls and returns a map of errors. A null map means that validation has passed.
 *
 * ### Example
 *
 * ```typescript
 * var loginControl = new FormControl("", Validators.required)
 * ```
 *
 * \@stable
 */var Validators=function(){function Validators(){_classCallCheck(this,Validators);}_createClass(Validators,null,[{key:'equalsTo',/**
     * Validator that compares the value of the given FormControls
     * @param {...?} fieldPaths
     * @return {?}
     */value:function equalsTo(){for(var _len=arguments.length,fieldPaths=Array(_len),_key=0;_key<_len;_key++){fieldPaths[_key]=arguments[_key];}return function(control){if(fieldPaths.length<1){throw new Error('You must compare to at least 1 other field');}var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=fieldPaths[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var fieldName=_step3.value;var/** @type {?} */field=control.parent.get(fieldName);if(!field){throw new Error('Field: '+fieldName+' undefined, are you sure that '+fieldName+' exists in the group');}if(field.value!==control.value){return{'equalsTo':{'unequalField':fieldName}};}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return null;};}/**
     * Validator that requires controls to have a non-empty value.
     * @param {?} control
     * @return {?}
     */},{key:'required',value:function required(control){return isEmptyInputValue(control.value)?{'required':true}:null;}/**
     * Validator that requires control value to be true.
     * @param {?} control
     * @return {?}
     */},{key:'requiredTrue',value:function requiredTrue(control){return control.value===true?null:{'required':true};}/**
     * Validator that performs email validation.
     * @param {?} control
     * @return {?}
     */},{key:'email',value:function email(control){return EMAIL_REGEXP.test(control.value)?null:{'email':true};}/**
     * Validator that requires controls to have a value of a minimum length.
     * @param {?} minLength
     * @return {?}
     */},{key:'minLength',value:function minLength(_minLength){return function(control){if(isEmptyInputValue(control.value)){return null;// don't validate empty values to allow optional controls
}var/** @type {?} */length=control.value?control.value.length:0;return length<_minLength?{'minlength':{'requiredLength':_minLength,'actualLength':length}}:null;};}/**
     * Validator that requires controls to have a value of a maximum length.
     * @param {?} maxLength
     * @return {?}
     */},{key:'maxLength',value:function maxLength(_maxLength){return function(control){var/** @type {?} */length=control.value?control.value.length:0;return length>_maxLength?{'maxlength':{'requiredLength':_maxLength,'actualLength':length}}:null;};}/**
     * Validator that requires a control to match a regex to its value.
     * @param {?} pattern
     * @return {?}
     */},{key:'pattern',value:function pattern(_pattern){if(!_pattern)return Validators.nullValidator;var/** @type {?} */regex=void 0;var/** @type {?} */regexStr=void 0;if(typeof _pattern==='string'){regexStr='^'+_pattern+'$';regex=new RegExp(regexStr);}else{regexStr=_pattern.toString();regex=_pattern;}return function(control){if(isEmptyInputValue(control.value)){return null;// don't validate empty values to allow optional controls
}var/** @type {?} */value=control.value;return regex.test(value)?null:{'pattern':{'requiredPattern':regexStr,'actualValue':value}};};}/**
     * No-op validator.
     * @param {?} c
     * @return {?}
     */},{key:'nullValidator',value:function nullValidator(c){return null;}/**
     * Compose multiple validators into a single function that returns the union
     * of the individual error maps.
     * @param {?} validators
     * @return {?}
     */},{key:'compose',value:function compose(validators){if(!validators)return null;var/** @type {?} */presentValidators=validators.filter(isPresent);if(presentValidators.length==0)return null;return function(control){return _mergeErrors(_executeValidators(control,presentValidators));};}/**
     * @param {?} validators
     * @return {?}
     */},{key:'composeAsync',value:function composeAsync(validators){if(!validators)return null;var/** @type {?} */presentValidators=validators.filter(isPresent);if(presentValidators.length==0)return null;return function(control){var/** @type {?} */promises=_executeAsyncValidators(control,presentValidators).map(_convertToPromise);return Promise.all(promises).then(_mergeErrors);};}}]);return Validators;}();/**
 * @param {?} obj
 * @return {?}
 */function _convertToPromise(obj){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["J" /* ɵisPromise */])(obj)?obj:__WEBPACK_IMPORTED_MODULE_1_rxjs_operator_toPromise__["toPromise"].call(obj);}/**
 * @param {?} control
 * @param {?} validators
 * @return {?}
 */function _executeValidators(control,validators){return validators.map(function(v){return v(control);});}/**
 * @param {?} control
 * @param {?} validators
 * @return {?}
 */function _executeAsyncValidators(control,validators){return validators.map(function(v){return v(control);});}/**
 * @param {?} arrayOfErrors
 * @return {?}
 */function _mergeErrors(arrayOfErrors){var/** @type {?} */res=arrayOfErrors.reduce(function(res,errors){return isPresent(errors)?StringMapWrapper.merge(res,errors):res;},{});return Object.keys(res).length===0?null:res;}/**
 * Used to provide a {@link ControlValueAccessor} for form controls.
 *
 * See {@link DefaultValueAccessor} for how to implement one.
 * @stable
 */var/** @type {?} */NG_VALUE_ACCESSOR=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('NgValueAccessor');var/** @type {?} */CHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return CheckboxControlValueAccessor;}),multi:true};/**
 * The accessor for writing a value and listening to changes on a checkbox input element.
 *
 *  ### Example
 *  ```
 *  <input type="checkbox" name="rememberLogin" ngModel>
 *  ```
 *
 *  \@stable
 */var CheckboxControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function CheckboxControlValueAccessor(_renderer,_elementRef){_classCallCheck(this,CheckboxControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass(CheckboxControlValueAccessor,[{key:'writeValue',value:function writeValue(value){this._renderer.setElementProperty(this._elementRef.nativeElement,'checked',value);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=fn;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return CheckboxControlValueAccessor;}();CheckboxControlValueAccessor.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',host:{'(change)':'onChange($event.target.checked)','(blur)':'onTouched()'},providers:[CHECKBOX_VALUE_ACCESSOR]}]}];/** @nocollapse */CheckboxControlValueAccessor.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]}];};var/** @type {?} */DEFAULT_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return DefaultValueAccessor;}),multi:true};/**
 * The default accessor for writing a value and listening to changes that is used by the
 * {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName} directives.
 *
 *  ### Example
 *  ```
 *  <input type="text" name="searchQuery" ngModel>
 *  ```
 *
 *  \@stable
 */var DefaultValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function DefaultValueAccessor(_renderer,_elementRef){_classCallCheck(this,DefaultValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass(DefaultValueAccessor,[{key:'writeValue',value:function writeValue(value){var/** @type {?} */normalizedValue=value==null?'':value;this._renderer.setElementProperty(this._elementRef.nativeElement,'value',normalizedValue);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=fn;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return DefaultValueAccessor;}();DefaultValueAccessor.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',// TODO: vsavkin replace the above selector with the one below it once
// https://github.com/angular/angular/issues/3011 is implemented
// selector: '[ngControl],[ngModel],[ngFormControl]',
host:{'(input)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[DEFAULT_VALUE_ACCESSOR]}]}];/** @nocollapse */DefaultValueAccessor.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]}];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @param {?} validator
 * @return {?}
 */function normalizeValidator(validator){if(validator.validate){return function(c){return validator.validate(c);};}else{return validator;}}/**
 * @param {?} validator
 * @return {?}
 */function normalizeAsyncValidator(validator){if(validator.validate){return function(c){return validator.validate(c);};}else{return validator;}}var/** @type {?} */NUMBER_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return NumberValueAccessor;}),multi:true};/**
 * The accessor for writing a number value and listening to changes that is used by the
 * {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName} directives.
 *
 *  ### Example
 *  ```
 *  <input type="number" [(ngModel)]="age">
 *  ```
 */var NumberValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function NumberValueAccessor(_renderer,_elementRef){_classCallCheck(this,NumberValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass(NumberValueAccessor,[{key:'writeValue',value:function writeValue(value){// The value needs to be normalized for IE9, otherwise it is set to 'null' when null
var/** @type {?} */normalizedValue=value==null?'':value;this._renderer.setElementProperty(this._elementRef.nativeElement,'value',normalizedValue);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=function(value){fn(value==''?null:parseFloat(value));};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return NumberValueAccessor;}();NumberValueAccessor.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',host:{'(change)':'onChange($event.target.value)','(input)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[NUMBER_VALUE_ACCESSOR]}]}];/** @nocollapse */NumberValueAccessor.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]}];};/**
 * @return {?}
 */function unimplemented(){throw new Error('unimplemented');}/**
 * A base class that all control directive extend.
 * It binds a {\@link FormControl} object to a DOM element.
 *
 * Used internally by Angular forms.
 *
 * \@stable
 * @abstract
 */var NgControl=function(_AbstractControlDirec2){_inherits(NgControl,_AbstractControlDirec2);function NgControl(){_classCallCheck(this,NgControl);/** @internal */var _this2=_possibleConstructorReturn(this,(NgControl.__proto__||Object.getPrototypeOf(NgControl)).apply(this,arguments));_this2._parent=null;_this2.name=null;_this2.valueAccessor=null;/** @internal */_this2._rawValidators=[];/** @internal */_this2._rawAsyncValidators=[];return _this2;}/**
     * @return {?}
     */_createClass(NgControl,[{key:'viewToModelUpdate',/**
     * @abstract
     * @param {?} newValue
     * @return {?}
     */value:function viewToModelUpdate(newValue){}},{key:'validator',get:function get(){return unimplemented();}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return unimplemented();}}]);return NgControl;}(AbstractControlDirective);var/** @type {?} */RADIO_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return RadioControlValueAccessor;}),multi:true};/**
 * Internal class used by Angular to uncheck radio buttons with the matching name.
 */var RadioControlRegistry=function(){function RadioControlRegistry(){_classCallCheck(this,RadioControlRegistry);this._accessors=[];}/**
     * @param {?} control
     * @param {?} accessor
     * @return {?}
     */_createClass(RadioControlRegistry,[{key:'add',value:function add(control,accessor){this._accessors.push([control,accessor]);}/**
     * @param {?} accessor
     * @return {?}
     */},{key:'remove',value:function remove(accessor){for(var/** @type {?} */i=this._accessors.length-1;i>=0;--i){if(this._accessors[i][1]===accessor){this._accessors.splice(i,1);return;}}}/**
     * @param {?} accessor
     * @return {?}
     */},{key:'select',value:function select(accessor){var _this3=this;this._accessors.forEach(function(c){if(_this3._isSameGroup(c,accessor)&&c[1]!==accessor){c[1].fireUncheck(accessor.value);}});}/**
     * @param {?} controlPair
     * @param {?} accessor
     * @return {?}
     */},{key:'_isSameGroup',value:function _isSameGroup(controlPair,accessor){if(!controlPair[0].control)return false;return controlPair[0]._parent===accessor._control._parent&&controlPair[1].name===accessor.name;}}]);return RadioControlRegistry;}();RadioControlRegistry.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */RadioControlRegistry.ctorParameters=function(){return[];};/**
 * \@whatItDoes Writes radio control values and listens to radio control changes.
 *
 * Used by {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName}
 * to keep the view synced with the {\@link FormControl} model.
 *
 * \@howToUse
 *
 * If you have imported the {\@link FormsModule} or the {\@link ReactiveFormsModule}, this
 * value accessor will be active on any radio control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * ### How to use radio buttons with form directives
 *
 * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons
 * in the same group have the same `name` attribute.  Radio buttons with different `name`
 * attributes do not affect each other.
 *
 * {\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}
 *
 * When using radio buttons in a reactive form, radio buttons in the same group should have the
 * same `formControlName`. You can also add a `name` attribute, but it's optional.
 *
 * {\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}
 *
 *  * **npm package**: `\@angular/forms`
 *
 *  \@stable
 */var RadioControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     * @param {?} _registry
     * @param {?} _injector
     */function RadioControlValueAccessor(_renderer,_elementRef,_registry,_injector){_classCallCheck(this,RadioControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this._registry=_registry;this._injector=_injector;this.onChange=function(){};this.onTouched=function(){};}/**
     * @return {?}
     */_createClass(RadioControlValueAccessor,[{key:'ngOnInit',value:function ngOnInit(){this._control=this._injector.get(NgControl);this._checkName();this._registry.add(this._control,this);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this._registry.remove(this);}/**
     * @param {?} value
     * @return {?}
     */},{key:'writeValue',value:function writeValue(value){this._state=value===this.value;this._renderer.setElementProperty(this._elementRef.nativeElement,'checked',this._state);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){var _this4=this;this._fn=fn;this.onChange=function(){fn(_this4.value);_this4._registry.select(_this4);};}/**
     * @param {?} value
     * @return {?}
     */},{key:'fireUncheck',value:function fireUncheck(value){this.writeValue(value);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}/**
     * @return {?}
     */},{key:'_checkName',value:function _checkName(){if(this.name&&this.formControlName&&this.name!==this.formControlName){this._throwNameError();}if(!this.name&&this.formControlName)this.name=this.formControlName;}/**
     * @return {?}
     */},{key:'_throwNameError',value:function _throwNameError(){throw new Error('\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type="radio" formControlName="food" name="food">\n    ');}}]);return RadioControlValueAccessor;}();RadioControlValueAccessor.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',host:{'(change)':'onChange()','(blur)':'onTouched()'},providers:[RADIO_VALUE_ACCESSOR]}]}];/** @nocollapse */RadioControlValueAccessor.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]},{type:RadioControlRegistry},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["x" /* Injector */]}];};RadioControlValueAccessor.propDecorators={'name':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'formControlName':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'value':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};var/** @type {?} */RANGE_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return RangeValueAccessor;}),multi:true};/**
 * The accessor for writing a range value and listening to changes that is used by the
 * {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName} directives.
 *
 *  ### Example
 *  ```
 *  <input type="range" [(ngModel)]="age" >
 *  ```
 */var RangeValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function RangeValueAccessor(_renderer,_elementRef){_classCallCheck(this,RangeValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass(RangeValueAccessor,[{key:'writeValue',value:function writeValue(value){this._renderer.setElementProperty(this._elementRef.nativeElement,'value',parseFloat(value));}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=function(value){fn(value==''?null:parseFloat(value));};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return RangeValueAccessor;}();RangeValueAccessor.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',host:{'(change)':'onChange($event.target.value)','(input)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[RANGE_VALUE_ACCESSOR]}]}];/** @nocollapse */RangeValueAccessor.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]}];};var/** @type {?} */SELECT_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return SelectControlValueAccessor;}),multi:true};/**
 * @param {?} id
 * @param {?} value
 * @return {?}
 */function _buildValueString(id,value){if(id==null)return''+value;if(!isPrimitive(value))value='Object';return(id+': '+value).slice(0,50);}/**
 * @param {?} valueString
 * @return {?}
 */function _extractId(valueString){return valueString.split(':')[0];}/**
 * \@whatItDoes Writes values and listens to changes on a select element.
 *
 * Used by {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName}
 * to keep the view synced with the {\@link FormControl} model.
 *
 * \@howToUse
 *
 * If you have imported the {\@link FormsModule} or the {\@link ReactiveFormsModule}, this
 * value accessor will be active on any select control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * ### How to use select controls with form directives
 *
 * To use a select in a template-driven form, simply add an `ngModel` and a `name`
 * attribute to the main `<select>` tag.
 *
 * If your option values are simple strings, you can bind to the normal `value` property
 * on the option.  If your option values happen to be objects (and you'd like to save the
 * selection in your form as an object), use `ngValue` instead:
 *
 * {\@example forms/ts/selectControl/select_control_example.ts region='Component'}
 *
 * In reactive forms, you'll also want to add your form directive (`formControlName` or
 * `formControl`) on the main `<select>` tag. Like in the former example, you have the
 * choice of binding to the  `value` or `ngValue` property on the select's options.
 *
 * {\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}
 *
 * ### Caveat: Option selection
 *
 * Angular uses object identity to select option. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.
 * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects option by the return value of the function.
 *
 * #### Syntax
 *
 * ```
 * <select [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 * Note: We listen to the 'change' event because 'input' events aren't fired
 * for selects in Firefox and IE:
 * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350
 * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var SelectControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function SelectControlValueAccessor(_renderer,_elementRef){_classCallCheck(this,SelectControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;/** @internal */this._optionMap=new Map();/** @internal */this._idCounter=0;this.onChange=function(_){};this.onTouched=function(){};this._compareWith=looseIdentical;}/**
     * @param {?} fn
     * @return {?}
     */_createClass(SelectControlValueAccessor,[{key:'writeValue',/**
     * @param {?} value
     * @return {?}
     */value:function writeValue(value){this.value=value;var/** @type {?} */id=this._getOptionId(value);if(id==null){this._renderer.setElementProperty(this._elementRef.nativeElement,'selectedIndex',-1);}var/** @type {?} */valueString=_buildValueString(id,value);this._renderer.setElementProperty(this._elementRef.nativeElement,'value',valueString);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){var _this5=this;this.onChange=function(valueString){_this5.value=valueString;fn(_this5._getOptionValue(valueString));};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}/**
     * \@internal
     * @return {?}
     */},{key:'_registerOption',value:function _registerOption(){return(this._idCounter++).toString();}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_getOptionId',value:function _getOptionId(value){var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=Array.from(this._optionMap.keys())[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var id=_step4.value;if(this._compareWith(this._optionMap.get(id),value))return id;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}return null;}/**
     * \@internal
     * @param {?} valueString
     * @return {?}
     */},{key:'_getOptionValue',value:function _getOptionValue(valueString){var/** @type {?} */id=_extractId(valueString);return this._optionMap.has(id)?this._optionMap.get(id):valueString;}},{key:'compareWith',set:function set(fn){if(typeof fn!=='function'){throw new Error('compareWith must be a function, but received '+JSON.stringify(fn));}this._compareWith=fn;}}]);return SelectControlValueAccessor;}();SelectControlValueAccessor.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',host:{'(change)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[SELECT_VALUE_ACCESSOR]}]}];/** @nocollapse */SelectControlValueAccessor.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]}];};SelectControlValueAccessor.propDecorators={'compareWith':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * \@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * \@howToUse
 *
 * See docs for {\@link SelectControlValueAccessor} for usage examples.
 *
 * \@stable
 */var NgSelectOption=function(){/**
     * @param {?} _element
     * @param {?} _renderer
     * @param {?} _select
     */function NgSelectOption(_element,_renderer,_select){_classCallCheck(this,NgSelectOption);this._element=_element;this._renderer=_renderer;this._select=_select;if(this._select)this.id=this._select._registerOption();}/**
     * @param {?} value
     * @return {?}
     */_createClass(NgSelectOption,[{key:'_setElementValue',/**
     * \@internal
     * @param {?} value
     * @return {?}
     */value:function _setElementValue(value){this._renderer.setElementProperty(this._element.nativeElement,'value',value);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._select){this._select._optionMap.delete(this.id);this._select.writeValue(this._select.value);}}},{key:'ngValue',set:function set(value){if(this._select==null)return;this._select._optionMap.set(this.id,value);this._setElementValue(_buildValueString(this.id,value));this._select.writeValue(this._select.value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'value',set:function set(value){this._setElementValue(value);if(this._select)this._select.writeValue(this._select.value);}}]);return NgSelectOption;}();NgSelectOption.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'option'}]}];/** @nocollapse */NgSelectOption.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:SelectControlValueAccessor,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]}]}];};NgSelectOption.propDecorators={'ngValue':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['ngValue']}],'value':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['value']}]};var/** @type {?} */SELECT_MULTIPLE_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return SelectMultipleControlValueAccessor;}),multi:true};/**
 * @param {?} id
 * @param {?} value
 * @return {?}
 */function _buildValueString$1(id,value){if(id==null)return''+value;if(typeof value==='string')value='\''+value+'\'';if(!isPrimitive(value))value='Object';return(id+': '+value).slice(0,50);}/**
 * @param {?} valueString
 * @return {?}
 */function _extractId$1(valueString){return valueString.split(':')[0];}/**
 * The accessor for writing a value and listening to changes on a select element.
 *
 *  ### Caveat: Options selection
 *
 * Angular uses object identity to select options. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`
 * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects options by the return value of the function.
 *
 * #### Syntax
 *
 * ```
 * <select multiple [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 * \@stable
 */var SelectMultipleControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function SelectMultipleControlValueAccessor(_renderer,_elementRef){_classCallCheck(this,SelectMultipleControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;/** @internal */this._optionMap=new Map();/** @internal */this._idCounter=0;this.onChange=function(_){};this.onTouched=function(){};this._compareWith=looseIdentical;}/**
     * @param {?} fn
     * @return {?}
     */_createClass(SelectMultipleControlValueAccessor,[{key:'writeValue',/**
     * @param {?} value
     * @return {?}
     */value:function writeValue(value){var _this6=this;this.value=value;var/** @type {?} */optionSelectedStateSetter=void 0;if(Array.isArray(value)){// convert values to ids
var/** @type {?} */ids=value.map(function(v){return _this6._getOptionId(v);});optionSelectedStateSetter=function optionSelectedStateSetter(opt,o){opt._setSelected(ids.indexOf(o.toString())>-1);};}else{optionSelectedStateSetter=function optionSelectedStateSetter(opt,o){opt._setSelected(false);};}this._optionMap.forEach(optionSelectedStateSetter);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){var _this7=this;this.onChange=function(_){var/** @type {?} */selected=[];if(_.hasOwnProperty('selectedOptions')){var/** @type {?} */options=_.selectedOptions;for(var/** @type {?} */i=0;i<options.length;i++){var/** @type {?} */opt=options.item(i);var/** @type {?} */val=_this7._getOptionValue(opt.value);selected.push(val);}}else{var/** @type {?} */_options=_.options;for(var/** @type {?} */_i=0;_i<_options.length;_i++){var/** @type {?} */_opt=_options.item(_i);if(_opt.selected){var/** @type {?} */_val=_this7._getOptionValue(_opt.value);selected.push(_val);}}}_this7.value=selected;fn(selected);};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_registerOption',value:function _registerOption(value){var/** @type {?} */id=(this._idCounter++).toString();this._optionMap.set(id,value);return id;}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_getOptionId',value:function _getOptionId(value){var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=Array.from(this._optionMap.keys())[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var id=_step5.value;if(this._compareWith(this._optionMap.get(id)._value,value))return id;}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return null;}/**
     * \@internal
     * @param {?} valueString
     * @return {?}
     */},{key:'_getOptionValue',value:function _getOptionValue(valueString){var/** @type {?} */id=_extractId$1(valueString);return this._optionMap.has(id)?this._optionMap.get(id)._value:valueString;}},{key:'compareWith',set:function set(fn){if(typeof fn!=='function'){throw new Error('compareWith must be a function, but received '+JSON.stringify(fn));}this._compareWith=fn;}}]);return SelectMultipleControlValueAccessor;}();SelectMultipleControlValueAccessor.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',host:{'(change)':'onChange($event.target)','(blur)':'onTouched()'},providers:[SELECT_MULTIPLE_VALUE_ACCESSOR]}]}];/** @nocollapse */SelectMultipleControlValueAccessor.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]}];};SelectMultipleControlValueAccessor.propDecorators={'compareWith':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * ### Example
 *
 * ```
 * <select multiple name="city" ngModel>
 *   <option *ngFor="let c of cities" [value]="c"></option>
 * </select>
 * ```
 */var NgSelectMultipleOption=function(){/**
     * @param {?} _element
     * @param {?} _renderer
     * @param {?} _select
     */function NgSelectMultipleOption(_element,_renderer,_select){_classCallCheck(this,NgSelectMultipleOption);this._element=_element;this._renderer=_renderer;this._select=_select;if(this._select){this.id=this._select._registerOption(this);}}/**
     * @param {?} value
     * @return {?}
     */_createClass(NgSelectMultipleOption,[{key:'_setElementValue',/**
     * \@internal
     * @param {?} value
     * @return {?}
     */value:function _setElementValue(value){this._renderer.setElementProperty(this._element.nativeElement,'value',value);}/**
     * \@internal
     * @param {?} selected
     * @return {?}
     */},{key:'_setSelected',value:function _setSelected(selected){this._renderer.setElementProperty(this._element.nativeElement,'selected',selected);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._select){this._select._optionMap.delete(this.id);this._select.writeValue(this._select.value);}}},{key:'ngValue',set:function set(value){if(this._select==null)return;this._value=value;this._setElementValue(_buildValueString$1(this.id,value));this._select.writeValue(this._select.value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'value',set:function set(value){if(this._select){this._value=value;this._setElementValue(_buildValueString$1(this.id,value));this._select.writeValue(this._select.value);}else{this._setElementValue(value);}}}]);return NgSelectMultipleOption;}();NgSelectMultipleOption.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'option'}]}];/** @nocollapse */NgSelectMultipleOption.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]},{type:SelectMultipleControlValueAccessor,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]}]}];};NgSelectMultipleOption.propDecorators={'ngValue':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['ngValue']}],'value':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['value']}]};/**
 * @param {?} name
 * @param {?} parent
 * @return {?}
 */function controlPath(name,parent){return[].concat(_toConsumableArray(parent.path),[name]);}/**
 * @param {?} control
 * @param {?} dir
 * @return {?}
 */function setUpControl(control,dir){if(!control)_throwError(dir,'Cannot find control with');if(!dir.valueAccessor)_throwError(dir,'No value accessor for form control with');control.validator=Validators.compose([control.validator,dir.validator]);control.asyncValidator=Validators.composeAsync([control.asyncValidator,dir.asyncValidator]);dir.valueAccessor.writeValue(control.value);// view -> model
dir.valueAccessor.registerOnChange(function(newValue){dir.viewToModelUpdate(newValue);control.markAsDirty();control.setValue(newValue,{emitModelToViewChange:false});});// touched
dir.valueAccessor.registerOnTouched(function(){return control.markAsTouched();});control.registerOnChange(function(newValue,emitModelEvent){// control -> view
dir.valueAccessor.writeValue(newValue);// control -> ngModel
if(emitModelEvent)dir.viewToModelUpdate(newValue);});if(dir.valueAccessor.setDisabledState){control.registerOnDisabledChange(function(isDisabled){dir.valueAccessor.setDisabledState(isDisabled);});}// re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4
dir._rawValidators.forEach(function(validator){if(validator.registerOnValidatorChange)validator.registerOnValidatorChange(function(){return control.updateValueAndValidity();});});dir._rawAsyncValidators.forEach(function(validator){if(validator.registerOnValidatorChange)validator.registerOnValidatorChange(function(){return control.updateValueAndValidity();});});}/**
 * @param {?} control
 * @param {?} dir
 * @return {?}
 */function cleanUpControl(control,dir){dir.valueAccessor.registerOnChange(function(){return _noControlError(dir);});dir.valueAccessor.registerOnTouched(function(){return _noControlError(dir);});dir._rawValidators.forEach(function(validator){if(validator.registerOnValidatorChange){validator.registerOnValidatorChange(null);}});dir._rawAsyncValidators.forEach(function(validator){if(validator.registerOnValidatorChange){validator.registerOnValidatorChange(null);}});if(control)control._clearChangeFns();}/**
 * @param {?} control
 * @param {?} dir
 * @return {?}
 */function setUpFormContainer(control,dir){if(isBlank(control))_throwError(dir,'Cannot find control with');control.validator=Validators.compose([control.validator,dir.validator]);control.asyncValidator=Validators.composeAsync([control.asyncValidator,dir.asyncValidator]);}/**
 * @param {?} dir
 * @return {?}
 */function _noControlError(dir){return _throwError(dir,'There is no FormControl instance attached to form control element with');}/**
 * @param {?} dir
 * @param {?} message
 * @return {?}
 */function _throwError(dir,message){var/** @type {?} */messageEnd=void 0;if(dir.path.length>1){messageEnd='path: \''+dir.path.join(' -> ')+'\'';}else if(dir.path[0]){messageEnd='name: \''+dir.path+'\'';}else{messageEnd='unspecified name attribute';}throw new Error(message+' '+messageEnd);}/**
 * @param {?} validators
 * @return {?}
 */function composeValidators(validators){return isPresent(validators)?Validators.compose(validators.map(normalizeValidator)):null;}/**
 * @param {?} validators
 * @return {?}
 */function composeAsyncValidators(validators){return isPresent(validators)?Validators.composeAsync(validators.map(normalizeAsyncValidator)):null;}/**
 * @param {?} changes
 * @param {?} viewModel
 * @return {?}
 */function isPropertyUpdated(changes,viewModel){if(!changes.hasOwnProperty('model'))return false;var/** @type {?} */change=changes['model'];if(change.isFirstChange())return true;return!looseIdentical(viewModel,change.currentValue);}var/** @type {?} */BUILTIN_ACCESSORS=[CheckboxControlValueAccessor,RangeValueAccessor,NumberValueAccessor,SelectControlValueAccessor,SelectMultipleControlValueAccessor,RadioControlValueAccessor];/**
 * @param {?} valueAccessor
 * @return {?}
 */function isBuiltInAccessor(valueAccessor){return BUILTIN_ACCESSORS.some(function(a){return valueAccessor.constructor===a;});}/**
 * @param {?} dir
 * @param {?} valueAccessors
 * @return {?}
 */function selectValueAccessor(dir,valueAccessors){if(!valueAccessors)return null;var/** @type {?} */defaultAccessor=void 0;var/** @type {?} */builtinAccessor=void 0;var/** @type {?} */customAccessor=void 0;valueAccessors.forEach(function(v){if(v.constructor===DefaultValueAccessor){defaultAccessor=v;}else if(isBuiltInAccessor(v)){if(builtinAccessor)_throwError(dir,'More than one built-in value accessor matches form control with');builtinAccessor=v;}else{if(customAccessor)_throwError(dir,'More than one custom value accessor matches form control with');customAccessor=v;}});if(customAccessor)return customAccessor;if(builtinAccessor)return builtinAccessor;if(defaultAccessor)return defaultAccessor;_throwError(dir,'No valid value accessor for form control with');return null;}/**
 * This is a base class for code shared between {\@link NgModelGroup} and {\@link FormGroupName}.
 *
 * \@stable
 */var AbstractFormGroupDirective=function(_ControlContainer){_inherits(AbstractFormGroupDirective,_ControlContainer);function AbstractFormGroupDirective(){_classCallCheck(this,AbstractFormGroupDirective);return _possibleConstructorReturn(this,(AbstractFormGroupDirective.__proto__||Object.getPrototypeOf(AbstractFormGroupDirective)).apply(this,arguments));}_createClass(AbstractFormGroupDirective,[{key:'ngOnInit',/**
     * @return {?}
     */value:function ngOnInit(){this._checkParentType();this.formDirective.addFormGroup(this);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this.formDirective){this.formDirective.removeFormGroup(this);}}/**
     * Get the {\@link FormGroup} backing this binding.
     * @return {?}
     */},{key:'_checkParentType',/**
     * \@internal
     * @return {?}
     */value:function _checkParentType(){}},{key:'control',get:function get(){return this.formDirective.getFormGroup(this);}/**
     * Get the path to this control group.
     * @return {?}
     */},{key:'path',get:function get(){return controlPath(this.name,this._parent);}/**
     * Get the {\@link Form} to which this group belongs.
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._validators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._asyncValidators);}}]);return AbstractFormGroupDirective;}(ControlContainer);var AbstractControlStatus=function(){/**
     * @param {?} cd
     */function AbstractControlStatus(cd){_classCallCheck(this,AbstractControlStatus);this._cd=cd;}/**
     * @return {?}
     */_createClass(AbstractControlStatus,[{key:'ngClassUntouched',get:function get(){return this._cd.control?this._cd.control.untouched:false;}/**
     * @return {?}
     */},{key:'ngClassTouched',get:function get(){return this._cd.control?this._cd.control.touched:false;}/**
     * @return {?}
     */},{key:'ngClassPristine',get:function get(){return this._cd.control?this._cd.control.pristine:false;}/**
     * @return {?}
     */},{key:'ngClassDirty',get:function get(){return this._cd.control?this._cd.control.dirty:false;}/**
     * @return {?}
     */},{key:'ngClassValid',get:function get(){return this._cd.control?this._cd.control.valid:false;}/**
     * @return {?}
     */},{key:'ngClassInvalid',get:function get(){return this._cd.control?this._cd.control.invalid:false;}/**
     * @return {?}
     */},{key:'ngClassPending',get:function get(){return this._cd.control?this._cd.control.pending:false;}}]);return AbstractControlStatus;}();var/** @type {?} */ngControlStatusHost={'[class.ng-untouched]':'ngClassUntouched','[class.ng-touched]':'ngClassTouched','[class.ng-pristine]':'ngClassPristine','[class.ng-dirty]':'ngClassDirty','[class.ng-valid]':'ngClassValid','[class.ng-invalid]':'ngClassInvalid','[class.ng-pending]':'ngClassPending'};/**
 * Directive automatically applied to Angular form controls that sets CSS classes
 * based on control status (valid/invalid/dirty/etc).
 *
 * \@stable
 */var NgControlStatus=function(_AbstractControlStatu){_inherits(NgControlStatus,_AbstractControlStatu);/**
     * @param {?} cd
     */function NgControlStatus(cd){_classCallCheck(this,NgControlStatus);return _possibleConstructorReturn(this,(NgControlStatus.__proto__||Object.getPrototypeOf(NgControlStatus)).call(this,cd));}return NgControlStatus;}(AbstractControlStatus);NgControlStatus.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[formControlName],[ngModel],[formControl]',host:ngControlStatusHost}]}];/** @nocollapse */NgControlStatus.ctorParameters=function(){return[{type:NgControl,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]}]}];};/**
 * Directive automatically applied to Angular form groups that sets CSS classes
 * based on control status (valid/invalid/dirty/etc).
 *
 * \@stable
 */var NgControlStatusGroup=function(_AbstractControlStatu2){_inherits(NgControlStatusGroup,_AbstractControlStatu2);/**
     * @param {?} cd
     */function NgControlStatusGroup(cd){_classCallCheck(this,NgControlStatusGroup);return _possibleConstructorReturn(this,(NgControlStatusGroup.__proto__||Object.getPrototypeOf(NgControlStatusGroup)).call(this,cd));}return NgControlStatusGroup;}(AbstractControlStatus);NgControlStatusGroup.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',host:ngControlStatusHost}]}];/** @nocollapse */NgControlStatusGroup.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]}]}];};/**
 * Use by directives and components to emit custom Events.
 *
 * ### Examples
 *
 * In the following example, `Zippy` alternatively emits `open` and `close` events when its
 * title gets clicked:
 *
 * ```
 * \@Component({
 *   selector: 'zippy',
 *   template: `
 *   <div class="zippy">
 *     <div (click)="toggle()">Toggle</div>
 *     <div [hidden]="!visible">
 *       <ng-content></ng-content>
 *     </div>
 *  </div>`})
 * export class Zippy {
 *   visible: boolean = true;
 *   \@Output() open: EventEmitter<any> = new EventEmitter();
 *   \@Output() close: EventEmitter<any> = new EventEmitter();
 *
 *   toggle() {
 *     this.visible = !this.visible;
 *     if (this.visible) {
 *       this.open.emit(null);
 *     } else {
 *       this.close.emit(null);
 *     }
 *   }
 * }
 * ```
 *
 * The events payload can be accessed by the parameter `$event` on the components output event
 * handler:
 *
 * ```
 * <zippy (open)="onOpen($event)" (close)="onClose($event)"></zippy>
 * ```
 *
 * Uses Rx.Observable but provides an adapter to make it work as specified here:
 * https://github.com/jhusain/observable-spec
 *
 * Once a reference implementation of the spec is available, switch to it.
 * \@stable
 */var EventEmitter=function(_Subject){_inherits(EventEmitter,_Subject);/**
     * Creates an instance of [EventEmitter], which depending on [isAsync],
     * delivers events synchronously or asynchronously.
     * @param {?=} isAsync
     */function EventEmitter(){var isAsync=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;_classCallCheck(this,EventEmitter);var _this11=_possibleConstructorReturn(this,(EventEmitter.__proto__||Object.getPrototypeOf(EventEmitter)).call(this));_this11.__isAsync=isAsync;return _this11;}/**
     * @param {?=} value
     * @return {?}
     */_createClass(EventEmitter,[{key:'emit',value:function emit(value){_get(EventEmitter.prototype.__proto__||Object.getPrototypeOf(EventEmitter.prototype),'next',this).call(this,value);}/**
     * @param {?=} generatorOrNext
     * @param {?=} error
     * @param {?=} complete
     * @return {?}
     */},{key:'subscribe',value:function subscribe(generatorOrNext,error,complete){var/** @type {?} */schedulerFn=void 0;var/** @type {?} */errorFn=function errorFn(err){return null;};var/** @type {?} */completeFn=function completeFn(){return null;};if(generatorOrNext&&(typeof generatorOrNext==='undefined'?'undefined':_typeof(generatorOrNext))==='object'){schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext.next(value);});}:function(value){generatorOrNext.next(value);};if(generatorOrNext.error){errorFn=this.__isAsync?function(err){setTimeout(function(){return generatorOrNext.error(err);});}:function(err){generatorOrNext.error(err);};}if(generatorOrNext.complete){completeFn=this.__isAsync?function(){setTimeout(function(){return generatorOrNext.complete();});}:function(){generatorOrNext.complete();};}}else{schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext(value);});}:function(value){generatorOrNext(value);};if(error){errorFn=this.__isAsync?function(err){setTimeout(function(){return error(err);});}:function(err){error(err);};}if(complete){completeFn=this.__isAsync?function(){setTimeout(function(){return complete();});}:function(){complete();};}}return _get(EventEmitter.prototype.__proto__||Object.getPrototypeOf(EventEmitter.prototype),'subscribe',this).call(this,schedulerFn,errorFn,completeFn);}}]);return EventEmitter;}(__WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__["Subject"]);/**
 * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.
 */var/** @type {?} */VALID='VALID';/**
 * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.
 */var/** @type {?} */INVALID='INVALID';/**
 * Indicates that a FormControl is pending, i.e. that async validation is occurring and
 * errors are not yet available for the input value.
 */var/** @type {?} */PENDING='PENDING';/**
 * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor
 * calculations of validity or value.
 */var/** @type {?} */DISABLED='DISABLED';/**
 * @param {?} control
 * @param {?} path
 * @param {?} delimiter
 * @return {?}
 */function _find(control,path,delimiter){if(path==null)return null;if(!(path instanceof Array)){path=path.split(delimiter);}if(path instanceof Array&&path.length===0)return null;return path.reduce(function(v,name){if(v instanceof FormGroup){return v.controls[name]||null;}if(v instanceof FormArray){return v.at(/** @type {?} */name)||null;}return null;},control);}/**
 * @param {?} r
 * @return {?}
 */function toObservable(r){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["J" /* ɵisPromise */])(r)?__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_rxjs_observable_fromPromise__["fromPromise"])(r):r;}/**
 * @param {?} validator
 * @return {?}
 */function coerceToValidator(validator){return Array.isArray(validator)?composeValidators(validator):validator;}/**
 * @param {?} asyncValidator
 * @return {?}
 */function coerceToAsyncValidator(asyncValidator){return Array.isArray(asyncValidator)?composeAsyncValidators(asyncValidator):asyncValidator;}/**
 * \@whatItDoes This is the base class for {\@link FormControl}, {\@link FormGroup}, and
 * {\@link FormArray}.
 *
 * It provides some of the shared behavior that all controls and groups of controls have, like
 * running validators, calculating status, and resetting state. It also defines the properties
 * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be
 * instantiated directly.
 *
 * \@stable
 * @abstract
 */var AbstractControl=function(){/**
     * @param {?} validator
     * @param {?} asyncValidator
     */function AbstractControl(validator,asyncValidator){_classCallCheck(this,AbstractControl);this.validator=validator;this.asyncValidator=asyncValidator;/** @internal */this._onCollectionChange=function(){};this._pristine=true;this._touched=false;/** @internal */this._onDisabledChange=[];}/**
     * The value of the control.
     * @return {?}
     */_createClass(AbstractControl,[{key:'setValidators',/**
     * Sets the synchronous validators that are active on this control.  Calling
     * this will overwrite any existing sync validators.
     * @param {?} newValidator
     * @return {?}
     */value:function setValidators(newValidator){this.validator=coerceToValidator(newValidator);}/**
     * Sets the async validators that are active on this control. Calling this
     * will overwrite any existing async validators.
     * @param {?} newValidator
     * @return {?}
     */},{key:'setAsyncValidators',value:function setAsyncValidators(newValidator){this.asyncValidator=coerceToAsyncValidator(newValidator);}/**
     * Empties out the sync validator list.
     * @return {?}
     */},{key:'clearValidators',value:function clearValidators(){this.validator=null;}/**
     * Empties out the async validator list.
     * @return {?}
     */},{key:'clearAsyncValidators',value:function clearAsyncValidators(){this.asyncValidator=null;}/**
     * Marks the control as `touched`.
     *
     * This will also mark all direct ancestors as `touched` to maintain
     * the model.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsTouched',value:function markAsTouched(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref.onlySelf;this._touched=true;if(this._parent&&!onlySelf){this._parent.markAsTouched({onlySelf:onlySelf});}}/**
     * Marks the control as `untouched`.
     *
     * If the control has any children, it will also mark all children as `untouched`
     * to maintain the model, and re-calculate the `touched` status of all parent
     * controls.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsUntouched',value:function markAsUntouched(){var _ref2=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref2.onlySelf;this._touched=false;this._forEachChild(function(control){control.markAsUntouched({onlySelf:true});});if(this._parent&&!onlySelf){this._parent._updateTouched({onlySelf:onlySelf});}}/**
     * Marks the control as `dirty`.
     *
     * This will also mark all direct ancestors as `dirty` to maintain
     * the model.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsDirty',value:function markAsDirty(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref3.onlySelf;this._pristine=false;if(this._parent&&!onlySelf){this._parent.markAsDirty({onlySelf:onlySelf});}}/**
     * Marks the control as `pristine`.
     *
     * If the control has any children, it will also mark all children as `pristine`
     * to maintain the model, and re-calculate the `pristine` status of all parent
     * controls.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsPristine',value:function markAsPristine(){var _ref4=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref4.onlySelf;this._pristine=true;this._forEachChild(function(control){control.markAsPristine({onlySelf:true});});if(this._parent&&!onlySelf){this._parent._updatePristine({onlySelf:onlySelf});}}/**
     * Marks the control as `pending`.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsPending',value:function markAsPending(){var _ref5=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref5.onlySelf;this._status=PENDING;if(this._parent&&!onlySelf){this._parent.markAsPending({onlySelf:onlySelf});}}/**
     * Disables the control. This means the control will be exempt from validation checks and
     * excluded from the aggregate value of any parent. Its status is `DISABLED`.
     *
     * If the control has children, all children will be disabled to maintain the model.
     * @param {?=} __0
     * @return {?}
     */},{key:'disable',value:function disable(){var _ref6=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref6.onlySelf,emitEvent=_ref6.emitEvent;this._status=DISABLED;this._errors=null;this._forEachChild(function(control){control.disable({onlySelf:true});});this._updateValue();if(emitEvent!==false){this._valueChanges.emit(this._value);this._statusChanges.emit(this._status);}this._updateAncestors(onlySelf);this._onDisabledChange.forEach(function(changeFn){return changeFn(true);});}/**
     * Enables the control. This means the control will be included in validation checks and
     * the aggregate value of its parent. Its status is re-calculated based on its value and
     * its validators.
     *
     * If the control has children, all children will be enabled.
     * @param {?=} __0
     * @return {?}
     */},{key:'enable',value:function enable(){var _ref7=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref7.onlySelf,emitEvent=_ref7.emitEvent;this._status=VALID;this._forEachChild(function(control){control.enable({onlySelf:true});});this.updateValueAndValidity({onlySelf:true,emitEvent:emitEvent});this._updateAncestors(onlySelf);this._onDisabledChange.forEach(function(changeFn){return changeFn(false);});}/**
     * @param {?} onlySelf
     * @return {?}
     */},{key:'_updateAncestors',value:function _updateAncestors(onlySelf){if(this._parent&&!onlySelf){this._parent.updateValueAndValidity();this._parent._updatePristine();this._parent._updateTouched();}}/**
     * @param {?} parent
     * @return {?}
     */},{key:'setParent',value:function setParent(parent){this._parent=parent;}/**
     * Sets the value of the control. Abstract method (implemented in sub-classes).
     * @abstract
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */},{key:'setValue',value:function setValue(value,options){}/**
     * Patches the value of the control. Abstract method (implemented in sub-classes).
     * @abstract
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value,options){}/**
     * Resets the control. Abstract method (implemented in sub-classes).
     * @abstract
     * @param {?=} value
     * @param {?=} options
     * @return {?}
     */},{key:'reset',value:function reset(value,options){}/**
     * Re-calculates the value and validation status of the control.
     *
     * By default, it will also update the value and validity of its ancestors.
     * @param {?=} __0
     * @return {?}
     */},{key:'updateValueAndValidity',value:function updateValueAndValidity(){var _ref8=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref8.onlySelf,emitEvent=_ref8.emitEvent;this._setInitialStatus();this._updateValue();if(this.enabled){this._cancelExistingSubscription();this._errors=this._runValidator();this._status=this._calculateStatus();if(this._status===VALID||this._status===PENDING){this._runAsyncValidator(emitEvent);}}if(emitEvent!==false){this._valueChanges.emit(this._value);this._statusChanges.emit(this._status);}if(this._parent&&!onlySelf){this._parent.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}}/**
     * \@internal
     * @param {?=} __0
     * @return {?}
     */},{key:'_updateTreeValidity',value:function _updateTreeValidity(){var _ref9=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{emitEvent:true},emitEvent=_ref9.emitEvent;this._forEachChild(function(ctrl){return ctrl._updateTreeValidity({emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:true,emitEvent:emitEvent});}/**
     * @return {?}
     */},{key:'_setInitialStatus',value:function _setInitialStatus(){this._status=this._allControlsDisabled()?DISABLED:VALID;}/**
     * @return {?}
     */},{key:'_runValidator',value:function _runValidator(){return this.validator?this.validator(this):null;}/**
     * @param {?} emitEvent
     * @return {?}
     */},{key:'_runAsyncValidator',value:function _runAsyncValidator(emitEvent){var _this12=this;if(this.asyncValidator){this._status=PENDING;var/** @type {?} */obs=toObservable(this.asyncValidator(this));if(!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["K" /* ɵisObservable */])(obs)){throw new Error('expected the following validator to return Promise or Observable: '+this.asyncValidator+'. If you are using FormBuilder; did you forget to brace your validators in an array?');}this._asyncValidationSubscription=obs.subscribe({next:function next(res){return _this12.setErrors(res,{emitEvent:emitEvent});}});}}/**
     * @return {?}
     */},{key:'_cancelExistingSubscription',value:function _cancelExistingSubscription(){if(this._asyncValidationSubscription){this._asyncValidationSubscription.unsubscribe();}}/**
     * Sets errors on a form control.
     *
     * This is used when validations are run manually by the user, rather than automatically.
     *
     * Calling `setErrors` will also update the validity of the parent control.
     *
     * ### Example
     *
     * ```
     * const login = new FormControl("someLogin");
     * login.setErrors({
     *   "notUnique": true
     * });
     *
     * expect(login.valid).toEqual(false);
     * expect(login.errors).toEqual({"notUnique": true});
     *
     * login.setValue("someOtherLogin");
     *
     * expect(login.valid).toEqual(true);
     * ```
     * @param {?} errors
     * @param {?=} __1
     * @return {?}
     */},{key:'setErrors',value:function setErrors(errors){var _ref10=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},emitEvent=_ref10.emitEvent;this._errors=errors;this._updateControlsErrors(emitEvent!==false);}/**
     * Retrieves a child control given the control's name or path.
     *
     * Paths can be passed in as an array or a string delimited by a dot.
     *
     * To get a control nested within a `person` sub-group:
     *
     * * `this.form.get('person.name');`
     *
     * -OR-
     *
     * * `this.form.get(['person', 'name']);`
     * @param {?} path
     * @return {?}
     */},{key:'get',value:function get(path){return _find(this,path,'.');}/**
     * Returns true if the control with the given path has the error specified. Otherwise
     * returns null or undefined.
     *
     * If no path is given, it checks for the error on the present control.
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'getError',value:function getError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */control=path?this.get(path):this;return control&&control._errors?control._errors[errorCode]:null;}/**
     * Returns true if the control with the given path has the error specified. Otherwise
     * returns false.
     *
     * If no path is given, it checks for the error on the present control.
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'hasError',value:function hasError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return!!this.getError(errorCode,path);}/**
     * Retrieves the top-level ancestor of this control.
     * @return {?}
     */},{key:'_updateControlsErrors',/**
     * \@internal
     * @param {?} emitEvent
     * @return {?}
     */value:function _updateControlsErrors(emitEvent){this._status=this._calculateStatus();if(emitEvent){this._statusChanges.emit(this._status);}if(this._parent){this._parent._updateControlsErrors(emitEvent);}}/**
     * \@internal
     * @return {?}
     */},{key:'_initObservables',value:function _initObservables(){this._valueChanges=new EventEmitter();this._statusChanges=new EventEmitter();}/**
     * @return {?}
     */},{key:'_calculateStatus',value:function _calculateStatus(){if(this._allControlsDisabled())return DISABLED;if(this._errors)return INVALID;if(this._anyControlsHaveStatus(PENDING))return PENDING;if(this._anyControlsHaveStatus(INVALID))return INVALID;return VALID;}/**
     * \@internal
     * @abstract
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){}/**
     * \@internal
     * @abstract
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){}/**
     * \@internal
     * @abstract
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){}/**
     * \@internal
     * @abstract
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){}/**
     * \@internal
     * @param {?} status
     * @return {?}
     */},{key:'_anyControlsHaveStatus',value:function _anyControlsHaveStatus(status){return this._anyControls(function(control){return control.status===status;});}/**
     * \@internal
     * @return {?}
     */},{key:'_anyControlsDirty',value:function _anyControlsDirty(){return this._anyControls(function(control){return control.dirty;});}/**
     * \@internal
     * @return {?}
     */},{key:'_anyControlsTouched',value:function _anyControlsTouched(){return this._anyControls(function(control){return control.touched;});}/**
     * \@internal
     * @param {?=} __0
     * @return {?}
     */},{key:'_updatePristine',value:function _updatePristine(){var _ref11=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref11.onlySelf;this._pristine=!this._anyControlsDirty();if(this._parent&&!onlySelf){this._parent._updatePristine({onlySelf:onlySelf});}}/**
     * \@internal
     * @param {?=} __0
     * @return {?}
     */},{key:'_updateTouched',value:function _updateTouched(){var _ref12=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref12.onlySelf;this._touched=this._anyControlsTouched();if(this._parent&&!onlySelf){this._parent._updateTouched({onlySelf:onlySelf});}}/**
     * \@internal
     * @param {?} formState
     * @return {?}
     */},{key:'_isBoxedValue',value:function _isBoxedValue(formState){return(typeof formState==='undefined'?'undefined':_typeof(formState))==='object'&&formState!==null&&Object.keys(formState).length===2&&'value'in formState&&'disabled'in formState;}/**
     * \@internal
     * @param {?} fn
     * @return {?}
     */},{key:'_registerOnCollectionChange',value:function _registerOnCollectionChange(fn){this._onCollectionChange=fn;}},{key:'value',get:function get(){return this._value;}/**
     * The parent control.
     * @return {?}
     */},{key:'parent',get:function get(){return this._parent;}/**
     * The validation status of the control. There are four possible
     * validation statuses:
     *
     * * **VALID**:  control has passed all validation checks
     * * **INVALID**: control has failed at least one validation check
     * * **PENDING**: control is in the midst of conducting a validation check
     * * **DISABLED**: control is exempt from validation checks
     *
     * These statuses are mutually exclusive, so a control cannot be
     * both valid AND invalid or invalid AND disabled.
     * @return {?}
     */},{key:'status',get:function get(){return this._status;}/**
     * A control is `valid` when its `status === VALID`.
     *
     * In order to have this status, the control must have passed all its
     * validation checks.
     * @return {?}
     */},{key:'valid',get:function get(){return this._status===VALID;}/**
     * A control is `invalid` when its `status === INVALID`.
     *
     * In order to have this status, the control must have failed
     * at least one of its validation checks.
     * @return {?}
     */},{key:'invalid',get:function get(){return this._status===INVALID;}/**
     * A control is `pending` when its `status === PENDING`.
     *
     * In order to have this status, the control must be in the
     * middle of conducting a validation check.
     * @return {?}
     */},{key:'pending',get:function get(){return this._status==PENDING;}/**
     * A control is `disabled` when its `status === DISABLED`.
     *
     * Disabled controls are exempt from validation checks and
     * are not included in the aggregate value of their ancestor
     * controls.
     * @return {?}
     */},{key:'disabled',get:function get(){return this._status===DISABLED;}/**
     * A control is `enabled` as long as its `status !== DISABLED`.
     *
     * In other words, it has a status of `VALID`, `INVALID`, or
     * `PENDING`.
     * @return {?}
     */},{key:'enabled',get:function get(){return this._status!==DISABLED;}/**
     * Returns any errors generated by failing validation. If there
     * are no errors, it will return null.
     * @return {?}
     */},{key:'errors',get:function get(){return this._errors;}/**
     * A control is `pristine` if the user has not yet changed
     * the value in the UI.
     *
     * Note that programmatic changes to a control's value will
     * *not* mark it dirty.
     * @return {?}
     */},{key:'pristine',get:function get(){return this._pristine;}/**
     * A control is `dirty` if the user has changed the value
     * in the UI.
     *
     * Note that programmatic changes to a control's value will
     * *not* mark it dirty.
     * @return {?}
     */},{key:'dirty',get:function get(){return!this.pristine;}/**
     * A control is marked `touched` once the user has triggered
     * a `blur` event on it.
     * @return {?}
     */},{key:'touched',get:function get(){return this._touched;}/**
     * A control is `untouched` if the user has not yet triggered
     * a `blur` event on it.
     * @return {?}
     */},{key:'untouched',get:function get(){return!this._touched;}/**
     * Emits an event every time the value of the control changes, in
     * the UI or programmatically.
     * @return {?}
     */},{key:'valueChanges',get:function get(){return this._valueChanges;}/**
     * Emits an event every time the validation status of the control
     * is re-calculated.
     * @return {?}
     */},{key:'statusChanges',get:function get(){return this._statusChanges;}},{key:'root',get:function get(){var/** @type {?} */x=this;while(x._parent){x=x._parent;}return x;}}]);return AbstractControl;}();/**
 * \@whatItDoes Tracks the value and validation status of an individual form control.
 *
 * It is one of the three fundamental building blocks of Angular forms, along with
 * {\@link FormGroup} and {\@link FormArray}.
 *
 * \@howToUse
 *
 * When instantiating a {\@link FormControl}, you can pass in an initial value as the
 * first argument. Example:
 *
 * ```ts
 * const ctrl = new FormControl('some value');
 * console.log(ctrl.value);     // 'some value'
 * ```
 *
 * You can also initialize the control with a form state object on instantiation,
 * which includes both the value and whether or not the control is disabled.
 * You can't use the value key without the disabled key; both are required
 * to use this way of initialization.
 *
 * ```ts
 * const ctrl = new FormControl({value: 'n/a', disabled: true});
 * console.log(ctrl.value);     // 'n/a'
 * console.log(ctrl.status);   // 'DISABLED'
 * ```
 *
 * To include a sync validator (or an array of sync validators) with the control,
 * pass it in as the second argument. Async validators are also supported, but
 * have to be passed in separately as the third arg.
 *
 * ```ts
 * const ctrl = new FormControl('', Validators.required);
 * console.log(ctrl.value);     // ''
 * console.log(ctrl.status);   // 'INVALID'
 * ```
 *
 * See its superclass, {\@link AbstractControl}, for more properties and methods.
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var FormControl=function(_AbstractControl){_inherits(FormControl,_AbstractControl);/**
     * @param {?=} formState
     * @param {?=} validator
     * @param {?=} asyncValidator
     */function FormControl(){var formState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck(this,FormControl);/** @internal */var _this13=_possibleConstructorReturn(this,(FormControl.__proto__||Object.getPrototypeOf(FormControl)).call(this,coerceToValidator(validator),coerceToAsyncValidator(asyncValidator)));_this13._onChange=[];_this13._applyFormState(formState);_this13.updateValueAndValidity({onlySelf:true,emitEvent:false});_this13._initObservables();return _this13;}/**
     * Set the value of the form control to `value`.
     *
     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`
     * and not its parent component. This defaults to false.
     *
     * If `emitEvent` is `true`, this
     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults
     * to true (as it falls through to `updateValueAndValidity`).
     *
     * If `emitModelToViewChange` is `true`, the view will be notified about the new value
     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not
     * specified.
     *
     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the
     * model.  This is the default behavior if `emitViewToModelChange` is not specified.
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */_createClass(FormControl,[{key:'setValue',value:function setValue(value){var _this14=this;var _ref13=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref13.onlySelf,emitEvent=_ref13.emitEvent,emitModelToViewChange=_ref13.emitModelToViewChange,emitViewToModelChange=_ref13.emitViewToModelChange;this._value=value;if(this._onChange.length&&emitModelToViewChange!==false){this._onChange.forEach(function(changeFn){return changeFn(_this14._value,emitViewToModelChange!==false);});}this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * Patches the value of a control.
     *
     * This function is functionally the same as {\@link FormControl.setValue} at this level.
     * It exists for symmetry with {\@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,
     * where it does behave differently.
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this.setValue(value,options);}/**
     * Resets the form control. This means by default:
     *
     * * it is marked as `pristine`
     * * it is marked as `untouched`
     * * value is set to null
     *
     * You can also reset to a specific form state by passing through a standalone
     * value or a form state object that contains both a value and a disabled state
     * (these are the only two properties that cannot be calculated).
     *
     * Ex:
     *
     * ```ts
     * this.control.reset('Nancy');
     *
     * console.log(this.control.value);  // 'Nancy'
     * ```
     *
     * OR
     *
     * ```
     * this.control.reset({value: 'Nancy', disabled: true});
     *
     * console.log(this.control.value);  // 'Nancy'
     * console.log(this.control.status);  // 'DISABLED'
     * ```
     * @param {?=} formState
     * @param {?=} __1
     * @return {?}
     */},{key:'reset',value:function reset(){var formState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var _ref14=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref14.onlySelf,emitEvent=_ref14.emitEvent;this._applyFormState(formState);this.markAsPristine({onlySelf:onlySelf});this.markAsUntouched({onlySelf:onlySelf});this.setValue(this._value,{onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * \@internal
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){}/**
     * \@internal
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){return false;}/**
     * \@internal
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){return this.disabled;}/**
     * Register a listener for change events.
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this._onChange.push(fn);}/**
     * \@internal
     * @return {?}
     */},{key:'_clearChangeFns',value:function _clearChangeFns(){this._onChange=[];this._onDisabledChange=[];this._onCollectionChange=function(){};}/**
     * Register a listener for disabled events.
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnDisabledChange',value:function registerOnDisabledChange(fn){this._onDisabledChange.push(fn);}/**
     * \@internal
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){}/**
     * @param {?} formState
     * @return {?}
     */},{key:'_applyFormState',value:function _applyFormState(formState){if(this._isBoxedValue(formState)){this._value=formState.value;formState.disabled?this.disable({onlySelf:true,emitEvent:false}):this.enable({onlySelf:true,emitEvent:false});}else{this._value=formState;}}}]);return FormControl;}(AbstractControl);/**
 * \@whatItDoes Tracks the value and validity state of a group of {\@link FormControl}
 * instances.
 *
 * A `FormGroup` aggregates the values of each child {\@link FormControl} into one object,
 * with each control name as the key.  It calculates its status by reducing the statuses
 * of its children. For example, if one of the controls in a group is invalid, the entire
 * group becomes invalid.
 *
 * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,
 * along with {\@link FormControl} and {\@link FormArray}.
 *
 * \@howToUse
 *
 * When instantiating a {\@link FormGroup}, pass in a collection of child controls as the first
 * argument. The key for each child will be the name under which it is registered.
 *
 * ### Example
 *
 * ```
 * const form = new FormGroup({
 *   first: new FormControl('Nancy', Validators.minLength(2)),
 *   last: new FormControl('Drew'),
 * });
 *
 * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}
 * console.log(form.status);  // 'VALID'
 * ```
 *
 * You can also include group-level validators as the second arg, or group-level async
 * validators as the third arg. These come in handy when you want to perform validation
 * that considers the value of more than one child control.
 *
 * ### Example
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('', Validators.minLength(2)),
 *   passwordConfirm: new FormControl('', Validators.minLength(2)),
 * }, passwordMatchValidator);
 *
 *
 * function passwordMatchValidator(g: FormGroup) {
 *    return g.get('password').value === g.get('passwordConfirm').value
 *       ? null : {'mismatch': true};
 * }
 * ```
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var FormGroup=function(_AbstractControl2){_inherits(FormGroup,_AbstractControl2);/**
     * @param {?} controls
     * @param {?=} validator
     * @param {?=} asyncValidator
     */function FormGroup(controls){var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck(this,FormGroup);var _this15=_possibleConstructorReturn(this,(FormGroup.__proto__||Object.getPrototypeOf(FormGroup)).call(this,validator,asyncValidator));_this15.controls=controls;_this15._initObservables();_this15._setUpControls();_this15.updateValueAndValidity({onlySelf:true,emitEvent:false});return _this15;}/**
     * Registers a control with the group's list of controls.
     *
     * This method does not update value or validity of the control, so for
     * most cases you'll want to use {\@link FormGroup.addControl} instead.
     * @param {?} name
     * @param {?} control
     * @return {?}
     */_createClass(FormGroup,[{key:'registerControl',value:function registerControl(name,control){if(this.controls[name])return this.controls[name];this.controls[name]=control;control.setParent(this);control._registerOnCollectionChange(this._onCollectionChange);return control;}/**
     * Add a control to this group.
     * @param {?} name
     * @param {?} control
     * @return {?}
     */},{key:'addControl',value:function addControl(name,control){this.registerControl(name,control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Remove a control from this group.
     * @param {?} name
     * @return {?}
     */},{key:'removeControl',value:function removeControl(name){if(this.controls[name])this.controls[name]._registerOnCollectionChange(function(){});delete this.controls[name];this.updateValueAndValidity();this._onCollectionChange();}/**
     * Replace an existing control.
     * @param {?} name
     * @param {?} control
     * @return {?}
     */},{key:'setControl',value:function setControl(name,control){if(this.controls[name])this.controls[name]._registerOnCollectionChange(function(){});delete this.controls[name];if(control)this.registerControl(name,control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Check whether there is an enabled control with the given name in the group.
     *
     * It will return false for disabled controls. If you'd like to check for
     * existence in the group only, use {\@link AbstractControl.get} instead.
     * @param {?} controlName
     * @return {?}
     */},{key:'contains',value:function contains(controlName){return this.controls.hasOwnProperty(controlName)&&this.controls[controlName].enabled;}/**
     *  Sets the value of the {\@link FormGroup}. It accepts an object that matches
     *  the structure of the group, with control names as keys.
     *
     * This method performs strict checks, so it will throw an error if you try
     * to set the value of a control that doesn't exist or if you exclude the
     * value of a control.
     *
     *  ### Example
     *
     *  ```
     *  const form = new FormGroup({
     *     first: new FormControl(),
     *     last: new FormControl()
     *  });
     *  console.log(form.value);   // {first: null, last: null}
     *
     *  form.setValue({first: 'Nancy', last: 'Drew'});
     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}
     *
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */},{key:'setValue',value:function setValue(value){var _this16=this;var _ref15=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref15.onlySelf,emitEvent=_ref15.emitEvent;this._checkAllValuesPresent(value);Object.keys(value).forEach(function(name){_this16._throwIfControlMissing(name);_this16.controls[name].setValue(value[name],{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     *  Patches the value of the {\@link FormGroup}. It accepts an object with control
     *  names as keys, and will do its best to match the values to the correct controls
     *  in the group.
     *
     *  It accepts both super-sets and sub-sets of the group without throwing an error.
     *
     *  ### Example
     *
     *  ```
     *  const form = new FormGroup({
     *     first: new FormControl(),
     *     last: new FormControl()
     *  });
     *  console.log(form.value);   // {first: null, last: null}
     *
     *  form.patchValue({first: 'Nancy'});
     *  console.log(form.value);   // {first: 'Nancy', last: null}
     *
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value){var _this17=this;var _ref16=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref16.onlySelf,emitEvent=_ref16.emitEvent;Object.keys(value).forEach(function(name){if(_this17.controls[name]){_this17.controls[name].patchValue(value[name],{onlySelf:true,emitEvent:emitEvent});}});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * Resets the {\@link FormGroup}. This means by default:
     *
     * * The group and all descendants are marked `pristine`
     * * The group and all descendants are marked `untouched`
     * * The value of all descendants will be null or null maps
     *
     * You can also reset to a specific form state by passing in a map of states
     * that matches the structure of your form, with control names as keys. The state
     * can be a standalone value or a form state object with both a value and a disabled
     * status.
     *
     * ### Example
     *
     * ```ts
     * this.form.reset({first: 'name', last: 'last name'});
     *
     * console.log(this.form.value);  // {first: 'name', last: 'last name'}
     * ```
     *
     * - OR -
     *
     * ```
     * this.form.reset({
     *   first: {value: 'name', disabled: true},
     *   last: 'last'
     * });
     *
     * console.log(this.form.value);  // {first: 'name', last: 'last name'}
     * console.log(this.form.get('first').status);  // 'DISABLED'
     * ```
     * @param {?=} value
     * @param {?=} __1
     * @return {?}
     */},{key:'reset',value:function reset(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref17=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref17.onlySelf,emitEvent=_ref17.emitEvent;this._forEachChild(function(control,name){control.reset(value[name],{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});this._updatePristine({onlySelf:onlySelf});this._updateTouched({onlySelf:onlySelf});}/**
     * The aggregate value of the {\@link FormGroup}, including any disabled controls.
     *
     * If you'd like to include all values regardless of disabled status, use this method.
     * Otherwise, the `value` property is the best way to get the value of the group.
     * @return {?}
     */},{key:'getRawValue',value:function getRawValue(){return this._reduceChildren({},function(acc,control,name){acc[name]=control instanceof FormControl?control.value:control.getRawValue();return acc;});}/**
     * \@internal
     * @param {?} name
     * @return {?}
     */},{key:'_throwIfControlMissing',value:function _throwIfControlMissing(name){if(!Object.keys(this.controls).length){throw new Error('\n        There are no form controls registered with this group yet.  If you\'re using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ');}if(!this.controls[name]){throw new Error('Cannot find form control with name: '+name+'.');}}/**
     * \@internal
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){var _this18=this;Object.keys(this.controls).forEach(function(k){return cb(_this18.controls[k],k);});}/**
     * \@internal
     * @return {?}
     */},{key:'_setUpControls',value:function _setUpControls(){var _this19=this;this._forEachChild(function(control){control.setParent(_this19);control._registerOnCollectionChange(_this19._onCollectionChange);});}/**
     * \@internal
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){this._value=this._reduceValue();}/**
     * \@internal
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){var _this20=this;var/** @type {?} */res=false;this._forEachChild(function(control,name){res=res||_this20.contains(name)&&condition(control);});return res;}/**
     * \@internal
     * @return {?}
     */},{key:'_reduceValue',value:function _reduceValue(){var _this21=this;return this._reduceChildren({},function(acc,control,name){if(control.enabled||_this21.disabled){acc[name]=control.value;}return acc;});}/**
     * \@internal
     * @param {?} initValue
     * @param {?} fn
     * @return {?}
     */},{key:'_reduceChildren',value:function _reduceChildren(initValue,fn){var/** @type {?} */res=initValue;this._forEachChild(function(control,name){res=fn(res,control,name);});return res;}/**
     * \@internal
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=Object.keys(this.controls)[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var controlName=_step6.value;if(this.controls[controlName].enabled){return false;}}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}return Object.keys(this.controls).length>0||this.disabled;}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_checkAllValuesPresent',value:function _checkAllValuesPresent(value){this._forEachChild(function(control,name){if(value[name]===undefined){throw new Error('Must supply a value for form control with name: \''+name+'\'.');}});}}]);return FormGroup;}(AbstractControl);/**
 * \@whatItDoes Tracks the value and validity state of an array of {\@link FormControl},
 * {\@link FormGroup} or {\@link FormArray} instances.
 *
 * A `FormArray` aggregates the values of each child {\@link FormControl} into an array.
 * It calculates its status by reducing the statuses of its children. For example, if one of
 * the controls in a `FormArray` is invalid, the entire array becomes invalid.
 *
 * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,
 * along with {\@link FormControl} and {\@link FormGroup}.
 *
 * \@howToUse
 *
 * When instantiating a {\@link FormArray}, pass in an array of child controls as the first
 * argument.
 *
 * ### Example
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy', Validators.minLength(2)),
 *   new FormControl('Drew'),
 * ]);
 *
 * console.log(arr.value);   // ['Nancy', 'Drew']
 * console.log(arr.status);  // 'VALID'
 * ```
 *
 * You can also include array-level validators as the second arg, or array-level async
 * validators as the third arg. These come in handy when you want to perform validation
 * that considers the value of more than one child control.
 *
 * ### Adding or removing controls
 *
 * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods
 * in `FormArray` itself. These methods ensure the controls are properly tracked in the
 * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate
 * the `FormArray` directly, as that will result in strange and unexpected behavior such
 * as broken change detection.
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var FormArray=function(_AbstractControl3){_inherits(FormArray,_AbstractControl3);/**
     * @param {?} controls
     * @param {?=} validator
     * @param {?=} asyncValidator
     */function FormArray(controls){var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck(this,FormArray);var _this22=_possibleConstructorReturn(this,(FormArray.__proto__||Object.getPrototypeOf(FormArray)).call(this,validator,asyncValidator));_this22.controls=controls;_this22._initObservables();_this22._setUpControls();_this22.updateValueAndValidity({onlySelf:true,emitEvent:false});return _this22;}/**
     * Get the {\@link AbstractControl} at the given `index` in the array.
     * @param {?} index
     * @return {?}
     */_createClass(FormArray,[{key:'at',value:function at(index){return this.controls[index];}/**
     * Insert a new {\@link AbstractControl} at the end of the array.
     * @param {?} control
     * @return {?}
     */},{key:'push',value:function push(control){this.controls.push(control);this._registerControl(control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Insert a new {\@link AbstractControl} at the given `index` in the array.
     * @param {?} index
     * @param {?} control
     * @return {?}
     */},{key:'insert',value:function insert(index,control){this.controls.splice(index,0,control);this._registerControl(control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Remove the control at the given `index` in the array.
     * @param {?} index
     * @return {?}
     */},{key:'removeAt',value:function removeAt(index){if(this.controls[index])this.controls[index]._registerOnCollectionChange(function(){});this.controls.splice(index,1);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Replace an existing control.
     * @param {?} index
     * @param {?} control
     * @return {?}
     */},{key:'setControl',value:function setControl(index,control){if(this.controls[index])this.controls[index]._registerOnCollectionChange(function(){});this.controls.splice(index,1);if(control){this.controls.splice(index,0,control);this._registerControl(control);}this.updateValueAndValidity();this._onCollectionChange();}/**
     * Length of the control array.
     * @return {?}
     */},{key:'setValue',/**
     *  Sets the value of the {\@link FormArray}. It accepts an array that matches
     *  the structure of the control.
     *
     * This method performs strict checks, so it will throw an error if you try
     * to set the value of a control that doesn't exist or if you exclude the
     * value of a control.
     *
     *  ### Example
     *
     *  ```
     *  const arr = new FormArray([
     *     new FormControl(),
     *     new FormControl()
     *  ]);
     *  console.log(arr.value);   // [null, null]
     *
     *  arr.setValue(['Nancy', 'Drew']);
     *  console.log(arr.value);   // ['Nancy', 'Drew']
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */value:function setValue(value){var _this23=this;var _ref18=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref18.onlySelf,emitEvent=_ref18.emitEvent;this._checkAllValuesPresent(value);value.forEach(function(newValue,index){_this23._throwIfControlMissing(index);_this23.at(index).setValue(newValue,{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     *  Patches the value of the {\@link FormArray}. It accepts an array that matches the
     *  structure of the control, and will do its best to match the values to the correct
     *  controls in the group.
     *
     *  It accepts both super-sets and sub-sets of the array without throwing an error.
     *
     *  ### Example
     *
     *  ```
     *  const arr = new FormArray([
     *     new FormControl(),
     *     new FormControl()
     *  ]);
     *  console.log(arr.value);   // [null, null]
     *
     *  arr.patchValue(['Nancy']);
     *  console.log(arr.value);   // ['Nancy', null]
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value){var _this24=this;var _ref19=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref19.onlySelf,emitEvent=_ref19.emitEvent;value.forEach(function(newValue,index){if(_this24.at(index)){_this24.at(index).patchValue(newValue,{onlySelf:true,emitEvent:emitEvent});}});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * Resets the {\@link FormArray}. This means by default:
     *
     * * The array and all descendants are marked `pristine`
     * * The array and all descendants are marked `untouched`
     * * The value of all descendants will be null or null maps
     *
     * You can also reset to a specific form state by passing in an array of states
     * that matches the structure of the control. The state can be a standalone value
     * or a form state object with both a value and a disabled status.
     *
     * ### Example
     *
     * ```ts
     * this.arr.reset(['name', 'last name']);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * ```
     *
     * - OR -
     *
     * ```
     * this.arr.reset([
     *   {value: 'name', disabled: true},
     *   'last'
     * ]);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * console.log(this.arr.get(0).status);  // 'DISABLED'
     * ```
     * @param {?=} value
     * @param {?=} __1
     * @return {?}
     */},{key:'reset',value:function reset(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var _ref20=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref20.onlySelf,emitEvent=_ref20.emitEvent;this._forEachChild(function(control,index){control.reset(value[index],{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});this._updatePristine({onlySelf:onlySelf});this._updateTouched({onlySelf:onlySelf});}/**
     * The aggregate value of the array, including any disabled controls.
     *
     * If you'd like to include all values regardless of disabled status, use this method.
     * Otherwise, the `value` property is the best way to get the value of the array.
     * @return {?}
     */},{key:'getRawValue',value:function getRawValue(){return this.controls.map(function(control){return control instanceof FormControl?control.value:control.getRawValue();});}/**
     * \@internal
     * @param {?} index
     * @return {?}
     */},{key:'_throwIfControlMissing',value:function _throwIfControlMissing(index){if(!this.controls.length){throw new Error('\n        There are no form controls registered with this array yet.  If you\'re using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ');}if(!this.at(index)){throw new Error('Cannot find form control at index '+index);}}/**
     * \@internal
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){this.controls.forEach(function(control,index){cb(control,index);});}/**
     * \@internal
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){var _this25=this;this._value=this.controls.filter(function(control){return control.enabled||_this25.disabled;}).map(function(control){return control.value;});}/**
     * \@internal
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){return this.controls.some(function(control){return control.enabled&&condition(control);});}/**
     * \@internal
     * @return {?}
     */},{key:'_setUpControls',value:function _setUpControls(){var _this26=this;this._forEachChild(function(control){return _this26._registerControl(control);});}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_checkAllValuesPresent',value:function _checkAllValuesPresent(value){this._forEachChild(function(control,i){if(value[i]===undefined){throw new Error('Must supply a value for form control at index: '+i+'.');}});}/**
     * \@internal
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=this.controls[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var control=_step7.value;if(control.enabled)return false;}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}return this.controls.length>0||this.disabled;}/**
     * @param {?} control
     * @return {?}
     */},{key:'_registerControl',value:function _registerControl(control){control.setParent(this);control._registerOnCollectionChange(this._onCollectionChange);}},{key:'length',get:function get(){return this.controls.length;}}]);return FormArray;}(AbstractControl);var/** @type {?} */formDirectiveProvider={provide:ControlContainer,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return NgForm;})};var/** @type {?} */resolvedPromise=Promise.resolve(null);/**
 * \@whatItDoes Creates a top-level {\@link FormGroup} instance and binds it to a form
 * to track aggregate form value and validation status.
 *
 * \@howToUse
 *
 * As soon as you import the `FormsModule`, this directive becomes active by default on
 * all `<form>` tags.  You don't need to add a special selector.
 *
 * You can export the directive into a local template variable using `ngForm` as the key
 * (ex: `#myForm="ngForm"`). This is optional, but useful.  Many properties from the underlying
 * {\@link FormGroup} instance are duplicated on the directive itself, so a reference to it
 * will give you access to the aggregate value and validity status of the form, as well as
 * user interaction properties like `dirty` and `touched`.
 *
 * To register child controls with the form, you'll want to use {\@link NgModel} with a
 * `name` attribute.  You can also use {\@link NgModelGroup} if you'd like to create
 * sub-groups within the form.
 *
 * You can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * {\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `FormsModule`
 *
 *  \@stable
 */var NgForm=function(_ControlContainer2){_inherits(NgForm,_ControlContainer2);/**
     * @param {?} validators
     * @param {?} asyncValidators
     */function NgForm(validators,asyncValidators){_classCallCheck(this,NgForm);var _this27=_possibleConstructorReturn(this,(NgForm.__proto__||Object.getPrototypeOf(NgForm)).call(this));_this27._submitted=false;_this27.ngSubmit=new EventEmitter();_this27.form=new FormGroup({},composeValidators(validators),composeAsyncValidators(asyncValidators));return _this27;}/**
     * @return {?}
     */_createClass(NgForm,[{key:'addControl',/**
     * @param {?} dir
     * @return {?}
     */value:function addControl(dir){var _this28=this;resolvedPromise.then(function(){var/** @type {?} */container=_this28._findContainer(dir.path);dir._control=container.registerControl(dir.name,dir.control);setUpControl(dir.control,dir);dir.control.updateValueAndValidity({emitEvent:false});});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getControl',value:function getControl(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeControl',value:function removeControl(dir){var _this29=this;resolvedPromise.then(function(){var/** @type {?} */container=_this29._findContainer(dir.path);if(container){container.removeControl(dir.name);}});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'addFormGroup',value:function addFormGroup(dir){var _this30=this;resolvedPromise.then(function(){var/** @type {?} */container=_this30._findContainer(dir.path);var/** @type {?} */group=new FormGroup({});setUpFormContainer(group,dir);container.registerControl(dir.name,group);group.updateValueAndValidity({emitEvent:false});});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeFormGroup',value:function removeFormGroup(dir){var _this31=this;resolvedPromise.then(function(){var/** @type {?} */container=_this31._findContainer(dir.path);if(container){container.removeControl(dir.name);}});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getFormGroup',value:function getFormGroup(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @param {?} value
     * @return {?}
     */},{key:'updateModel',value:function updateModel(dir,value){var _this32=this;resolvedPromise.then(function(){var/** @type {?} */ctrl=_this32.form.get(dir.path);ctrl.setValue(value);});}/**
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(value){this.control.setValue(value);}/**
     * @param {?} $event
     * @return {?}
     */},{key:'onSubmit',value:function onSubmit($event){this._submitted=true;this.ngSubmit.emit($event);return false;}/**
     * @return {?}
     */},{key:'onReset',value:function onReset(){this.resetForm();}/**
     * @param {?=} value
     * @return {?}
     */},{key:'resetForm',value:function resetForm(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this.form.reset(value);this._submitted=false;}/**
     * \@internal
     * @param {?} path
     * @return {?}
     */},{key:'_findContainer',value:function _findContainer(path){path.pop();return path.length?this.form.get(path):this.form;}},{key:'submitted',get:function get(){return this._submitted;}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this;}/**
     * @return {?}
     */},{key:'control',get:function get(){return this.form;}/**
     * @return {?}
     */},{key:'path',get:function get(){return[];}/**
     * @return {?}
     */},{key:'controls',get:function get(){return this.form.controls;}}]);return NgForm;}(ControlContainer);NgForm.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',providers:[formDirectiveProvider],host:{'(submit)':'onSubmit($event)','(reset)':'onReset()'},outputs:['ngSubmit'],exportAs:'ngForm'}]}];/** @nocollapse */NgForm.ctorParameters=function(){return[{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]}];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */Examples={formControlName:'\n    <div [formGroup]="myGroup">\n      <input formControlName="firstName">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });',formGroupName:'\n    <div [formGroup]="myGroup">\n       <div formGroupName="person">\n          <input formControlName="firstName">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });',formArrayName:'\n    <div [formGroup]="myGroup">\n      <div formArrayName="cities">\n        <div *ngFor="let city of cityArray.controls; let i=index">\n          <input [formControlName]="i">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl(\'SF\')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });',ngModelGroup:'\n    <form>\n       <div ngModelGroup="person">\n          <input [(ngModel)]="person.name" name="firstName">\n       </div>\n    </form>',ngModelWithFormGroup:'\n    <div [formGroup]="myGroup">\n       <input formControlName="firstName">\n       <input [(ngModel)]="showMoreControls" [ngModelOptions]="{standalone: true}">\n    </div>\n  '};var TemplateDrivenErrors=function(){function TemplateDrivenErrors(){_classCallCheck(this,TemplateDrivenErrors);}_createClass(TemplateDrivenErrors,null,[{key:'modelParentException',/**
     * @return {?}
     */value:function modelParentException(){throw new Error('\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup\'s partner directive "formControlName" instead.  Example:\n\n      '+Examples.formControlName+'\n\n      Or, if you\'d like to avoid registering this form control, indicate that it\'s standalone in ngModelOptions:\n\n      Example:\n\n      '+Examples.ngModelWithFormGroup);}/**
     * @return {?}
     */},{key:'formGroupNameException',value:function formGroupNameException(){throw new Error('\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      '+Examples.formGroupName+'\n\n      Option 2:  Update ngModel\'s parent be ngModelGroup (template-driven strategy):\n\n      '+Examples.ngModelGroup);}/**
     * @return {?}
     */},{key:'missingNameException',value:function missingNameException(){throw new Error('If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as \'standalone\' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]="person.firstName" name="first">\n      Example 2: <input [(ngModel)]="person.firstName" [ngModelOptions]="{standalone: true}">');}/**
     * @return {?}
     */},{key:'modelGroupParentException',value:function modelGroupParentException(){throw new Error('\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      '+Examples.formGroupName+'\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      '+Examples.ngModelGroup);}}]);return TemplateDrivenErrors;}();var/** @type {?} */modelGroupProvider={provide:ControlContainer,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return NgModelGroup;})};/**
 * \@whatItDoes Creates and binds a {\@link FormGroup} instance to a DOM element.
 *
 * \@howToUse
 *
 * This directive can only be used as a child of {\@link NgForm} (or in other words,
 * within `<form>` tags).
 *
 * Use this directive if you'd like to create a sub-group within a form. This can
 * come in handy if you want to validate a sub-group of your form separately from
 * the rest of your form, or if some values in your domain model make more sense to
 * consume together in a nested object.
 *
 * Pass in the name you'd like this sub-group to have and it will become the key
 * for the sub-group in the form's full value. You can also export the directive into
 * a local template variable using `ngModelGroup` (ex: `#myGroup="ngModelGroup"`).
 *
 * {\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `FormsModule`
 *
 * \@stable
 */var NgModelGroup=function(_AbstractFormGroupDir){_inherits(NgModelGroup,_AbstractFormGroupDir);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     */function NgModelGroup(parent,validators,asyncValidators){_classCallCheck(this,NgModelGroup);var _this33=_possibleConstructorReturn(this,(NgModelGroup.__proto__||Object.getPrototypeOf(NgModelGroup)).call(this));_this33._parent=parent;_this33._validators=validators;_this33._asyncValidators=asyncValidators;return _this33;}/**
     * \@internal
     * @return {?}
     */_createClass(NgModelGroup,[{key:'_checkParentType',value:function _checkParentType(){if(!(this._parent instanceof NgModelGroup)&&!(this._parent instanceof NgForm)){TemplateDrivenErrors.modelGroupParentException();}}}]);return NgModelGroup;}(AbstractFormGroupDirective);NgModelGroup.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngModelGroup]',providers:[modelGroupProvider],exportAs:'ngModelGroup'}]}];/** @nocollapse */NgModelGroup.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]}];};NgModelGroup.propDecorators={'name':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['ngModelGroup']}]};var/** @type {?} */formControlBinding={provide:NgControl,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return NgModel;})};/**
 * `ngModel` forces an additional change detection run when its inputs change:
 * E.g.:
 * ```
 * <div>{{myModel.valid}}</div>
 * <input [(ngModel)]="myValue" #myModel="ngModel">
 * ```
 * I.e. `ngModel` can export itself on the element and then be used in the template.
 * Normally, this would result in expressions before the `input` that use the exported directive
 * to have and old value as they have been
 * dirty checked before. As this is a very common case for `ngModel`, we added this second change
 * detection run.
 *
 * Notes:
 * - this is just one extra run no matter how many `ngModel` have been changed.
 * - this is a general problem when using `exportAs` for directives!
 */var/** @type {?} */resolvedPromise$1=Promise.resolve(null);/**
 * \@whatItDoes Creates a {\@link FormControl} instance from a domain model and binds it
 * to a form control element.
 *
 * The {\@link FormControl} instance will track the value, user interaction, and
 * validation status of the control and keep the view synced with the model. If used
 * within a parent form, the directive will also register itself with the form as a child
 * control.
 *
 * \@howToUse
 *
 * This directive can be used by itself or as part of a larger form. All you need is the
 * `ngModel` selector to activate it.
 *
 * It accepts a domain model as an optional {\@link \@Input}. If you have a one-way binding
 * to `ngModel` with `[]` syntax, changing the value of the domain model in the component
 * class will set the value in the view. If you have a two-way binding with `[()]` syntax
 * (also known as 'banana-box syntax'), the value in the UI will always be synced back to
 * the domain model in your class as well.
 *
 * If you wish to inspect the properties of the associated {\@link FormControl} (like
 * validity state), you can also export the directive into a local template variable using
 * `ngModel` as the key (ex: `#myVar="ngModel"`). You can then access the control using the
 * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)
 * will fall through to the control anyway, so you can access them directly. You can see a
 * full list of properties directly available in {\@link AbstractControlDirective}.
 *
 * The following is an example of a simple standalone control using `ngModel`:
 *
 * {\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}
 *
 * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute
 * so that the control can be registered with the parent form under that name.
 *
 * It's worth noting that in the context of a parent form, you often can skip one-way or
 * two-way binding because the parent form will sync the value for you. You can access
 * its properties by exporting it into a local template variable using `ngForm` (ex:
 * `#f="ngForm"`). Then you can pass it where it needs to go on submit.
 *
 * If you do need to populate initial values into your form, using a one-way binding for
 * `ngModel` tends to be sufficient as long as you use the exported form's value rather
 * than the domain model's value on submit.
 *
 * Take a look at an example of using `ngModel` within a form:
 *
 * {\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * To see `ngModel` examples with different form control types, see:
 *
 * * Radio buttons: {\@link RadioControlValueAccessor}
 * * Selects: {\@link SelectControlValueAccessor}
 *
 * **npm package**: `\@angular/forms`
 *
 * **NgModule**: `FormsModule`
 *
 *  \@stable
 */var NgModel=function(_NgControl){_inherits(NgModel,_NgControl);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     * @param {?} valueAccessors
     */function NgModel(parent,validators,asyncValidators,valueAccessors){_classCallCheck(this,NgModel);/** @internal */var _this34=_possibleConstructorReturn(this,(NgModel.__proto__||Object.getPrototypeOf(NgModel)).call(this));_this34._control=new FormControl();/** @internal */_this34._registered=false;_this34._composing=false;_this34.update=new EventEmitter();_this34._parent=parent;_this34._rawValidators=validators||[];_this34._rawAsyncValidators=asyncValidators||[];_this34.valueAccessor=selectValueAccessor(_this34,valueAccessors);return _this34;}/**
     * @return {?}
     */_createClass(NgModel,[{key:'compositionStart',value:function compositionStart(){this._composing=true;}/**
     * @return {?}
     */},{key:'compositionEnd',value:function compositionEnd(){this._composing=false;this.update.emit(this.viewModel);}/**
     * @param {?} changes
     * @return {?}
     */},{key:'ngOnChanges',value:function ngOnChanges(changes){this._checkForErrors();if(!this._registered)this._setUpControl();if('isDisabled'in changes){this._updateDisabled(changes);}if(isPropertyUpdated(changes,this.viewModel)){this._updateValue(this.model);this.viewModel=this.model;}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this);}/**
     * @return {?}
     */},{key:'viewToModelUpdate',/**
     * @param {?} newValue
     * @return {?}
     */value:function viewToModelUpdate(newValue){this.viewModel=newValue;!this._composing&&this.update.emit(newValue);}/**
     * @return {?}
     */},{key:'_setUpControl',value:function _setUpControl(){this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this);this._registered=true;}/**
     * @return {?}
     */},{key:'_isStandalone',value:function _isStandalone(){return!this._parent||this.options&&this.options.standalone;}/**
     * @return {?}
     */},{key:'_setUpStandalone',value:function _setUpStandalone(){setUpControl(this._control,this);this._control.updateValueAndValidity({emitEvent:false});}/**
     * @return {?}
     */},{key:'_checkForErrors',value:function _checkForErrors(){if(!this._isStandalone()){this._checkParentType();}this._checkName();}/**
     * @return {?}
     */},{key:'_checkParentType',value:function _checkParentType(){if(!(this._parent instanceof NgModelGroup)&&this._parent instanceof AbstractFormGroupDirective){TemplateDrivenErrors.formGroupNameException();}else if(!(this._parent instanceof NgModelGroup)&&!(this._parent instanceof NgForm)){TemplateDrivenErrors.modelParentException();}}/**
     * @return {?}
     */},{key:'_checkName',value:function _checkName(){if(this.options&&this.options.name)this.name=this.options.name;if(!this._isStandalone()&&!this.name){TemplateDrivenErrors.missingNameException();}}/**
     * @param {?} value
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(value){var _this35=this;resolvedPromise$1.then(function(){_this35.control.setValue(value,{emitViewToModelChange:false});});}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_updateDisabled',value:function _updateDisabled(changes){var _this36=this;var/** @type {?} */disabledValue=changes['isDisabled'].currentValue;var/** @type {?} */isDisabled=disabledValue===''||disabledValue&&disabledValue!=='false';resolvedPromise$1.then(function(){if(isDisabled&&!_this36.control.disabled){_this36.control.disable();}else if(!isDisabled&&_this36.control.disabled){_this36.control.enable();}});}},{key:'control',get:function get(){return this._control;}/**
     * @return {?}
     */},{key:'path',get:function get(){return this._parent?controlPath(this.name,this._parent):[this.name];}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._rawValidators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._rawAsyncValidators);}}]);return NgModel;}(NgControl);NgModel.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[ngModel]:not([formControlName]):not([formControl])',providers:[formControlBinding],exportAs:'ngModel'}]}];/** @nocollapse */NgModel.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALUE_ACCESSOR]}]}];};NgModel.propDecorators={'name':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}],'isDisabled':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['disabled']}],'model':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['ngModel']}],'options':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['ngModelOptions']}],'update':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */],args:['ngModelChange']}],'compositionStart':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* HostListener */],args:['compositionstart']}],'compositionEnd':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* HostListener */],args:['compositionend']}]};var ReactiveErrors=function(){function ReactiveErrors(){_classCallCheck(this,ReactiveErrors);}_createClass(ReactiveErrors,null,[{key:'controlParentException',/**
     * @return {?}
     */value:function controlParentException(){throw new Error('formControlName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      '+Examples.formControlName);}/**
     * @return {?}
     */},{key:'ngModelGroupException',value:function ngModelGroupException(){throw new Error('formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a "form" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        '+Examples.formGroupName+'\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        '+Examples.ngModelGroup);}/**
     * @return {?}
     */},{key:'missingFormException',value:function missingFormException(){throw new Error('formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       '+Examples.formControlName);}/**
     * @return {?}
     */},{key:'groupParentException',value:function groupParentException(){throw new Error('formGroupName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      '+Examples.formGroupName);}/**
     * @return {?}
     */},{key:'arrayParentException',value:function arrayParentException(){throw new Error('formArrayName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        '+Examples.formArrayName);}/**
     * @return {?}
     */},{key:'disabledAttrWarning',value:function disabledAttrWarning(){console.warn('\n      It looks like you\'re using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid \'changed after checked\' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: \'Nancy\', disabled: true}, Validators.required),\n        last: new FormControl(\'Drew\', Validators.required)\n      });\n    ');}}]);return ReactiveErrors;}();var/** @type {?} */formControlBinding$1={provide:NgControl,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return FormControlDirective;})};/**
 * \@whatItDoes Syncs a standalone {\@link FormControl} instance to a form control element.
 *
 * In other words, this directive ensures that any values written to the {\@link FormControl}
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * {\@link FormControl} instance (view -> model).
 *
 * \@howToUse
 *
 * Use this directive if you'd like to create and manage a {\@link FormControl} instance directly.
 * Simply create a {\@link FormControl}, save it to your component class, and pass it into the
 * {\@link FormControlDirective}.
 *
 * This directive is designed to be used as a standalone control.  Unlike {\@link FormControlName},
 * it does not require that your {\@link FormControl} instance be part of any parent
 * {\@link FormGroup}, and it won't be registered to any {\@link FormGroupDirective} that
 * exists above it.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * {\@link FormControl} instance. See a full list of available properties in
 * {\@link AbstractControl}.
 *
 * **Set the value**: You can pass in an initial value when instantiating the {\@link FormControl},
 * or you can set it programmatically later using {\@link AbstractControl.setValue} or
 * {\@link AbstractControl.patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {\@link AbstractControl.valueChanges} event.  You can also listen to
 * {\@link AbstractControl.statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 *  \@stable
 */var FormControlDirective=function(_NgControl2){_inherits(FormControlDirective,_NgControl2);/**
     * @param {?} validators
     * @param {?} asyncValidators
     * @param {?} valueAccessors
     */function FormControlDirective(validators,asyncValidators,valueAccessors){_classCallCheck(this,FormControlDirective);var _this37=_possibleConstructorReturn(this,(FormControlDirective.__proto__||Object.getPrototypeOf(FormControlDirective)).call(this));_this37.update=new EventEmitter();_this37._rawValidators=validators||[];_this37._rawAsyncValidators=asyncValidators||[];_this37.valueAccessor=selectValueAccessor(_this37,valueAccessors);return _this37;}/**
     * @param {?} isDisabled
     * @return {?}
     */_createClass(FormControlDirective,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if(this._isControlChanged(changes)){setUpControl(this.form,this);if(this.control.disabled&&this.valueAccessor.setDisabledState){this.valueAccessor.setDisabledState(true);}this.form.updateValueAndValidity({emitEvent:false});}if(isPropertyUpdated(changes,this.viewModel)){this.form.setValue(this.model);this.viewModel=this.model;}}/**
     * @return {?}
     */},{key:'viewToModelUpdate',/**
     * @param {?} newValue
     * @return {?}
     */value:function viewToModelUpdate(newValue){this.viewModel=newValue;this.update.emit(newValue);}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_isControlChanged',value:function _isControlChanged(changes){return changes.hasOwnProperty('form');}},{key:'isDisabled',set:function set(isDisabled){ReactiveErrors.disabledAttrWarning();}},{key:'path',get:function get(){return[];}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._rawValidators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._rawAsyncValidators);}/**
     * @return {?}
     */},{key:'control',get:function get(){return this.form;}}]);return FormControlDirective;}(NgControl);FormControlDirective.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[formControl]',providers:[formControlBinding$1],exportAs:'ngForm'}]}];/** @nocollapse */FormControlDirective.ctorParameters=function(){return[{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALUE_ACCESSOR]}]}];};FormControlDirective.propDecorators={'form':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['formControl']}],'model':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['ngModel']}],'update':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */],args:['ngModelChange']}],'isDisabled':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['disabled']}]};var/** @type {?} */formDirectiveProvider$1={provide:ControlContainer,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return FormGroupDirective;})};/**
 * \@whatItDoes Binds an existing {\@link FormGroup} to a DOM element.
 *
 * \@howToUse
 *
 * This directive accepts an existing {\@link FormGroup} instance. It will then use this
 * {\@link FormGroup} instance to match any child {\@link FormControl}, {\@link FormGroup},
 * and {\@link FormArray} instances to child {\@link FormControlName}, {\@link FormGroupName},
 * and {\@link FormArrayName} directives.
 *
 * **Set value**: You can set the form's initial value when instantiating the
 * {\@link FormGroup}, or you can set it programmatically later using the {\@link FormGroup}'s
 * {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue} methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe
 * to the {\@link FormGroup}'s {\@link AbstractControl.valueChanges} event.  You can also listen to
 * its {\@link AbstractControl.statusChanges} event to be notified when the validation status is
 * re-calculated.
 *
 * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * **npm package**: `\@angular/forms`
 *
 * **NgModule**: {\@link ReactiveFormsModule}
 *
 *  \@stable
 */var FormGroupDirective=function(_ControlContainer3){_inherits(FormGroupDirective,_ControlContainer3);/**
     * @param {?} _validators
     * @param {?} _asyncValidators
     */function FormGroupDirective(_validators,_asyncValidators){_classCallCheck(this,FormGroupDirective);var _this38=_possibleConstructorReturn(this,(FormGroupDirective.__proto__||Object.getPrototypeOf(FormGroupDirective)).call(this));_this38._validators=_validators;_this38._asyncValidators=_asyncValidators;_this38._submitted=false;_this38.directives=[];_this38.form=null;_this38.ngSubmit=new EventEmitter();return _this38;}/**
     * @param {?} changes
     * @return {?}
     */_createClass(FormGroupDirective,[{key:'ngOnChanges',value:function ngOnChanges(changes){this._checkFormPresent();if(changes.hasOwnProperty('form')){this._updateValidators();this._updateDomValue();this._updateRegistrations();}}/**
     * @return {?}
     */},{key:'addControl',/**
     * @param {?} dir
     * @return {?}
     */value:function addControl(dir){var/** @type {?} */ctrl=this.form.get(dir.path);setUpControl(ctrl,dir);ctrl.updateValueAndValidity({emitEvent:false});this.directives.push(dir);return ctrl;}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getControl',value:function getControl(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeControl',value:function removeControl(dir){ListWrapper.remove(this.directives,dir);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'addFormGroup',value:function addFormGroup(dir){var/** @type {?} */ctrl=this.form.get(dir.path);setUpFormContainer(ctrl,dir);ctrl.updateValueAndValidity({emitEvent:false});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeFormGroup',value:function removeFormGroup(dir){}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getFormGroup',value:function getFormGroup(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'addFormArray',value:function addFormArray(dir){var/** @type {?} */ctrl=this.form.get(dir.path);setUpFormContainer(ctrl,dir);ctrl.updateValueAndValidity({emitEvent:false});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeFormArray',value:function removeFormArray(dir){}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getFormArray',value:function getFormArray(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @param {?} value
     * @return {?}
     */},{key:'updateModel',value:function updateModel(dir,value){var/** @type {?} */ctrl=this.form.get(dir.path);ctrl.setValue(value);}/**
     * @param {?} $event
     * @return {?}
     */},{key:'onSubmit',value:function onSubmit($event){this._submitted=true;this.ngSubmit.emit($event);return false;}/**
     * @return {?}
     */},{key:'onReset',value:function onReset(){this.resetForm();}/**
     * @param {?=} value
     * @return {?}
     */},{key:'resetForm',value:function resetForm(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this.form.reset(value);this._submitted=false;}/**
     * \@internal
     * @return {?}
     */},{key:'_updateDomValue',value:function _updateDomValue(){var _this39=this;this.directives.forEach(function(dir){var/** @type {?} */newCtrl=_this39.form.get(dir.path);if(dir._control!==newCtrl){cleanUpControl(dir._control,dir);if(newCtrl)setUpControl(newCtrl,dir);dir._control=newCtrl;}});this.form._updateTreeValidity({emitEvent:false});}/**
     * @return {?}
     */},{key:'_updateRegistrations',value:function _updateRegistrations(){var _this40=this;this.form._registerOnCollectionChange(function(){return _this40._updateDomValue();});if(this._oldForm)this._oldForm._registerOnCollectionChange(function(){});this._oldForm=this.form;}/**
     * @return {?}
     */},{key:'_updateValidators',value:function _updateValidators(){var/** @type {?} */sync=composeValidators(this._validators);this.form.validator=Validators.compose([this.form.validator,sync]);var/** @type {?} */async=composeAsyncValidators(this._asyncValidators);this.form.asyncValidator=Validators.composeAsync([this.form.asyncValidator,async]);}/**
     * @return {?}
     */},{key:'_checkFormPresent',value:function _checkFormPresent(){if(!this.form){ReactiveErrors.missingFormException();}}},{key:'submitted',get:function get(){return this._submitted;}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this;}/**
     * @return {?}
     */},{key:'control',get:function get(){return this.form;}/**
     * @return {?}
     */},{key:'path',get:function get(){return[];}}]);return FormGroupDirective;}(ControlContainer);FormGroupDirective.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[formGroup]',providers:[formDirectiveProvider$1],host:{'(submit)':'onSubmit($event)','(reset)':'onReset()'},exportAs:'ngForm'}]}];/** @nocollapse */FormGroupDirective.ctorParameters=function(){return[{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]}];};FormGroupDirective.propDecorators={'form':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['formGroup']}],'ngSubmit':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */]}]};var/** @type {?} */formGroupNameProvider={provide:ControlContainer,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return FormGroupName;})};/**
 * \@whatItDoes Syncs a nested {\@link FormGroup} to a DOM element.
 *
 * \@howToUse
 *
 * This directive can only be used with a parent {\@link FormGroupDirective} (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested {\@link FormGroup} you want to link, and
 * will look for a {\@link FormGroup} registered with that name in the parent
 * {\@link FormGroup} instance you passed into {\@link FormGroupDirective}.
 *
 * Nested form groups can come in handy when you want to validate a sub-group of a
 * form separately from the rest or when you'd like to group the values of certain
 * controls into their own nested object.
 *
 * **Access the group**: You can access the associated {\@link FormGroup} using the
 * {\@link AbstractControl.get} method. Ex: `this.form.get('name')`.
 *
 * You can also access individual controls within the group using dot syntax.
 * Ex: `this.form.get('name.first')`
 *
 * **Get the value**: the `value` property is always synced and available on the
 * {\@link FormGroup}. See a full list of available properties in {\@link AbstractControl}.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the {\@link FormGroup}, or you can set it programmatically later using
 * {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the group, you can
 * subscribe to the {\@link AbstractControl.valueChanges} event.  You can also listen to
 * {\@link AbstractControl.statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 * \@stable
 */var FormGroupName=function(_AbstractFormGroupDir2){_inherits(FormGroupName,_AbstractFormGroupDir2);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     */function FormGroupName(parent,validators,asyncValidators){_classCallCheck(this,FormGroupName);var _this41=_possibleConstructorReturn(this,(FormGroupName.__proto__||Object.getPrototypeOf(FormGroupName)).call(this));_this41._parent=parent;_this41._validators=validators;_this41._asyncValidators=asyncValidators;return _this41;}/**
     * \@internal
     * @return {?}
     */_createClass(FormGroupName,[{key:'_checkParentType',value:function _checkParentType(){if(_hasInvalidParent(this._parent)){ReactiveErrors.groupParentException();}}}]);return FormGroupName;}(AbstractFormGroupDirective);FormGroupName.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[formGroupName]',providers:[formGroupNameProvider]}]}];/** @nocollapse */FormGroupName.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]}];};FormGroupName.propDecorators={'name':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['formGroupName']}]};var/** @type {?} */formArrayNameProvider={provide:ControlContainer,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return FormArrayName;})};/**
 * \@whatItDoes Syncs a nested {\@link FormArray} to a DOM element.
 *
 * \@howToUse
 *
 * This directive is designed to be used with a parent {\@link FormGroupDirective} (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested {\@link FormArray} you want to link, and
 * will look for a {\@link FormArray} registered with that name in the parent
 * {\@link FormGroup} instance you passed into {\@link FormGroupDirective}.
 *
 * Nested form arrays can come in handy when you have a group of form controls but
 * you're not sure how many there will be. Form arrays allow you to create new
 * form controls dynamically.
 *
 * **Access the array**: You can access the associated {\@link FormArray} using the
 * {\@link AbstractControl.get} method on the parent {\@link FormGroup}.
 * Ex: `this.form.get('cities')`.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * {\@link FormArray}. See a full list of available properties in {\@link AbstractControl}.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the {\@link FormArray}, or you can set the value programmatically later using the
 * {\@link FormArray}'s {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue}
 * methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the array, you can
 * subscribe to the {\@link FormArray}'s {\@link AbstractControl.valueChanges} event.  You can also
 * listen to its {\@link AbstractControl.statusChanges} event to be notified when the validation
 * status is re-calculated.
 *
 * **Add new controls**: You can add new controls to the {\@link FormArray} dynamically by
 * calling its {\@link FormArray.push} method.
 *  Ex: `this.form.get('cities').push(new FormControl());`
 *
 * ### Example
 *
 * {\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 * \@stable
 */var FormArrayName=function(_ControlContainer4){_inherits(FormArrayName,_ControlContainer4);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     */function FormArrayName(parent,validators,asyncValidators){_classCallCheck(this,FormArrayName);var _this42=_possibleConstructorReturn(this,(FormArrayName.__proto__||Object.getPrototypeOf(FormArrayName)).call(this));_this42._parent=parent;_this42._validators=validators;_this42._asyncValidators=asyncValidators;return _this42;}/**
     * @return {?}
     */_createClass(FormArrayName,[{key:'ngOnInit',value:function ngOnInit(){this._checkParentType();this.formDirective.addFormArray(this);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this.formDirective){this.formDirective.removeFormArray(this);}}/**
     * @return {?}
     */},{key:'_checkParentType',/**
     * @return {?}
     */value:function _checkParentType(){if(_hasInvalidParent(this._parent)){ReactiveErrors.arrayParentException();}}},{key:'control',get:function get(){return this.formDirective.getFormArray(this);}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'path',get:function get(){return controlPath(this.name,this._parent);}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._validators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._asyncValidators);}}]);return FormArrayName;}(ControlContainer);FormArrayName.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[formArrayName]',providers:[formArrayNameProvider]}]}];/** @nocollapse */FormArrayName.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]}];};FormArrayName.propDecorators={'name':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['formArrayName']}]};/**
 * @param {?} parent
 * @return {?}
 */function _hasInvalidParent(parent){return!(parent instanceof FormGroupName)&&!(parent instanceof FormGroupDirective)&&!(parent instanceof FormArrayName);}var/** @type {?} */controlNameBinding={provide:NgControl,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return FormControlName;})};/**
 * \@whatItDoes Syncs a {\@link FormControl} in an existing {\@link FormGroup} to a form control
 * element by name.
 *
 * In other words, this directive ensures that any values written to the {\@link FormControl}
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * {\@link FormControl} instance (view -> model).
 *
 * \@howToUse
 *
 * This directive is designed to be used with a parent {\@link FormGroupDirective} (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the {\@link FormControl} instance you want to
 * link, and will look for a {\@link FormControl} registered with that name in the
 * closest {\@link FormGroup} or {\@link FormArray} above it.
 *
 * **Access the control**: You can access the {\@link FormControl} associated with
 * this directive by using the {\@link AbstractControl.get} method.
 * Ex: `this.form.get('first');`
 *
 * **Get value**: the `value` property is always synced and available on the {\@link FormControl}.
 * See a full list of available properties in {\@link AbstractControl}.
 *
 *  **Set value**: You can set an initial value for the control when instantiating the
 *  {\@link FormControl}, or you can set it programmatically later using
 *  {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {\@link AbstractControl.valueChanges} event.  You can also listen to
 * {\@link AbstractControl.statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * To see `formControlName` examples with different form control types, see:
 *
 * * Radio buttons: {\@link RadioControlValueAccessor}
 * * Selects: {\@link SelectControlValueAccessor}
 *
 * **npm package**: `\@angular/forms`
 *
 * **NgModule**: {\@link ReactiveFormsModule}
 *
 *  \@stable
 */var FormControlName=function(_NgControl3){_inherits(FormControlName,_NgControl3);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     * @param {?} valueAccessors
     */function FormControlName(parent,validators,asyncValidators,valueAccessors){_classCallCheck(this,FormControlName);var _this43=_possibleConstructorReturn(this,(FormControlName.__proto__||Object.getPrototypeOf(FormControlName)).call(this));_this43._added=false;_this43.update=new EventEmitter();_this43._parent=parent;_this43._rawValidators=validators||[];_this43._rawAsyncValidators=asyncValidators||[];_this43.valueAccessor=selectValueAccessor(_this43,valueAccessors);return _this43;}/**
     * @param {?} isDisabled
     * @return {?}
     */_createClass(FormControlName,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if(!this._added)this._setUpControl();if(isPropertyUpdated(changes,this.viewModel)){this.viewModel=this.model;this.formDirective.updateModel(this,this.model);}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this.formDirective){this.formDirective.removeControl(this);}}/**
     * @param {?} newValue
     * @return {?}
     */},{key:'viewToModelUpdate',value:function viewToModelUpdate(newValue){this.viewModel=newValue;this.update.emit(newValue);}/**
     * @return {?}
     */},{key:'_checkParentType',/**
     * @return {?}
     */value:function _checkParentType(){if(!(this._parent instanceof FormGroupName)&&this._parent instanceof AbstractFormGroupDirective){ReactiveErrors.ngModelGroupException();}else if(!(this._parent instanceof FormGroupName)&&!(this._parent instanceof FormGroupDirective)&&!(this._parent instanceof FormArrayName)){ReactiveErrors.controlParentException();}}/**
     * @return {?}
     */},{key:'_setUpControl',value:function _setUpControl(){this._checkParentType();this._control=this.formDirective.addControl(this);if(this.control.disabled&&this.valueAccessor.setDisabledState){this.valueAccessor.setDisabledState(true);}this._added=true;}},{key:'isDisabled',set:function set(isDisabled){ReactiveErrors.disabledAttrWarning();}},{key:'path',get:function get(){return controlPath(this.name,this._parent);}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._rawValidators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._rawAsyncValidators);}/**
     * @return {?}
     */},{key:'control',get:function get(){return this._control;}}]);return FormControlName;}(NgControl);FormControlName.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[formControlName]',providers:[controlNameBinding]}]}];/** @nocollapse */FormControlName.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[NG_VALUE_ACCESSOR]}]}];};FormControlName.propDecorators={'name':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['formControlName']}],'model':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['ngModel']}],'update':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */],args:['ngModelChange']}],'isDisabled':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */],args:['disabled']}]};var/** @type {?} */REQUIRED_VALIDATOR={provide:NG_VALIDATORS,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return RequiredValidator;}),multi:true};var/** @type {?} */CHECKBOX_REQUIRED_VALIDATOR={provide:NG_VALIDATORS,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return CheckboxRequiredValidator;}),multi:true};/**
 * A Directive that adds the `required` validator to any controls marked with the
 * `required` attribute, via the {\@link NG_VALIDATORS} binding.
 *
 * ### Example
 *
 * ```
 * <input name="fullName" ngModel required>
 * ```
 *
 * \@stable
 */var RequiredValidator=function(){function RequiredValidator(){_classCallCheck(this,RequiredValidator);}_createClass(RequiredValidator,[{key:'validate',/**
     * @param {?} c
     * @return {?}
     */value:function validate(c){return this.required?Validators.required(c):null;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}},{key:'required',/**
     * @return {?}
     */get:function get(){return this._required;}/**
     * @param {?} value
     * @return {?}
     */,set:function set(value){this._required=value!=null&&value!==false&&''+value!=='false';if(this._onChange)this._onChange();}}]);return RequiredValidator;}();RequiredValidator.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',providers:[REQUIRED_VALIDATOR],host:{'[attr.required]':'required ? "" : null'}}]}];/** @nocollapse */RequiredValidator.ctorParameters=function(){return[];};RequiredValidator.propDecorators={'required':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * A Directive that adds the `required` validator to checkbox controls marked with the
 * `required` attribute, via the {\@link NG_VALIDATORS} binding.
 *
 * ### Example
 *
 * ```
 * <input type="checkbox" name="active" ngModel required>
 * ```
 *
 * \@experimental
 */var CheckboxRequiredValidator=function(_RequiredValidator){_inherits(CheckboxRequiredValidator,_RequiredValidator);function CheckboxRequiredValidator(){_classCallCheck(this,CheckboxRequiredValidator);return _possibleConstructorReturn(this,(CheckboxRequiredValidator.__proto__||Object.getPrototypeOf(CheckboxRequiredValidator)).apply(this,arguments));}_createClass(CheckboxRequiredValidator,[{key:'validate',/**
     * @param {?} c
     * @return {?}
     */value:function validate(c){return this.required?Validators.requiredTrue(c):null;}}]);return CheckboxRequiredValidator;}(RequiredValidator);CheckboxRequiredValidator.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',providers:[CHECKBOX_REQUIRED_VALIDATOR],host:{'[attr.required]':'required ? "" : null'}}]}];/** @nocollapse */CheckboxRequiredValidator.ctorParameters=function(){return[];};/**
 * Provider which adds {@link EmailValidator} to {@link NG_VALIDATORS}.
 */var/** @type {?} */EMAIL_VALIDATOR={provide:NG_VALIDATORS,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return EmailValidator;}),multi:true};/**
 * A Directive that adds the `email` validator to controls marked with the
 * `email` attribute, via the {\@link NG_VALIDATORS} binding.
 *
 * ### Example
 *
 * ```
 * <input type="email" name="email" ngModel email>
 * <input type="email" name="email" ngModel email="true">
 * <input type="email" name="email" ngModel [email]="true">
 * ```
 *
 * \@experimental
 */var EmailValidator=function(){function EmailValidator(){_classCallCheck(this,EmailValidator);}_createClass(EmailValidator,[{key:'validate',/**
     * @param {?} c
     * @return {?}
     */value:function validate(c){return this._enabled?Validators.email(c):null;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}},{key:'email',/**
     * @param {?} value
     * @return {?}
     */set:function set(value){this._enabled=value===''||value===true||value==='true';if(this._onChange)this._onChange();}}]);return EmailValidator;}();EmailValidator.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[email][formControlName],[email][formControl],[email][ngModel]',providers:[EMAIL_VALIDATOR]}]}];/** @nocollapse */EmailValidator.ctorParameters=function(){return[];};EmailValidator.propDecorators={'email':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.
 *
 * ## Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='min'}
 */var/** @type {?} */MIN_LENGTH_VALIDATOR={provide:NG_VALIDATORS,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return MinLengthValidator;}),multi:true};/**
 * A directive which installs the {\@link MinLengthValidator} for any `formControlName`,
 * `formControl`, or control with `ngModel` that also has a `minlength` attribute.
 *
 * \@stable
 */var MinLengthValidator=function(){function MinLengthValidator(){_classCallCheck(this,MinLengthValidator);}_createClass(MinLengthValidator,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('minlength'in changes){this._createValidator();if(this._onChange)this._onChange();}}/**
     * @param {?} c
     * @return {?}
     */},{key:'validate',value:function validate(c){return this.minlength==null?null:this._validator(c);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}/**
     * @return {?}
     */},{key:'_createValidator',value:function _createValidator(){this._validator=Validators.minLength(parseInt(this.minlength,10));}}]);return MinLengthValidator;}();MinLengthValidator.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',providers:[MIN_LENGTH_VALIDATOR],host:{'[attr.minlength]':'minlength ? minlength : null'}}]}];/** @nocollapse */MinLengthValidator.ctorParameters=function(){return[];};MinLengthValidator.propDecorators={'minlength':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.
 *
 * ## Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='max'}
 */var/** @type {?} */MAX_LENGTH_VALIDATOR={provide:NG_VALIDATORS,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return MaxLengthValidator;}),multi:true};/**
 * A directive which installs the {\@link MaxLengthValidator} for any `formControlName,
 * `formControl`,
 * or control with `ngModel` that also has a `maxlength` attribute.
 *
 * \@stable
 */var MaxLengthValidator=function(){function MaxLengthValidator(){_classCallCheck(this,MaxLengthValidator);}_createClass(MaxLengthValidator,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('maxlength'in changes){this._createValidator();if(this._onChange)this._onChange();}}/**
     * @param {?} c
     * @return {?}
     */},{key:'validate',value:function validate(c){return this.maxlength!=null?this._validator(c):null;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}/**
     * @return {?}
     */},{key:'_createValidator',value:function _createValidator(){this._validator=Validators.maxLength(parseInt(this.maxlength,10));}}]);return MaxLengthValidator;}();MaxLengthValidator.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',providers:[MAX_LENGTH_VALIDATOR],host:{'[attr.maxlength]':'maxlength ? maxlength : null'}}]}];/** @nocollapse */MaxLengthValidator.ctorParameters=function(){return[];};MaxLengthValidator.propDecorators={'maxlength':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};var/** @type {?} */PATTERN_VALIDATOR={provide:NG_VALIDATORS,useExisting:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function(){return PatternValidator;}),multi:true};/**
 * A Directive that adds the `pattern` validator to any controls marked with the
 * `pattern` attribute, via the {\@link NG_VALIDATORS} binding. Uses attribute value
 * as the regex to validate Control value against.  Follows pattern attribute
 * semantics; i.e. regex must match entire Control value.
 *
 * ### Example
 *
 * ```
 * <input [name]="fullName" pattern="[a-zA-Z ]*" ngModel>
 * ```
 * \@stable
 */var PatternValidator=function(){function PatternValidator(){_classCallCheck(this,PatternValidator);}_createClass(PatternValidator,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('pattern'in changes){this._createValidator();if(this._onChange)this._onChange();}}/**
     * @param {?} c
     * @return {?}
     */},{key:'validate',value:function validate(c){return this._validator(c);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}/**
     * @return {?}
     */},{key:'_createValidator',value:function _createValidator(){this._validator=Validators.pattern(this.pattern);}}]);return PatternValidator;}();PatternValidator.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',providers:[PATTERN_VALIDATOR],host:{'[attr.pattern]':'pattern ? pattern : null'}}]}];/** @nocollapse */PatternValidator.ctorParameters=function(){return[];};PatternValidator.propDecorators={'pattern':[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]}]};/**
 * \@whatItDoes Creates an {\@link AbstractControl} from a user-specified configuration.
 *
 * It is essentially syntactic sugar that shortens the `new FormGroup()`,
 * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger
 * forms.
 *
 * \@howToUse
 *
 * To use, inject `FormBuilder` into your component class. You can then call its methods
 * directly.
 *
 * {\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}
 *
 *  * **npm package**: `\@angular/forms`
 *
 *  * **NgModule**: {\@link ReactiveFormsModule}
 *
 * \@stable
 */var FormBuilder=function(){function FormBuilder(){_classCallCheck(this,FormBuilder);}_createClass(FormBuilder,[{key:'group',/**
     * Construct a new {\@link FormGroup} with the given map of configuration.
     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.
     *
     * See the {\@link FormGroup} constructor for more details.
     * @param {?} controlsConfig
     * @param {?=} extra
     * @return {?}
     */value:function group(controlsConfig){var extra=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */controls=this._reduceControls(controlsConfig);var/** @type {?} */validator=isPresent(extra)?extra['validator']:null;var/** @type {?} */asyncValidator=isPresent(extra)?extra['asyncValidator']:null;return new FormGroup(controls,validator,asyncValidator);}/**
     * Construct a new {\@link FormControl} with the given `formState`,`validator`, and
     * `asyncValidator`.
     *
     * `formState` can either be a standalone value for the form control or an object
     * that contains both a value and a disabled status.
     *
     * @param {?} formState
     * @param {?=} validator
     * @param {?=} asyncValidator
     * @return {?}
     */},{key:'control',value:function control(formState){var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return new FormControl(formState,validator,asyncValidator);}/**
     * Construct a {\@link FormArray} from the given `controlsConfig` array of
     * configuration, with the given optional `validator` and `asyncValidator`.
     * @param {?} controlsConfig
     * @param {?=} validator
     * @param {?=} asyncValidator
     * @return {?}
     */},{key:'array',value:function array(controlsConfig){var _this45=this;var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */controls=controlsConfig.map(function(c){return _this45._createControl(c);});return new FormArray(controls,validator,asyncValidator);}/**
     * \@internal
     * @param {?} controlsConfig
     * @return {?}
     */},{key:'_reduceControls',value:function _reduceControls(controlsConfig){var _this46=this;var/** @type {?} */controls={};Object.keys(controlsConfig).forEach(function(controlName){controls[controlName]=_this46._createControl(controlsConfig[controlName]);});return controls;}/**
     * \@internal
     * @param {?} controlConfig
     * @return {?}
     */},{key:'_createControl',value:function _createControl(controlConfig){if(controlConfig instanceof FormControl||controlConfig instanceof FormGroup||controlConfig instanceof FormArray){return controlConfig;}else if(Array.isArray(controlConfig)){var/** @type {?} */value=controlConfig[0];var/** @type {?} */validator=controlConfig.length>1?controlConfig[1]:null;var/** @type {?} */asyncValidator=controlConfig.length>2?controlConfig[2]:null;return this.control(value,validator,asyncValidator);}else{return this.control(controlConfig);}}}]);return FormBuilder;}();FormBuilder.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]}];/** @nocollapse */FormBuilder.ctorParameters=function(){return[];};/**
 * @stable
 */var/** @type {?} */VERSION=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["M" /* Version */]('4.0.0-rc.1');/**
 * \@whatItDoes Adds `novalidate` attribute to all forms by default.
 *
 * `novalidate` is used to disable browser's native form validation.
 *
 * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:
 *
 * ```
 * <form ngNativeValidate></form>
 * ```
 *
 * \@experimental
 */var NgNoValidate=function NgNoValidate(){_classCallCheck(this,NgNoValidate);};NgNoValidate.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */],args:[{selector:'form:not([ngNoForm]):not([ngNativeValidate])',host:{'novalidate':''}}]}];/** @nocollapse */NgNoValidate.ctorParameters=function(){return[];};var/** @type {?} */SHARED_FORM_DIRECTIVES=[NgNoValidate,NgSelectOption,NgSelectMultipleOption,DefaultValueAccessor,NumberValueAccessor,RangeValueAccessor,CheckboxControlValueAccessor,SelectControlValueAccessor,SelectMultipleControlValueAccessor,RadioControlValueAccessor,NgControlStatus,NgControlStatusGroup,RequiredValidator,MinLengthValidator,MaxLengthValidator,PatternValidator,CheckboxRequiredValidator,EmailValidator];var/** @type {?} */TEMPLATE_DRIVEN_DIRECTIVES=[NgModel,NgModelGroup,NgForm];var/** @type {?} */REACTIVE_DRIVEN_DIRECTIVES=[FormControlDirective,FormGroupDirective,FormControlName,FormGroupName,FormArrayName];/**
 * Internal module used for sharing directives between FormsModule and ReactiveFormsModule
 */var InternalFormsSharedModule=function InternalFormsSharedModule(){_classCallCheck(this,InternalFormsSharedModule);};InternalFormsSharedModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */],args:[{declarations:SHARED_FORM_DIRECTIVES,exports:SHARED_FORM_DIRECTIVES}]}];/** @nocollapse */InternalFormsSharedModule.ctorParameters=function(){return[];};/**
 * The ng module for forms.
 * \@stable
 */var FormsModule=function FormsModule(){_classCallCheck(this,FormsModule);};FormsModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */],args:[{declarations:TEMPLATE_DRIVEN_DIRECTIVES,providers:[RadioControlRegistry],exports:[InternalFormsSharedModule,TEMPLATE_DRIVEN_DIRECTIVES]}]}];/** @nocollapse */FormsModule.ctorParameters=function(){return[];};/**
 * The ng module for reactive forms.
 * \@stable
 */var ReactiveFormsModule=function ReactiveFormsModule(){_classCallCheck(this,ReactiveFormsModule);};ReactiveFormsModule.decorators=[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */],args:[{declarations:[REACTIVE_DRIVEN_DIRECTIVES],providers:[FormBuilder,RadioControlRegistry],exports:[InternalFormsSharedModule,REACTIVE_DRIVEN_DIRECTIVES]}]}];/** @nocollapse */ReactiveFormsModule.ctorParameters=function(){return[];};


/***/ }),
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var queue_1 = __webpack_require__(161);
var Subscription_1 = __webpack_require__(7);
var observeOn_1 = __webpack_require__(97);
var ObjectUnsubscribedError_1 = __webpack_require__(67);
var SubjectSubscription_1 = __webpack_require__(122);
/**
 * @class ReplaySubject<T>
 */
var ReplaySubject = (function (_super) {
    __extends(ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
        _super.call(this);
        this.scheduler = scheduler;
        this._events = [];
        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        this._windowTime = windowTime < 1 ? 1 : windowTime;
    }
    ReplaySubject.prototype.next = function (value) {
        var now = this._getNow();
        this._events.push(new ReplayEvent(now, value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _events = this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var subscription;
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));
        }
        var len = _events.length;
        for (var i = 0; i < len && !subscriber.closed; i++) {
            subscriber.next(_events[i].value);
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || queue_1.queue).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        // Trim events that fall out of the time window.
        // Start at the front of the list. Break early once
        // we encounter an event that falls within the window.
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(Subject_1.Subject));
exports.ReplaySubject = ReplaySubject;
var ReplayEvent = (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throw_1 = __webpack_require__(431);
Observable_1.Observable.throw = throw_1._throw;
//# sourceMappingURL=throw.js.map

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ScalarObservable = (function (_super) {
    __extends(ScalarObservable, _super);
    function ScalarObservable(value, scheduler) {
        _super.call(this);
        this.value = value;
        this.scheduler = scheduler;
        this._isScalar = true;
        if (scheduler) {
            this._isScalar = false;
        }
    }
    ScalarObservable.create = function (value, scheduler) {
        return new ScalarObservable(value, scheduler);
    };
    ScalarObservable.dispatch = function (state) {
        var done = state.done, value = state.value, subscriber = state.subscriber;
        if (done) {
            subscriber.complete();
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        state.done = true;
        this.schedule(state);
    };
    ScalarObservable.prototype._subscribe = function (subscriber) {
        var value = this.value;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ScalarObservable.dispatch, 0, {
                done: false, value: value, subscriber: subscriber
            });
        }
        else {
            subscriber.next(value);
            if (!subscriber.closed) {
                subscriber.complete();
            }
        }
    };
    return ScalarObservable;
}(Observable_1.Observable));
exports.ScalarObservable = ScalarObservable;
//# sourceMappingURL=ScalarObservable.js.map

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var PromiseObservable_1 = __webpack_require__(138);
exports.fromPromise = PromiseObservable_1.PromiseObservable.create;
//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(22);
var isArray_1 = __webpack_require__(19);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
var none = {};
/* tslint:disable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from this Observable with values from
 * Observables passed as arguments. This is done by subscribing to each
 * Observable, in order, and collecting an array of each of the most recent
 * values any time any of the input Observables emits, then either taking that
 * array and passing it as arguments to an optional `project` function and
 * emitting the return value of that, or just emitting the array of recent
 * values directly if there is no `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0].slice();
    }
    observables.unshift(this);
    return this.lift.call(new ArrayObservable_1.ArrayObservable(observables), new CombineLatestOperator(project));
}
exports.combineLatest = combineLatest;
var CombineLatestOperator = (function () {
    function CombineLatestOperator(project) {
        this.project = project;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));
    };
    return CombineLatestOperator;
}());
exports.CombineLatestOperator = CombineLatestOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CombineLatestSubscriber = (function (_super) {
    __extends(CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, project) {
        _super.call(this, destination);
        this.project = project;
        this.active = 0;
        this.values = [];
        this.observables = [];
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(none);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === none ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.project) {
                this._tryProject(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryProject = function (values) {
        var result;
        try {
            result = this.project.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.CombineLatestSubscriber = CombineLatestSubscriber;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isScheduler_1 = __webpack_require__(26);
var ArrayObservable_1 = __webpack_require__(22);
var mergeAll_1 = __webpack_require__(44);
/* tslint:disable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));
}
exports.concat = concat;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins multiple Observables together by subscribing to them one at a time and
 * merging their results into the output Observable. Will wait for each
 * Observable to complete before moving on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat(timer1, timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} input1 An input Observable to concatenate with others.
 * @param {Observable} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */
function concatStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var scheduler = null;
    var args = observables;
    if (isScheduler_1.isScheduler(args[observables.length - 1])) {
        scheduler = args.pop();
    }
    if (scheduler === null && observables.length === 1) {
        return observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));
}
exports.concatStatic = concatStatic;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:disable:max-line-length */
/**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */
function filter(predicate, thisArg) {
    return this.lift(new FilterOperator(predicate, thisArg));
}
exports.filter = filter;
var FilterOperator = (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FilterSubscriber = (function (_super) {
    __extends(FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.count = 0;
        this.predicate = predicate;
    }
    // the try catch block below is left specifically for
    // optimization and perf reasons. a tryCatcher is not necessary here.
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=filter.js.map

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var subscribeToResult_1 = __webpack_require__(4);
var OuterSubscriber_1 = __webpack_require__(3);
/* tslint:disable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
        resultSelector = null;
    }
    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));
}
exports.mergeMap = mergeMap;
var MergeMapOperator = (function () {
    function MergeMapOperator(project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));
    };
    return MergeMapOperator;
}());
exports.MergeMapOperator = MergeMapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapSubscriber = (function (_super) {
    __extends(MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapSubscriber = MergeMapSubscriber;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Notification_1 = __webpack_require__(42);
/**
 * @see {@link Notification}
 *
 * @param scheduler
 * @param delay
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method observeOn
 * @owner Observable
 */
function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return this.lift(new ObserveOnOperator(scheduler, delay));
}
exports.observeOn = observeOn;
var ObserveOnOperator = (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());
exports.ObserveOnOperator = ObserveOnOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ObserveOnSubscriber = (function (_super) {
    __extends(ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination, subscription = arg.subscription;
        notification.observe(destination);
        if (subscription) {
            subscription.unsubscribe();
        }
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        var message = new ObserveOnMessage(notification, this.destination);
        message.subscription = this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, message));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(Notification_1.Notification.createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(Notification_1.Notification.createError(err));
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(Notification_1.Notification.createComplete());
    };
    return ObserveOnSubscriber;
}(Subscriber_1.Subscriber));
exports.ObserveOnSubscriber = ObserveOnSubscriber;
var ObserveOnMessage = (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());
exports.ObserveOnMessage = ObserveOnMessage;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(22);
var isArray_1 = __webpack_require__(19);
var Subscriber_1 = __webpack_require__(1);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
var iterator_1 = __webpack_require__(47);
/* tslint:disable:max-line-length */
/**
 * @param observables
 * @return {Observable<R>}
 * @method zip
 * @owner Observable
 */
function zipProto() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return this.lift.call(zipStatic.apply(void 0, [this].concat(observables)));
}
exports.zipProto = zipProto;
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each
 * of its input Observables.
 *
 * If the latest parameter is a function, this function is used to compute the created value from the input values.
 * Otherwise, an array of the input values is returned.
 *
 * @example <caption>Combine age and name from different sources</caption>
 *
 * let age$ = Observable.of<number>(27, 25, 29);
 * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');
 * let isDev$ = Observable.of<boolean>(true, true, false);
 *
 * Observable
 *     .zip(age$,
 *          name$,
 *          isDev$,
 *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))
 *     .subscribe(x => console.log(x));
 *
 * // outputs
 * // { age: 7, name: 'Foo', isDev: true }
 * // { age: 5, name: 'Bar', isDev: true }
 * // { age: 9, name: 'Beer', isDev: false }
 *
 * @param observables
 * @return {Observable<R>}
 * @static true
 * @name zip
 * @owner Observable
 */
function zipStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = observables[observables.length - 1];
    if (typeof project === 'function') {
        observables.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));
}
exports.zipStatic = zipStatic;
var ZipOperator = (function () {
    function ZipOperator(project) {
        this.project = project;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.project));
    };
    return ZipOperator;
}());
exports.ZipOperator = ZipOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipSubscriber = (function (_super) {
    __extends(ZipSubscriber, _super);
    function ZipSubscriber(destination, project, values) {
        if (values === void 0) { values = Object.create(null); }
        _super.call(this, destination);
        this.iterators = [];
        this.active = 0;
        this.project = (typeof project === 'function') ? project : null;
        this.values = values;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (isArray_1.isArray(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[iterator_1.$$iterator] === 'function') {
            iterators.push(new StaticIterator(value[iterator_1.$$iterator]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                this.add(iterator.subscribe(iterator, i));
            }
            else {
                this.active--; // not an observable
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        // abort if not all of them have values
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            // check to see if it's completed now that you've gotten
            // the next value.
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.project) {
            this._tryProject(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(Subscriber_1.Subscriber));
exports.ZipSubscriber = ZipSubscriber;
var StaticIterator = (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return nextResult && nextResult.done;
    };
    return StaticIterator;
}());
var StaticArrayIterator = (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[iterator_1.$$iterator] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipBufferIterator = (function (_super) {
    __extends(ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        _super.call(this, destination);
        this.parent = parent;
        this.observable = observable;
        this.stillUnsubscribed = true;
        this.buffer = [];
        this.isComplete = false;
    }
    ZipBufferIterator.prototype[iterator_1.$$iterator] = function () {
        return this;
    };
    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next
    //    this is legit because `next()` will never be called by a subscription in this case.
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);
    };
    return ZipBufferIterator;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=zip.js.map

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(19);
function isNumeric(val) {
    // parseFloat NaNs numeric-cast false positives (null|true|false|"")
    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
    // subtraction forces infinities to NaN
    // adding 1 corrects loss of precision from parseFloat (#15100)
    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;
}
exports.isNumeric = isNumeric;
;
//# sourceMappingURL=isNumeric.js.map

/***/ }),
/* 100 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
	}),
	getHeadElement = memoize(function () {
		return document.head || document.getElementsByTagName("head")[0];
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [];

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the bottom of <head>.
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
}

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var head = getHeadElement();
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			head.insertBefore(styleElement, head.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			head.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		head.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	styleElement.type = "text/css";
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	linkElement.rel = "stylesheet";
	insertStyleElement(options, linkElement);
	return linkElement;
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_object_extend__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__layout__ = __webpack_require__(27);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LayoutWrapDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};





/**
 * 'layout-wrap' flexbox styling directive
 * Defines wrapping of child elements in layout container
 * Optional values: reverse, wrap-reverse, none, nowrap, wrap (default)]
 * @see https://css-tricks.com/almanac/properties/f/flex-wrap/
 */
var LayoutWrapDirective = (function (_super) {
    __extends(LayoutWrapDirective, _super);
    function LayoutWrapDirective(monitor, elRef, renderer, container) {
        _super.call(this, monitor, elRef, renderer);
        this._layout = 'row'; // default flex-direction
        if (container) {
            this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));
        }
    }
    Object.defineProperty(LayoutWrapDirective.prototype, "wrap", {
        set: function (val) { this._cacheInput("wrap", val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapXs", {
        set: function (val) { this._cacheInput('wrapXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapGtXs", {
        set: function (val) { this._cacheInput('wrapGtXs', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapSm", {
        set: function (val) { this._cacheInput('wrapSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapGtSm", {
        set: function (val) { this._cacheInput('wrapGtSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapMd", {
        set: function (val) { this._cacheInput('wrapMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapGtMd", {
        set: function (val) { this._cacheInput('wrapGtMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapLg", {
        set: function (val) { this._cacheInput('wrapLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapGtLg", {
        set: function (val) { this._cacheInput('wrapGtLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutWrapDirective.prototype, "wrapXl", {
        set: function (val) { this._cacheInput('wrapXl', val); },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    LayoutWrapDirective.prototype.ngOnChanges = function (changes) {
        if (changes['wrap'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    LayoutWrapDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('wrap', 'wrap', function (changes) {
            _this._updateWithValue(changes.value);
        });
        this._updateWithValue();
    };
    // *********************************************
    // Protected methods
    // *********************************************
    /**
     * Cache the parent container 'flex-direction' and update the 'flex' styles
     */
    LayoutWrapDirective.prototype._onLayoutChange = function (direction) {
        var _this = this;
        this._layout = (direction || '').toLowerCase().replace('-reverse', '');
        if (!__WEBPACK_IMPORTED_MODULE_4__layout__["b" /* LAYOUT_VALUES */].find(function (x) { return x === _this._layout; })) {
            this._layout = 'row';
        }
        this._updateWithValue();
    };
    LayoutWrapDirective.prototype._updateWithValue = function (value) {
        value = value || this._queryInput("wrap") || 'wrap';
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        value = this._validateValue(value);
        this._applyStyleToElement(this._buildCSS(value));
    };
    /**
     * Build the CSS that should be assigned to the element instance
     */
    LayoutWrapDirective.prototype._buildCSS = function (value) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])({ 'flex-wrap': value }, {
            'display': 'flex',
            'flex-direction': this._layout || 'row'
        });
    };
    /**
     * Convert layout-wrap="<value>" to expected flex-wrap style
     */
    LayoutWrapDirective.prototype._validateValue = function (value) {
        switch (value.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
                value = 'wrap-reverse';
                break;
            case 'no':
            case 'none':
            case 'nowrap':
                value = 'nowrap';
                break;
            // All other values fallback to "wrap"
            default:
                value = 'wrap';
                break;
        }
        return value;
    };
    LayoutWrapDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: "\n  [fxLayoutWrap],\n  [fxLayoutWrap.xs],\n  [fxLayoutWrap.gt-xs],\n  [fxLayoutWrap.sm],\n  [fxLayoutWrap.gt-sm],\n  [fxLayoutWrap.md],\n  [fxLayoutWrap.gt-md],\n  [fxLayoutWrap.lg],\n  [fxLayoutWrap.gt-lg],\n  [fxLayoutWrap.xl]\n" },] },
    ];
    /** @nocollapse */
    LayoutWrapDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
        { type: __WEBPACK_IMPORTED_MODULE_4__layout__["a" /* LayoutDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */] },] },
    ]; };
    LayoutWrapDirective.propDecorators = {
        'wrap': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap',] },],
        'wrapXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.xs',] },],
        'wrapGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.gt-xs',] },],
        'wrapSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.sm',] },],
        'wrapGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.gt-sm',] },],
        'wrapMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.md',] },],
        'wrapGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.gt-md',] },],
        'wrapLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.lg',] },],
        'wrapGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.gt-lg',] },],
        'wrapXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutWrap.xl',] },],
    };
    return LayoutWrapDirective;
}(__WEBPACK_IMPORTED_MODULE_2__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/layout-wrap.js.map

/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_object_extend__ = __webpack_require__(32);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeyOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ResponsiveActivation; });


var KeyOptions = (function () {
    function KeyOptions(baseKey, defaultValue, inputKeys) {
        this.baseKey = baseKey;
        this.defaultValue = defaultValue;
        this.inputKeys = inputKeys;
    }
    return KeyOptions;
}());
/**
 * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery
 * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the
 * directive via the specified callback.
 *
 * - The MQA also determines which directive property should be used to determine the
 *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.
 * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the
 *   MediaQueryServices.
 *
 * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.
 */
var ResponsiveActivation = (function () {
    /**
     * Constructor
     */
    function ResponsiveActivation(_options, _mediaMonitor, _onMediaChanges) {
        this._options = _options;
        this._mediaMonitor = _mediaMonitor;
        this._onMediaChanges = _onMediaChanges;
        this._subscribers = [];
        this._subscribers = this._configureChangeObservers();
    }
    Object.defineProperty(ResponsiveActivation.prototype, "mediaMonitor", {
        /**
         * Accessor to the DI'ed directive property
         * Each directive instance has a reference to the MediaMonitor which is
         * used HERE to subscribe to mediaQuery change notifications.
         */
        get: function () {
            return this._mediaMonitor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResponsiveActivation.prototype, "activatedInputKey", {
        /**
         * Determine which directive @Input() property is currently active (for the viewport size):
         * The key must be defined (in use) or fallback to the 'closest' overlapping property key
         * that is defined; otherwise the default property key will be used.
         * e.g.
         *      if `<div fxHide fxHide.gt-sm="false">` is used but the current activated mediaQuery alias
         *      key is `.md` then `.gt-sm` should be used instead
         */
        get: function () {
            return this._activatedInputKey || this._options.baseKey;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResponsiveActivation.prototype, "activatedInput", {
        /**
         * Get the currently activated @Input value or the fallback default @Input value
         */
        get: function () {
            var key = this.activatedInputKey;
            return this._hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Remove interceptors, restore original functions, and forward the onDestroy() call
     */
    ResponsiveActivation.prototype.destroy = function () {
        this._subscribers.forEach(function (link) {
            link.unsubscribe();
        });
        this._subscribers = [];
    };
    /**
     * For each *defined* API property, register a callback to `_onMonitorEvents( )`
     * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs
     */
    ResponsiveActivation.prototype._configureChangeObservers = function () {
        var _this = this;
        var subscriptions = [];
        this._buildRegistryMap().forEach(function (bp) {
            if (_this._keyInUse(bp.key)) {
                // Inject directive default property key name: to let onMediaChange() calls
                // know which property is being triggered...
                var buildChanges = function (change) {
                    change.property = _this._options.baseKey;
                    return change;
                };
                subscriptions.push(_this.mediaMonitor.observe(bp.alias)
                    .map(buildChanges)
                    .subscribe(function (change) {
                    _this._onMonitorEvents(change);
                }));
            }
        });
        return subscriptions;
    };
    /**
     * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used
     * in the HTML markup
     */
    ResponsiveActivation.prototype._buildRegistryMap = function () {
        var _this = this;
        return this.mediaMonitor.breakpoints
            .map(function (bp) {
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])({}, bp, {
                baseKey: _this._options.baseKey,
                key: _this._options.baseKey + bp.suffix // e.g.  layoutGtSm, layoutMd, layoutGtLg
            });
        })
            .filter(function (bp) { return _this._keyInUse(bp.key); });
    };
    /**
     * Synchronizes change notifications with the current mq-activated @Input and calculates the
     * mq-activated input value or the default value
     */
    ResponsiveActivation.prototype._onMonitorEvents = function (change) {
        if (change.property == this._options.baseKey) {
            change.value = this._calculateActivatedValue(change);
            this._onMediaChanges(change);
        }
    };
    /**
     * Has the key been specified in the HTML markup and thus is intended
     * to participate in activation processes.
     */
    ResponsiveActivation.prototype._keyInUse = function (key) {
        return this._lookupKeyValue(key) !== undefined;
    };
    /**
     *  Map input key associated with mediaQuery activation to closest defined input key
     *  then return the values associated with the targeted input property
     *
     *  !! change events may arrive out-of-order (activate before deactivate)
     *     so make sure the deactivate is used ONLY when the keys match
     *     (since a different activate may be in use)
     */
    ResponsiveActivation.prototype._calculateActivatedValue = function (current) {
        var currentKey = this._options.baseKey + current.suffix; // e.g. suffix == 'GtSm',
        var newKey = this._activatedInputKey; // e.g. newKey == hideGtSm
        newKey = current.matches ? currentKey : ((newKey == currentKey) ? null : newKey);
        this._activatedInputKey = this._validateInputKey(newKey);
        return this.activatedInput;
    };
    /**
     * For the specified input property key, validate it is defined (used in the markup)
     * If not see if a overlapping mediaQuery-related input key fallback has been defined
     *
     * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)
     */
    ResponsiveActivation.prototype._validateInputKey = function (inputKey) {
        var _this = this;
        var items = this.mediaMonitor.activeOverlaps;
        var isMissingKey = function (key) { return !_this._keyInUse(key); };
        if (isMissingKey(inputKey)) {
            items.some(function (bp) {
                var key = _this._options.baseKey + bp.suffix;
                if (!isMissingKey(key)) {
                    inputKey = key;
                    return true; // exit .some()
                }
                return false;
            });
        }
        return inputKey;
    };
    /**
     * Get the value (if any) for the directive instances @Input property (aka key)
     */
    ResponsiveActivation.prototype._lookupKeyValue = function (key) {
        return this._options.inputKeys[key];
    };
    ResponsiveActivation.prototype._hasKeyValue = function (key) {
        var value = this._options.inputKeys[key];
        return typeof value !== 'undefined';
    };
    return ResponsiveActivation;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/responsive/responsive-activation.js.map

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__breakpoints_break_point_registry__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_break_points_provider__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__match_media__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_observable_media_service_provider__ = __webpack_require__(105);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MediaQueriesModule; });






/**
 * *****************************************************************
 * Define module for the MediaQuery API
 * *****************************************************************
 */
var MediaQueriesModule = (function () {
    function MediaQueriesModule() {
    }
    MediaQueriesModule.forRoot = function () {
        return {
            ngModule: MediaQueriesModule
        };
    };
    MediaQueriesModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                    providers: [
                        __WEBPACK_IMPORTED_MODULE_3__match_media__["a" /* MatchMedia */],
                        __WEBPACK_IMPORTED_MODULE_4__media_monitor__["a" /* MediaMonitor */],
                        __WEBPACK_IMPORTED_MODULE_1__breakpoints_break_point_registry__["a" /* BreakPointRegistry */],
                        __WEBPACK_IMPORTED_MODULE_2__providers_break_points_provider__["a" /* BreakPointsProvider */],
                        __WEBPACK_IMPORTED_MODULE_5__providers_observable_media_service_provider__["a" /* ObservableMediaServiceProvider */] // easy subscription injectable `media$` matchMedia observable
                    ]
                },] },
    ];
    /** @nocollapse */
    MediaQueriesModule.ctorParameters = function () { return []; };
    return MediaQueriesModule;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/_module.js.map

/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MediaChange; });
/**
 * Class instances emitted [to observers] for each mql notification
 */
var MediaChange = (function () {
    function MediaChange(matches, // Is the mq currently activated
        mediaQuery, // e.g.   (min-width: 600px) and (max-width: 959px)
        mqAlias, // e.g.   gt-sm, md, gt-lg
        suffix // e.g.   GtSM, Md, GtLg
        ) {
        if (matches === void 0) { matches = false; }
        if (mediaQuery === void 0) { mediaQuery = 'all'; }
        if (mqAlias === void 0) { mqAlias = ''; }
        if (suffix === void 0) { suffix = ''; }
        this.matches = matches;
        this.mediaQuery = mediaQuery;
        this.mqAlias = mqAlias;
        this.suffix = suffix;
    }
    return MediaChange;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/media-change.js.map

/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_media_service__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__breakpoints_break_point_registry__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__match_media__ = __webpack_require__(52);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObservableMediaServiceProvider; });



/**
 *  Provider to return observable to ALL MediaQuery events
 *  Developers should build custom providers to override this default MediaQuery Observable
 */
var ObservableMediaServiceProvider = {
    provide: __WEBPACK_IMPORTED_MODULE_0__observable_media_service__["a" /* ObservableMediaService */],
    useClass: __WEBPACK_IMPORTED_MODULE_0__observable_media_service__["b" /* MediaService */],
    deps: [__WEBPACK_IMPORTED_MODULE_2__match_media__["a" /* MatchMedia */], __WEBPACK_IMPORTED_MODULE_1__breakpoints_break_point_registry__["a" /* BreakPointRegistry */]]
};
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/providers/observable-media-service-provider.js.map

/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = applyCssPrefixes;
/* unused harmony export toAlignContentValue */
/* unused harmony export toBoxValue */
/* unused harmony export toBoxOrient */
/* unused harmony export toBoxDirection */
/* unused harmony export toBoxOrdinal */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Applies CSS prefixes to appropriate style keys.*/
function applyCssPrefixes(target) {
    for (var key in target) {
        var value = target[key];
        switch (key) {
            case 'display':
                target['display'] = value;
                // also need 'display : -webkit-box' and 'display : -ms-flexbox;'
                break;
            case 'flex':
                target['-ms-flex'] = value;
                target['-webkit-box-flex'] = value.split(" ")[0];
                break;
            case 'flex-direction':
                value = value || "row";
                target['flex-direction'] = value;
                target['-ms-flex-direction'] = value;
                target['-webkit-box-orient'] = toBoxOrient(value);
                target['-webkit-box-direction'] = toBoxDirection(value);
                break;
            case 'flex-wrap':
                target['-ms-flex-wrap'] = value;
                break;
            case 'order':
                if (isNaN(value)) {
                    value = "0";
                }
                target['order'] = value;
                target['-ms-flex-order'] = value;
                target['-webkit-box-ordinal-group'] = toBoxOrdinal(value);
                break;
            case 'justify-content':
                target['-ms-flex-pack'] = toBoxValue(value);
                target['-webkit-box-pack'] = toBoxValue(value);
                break;
            case 'align-items':
                target['-ms-flex-align'] = toBoxValue(value);
                target['-webkit-box-align'] = toBoxValue(value);
                break;
            case 'align-self':
                target['-ms-flex-item-align'] = toBoxValue(value);
                break;
            case 'align-content':
                target['-ms-align-content'] = toAlignContentValue(value);
                target['-ms-flex-line-pack'] = toAlignContentValue(value);
                break;
        }
    }
    return target;
}
function toAlignContentValue(value) {
    switch (value) {
        case "space-between":
            return "justify";
        case "space-around":
            return "distribute";
        default:
            return toBoxValue(value);
    }
}
/** Convert flex values flex-start, flex-end to start, end. */
function toBoxValue(value) {
    if (value === void 0) { value = ""; }
    return (value == 'flex-start') ? 'start' : ((value == 'flex-end') ? 'end' : value);
}
/** Convert flex Direction to Box orientation */
function toBoxOrient(flexDirection) {
    if (flexDirection === void 0) { flexDirection = 'row'; }
    return flexDirection.indexOf('column') === -1 ? 'horizontal' : 'vertical';
}
/** Convert flex Direction to Box direction type */
function toBoxDirection(flexDirection) {
    if (flexDirection === void 0) { flexDirection = 'row'; }
    return flexDirection.indexOf('reverse') !== -1 ? 'reverse' : 'normal';
}
/** Convert flex order to Box ordinal group */
function toBoxOrdinal(order) {
    if (order === void 0) { order = '0'; }
    var value = order ? parseInt(order) + 1 : 1;
    return isNaN(value) ? "0" : value.toString();
}
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/utils/auto-prefixer.js.map

/***/ }),
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.empty = {
    closed: true,
    next: function (value) { },
    error: function (err) { throw err; },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubjectSubscription = (function (_super) {
    __extends(SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        _super.call(this);
        this.subject = subject;
        this.subscriber = subscriber;
        this.closed = false;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(Subscription_1.Subscription));
exports.SubjectSubscription = SubjectSubscription;
//# sourceMappingURL=SubjectSubscription.js.map

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var forkJoin_1 = __webpack_require__(423);
Observable_1.Observable.forkJoin = forkJoin_1.forkJoin;
//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromEvent_1 = __webpack_require__(424);
Observable_1.Observable.fromEvent = fromEvent_1.fromEvent;
//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var interval_1 = __webpack_require__(427);
Observable_1.Observable.interval = interval_1.interval;
//# sourceMappingURL=interval.js.map

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var merge_1 = __webpack_require__(141);
Observable_1.Observable.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var of_1 = __webpack_require__(142);
Observable_1.Observable.of = of_1.of;
//# sourceMappingURL=of.js.map

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var auditTime_1 = __webpack_require__(436);
Observable_1.Observable.prototype.auditTime = auditTime_1.auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var catch_1 = __webpack_require__(143);
Observable_1.Observable.prototype.catch = catch_1._catch;
Observable_1.Observable.prototype._catch = catch_1._catch;
//# sourceMappingURL=catch.js.map

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var do_1 = __webpack_require__(453);
Observable_1.Observable.prototype.do = do_1._do;
Observable_1.Observable.prototype._do = do_1._do;
//# sourceMappingURL=do.js.map

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var finally_1 = __webpack_require__(458);
Observable_1.Observable.prototype.finally = finally_1._finally;
Observable_1.Observable.prototype._finally = finally_1._finally;
//# sourceMappingURL=finally.js.map

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var first_1 = __webpack_require__(149);
Observable_1.Observable.prototype.first = first_1.first;
//# sourceMappingURL=first.js.map

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var share_1 = __webpack_require__(155);
Observable_1.Observable.prototype.share = share_1.share;
//# sourceMappingURL=share.js.map

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var startWith_1 = __webpack_require__(488);
Observable_1.Observable.prototype.startWith = startWith_1.startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switchMap_1 = __webpack_require__(491);
Observable_1.Observable.prototype.switchMap = switchMap_1.switchMap;
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(7);
/**
 * @class ConnectableObservable<T>
 */
var ConnectableObservable = (function (_super) {
    __extends(ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        _super.call(this);
        this.source = source;
        this.subjectFactory = subjectFactory;
        this._refCount = 0;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            connection = this._connection = new Subscription_1.Subscription();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = Subscription_1.Subscription.EMPTY;
            }
            else {
                this._connection = connection;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return this.lift(new RefCountOperator(this));
    };
    return ConnectableObservable;
}(Observable_1.Observable));
exports.ConnectableObservable = ConnectableObservable;
exports.connectableObservableDescriptor = {
    operator: { value: null },
    _refCount: { value: 0, writable: true },
    _subscribe: { value: ConnectableObservable.prototype._subscribe },
    getSubject: { value: ConnectableObservable.prototype.getSubject },
    connect: { value: ConnectableObservable.prototype.connect },
    refCount: { value: ConnectableObservable.prototype.refCount }
};
var ConnectableSubscriber = (function (_super) {
    __extends(ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(Subject_1.SubjectSubscriber));
var RefCountOperator = (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = (function (_super) {
    __extends(RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        ///
        // Compare the local RefCountSubscriber's connection Subscription to the
        // connection Subscription on the shared ConnectableObservable. In cases
        // where the ConnectableObservable source synchronously emits values, and
        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
        // execution continues to here before the RefCountOperator has a chance to
        // supply the RefCountSubscriber with the shared connection Subscription.
        // For example:
        // ```
        // Observable.range(0, 10)
        //   .publish()
        //   .refCount()
        //   .take(5)
        //   .subscribe();
        // ```
        // In order to account for this case, RefCountSubscriber should only dispose
        // the ConnectableObservable's shared connection Subscription if the
        // connection Subscription exists, *and* either:
        //   a. RefCountSubscriber doesn't have a reference to the shared connection
        //      Subscription yet, or,
        //   b. RefCountSubscriber's connection Subscription reference is identical
        //      to the shared connection Subscription
        ///
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ConnectableObservable.js.map

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(19);
var isPromise_1 = __webpack_require__(168);
var PromiseObservable_1 = __webpack_require__(138);
var IteratorObservable_1 = __webpack_require__(407);
var ArrayObservable_1 = __webpack_require__(22);
var ArrayLikeObservable_1 = __webpack_require__(396);
var iterator_1 = __webpack_require__(47);
var Observable_1 = __webpack_require__(0);
var observeOn_1 = __webpack_require__(97);
var observable_1 = __webpack_require__(48);
var isArrayLike = (function (x) { return x && typeof x.length === 'number'; });
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromObservable = (function (_super) {
    __extends(FromObservable, _super);
    function FromObservable(ish, scheduler) {
        _super.call(this, null);
        this.ish = ish;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable from an Array, an array-like object, a Promise, an
     * iterable object, or an Observable-like object.
     *
     * <span class="informal">Converts almost anything to an Observable.</span>
     *
     * <img src="./img/from.png" width="100%">
     *
     * Convert various other objects and data types into Observables. `from`
     * converts a Promise or an array-like or an
     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)
     * object into an Observable that emits the items in that promise or array or
     * iterable. A String, in this context, is treated as an array of characters.
     * Observable-like objects (contains a function named with the ES2015 Symbol
     * for Observable) can also be converted through this operator.
     *
     * @example <caption>Converts an array to an Observable</caption>
     * var array = [10, 20, 30];
     * var result = Rx.Observable.from(array);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 10 20 30
     *
     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>
     * function* generateDoubles(seed) {
     *   var i = seed;
     *   while (true) {
     *     yield i;
     *     i = 2 * i; // double it
     *   }
     * }
     *
     * var iterator = generateDoubles(3);
     * var result = Rx.Observable.from(iterator).take(10);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 3 6 12 24 48 96 192 384 768 1536
     *
     * @see {@link create}
     * @see {@link fromEvent}
     * @see {@link fromEventPattern}
     * @see {@link fromPromise}
     *
     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an
     * Observable-like, an Array, an iterable or an array-like object to be
     * converted.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * emissions of values.
     * @return {Observable<T>} The Observable whose values are originally from the
     * input object that was converted.
     * @static true
     * @name from
     * @owner Observable
     */
    FromObservable.create = function (ish, scheduler) {
        if (ish != null) {
            if (typeof ish[observable_1.$$observable] === 'function') {
                if (ish instanceof Observable_1.Observable && !scheduler) {
                    return ish;
                }
                return new FromObservable(ish, scheduler);
            }
            else if (isArray_1.isArray(ish)) {
                return new ArrayObservable_1.ArrayObservable(ish, scheduler);
            }
            else if (isPromise_1.isPromise(ish)) {
                return new PromiseObservable_1.PromiseObservable(ish, scheduler);
            }
            else if (typeof ish[iterator_1.$$iterator] === 'function' || typeof ish === 'string') {
                return new IteratorObservable_1.IteratorObservable(ish, scheduler);
            }
            else if (isArrayLike(ish)) {
                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);
            }
        }
        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');
    };
    FromObservable.prototype._subscribe = function (subscriber) {
        var ish = this.ish;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            return ish[observable_1.$$observable]().subscribe(subscriber);
        }
        else {
            return ish[observable_1.$$observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));
        }
    };
    return FromObservable;
}(Observable_1.Observable));
exports.FromObservable = FromObservable;
//# sourceMappingURL=FromObservable.js.map

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(10);
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PromiseObservable = (function (_super) {
    __extends(PromiseObservable, _super);
    function PromiseObservable(promise, scheduler) {
        _super.call(this);
        this.promise = promise;
        this.scheduler = scheduler;
    }
    /**
     * Converts a Promise to an Observable.
     *
     * <span class="informal">Returns an Observable that just emits the Promise's
     * resolved value, then completes.</span>
     *
     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an
     * Observable. If the Promise resolves with a value, the output Observable
     * emits that resolved value as a `next`, and then completes. If the Promise
     * is rejected, then the output Observable emits the corresponding Error.
     *
     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>
     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindCallback}
     * @see {@link from}
     *
     * @param {Promise<T>} promise The promise to be converted.
     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling
     * the delivery of the resolved value (or the rejection).
     * @return {Observable<T>} An Observable which wraps the Promise.
     * @static true
     * @name fromPromise
     * @owner Observable
     */
    PromiseObservable.create = function (promise, scheduler) {
        return new PromiseObservable(promise, scheduler);
    };
    PromiseObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var promise = this.promise;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    subscriber.next(this.value);
                    subscriber.complete();
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.next(value);
                        subscriber.complete();
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.error(err);
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
        else {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
    };
    return PromiseObservable;
}(Observable_1.Observable));
exports.PromiseObservable = PromiseObservable;
function dispatchNext(arg) {
    var value = arg.value, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
    }
}
function dispatchError(arg) {
    var err = arg.err, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.error(err);
    }
}
//# sourceMappingURL=PromiseObservable.js.map

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(10);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(1);
var map_1 = __webpack_require__(63);
function getCORSRequest() {
    if (root_1.root.XMLHttpRequest) {
        var xhr = new root_1.root.XMLHttpRequest();
        if ('withCredentials' in xhr) {
            xhr.withCredentials = !!this.withCredentials;
        }
        return xhr;
    }
    else if (!!root_1.root.XDomainRequest) {
        return new root_1.root.XDomainRequest();
    }
    else {
        throw new Error('CORS is not supported by your browser');
    }
}
function getXMLHttpRequest() {
    if (root_1.root.XMLHttpRequest) {
        return new root_1.root.XMLHttpRequest();
    }
    else {
        var progId = void 0;
        try {
            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
            for (var i = 0; i < 3; i++) {
                try {
                    progId = progIds[i];
                    if (new root_1.root.ActiveXObject(progId)) {
                        break;
                    }
                }
                catch (e) {
                }
            }
            return new root_1.root.ActiveXObject(progId);
        }
        catch (e) {
            throw new Error('XMLHttpRequest is not supported by your browser');
        }
    }
}
function ajaxGet(url, headers) {
    if (headers === void 0) { headers = null; }
    return new AjaxObservable({ method: 'GET', url: url, headers: headers });
}
exports.ajaxGet = ajaxGet;
;
function ajaxPost(url, body, headers) {
    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });
}
exports.ajaxPost = ajaxPost;
;
function ajaxDelete(url, headers) {
    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });
}
exports.ajaxDelete = ajaxDelete;
;
function ajaxPut(url, body, headers) {
    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });
}
exports.ajaxPut = ajaxPut;
;
function ajaxGetJSON(url, headers) {
    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })
        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));
}
exports.ajaxGetJSON = ajaxGetJSON;
;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var AjaxObservable = (function (_super) {
    __extends(AjaxObservable, _super);
    function AjaxObservable(urlOrRequest) {
        _super.call(this);
        var request = {
            async: true,
            createXHR: function () {
                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();
            },
            crossDomain: false,
            withCredentials: false,
            headers: {},
            method: 'GET',
            responseType: 'json',
            timeout: 0
        };
        if (typeof urlOrRequest === 'string') {
            request.url = urlOrRequest;
        }
        else {
            for (var prop in urlOrRequest) {
                if (urlOrRequest.hasOwnProperty(prop)) {
                    request[prop] = urlOrRequest[prop];
                }
            }
        }
        this.request = request;
    }
    AjaxObservable.prototype._subscribe = function (subscriber) {
        return new AjaxSubscriber(subscriber, this.request);
    };
    /**
     * Creates an observable for an Ajax request with either a request object with
     * url, headers, etc or a string for a URL.
     *
     * @example
     * source = Rx.Observable.ajax('/products');
     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });
     *
     * @param {string|Object} request Can be one of the following:
     *   A string of the URL to make the Ajax call.
     *   An object with the following properties
     *   - url: URL of the request
     *   - body: The body of the request
     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE
     *   - async: Whether the request is async
     *   - headers: Optional headers
     *   - crossDomain: true if a cross domain request, else false
     *   - createXHR: a function to override if you need to use an alternate
     *   XMLHttpRequest implementation.
     *   - resultSelector: a function to use to alter the output value type of
     *   the Observable. Gets {@link AjaxResponse} as an argument.
     * @return {Observable} An observable sequence containing the XMLHttpRequest.
     * @static true
     * @name ajax
     * @owner Observable
    */
    AjaxObservable.create = (function () {
        var create = function (urlOrRequest) {
            return new AjaxObservable(urlOrRequest);
        };
        create.get = ajaxGet;
        create.post = ajaxPost;
        create.delete = ajaxDelete;
        create.put = ajaxPut;
        create.getJSON = ajaxGetJSON;
        return create;
    })();
    return AjaxObservable;
}(Observable_1.Observable));
exports.AjaxObservable = AjaxObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AjaxSubscriber = (function (_super) {
    __extends(AjaxSubscriber, _super);
    function AjaxSubscriber(destination, request) {
        _super.call(this, destination);
        this.request = request;
        this.done = false;
        var headers = request.headers = request.headers || {};
        // force CORS if requested
        if (!request.crossDomain && !headers['X-Requested-With']) {
            headers['X-Requested-With'] = 'XMLHttpRequest';
        }
        // ensure content type is set
        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {
            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
        }
        // properly serialize body
        request.body = this.serializeBody(request.body, request.headers['Content-Type']);
        this.send();
    }
    AjaxSubscriber.prototype.next = function (e) {
        this.done = true;
        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;
        var response = new AjaxResponse(e, xhr, request);
        destination.next(response);
    };
    AjaxSubscriber.prototype.send = function () {
        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;
        var createXHR = request.createXHR;
        var xhr = tryCatch_1.tryCatch(createXHR).call(request);
        if (xhr === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            this.xhr = xhr;
            // set up the events before open XHR
            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest
            // You need to add the event listeners before calling open() on the request.
            // Otherwise the progress events will not fire.
            this.setupEvents(xhr, request);
            // open XHR
            var result = void 0;
            if (user) {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);
            }
            else {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);
            }
            if (result === errorObject_1.errorObject) {
                this.error(errorObject_1.errorObject.e);
                return null;
            }
            // timeout and responseType can be set once the XHR is open
            xhr.timeout = request.timeout;
            xhr.responseType = request.responseType;
            // set headers
            this.setHeaders(xhr, headers);
            // finally send the request
            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);
            if (result === errorObject_1.errorObject) {
                this.error(errorObject_1.errorObject.e);
                return null;
            }
        }
        return xhr;
    };
    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {
        if (!body || typeof body === 'string') {
            return body;
        }
        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {
            return body;
        }
        if (contentType) {
            var splitIndex = contentType.indexOf(';');
            if (splitIndex !== -1) {
                contentType = contentType.substring(0, splitIndex);
            }
        }
        switch (contentType) {
            case 'application/x-www-form-urlencoded':
                return Object.keys(body).map(function (key) { return (encodeURI(key) + "=" + encodeURI(body[key])); }).join('&');
            case 'application/json':
                return JSON.stringify(body);
            default:
                return body;
        }
    };
    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {
        for (var key in headers) {
            if (headers.hasOwnProperty(key)) {
                xhr.setRequestHeader(key, headers[key]);
            }
        }
    };
    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {
        var progressSubscriber = request.progressSubscriber;
        function xhrTimeout(e) {
            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (progressSubscriber) {
                progressSubscriber.error(e);
            }
            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.
        }
        ;
        xhr.ontimeout = xhrTimeout;
        xhrTimeout.request = request;
        xhrTimeout.subscriber = this;
        xhrTimeout.progressSubscriber = progressSubscriber;
        if (xhr.upload && 'withCredentials' in xhr) {
            if (progressSubscriber) {
                var xhrProgress_1;
                xhrProgress_1 = function (e) {
                    var progressSubscriber = xhrProgress_1.progressSubscriber;
                    progressSubscriber.next(e);
                };
                if (root_1.root.XDomainRequest) {
                    xhr.onprogress = xhrProgress_1;
                }
                else {
                    xhr.upload.onprogress = xhrProgress_1;
                }
                xhrProgress_1.progressSubscriber = progressSubscriber;
            }
            var xhrError_1;
            xhrError_1 = function (e) {
                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;
                if (progressSubscriber) {
                    progressSubscriber.error(e);
                }
                subscriber.error(new AjaxError('ajax error', this, request));
            };
            xhr.onerror = xhrError_1;
            xhrError_1.request = request;
            xhrError_1.subscriber = this;
            xhrError_1.progressSubscriber = progressSubscriber;
        }
        function xhrReadyStateChange(e) {
            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (this.readyState === 4) {
                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
                var status_1 = this.status === 1223 ? 204 : this.status;
                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);
                // fix status code when it is 0 (0 status is undocumented).
                // Occurs when accessing file resources or on Android 4.1 stock browser
                // while retrieving files from application cache.
                if (status_1 === 0) {
                    status_1 = response ? 200 : 0;
                }
                if (200 <= status_1 && status_1 < 300) {
                    if (progressSubscriber) {
                        progressSubscriber.complete();
                    }
                    subscriber.next(e);
                    subscriber.complete();
                }
                else {
                    if (progressSubscriber) {
                        progressSubscriber.error(e);
                    }
                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));
                }
            }
        }
        ;
        xhr.onreadystatechange = xhrReadyStateChange;
        xhrReadyStateChange.subscriber = this;
        xhrReadyStateChange.progressSubscriber = progressSubscriber;
        xhrReadyStateChange.request = request;
    };
    AjaxSubscriber.prototype.unsubscribe = function () {
        var _a = this, done = _a.done, xhr = _a.xhr;
        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {
            xhr.abort();
        }
        _super.prototype.unsubscribe.call(this);
    };
    return AjaxSubscriber;
}(Subscriber_1.Subscriber));
exports.AjaxSubscriber = AjaxSubscriber;
/**
 * A normalized AJAX response.
 *
 * @see {@link ajax}
 *
 * @class AjaxResponse
 */
var AjaxResponse = (function () {
    function AjaxResponse(originalEvent, xhr, request) {
        this.originalEvent = originalEvent;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        switch (this.responseType) {
            case 'json':
                if ('response' in xhr) {
                    //IE does not support json as responseType, parse it internally
                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');
                }
                else {
                    this.response = JSON.parse(xhr.responseText || 'null');
                }
                break;
            case 'xml':
                this.response = xhr.responseXML;
                break;
            case 'text':
            default:
                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;
                break;
        }
    }
    return AjaxResponse;
}());
exports.AjaxResponse = AjaxResponse;
/**
 * A normalized AJAX error.
 *
 * @see {@link ajax}
 *
 * @class AjaxError
 */
var AjaxError = (function (_super) {
    __extends(AjaxError, _super);
    function AjaxError(message, xhr, request) {
        _super.call(this, message);
        this.message = message;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
    }
    return AjaxError;
}(Error));
exports.AjaxError = AjaxError;
/**
 * @see {@link ajax}
 *
 * @class AjaxTimeoutError
 */
var AjaxTimeoutError = (function (_super) {
    __extends(AjaxTimeoutError, _super);
    function AjaxTimeoutError(xhr, request) {
        _super.call(this, 'ajax timeout', xhr, request);
    }
    return AjaxTimeoutError;
}(AjaxError));
exports.AjaxTimeoutError = AjaxTimeoutError;
//# sourceMappingURL=AjaxObservable.js.map

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromObservable_1 = __webpack_require__(137);
exports.from = FromObservable_1.FromObservable.create;
//# sourceMappingURL=from.js.map

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var merge_1 = __webpack_require__(151);
exports.merge = merge_1.mergeStatic;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayObservable_1 = __webpack_require__(22);
exports.of = ArrayObservable_1.ArrayObservable.of;
//# sourceMappingURL=of.js.map

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 *
 * <img src="./img/catch.png" width="100%">
 *
 * @example <caption>Continues with a different Observable when there's an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n == 4) {
 * 	     throw 'four!';
 *     }
 *	   return n;
 *   })
 *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, I, II, III, IV, V
 *
 * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n === 4) {
 * 	     throw 'four!';
 *     }
 * 	   return n;
 *   })
 *   .catch((err, caught) => caught)
 *   .take(30)
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, 1, 2, 3, ...
 *
 * @example <caption>Throws a new error when the source Observable throws an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 *     if (n == 4) {
 *       throw 'four!';
 *     }
 *     return n;
 *   })
 *   .catch(err => {
 *     throw 'error in source. Details: ' + err;
 *   })
 *   .subscribe(
 *     x => console.log(x),
 *     err => console.log(err)
 *   );
 *   // 1, 2, 3, error in source. Details: four!
 *
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} an observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @method catch
 * @name catch
 * @owner Observable
 */
function _catch(selector) {
    var operator = new CatchOperator(selector);
    var caught = this.lift(operator);
    return (operator.caught = caught);
}
exports._catch = _catch;
var CatchOperator = (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CatchSubscriber = (function (_super) {
    __extends(CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        _super.call(this, destination);
        this.selector = selector;
        this.caught = caught;
    }
    // NOTE: overriding `error` instead of `_error` because we don't want
    // to have this flag this subscriber as `isStopped`. We can mimic the
    // behavior of the RetrySubscriber (from the `retry` operator), where
    // we unsubscribe from our source chain, reset our Subscriber flags,
    // then subscribe to the selector result.
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this.unsubscribe();
            this.closed = false;
            this.isStopped = false;
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    };
    return CatchSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=catch.js.map

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeAll_1 = __webpack_require__(44);
/* tslint:disable:max-line-length */
/**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */
function concatAll() {
    return this.lift(new mergeAll_1.MergeAllOperator(1));
}
exports.concatAll = concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMap_1 = __webpack_require__(96);
/* tslint:disable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} an observable of values merged from the projected
 * Observables as they were subscribed to, one at a time. Optionally, these
 * values may have been projected from a passed `projectResult` argument.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */
function concatMap(project, resultSelector) {
    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));
}
exports.concatMap = concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)
 *   .distinctUntilChanged()
 *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4
 *
 * @example <caption>An example using a compare function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} an Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */
function distinctUntilChanged(compare, keySelector) {
    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));
}
exports.distinctUntilChanged = distinctUntilChanged;
var DistinctUntilChangedOperator = (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctUntilChangedSubscriber = (function (_super) {
    __extends(DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.hasKey = false;
        if (typeof compare === 'function') {
            this.compare = compare;
        }
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var keySelector = this.keySelector;
        var key = value;
        if (keySelector) {
            key = tryCatch_1.tryCatch(this.keySelector)(value);
            if (key === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        var result = false;
        if (this.hasKey) {
            result = tryCatch_1.tryCatch(this.compare)(this.key, key);
            if (result === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        else {
            this.hasKey = true;
        }
        if (Boolean(result) === false) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 *
 * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>
 *  Observable.of(1, 2, 3, 4, 5, 6)
 *     .every(x => x < 5)
 *     .subscribe(x => console.log(x)); // -> false
 *
 * @param {function} predicate a function for determining if an item meets a specified condition.
 * @param {any} [thisArg] optional object to use for `this` in the callback
 * @return {Observable} an Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */
function every(predicate, thisArg) {
    return this.lift(new EveryOperator(predicate, thisArg, this));
}
exports.every = every;
var EveryOperator = (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var EverySubscriber = (function (_super) {
    __extends(EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
        this.index = 0;
        this.thisArg = thisArg || this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=every.js.map

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:disable:max-line-length */
/**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */
function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return this.lift(new FindValueOperator(predicate, this, false, thisArg));
}
exports.find = find;
var FindValueOperator = (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());
exports.FindValueOperator = FindValueOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FindValueSubscriber = (function (_super) {
    __extends(FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
        this.index = 0;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(Subscriber_1.Subscriber));
exports.FindValueSubscriber = FindValueSubscriber;
//# sourceMappingURL=find.js.map

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyError_1 = __webpack_require__(49);
/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} an Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */
function first(predicate, resultSelector, defaultValue) {
    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));
}
exports.first = first;
var FirstOperator = (function () {
    function FirstOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    FirstOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return FirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FirstSubscriber = (function (_super) {
    __extends(FirstSubscriber, _super);
    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.index = 0;
        this.hasCompleted = false;
        this._emitted = false;
    }
    FirstSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._emit = function (value, index) {
        if (this.resultSelector) {
            this._tryResultSelector(value, index);
            return;
        }
        this._emitFinal(value);
    };
    FirstSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this._emitFinal(result);
    };
    FirstSubscriber.prototype._emitFinal = function (value) {
        var destination = this.destination;
        if (!this._emitted) {
            this._emitted = true;
            destination.next(value);
            destination.complete();
            this.hasCompleted = true;
        }
    };
    FirstSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {
            destination.next(this.defaultValue);
            destination.complete();
        }
        else if (!this.hasCompleted) {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return FirstSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=first.js.map

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyError_1 = __webpack_require__(49);
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} predicate - the condition any source emitted item has to satisfy.
 * @return {Observable} an Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 * @method last
 * @owner Observable
 */
function last(predicate, resultSelector, defaultValue) {
    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));
}
exports.last = last;
var LastOperator = (function () {
    function LastOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    LastOperator.prototype.call = function (observer, source) {
        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return LastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var LastSubscriber = (function (_super) {
    __extends(LastSubscriber, _super);
    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.hasValue = false;
        this.index = 0;
        if (typeof defaultValue !== 'undefined') {
            this.lastValue = defaultValue;
            this.hasValue = true;
        }
    }
    LastSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.lastValue = result;
        this.hasValue = true;
    };
    LastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.hasValue) {
            destination.next(this.lastValue);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return LastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=last.js.map

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayObservable_1 = __webpack_require__(22);
var mergeAll_1 = __webpack_require__(44);
var isScheduler_1 = __webpack_require__(26);
/* tslint:disable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (either the source or an
 * Observable given as argument), and simply forwards (without doing any
 * transformation) all the values from all the input Observables to the output
 * Observable. The output Observable only completes once all input Observables
 * have completed. Any error delivered by an input Observable will be immediately
 * emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = clicks.merge(timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = timer1.merge(timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {Observable} other An input Observable to merge with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @method merge
 * @owner Observable
 */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return this.lift.call(mergeStatic.apply(void 0, [this].concat(observables)));
}
exports.merge = merge;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (as arguments), and simply
 * forwards (without doing any transformation) all the values from all the input
 * Observables to the output Observable. The output Observable only completes
 * once all input Observables have completed. Any error delivered by an input
 * Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = Rx.Observable.merge(clicks, timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // timer will emit ascending values, one every second(1000ms) to console
 * // clicks logs MouseEvents to console everytime the "document" is clicked
 * // Since the two streams are merged you see these happening
 * // as they occur.
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - First timer1 and timer2 will run concurrently
 * // - timer1 will emit a value every 1000ms for 10 iterations
 * // - timer2 will emit a value every 2000ms for 6 iterations
 * // - after timer1 hits it's max iteration, timer2 will
 * //   continue, and timer3 will start to run concurrently with timer2
 * // - when timer2 hits it's max iteration it terminates, and
 * //   timer3 will continue to emit a value every 500ms until it is complete
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {...Observable} observables Input Observables to merge together.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @static true
 * @name merge
 * @owner Observable
 */
function mergeStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (isScheduler_1.isScheduler(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1) {
        return observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));
}
exports.mergeStatic = mergeStatic;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {Observable} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable.
 * @method mergeMapTo
 * @owner Observable
 */
function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
        resultSelector = null;
    }
    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));
}
exports.mergeMapTo = mergeMapTo;
// TODO: Figure out correct signature here: an Operator<Observable<T>, R>
//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>
var MergeMapToOperator = (function () {
    function MergeMapToOperator(ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapToOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));
    };
    return MergeMapToOperator;
}());
exports.MergeMapToOperator = MergeMapToOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapToSubscriber = (function (_super) {
    __extends(MergeMapToSubscriber, _super);
    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapToSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var resultSelector = this.resultSelector;
            var index = this.index++;
            var ish = this.ish;
            var destination = this.destination;
            this.active++;
            this._innerSub(ish, destination, resultSelector, value, index);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapToSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    MergeMapToSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapToSubscriber = MergeMapToSubscriber;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var FromObservable_1 = __webpack_require__(137);
var isArray_1 = __webpack_require__(19);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return this.lift(new OnErrorResumeNextOperator(nextSources));
}
exports.onErrorResumeNext = onErrorResumeNext;
/* tslint:enable:max-line-length */
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    var source = null;
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;
var OnErrorResumeNextOperator = (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = (function (_super) {
    __extends(OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        _super.call(this, destination);
        this.destination = destination;
        this.nextSources = nextSources;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (next) {
            this.add(subscribeToResult_1.subscribeToResult(this, next));
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(19);
var ArrayObservable_1 = __webpack_require__(22);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables
 * @param {...Observables} ...observables sources used to race for which Observable emits first.
 * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    // if the only argument is an array, it was most likely called with
    // `pair([obs1, obs2, ...])`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0];
    }
    return this.lift.call(raceStatic.apply(void 0, [this].concat(observables)));
}
exports.race = race;
function raceStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    // if the only argument is an array, it was most likely called with
    // `pair([obs1, obs2, ...])`
    if (observables.length === 1) {
        if (isArray_1.isArray(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());
}
exports.raceStatic = raceStatic;
var RaceOperator = (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());
exports.RaceOperator = RaceOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RaceSubscriber = (function (_super) {
    __extends(RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        _super.call(this, destination);
        this.hasFirst = false;
        this.observables = [];
        this.subscriptions = [];
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.RaceSubscriber = RaceSubscriber;
//# sourceMappingURL=race.js.map

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var multicast_1 = __webpack_require__(33);
var Subject_1 = __webpack_require__(6);
function shareSubjectFactory() {
    return new Subject_1.Subject();
}
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 * This is an alias for .publish().refCount().
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers
 * @method share
 * @owner Observable
 */
function share() {
    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();
}
exports.share = share;
;
//# sourceMappingURL=share.js.map

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(14);
/**
 * @param scheduler
 * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timeInterval
 * @owner Observable
 */
function timeInterval(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new TimeIntervalOperator(scheduler));
}
exports.timeInterval = timeInterval;
var TimeInterval = (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());
exports.TimeInterval = TimeInterval;
;
var TimeIntervalOperator = (function () {
    function TimeIntervalOperator(scheduler) {
        this.scheduler = scheduler;
    }
    TimeIntervalOperator.prototype.call = function (observer, source) {
        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));
    };
    return TimeIntervalOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeIntervalSubscriber = (function (_super) {
    __extends(TimeIntervalSubscriber, _super);
    function TimeIntervalSubscriber(destination, scheduler) {
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.lastTime = 0;
        this.lastTime = scheduler.now();
    }
    TimeIntervalSubscriber.prototype._next = function (value) {
        var now = this.scheduler.now();
        var span = now - this.lastTime;
        this.lastTime = now;
        this.destination.next(new TimeInterval(value, span));
    };
    return TimeIntervalSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(14);
/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */
function timestamp(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new TimestampOperator(scheduler));
}
exports.timestamp = timestamp;
var Timestamp = (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());
exports.Timestamp = Timestamp;
;
var TimestampOperator = (function () {
    function TimestampOperator(scheduler) {
        this.scheduler = scheduler;
    }
    TimestampOperator.prototype.call = function (observer, source) {
        return source.subscribe(new TimestampSubscriber(observer, this.scheduler));
    };
    return TimestampOperator;
}());
var TimestampSubscriber = (function (_super) {
    __extends(TimestampSubscriber, _super);
    function TimestampSubscriber(destination, scheduler) {
        _super.call(this, destination);
        this.scheduler = scheduler;
    }
    TimestampSubscriber.prototype._next = function (value) {
        var now = this.scheduler.now();
        this.destination.next(new Timestamp(value, now));
    };
    return TimestampSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
/* tslint:disable:max-line-length */
/**
 * Converts an Observable sequence to a ES2015 compliant promise.
 *
 * @example
 * // Using normal ES2015
 * let source = Rx.Observable
 *   .just(42)
 *   .toPromise();
 *
 * source.then((value) => console.log('Value: %s', value));
 * // => Value: 42
 *
 * // Rejected Promise
 * // Using normal ES2015
 * let source = Rx.Observable
 *   .throw(new Error('woops'))
 *   .toPromise();
 *
 * source
 *   .then((value) => console.log('Value: %s', value))
 *   .catch((err) => console.log('Error: %s', err));
 * // => Error: Error: woops
 *
 * // Setting via the config
 * Rx.config.Promise = RSVP.Promise;
 *
 * let source = Rx.Observable
 *   .of(42)
 *   .toPromise();
 *
 * source.then((value) => console.log('Value: %s', value));
 * // => Value: 42
 *
 * // Setting via the method
 * let source = Rx.Observable
 *   .just(42)
 *   .toPromise(RSVP.Promise);
 *
 * source.then((value) => console.log('Value: %s', value));
 * // => Value: 42
 *
 * @param PromiseCtor promise The constructor of the promise. If not provided,
 * it will look for a constructor first in Rx.config.Promise then fall back to
 * the native Promise constructor if available.
 * @return {Promise<T>} An ES2015 compatible promise with the last value from
 * the observable sequence.
 * @method toPromise
 * @owner Observable
 */
function toPromise(PromiseCtor) {
    var _this = this;
    if (!PromiseCtor) {
        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
            PromiseCtor = root_1.root.Rx.config.Promise;
        }
        else if (root_1.root.Promise) {
            PromiseCtor = root_1.root.Promise;
        }
    }
    if (!PromiseCtor) {
        throw new Error('no Promise impl found');
    }
    return new PromiseCtor(function (resolve, reject) {
        var value;
        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
    });
}
exports.toPromise = toPromise;
//# sourceMappingURL=toPromise.js.map

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(45);
var AsyncScheduler_1 = __webpack_require__(46);
var VirtualTimeScheduler = (function (_super) {
    __extends(VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        var _this = this;
        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }
        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }
        _super.call(this, SchedulerAction, function () { return _this.frame; });
        this.maxFrames = maxFrames;
        this.frame = 0;
        this.index = -1;
    }
    /**
     * Prompt the Scheduler to execute all of its queued actions, therefore
     * clearing its queue.
     * @return {void}
     */
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.VirtualTimeScheduler = VirtualTimeScheduler;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var VirtualAction = (function (_super) {
    __extends(VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) { index = scheduler.index += 1; }
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.index = index;
        this.index = scheduler.index = index;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (!this.id) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        // If an action is rescheduled, we save allocations by mutating its state,
        // pushing it to the end of the scheduler queue, and recycling the action.
        // But since the VirtualTimeScheduler is used for testing, VirtualActions
        // must be immutable so they can be inspected later.
        var action = new VirtualAction(this.scheduler, this.work);
        this.add(action);
        return action.schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return undefined;
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(AsyncAction_1.AsyncAction));
exports.VirtualAction = VirtualAction;
//# sourceMappingURL=VirtualTimeScheduler.js.map

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsapAction_1 = __webpack_require__(512);
var AsapScheduler_1 = __webpack_require__(513);
exports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);
//# sourceMappingURL=asap.js.map

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var QueueAction_1 = __webpack_require__(514);
var QueueScheduler_1 = __webpack_require__(515);
exports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);
//# sourceMappingURL=queue.js.map

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscriptionLog = (function () {
    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {
        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }
        this.subscribedFrame = subscribedFrame;
        this.unsubscribedFrame = unsubscribedFrame;
    }
    return SubscriptionLog;
}());
exports.SubscriptionLog = SubscriptionLog;
//# sourceMappingURL=SubscriptionLog.js.map

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscriptionLog_1 = __webpack_require__(162);
var SubscriptionLoggable = (function () {
    function SubscriptionLoggable() {
        this.subscriptions = [];
    }
    SubscriptionLoggable.prototype.logSubscribedFrame = function () {
        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));
        return this.subscriptions.length - 1;
    };
    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {
        var subscriptionLogs = this.subscriptions;
        var oldSubscriptionLog = subscriptionLogs[index];
        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());
    };
    return SubscriptionLoggable;
}());
exports.SubscriptionLoggable = SubscriptionLoggable;
//# sourceMappingURL=SubscriptionLoggable.js.map

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when duetime elapses.
 *
 * @see {@link timeout}
 *
 * @class TimeoutError
 */
var TimeoutError = (function (_super) {
    __extends(TimeoutError, _super);
    function TimeoutError() {
        var err = _super.call(this, 'Timeout has occurred');
        this.name = err.name = 'TimeoutError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return TimeoutError;
}(Error));
exports.TimeoutError = TimeoutError;
//# sourceMappingURL=TimeoutError.js.map

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */
var UnsubscriptionError = (function (_super) {
    __extends(UnsubscriptionError, _super);
    function UnsubscriptionError(errors) {
        _super.call(this);
        this.errors = errors;
        var err = Error.call(this, errors ?
            errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) { return ((i + 1) + ") " + err.toString()); }).join('\n  ') : '');
        this.name = err.name = 'UnsubscriptionError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return UnsubscriptionError;
}(Error));
exports.UnsubscriptionError = UnsubscriptionError;
//# sourceMappingURL=UnsubscriptionError.js.map

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function applyMixins(derivedCtor, baseCtors) {
    for (var i = 0, len = baseCtors.length; i < len; i++) {
        var baseCtor = baseCtors[i];
        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);
        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {
            var name_1 = propertyKeys[j];
            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];
        }
    }
}
exports.applyMixins = applyMixins;
//# sourceMappingURL=applyMixins.js.map

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isObject(x) {
    return x != null && typeof x === 'object';
}
exports.isObject = isObject;
//# sourceMappingURL=isObject.js.map

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isPromise(value) {
    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
exports.isPromise = isPromise;
//# sourceMappingURL=isPromise.js.map

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* tslint:disable:no-empty */
function noop() { }
exports.noop = noop;
//# sourceMappingURL=noop.js.map

/***/ }),
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export AUTO_STYLE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return animate; });
/* unused harmony export group */
/* unused harmony export keyframes */
/* unused harmony export sequence */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return state; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return style; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return trigger; });
/* unused harmony export AnimationPlayer */
/* unused harmony export NoopAnimationPlayer */
/* unused harmony export ɵAnimationGroupPlayer */
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * @experimental Animation support is experimental.
 */var/** @type {?} */AUTO_STYLE='*';/**
 * `trigger` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `trigger` Creates an animation trigger which will a list of {\@link state state} and {\@link
 * transition transition} entries that will be evaluated when the expression bound to the trigger
 * changes.
 *
 * Triggers are registered within the component annotation data under the {\@link
 * Component#animations-anchor animations section}. An animation trigger can be placed on an element
 * within a template by referencing the name of the trigger followed by the expression value that the
 * trigger is bound to (in the form of `[\@triggerName]="expression"`.
 *
 * ### Usage
 *
 * `trigger` will create an animation trigger reference based on the provided `name` value. The
 * provided `animation` value is expected to be an array consisting of {\@link state state} and {\@link
 * transition transition} declarations.
 *
 * ```typescript
 * \@Component({
 *   selector: 'my-component',
 *   templateUrl: 'my-component-tpl.html',
 *   animations: [
 *     trigger("myAnimationTrigger", [
 *       state(...),
 *       state(...),
 *       transition(...),
 *       transition(...)
 *     ])
 *   ]
 * })
 * class MyComponent {
 *   myStatusExp = "something";
 * }
 * ```
 *
 * The template associated with this component will make use of the `myAnimationTrigger` animation
 * trigger by binding to an element within its template code.
 *
 * ```html
 * <!-- somewhere inside of my-component-tpl.html -->
 * <div [\@myAnimationTrigger]="myStatusExp">...</div>
 * tools/gulp-tasks/validate-commit-message.js ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} name
 * @param {?} definitions
 * @return {?}
 */function trigger(name,definitions){return{name:name,definitions:definitions};}/**
 * `animate` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `animate` specifies an animation step that will apply the provided `styles` data for a given
 * amount of time based on the provided `timing` expression value. Calls to `animate` are expected
 * to be used within {\@link sequence an animation sequence}, {\@link group group}, or {\@link
 * transition transition}.
 *
 * ### Usage
 *
 * The `animate` function accepts two input parameters: `timing` and `styles`:
 *
 * - `timing` is a string based value that can be a combination of a duration with optional delay
 * and easing values. The format for the expression breaks down to `duration delay easing`
 * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,
 * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the
 * `duration` value in millisecond form.
 * - `styles` is the style input data which can either be a call to {\@link style style} or {\@link
 * keyframes keyframes}. If left empty then the styles from the destination state will be collected
 * and used (this is useful when describing an animation step that will complete an animation by
 * {\@link transition#the-final-animate-call animating to the final state}).
 *
 * ```typescript
 * // various functions for specifying timing data
 * animate(500, style(...))
 * animate("1s", style(...))
 * animate("100ms 0.5s", style(...))
 * animate("5s ease", style(...))
 * animate("5s 10ms cubic-bezier(.17,.67,.88,.1)", style(...))
 *
 * // either style() of keyframes() can be used
 * animate(500, style({ background: "red" }))
 * animate(500, keyframes([
 *   style({ background: "blue" })),
 *   style({ background: "red" }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} timings
 * @param {?=} styles
 * @return {?}
 */function animate(timings){var styles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return{type:4/* Animate */,styles:styles,timings:timings};}/**
 * `group` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are
 * useful when a series of styles must be animated/closed off at different statrting/ending times.
 *
 * The `group` function can either be used within a {\@link sequence sequence} or a {\@link transition
 * transition} and it will only continue to the next instruction once all of the inner animation
 * steps have completed.
 *
 * ### Usage
 *
 * The `steps` data that is passed into the `group` animation function can either consist of {\@link
 * style style} or {\@link animate animate} function calls. Each call to `style()` or `animate()`
 * within a group will be executed instantly (use {\@link keyframes keyframes} or a {\@link
 * animate#usage animate() with a delay value} to offset styles to be applied at a later time).
 *
 * ```typescript
 * group([
 *   animate("1s", { background: "black" }))
 *   animate("2s", { color: "white" }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} steps
 * @return {?}
 */function group(steps){return{type:3/* Group */,steps:steps};}/**
 * `sequence` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by
 * default when an array is passed as animation data into {\@link transition transition}.)
 *
 * The `sequence` function can either be used within a {\@link group group} or a {\@link transition
 * transition} and it will only continue to the next instruction once each of the inner animation
 * steps have completed.
 *
 * To perform animation styling in parallel with other animation steps then have a look at the
 * {\@link group group} animation function.
 *
 * ### Usage
 *
 * The `steps` data that is passed into the `sequence` animation function can either consist of
 * {\@link style style} or {\@link animate animate} function calls. A call to `style()` will apply the
 * provided styling data immediately while a call to `animate()` will apply its styling data over a
 * given time depending on its timing data.
 *
 * ```typescript
 * sequence([
 *   style({ opacity: 0 })),
 *   animate("1s", { opacity: 1 }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} steps
 * @return {?}
 */function sequence(steps){return{type:2/* Sequence */,steps:steps};}/**
 * `style` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `style` declares a key/value object containing CSS properties/styles that can then be used for
 * {\@link state animation states}, within an {\@link sequence animation sequence}, or as styling data
 * for both {\@link animate animate} and {\@link keyframes keyframes}.
 *
 * ### Usage
 *
 * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs
 * to be defined.
 *
 * ```typescript
 * // string values are used for css properties
 * style({ background: "red", color: "blue" })
 *
 * // numerical (pixel) values are also supported
 * style({ width: 100, height: 0 })
 * ```
 *
 * #### Auto-styles (using `*`)
 *
 * When an asterix (`*`) character is used as a value then it will be detected from the element
 * being animated and applied as animation data when the animation starts.
 *
 * This feature proves useful for a state depending on layout and/or environment factors; in such
 * cases the styles are calculated just before the animation starts.
 *
 * ```typescript
 * // the steps below will animate from 0 to the
 * // actual height of the element
 * style({ height: 0 }),
 * animate("1s", style({ height: "*" }))
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} tokens
 * @return {?}
 */function style(tokens){var/** @type {?} */input=void 0;var/** @type {?} */offset=null;if(Array.isArray(tokens)){input=tokens;}else{input=[/** @type {?} */tokens];}input.forEach(function(entry){var/** @type {?} */entryOffset=entry['offset'];if(entryOffset!=null){offset=offset==null?parseFloat(/** @type {?} */entryOffset):offset;}});return _style(offset,input);}/**
 * @param {?} offset
 * @param {?} styles
 * @return {?}
 */function _style(offset,styles){return{type:6/* Style */,styles:styles,offset:offset};}/**
 * `state` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `state` declares an animation state within the given trigger. When a state is active within a
 * component then its associated styles will persist on the element that the trigger is attached to
 * (even when the animation ends).
 *
 * To animate between states, have a look at the animation {\@link transition transition} DSL
 * function. To register states to an animation trigger please have a look at the {\@link trigger
 * trigger} function.
 *
 * #### The `void` state
 *
 * The `void` state value is a reserved word that angular uses to determine when the element is not
 * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the
 * associated element is void).
 *
 * #### The `*` (default) state
 *
 * The `*` state (when styled) is a fallback state that will be used if the state that is being
 * animated is not declared within the trigger.
 *
 * ### Usage
 *
 * `state` will declare an animation state with its associated styles
 * within the given trigger.
 *
 * - `stateNameExpr` can be one or more state names separated by commas.
 * - `styles` refers to the {\@link style styling data} that will be persisted on the element once
 * the state has been reached.
 *
 * ```typescript
 * // "void" is a reserved name for a state and is used to represent
 * // the state in which an element is detached from from the application.
 * state("void", style({ height: 0 }))
 *
 * // user-defined states
 * state("closed", style({ height: 0 }))
 * state("open, visible", style({ height: "*" }))
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} name
 * @param {?} styles
 * @return {?}
 */function state(name,styles){return{type:0/* State */,name:name,styles:styles};}/**
 * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `keyframes` specifies a collection of {\@link style style} entries each optionally characterized
 * by an `offset` value.
 *
 * ### Usage
 *
 * The `keyframes` animation function is designed to be used alongside the {\@link animate animate}
 * animation function. Instead of applying animations from where they are currently to their
 * destination, keyframes can describe how each style entry is applied and at what point within the
 * animation arc (much like CSS Keyframe Animations do).
 *
 * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what
 * percentage of the animate time the styles will be applied.
 *
 * ```typescript
 * // the provided offset values describe when each backgroundColor value is applied.
 * animate("5s", keyframes([
 *   style({ backgroundColor: "red", offset: 0 }),
 *   style({ backgroundColor: "blue", offset: 0.2 }),
 *   style({ backgroundColor: "orange", offset: 0.3 }),
 *   style({ backgroundColor: "black", offset: 1 })
 * ]))
 * ```
 *
 * Alternatively, if there are no `offset` values used within the style entries then the offsets
 * will be calculated automatically.
 *
 * ```typescript
 * animate("5s", keyframes([
 *   style({ backgroundColor: "red" }) // offset = 0
 *   style({ backgroundColor: "blue" }) // offset = 0.33
 *   style({ backgroundColor: "orange" }) // offset = 0.66
 *   style({ backgroundColor: "black" }) // offset = 1
 * ]))
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} steps
 * @return {?}
 */function keyframes(steps){return{type:5/* KeyframeSequence */,steps:steps};}/**
 * `transition` is an animation-specific function that is designed to be used inside of Angular2's
 * animation DSL language. If this information is new, please navigate to the {\@link
 * Component#animations-anchor component animations metadata page} to gain a better understanding of
 * how animations in Angular2 are used.
 *
 * `transition` declares the {\@link sequence sequence of animation steps} that will be run when the
 * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>
 * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting
 * and/or ending state).
 *
 * A function can also be provided as the `stateChangeExpr` argument for a transition and this
 * function will be executed each time a state change occurs. If the value returned within the
 * function is true then the associated animation will be run.
 *
 * Animation transitions are placed within an {\@link trigger animation trigger}. For an transition
 * to animate to a state value and persist its styles then one or more {\@link state animation
 * states} is expected to be defined.
 *
 * ### Usage
 *
 * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on
 * what the previous state is and what the current state has become. In other words, if a transition
 * is defined that matches the old/current state criteria then the associated animation will be
 * triggered.
 *
 * ```typescript
 * // all transition/state changes are defined within an animation trigger
 * trigger("myAnimationTrigger", [
 *   // if a state is defined then its styles will be persisted when the
 *   // animation has fully completed itself
 *   state("on", style({ background: "green" })),
 *   state("off", style({ background: "grey" })),
 *
 *   // a transition animation that will be kicked off when the state value
 *   // bound to "myAnimationTrigger" changes from "on" to "off"
 *   transition("on => off", animate(500)),
 *
 *   // it is also possible to do run the same animation for both directions
 *   transition("on <=> off", animate(500)),
 *
 *   // or to define multiple states pairs separated by commas
 *   transition("on => off, off => void", animate(500)),
 *
 *   // this is a catch-all state change for when an element is inserted into
 *   // the page and the destination state is unknown
 *   transition("void => *", [
 *     style({ opacity: 0 }),
 *     animate(500)
 *   ]),
 *
 *   // this will capture a state change between any states
 *   transition("* => *", animate("1s 0s")),
 *
 *   // you can also go full out and include a function
 *   transition((fromState, toState) => {
 *     // when `true` then it will allow the animation below to be invoked
 *     return fromState == "off" && toState == "on";
 *   }, animate("1s 0s"))
 * ])
 * ```
 *
 * The template associated with this component will make use of the `myAnimationTrigger` animation
 * trigger by binding to an element within its template code.
 *
 * ```html
 * <!-- somewhere inside of my-component-tpl.html -->
 * <div [\@myAnimationTrigger]="myStatusExp">...</div>
 * ```
 *
 * #### The final `animate` call
 *
 * If the final step within the transition steps is a call to `animate()` that **only** uses a
 * timing value with **no style data** then it will be automatically used as the final animation arc
 * for the element to animate itself to the final state. This involves an automatic mix of
 * adding/removing CSS styles so that the element will be in the exact state it should be for the
 * applied state to be presented correctly.
 *
 * ```
 * // start off by hiding the element, but make sure that it animates properly to whatever state
 * // is currently active for "myAnimationTrigger"
 * transition("void => *", [
 *   style({ opacity: 0 }),
 *   animate(500)
 * ])
 * ```
 *
 * ### Transition Aliases (`:enter` and `:leave`)
 *
 * Given that enter (insertion) and leave (removal) animations are so common, the `transition`
 * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*
 * => void` state changes.
 *
 * ```
 * transition(":enter", [
 *   style({ opacity: 0 }),
 *   animate(500, style({ opacity: 1 }))
 * ])
 * transition(":leave", [
 *   animate(500, style({ opacity: 0 }))
 * ])
 * ```
 *
 * {\@example core/animation/ts/dsl/animation_example.ts region='Component'}
 *
 * \@experimental Animation support is experimental.
 * @param {?} stateChangeExpr
 * @param {?} steps
 * @return {?}
 */function transition(stateChangeExpr,steps){return{type:1/* Transition */,expr:stateChangeExpr,animation:Array.isArray(steps)?sequence(steps):steps};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 * @param {?} cb
 * @return {?}
 */function scheduleMicroTask(cb){Promise.resolve(null).then(cb);}/**
 * \@experimental Animation support is experimental.
 * @abstract
 */var AnimationPlayer=function(){function AnimationPlayer(){_classCallCheck(this,AnimationPlayer);}_createClass(AnimationPlayer,[{key:'onDone',/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */value:function onDone(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){}/**
     * @abstract
     * @return {?}
     */},{key:'init',value:function init(){}/**
     * @abstract
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){}/**
     * @abstract
     * @return {?}
     */},{key:'play',value:function play(){}/**
     * @abstract
     * @return {?}
     */},{key:'pause',value:function pause(){}/**
     * @abstract
     * @return {?}
     */},{key:'restart',value:function restart(){}/**
     * @abstract
     * @return {?}
     */},{key:'finish',value:function finish(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * @abstract
     * @return {?}
     */},{key:'reset',value:function reset(){}/**
     * @abstract
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){}/**
     * @abstract
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){}/**
     * @return {?}
     */},{key:'parentPlayer',get:function get(){throw new Error('NOT IMPLEMENTED: Base Class');}/**
     * @param {?} player
     * @return {?}
     */,set:function set(player){throw new Error('NOT IMPLEMENTED: Base Class');}}]);return AnimationPlayer;}();/**
 * \@experimental Animation support is experimental.
 */var NoopAnimationPlayer=function(){function NoopAnimationPlayer(){var _this=this;_classCallCheck(this,NoopAnimationPlayer);this._onDoneFns=[];this._onStartFns=[];this._onDestroyFns=[];this._started=false;this._destroyed=false;this._finished=false;this.parentPlayer=null;scheduleMicroTask(function(){return _this._onFinish();});}/**
     * @return {?}
     */_createClass(NoopAnimationPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'init',value:function init(){}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];}this._started=true;}/**
     * @return {?}
     */},{key:'pause',value:function pause(){}/**
     * @return {?}
     */},{key:'restart',value:function restart(){}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._destroyed=true;this.finish();this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){return 0;}}]);return NoopAnimationPlayer;}();var AnimationGroupPlayer=function(){/**
     * @param {?} _players
     */function AnimationGroupPlayer(_players){var _this2=this;_classCallCheck(this,AnimationGroupPlayer);this._players=_players;this._onDoneFns=[];this._onStartFns=[];this._finished=false;this._started=false;this._destroyed=false;this._onDestroyFns=[];this.parentPlayer=null;var count=0;var total=this._players.length;if(total==0){scheduleMicroTask(function(){return _this2._onFinish();});}else{this._players.forEach(function(player){player.parentPlayer=_this2;player.onDone(function(){if(++count>=total){_this2._onFinish();}});});}}/**
     * @return {?}
     */_createClass(AnimationGroupPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @return {?}
     */},{key:'init',value:function init(){this._players.forEach(function(player){return player.init();});}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!this.parentPlayer){this.init();}if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];this._started=true;}this._players.forEach(function(player){return player.play();});}/**
     * @return {?}
     */},{key:'pause',value:function pause(){this._players.forEach(function(player){return player.pause();});}/**
     * @return {?}
     */},{key:'restart',value:function restart(){this._players.forEach(function(player){return player.restart();});}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();this._players.forEach(function(player){return player.finish();});}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._onFinish();this._players.forEach(function(player){return player.destroy();});this._destroyed=true;this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this._players.forEach(function(player){return player.reset();});this._destroyed=false;this._finished=false;this._started=false;}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){this._players.forEach(function(player){player.setPosition(p);});}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){var/** @type {?} */min=0;this._players.forEach(function(player){var/** @type {?} */p=player.getPosition();min=Math.min(p,min);});return min;}/**
     * @return {?}
     */},{key:'players',get:function get(){return this._players;}}]);return AnimationGroupPlayer;}();


/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* unused harmony export VERSION */
/* unused harmony export TEMPLATE_TRANSFORMS */
/* unused harmony export CompilerConfig */
/* unused harmony export RenderTypes */
/* unused harmony export JitCompiler */
/* unused harmony export DirectiveResolver */
/* unused harmony export PipeResolver */
/* unused harmony export NgModuleResolver */
/* unused harmony export DEFAULT_INTERPOLATION_CONFIG */
/* unused harmony export InterpolationConfig */
/* unused harmony export NgModuleCompiler */
/* unused harmony export DirectiveWrapperCompiler */
/* unused harmony export ViewCompiler */
/* unused harmony export AnimationParser */
/* unused harmony export isSyntaxError */
/* unused harmony export syntaxError */
/* unused harmony export TextAst */
/* unused harmony export BoundTextAst */
/* unused harmony export AttrAst */
/* unused harmony export BoundElementPropertyAst */
/* unused harmony export BoundEventAst */
/* unused harmony export ReferenceAst */
/* unused harmony export VariableAst */
/* unused harmony export ElementAst */
/* unused harmony export EmbeddedTemplateAst */
/* unused harmony export BoundDirectivePropertyAst */
/* unused harmony export DirectiveAst */
/* unused harmony export ProviderAst */
/* unused harmony export ProviderAstType */
/* unused harmony export NgContentAst */
/* unused harmony export PropertyBindingType */
/* unused harmony export templateVisitAll */
/* unused harmony export CompileAnimationEntryMetadata */
/* unused harmony export CompileAnimationStateMetadata */
/* unused harmony export CompileAnimationStateDeclarationMetadata */
/* unused harmony export CompileAnimationStateTransitionMetadata */
/* unused harmony export CompileAnimationMetadata */
/* unused harmony export CompileAnimationKeyframesSequenceMetadata */
/* unused harmony export CompileAnimationStyleMetadata */
/* unused harmony export CompileAnimationAnimateMetadata */
/* unused harmony export CompileAnimationWithStepsMetadata */
/* unused harmony export CompileAnimationSequenceMetadata */
/* unused harmony export CompileAnimationGroupMetadata */
/* unused harmony export identifierName */
/* unused harmony export identifierModuleUrl */
/* unused harmony export viewClassName */
/* unused harmony export rendererTypeName */
/* unused harmony export hostViewClassName */
/* unused harmony export dirWrapperClassName */
/* unused harmony export componentFactoryName */
/* unused harmony export CompileSummaryKind */
/* unused harmony export tokenName */
/* unused harmony export tokenReference */
/* unused harmony export CompileStylesheetMetadata */
/* unused harmony export CompileTemplateMetadata */
/* unused harmony export CompileDirectiveMetadata */
/* unused harmony export createHostComponentMeta */
/* unused harmony export CompilePipeMetadata */
/* unused harmony export CompileNgModuleMetadata */
/* unused harmony export TransitiveCompileNgModuleMetadata */
/* unused harmony export ProviderMeta */
/* unused harmony export createAotCompiler */
/* unused harmony export AotCompiler */
/* unused harmony export analyzeNgModules */
/* unused harmony export analyzeAndValidateNgModules */
/* unused harmony export extractProgramSymbols */
/* unused harmony export StaticReflector */
/* unused harmony export StaticAndDynamicReflectionCapabilities */
/* unused harmony export StaticSymbol */
/* unused harmony export StaticSymbolCache */
/* unused harmony export ResolvedStaticSymbol */
/* unused harmony export StaticSymbolResolver */
/* unused harmony export unescapeIdentifier */
/* unused harmony export AotSummaryResolver */
/* unused harmony export SummaryResolver */
/* unused harmony export COMPILER_PROVIDERS */
/* unused harmony export JitCompilerFactory */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return platformCoreDynamic; });
/* unused harmony export createUrlResolverWithoutPackagePrefix */
/* unused harmony export createOfflineCompileUrlResolver */
/* unused harmony export DEFAULT_PACKAGE_URL_PROVIDER */
/* unused harmony export UrlResolver */
/* unused harmony export getUrlScheme */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ResourceLoader; });
/* unused harmony export ElementSchemaRegistry */
/* unused harmony export Extractor */
/* unused harmony export I18NHtmlParser */
/* unused harmony export MessageBundle */
/* unused harmony export Serializer */
/* unused harmony export Xliff */
/* unused harmony export Xmb */
/* unused harmony export Xtb */
/* unused harmony export DirectiveNormalizer */
/* unused harmony export ParserError */
/* unused harmony export ParseSpan */
/* unused harmony export AST */
/* unused harmony export Quote */
/* unused harmony export EmptyExpr */
/* unused harmony export ImplicitReceiver */
/* unused harmony export Chain */
/* unused harmony export Conditional */
/* unused harmony export PropertyRead */
/* unused harmony export PropertyWrite */
/* unused harmony export SafePropertyRead */
/* unused harmony export KeyedRead */
/* unused harmony export KeyedWrite */
/* unused harmony export BindingPipe */
/* unused harmony export LiteralPrimitive */
/* unused harmony export LiteralArray */
/* unused harmony export LiteralMap */
/* unused harmony export Interpolation */
/* unused harmony export Binary */
/* unused harmony export PrefixNot */
/* unused harmony export MethodCall */
/* unused harmony export SafeMethodCall */
/* unused harmony export FunctionCall */
/* unused harmony export ASTWithSource */
/* unused harmony export TemplateBinding */
/* unused harmony export RecursiveAstVisitor */
/* unused harmony export AstTransformer */
/* unused harmony export TokenType */
/* unused harmony export Lexer */
/* unused harmony export Token */
/* unused harmony export EOF */
/* unused harmony export isIdentifier */
/* unused harmony export isQuote */
/* unused harmony export SplitInterpolation */
/* unused harmony export TemplateBindingParseResult */
/* unused harmony export Parser */
/* unused harmony export _ParseAST */
/* unused harmony export ERROR_COLLECTOR_TOKEN */
/* unused harmony export CompileMetadataResolver */
/* unused harmony export componentModuleUrl */
/* unused harmony export Text */
/* unused harmony export Expansion */
/* unused harmony export ExpansionCase */
/* unused harmony export Attribute */
/* unused harmony export Element */
/* unused harmony export Comment */
/* unused harmony export visitAll */
/* unused harmony export ParseTreeResult */
/* unused harmony export TreeError */
/* unused harmony export HtmlParser */
/* unused harmony export HtmlTagDefinition */
/* unused harmony export getHtmlTagDefinition */
/* unused harmony export TagContentType */
/* unused harmony export splitNsName */
/* unused harmony export getNsPrefix */
/* unused harmony export mergeNsAndName */
/* unused harmony export NAMED_ENTITIES */
/* unused harmony export ImportResolver */
/* unused harmony export debugOutputAstAsTypeScript */
/* unused harmony export TypeScriptEmitter */
/* unused harmony export ParseLocation */
/* unused harmony export ParseSourceFile */
/* unused harmony export ParseSourceSpan */
/* unused harmony export ParseErrorLevel */
/* unused harmony export ParseError */
/* unused harmony export DomElementSchemaRegistry */
/* unused harmony export CssSelector */
/* unused harmony export SelectorMatcher */
/* unused harmony export SelectorListContext */
/* unused harmony export SelectorContext */
/* unused harmony export StylesCompileDependency */
/* unused harmony export StylesCompileResult */
/* unused harmony export CompiledStylesheet */
/* unused harmony export StyleCompiler */
/* unused harmony export TemplateParseError */
/* unused harmony export TemplateParseResult */
/* unused harmony export TemplateParser */
/* unused harmony export splitClasses */
/* unused harmony export createElementCssSelector */
/* unused harmony export removeSummaryDuplicates */
var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toArray(arr){return Array.isArray(arr)?arr:Array.from(arr);}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * @stable
 */var/** @type {?} */VERSION=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["M" /* Version */]('4.0.0-rc.1');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * A segment of text within the template.
 */var TextAst=function(){/**
     * @param {?} value
     * @param {?} ngContentIndex
     * @param {?} sourceSpan
     */function TextAst(value,ngContentIndex,sourceSpan){_classCallCheck(this,TextAst);this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(TextAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitText(this,context);}}]);return TextAst;}();/**
 * A bound expression within the text of a template.
 */var BoundTextAst=function(){/**
     * @param {?} value
     * @param {?} ngContentIndex
     * @param {?} sourceSpan
     */function BoundTextAst(value,ngContentIndex,sourceSpan){_classCallCheck(this,BoundTextAst);this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(BoundTextAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitBoundText(this,context);}}]);return BoundTextAst;}();/**
 * A plain attribute on an element.
 */var AttrAst=function(){/**
     * @param {?} name
     * @param {?} value
     * @param {?} sourceSpan
     */function AttrAst(name,value,sourceSpan){_classCallCheck(this,AttrAst);this.name=name;this.value=value;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AttrAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAttr(this,context);}}]);return AttrAst;}();/**
 * A binding for an element property (e.g. `[property]="expression"`) or an animation trigger (e.g.
 * `[\@trigger]="stateExp"`)
 */var BoundElementPropertyAst=function(){/**
     * @param {?} name
     * @param {?} type
     * @param {?} securityContext
     * @param {?} needsRuntimeSecurityContext
     * @param {?} value
     * @param {?} unit
     * @param {?} sourceSpan
     */function BoundElementPropertyAst(name,type,securityContext,needsRuntimeSecurityContext,value,unit,sourceSpan){_classCallCheck(this,BoundElementPropertyAst);this.name=name;this.type=type;this.securityContext=securityContext;this.needsRuntimeSecurityContext=needsRuntimeSecurityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(BoundElementPropertyAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitElementProperty(this,context);}/**
     * @return {?}
     */},{key:'isAnimation',get:function get(){return this.type===PropertyBindingType.Animation;}}]);return BoundElementPropertyAst;}();/**
 * A binding for an element event (e.g. `(event)="handler()"`) or an animation trigger event (e.g.
 * `(\@trigger.phase)="callback($event)"`).
 */var BoundEventAst=function(){/**
     * @param {?} name
     * @param {?} target
     * @param {?} phase
     * @param {?} handler
     * @param {?} sourceSpan
     */function BoundEventAst(name,target,phase,handler,sourceSpan){_classCallCheck(this,BoundEventAst);this.name=name;this.target=target;this.phase=phase;this.handler=handler;this.sourceSpan=sourceSpan;}/**
     * @param {?} name
     * @param {?} target
     * @param {?} phase
     * @return {?}
     */_createClass(BoundEventAst,[{key:'visit',/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */value:function visit(visitor,context){return visitor.visitEvent(this,context);}/**
     * @return {?}
     */},{key:'fullName',get:function get(){return BoundEventAst.calcFullName(this.name,this.target,this.phase);}/**
     * @return {?}
     */},{key:'isAnimation',get:function get(){return!!this.phase;}}],[{key:'calcFullName',value:function calcFullName(name,target,phase){if(target){return target+':'+name;}else if(phase){return'@'+name+'.'+phase;}else{return name;}}}]);return BoundEventAst;}();/**
 * A reference declaration on an element (e.g. `let someName="expression"`).
 */var ReferenceAst=function(){/**
     * @param {?} name
     * @param {?} value
     * @param {?} sourceSpan
     */function ReferenceAst(name,value,sourceSpan){_classCallCheck(this,ReferenceAst);this.name=name;this.value=value;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ReferenceAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitReference(this,context);}}]);return ReferenceAst;}();/**
 * A variable declaration on a <ng-template> (e.g. `var-someName="someLocalName"`).
 */var VariableAst=function(){/**
     * @param {?} name
     * @param {?} value
     * @param {?} sourceSpan
     */function VariableAst(name,value,sourceSpan){_classCallCheck(this,VariableAst);this.name=name;this.value=value;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(VariableAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitVariable(this,context);}}]);return VariableAst;}();/**
 * An element declaration in a template.
 */var ElementAst=function(){/**
     * @param {?} name
     * @param {?} attrs
     * @param {?} inputs
     * @param {?} outputs
     * @param {?} references
     * @param {?} directives
     * @param {?} providers
     * @param {?} hasViewContainer
     * @param {?} queryMatches
     * @param {?} children
     * @param {?} ngContentIndex
     * @param {?} sourceSpan
     * @param {?} endSourceSpan
     */function ElementAst(name,attrs,inputs,outputs,references,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan,endSourceSpan){_classCallCheck(this,ElementAst);this.name=name;this.attrs=attrs;this.inputs=inputs;this.outputs=outputs;this.references=references;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;this.endSourceSpan=endSourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ElementAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitElement(this,context);}}]);return ElementAst;}();/**
 * A `<ng-template>` element included in an Angular template.
 */var EmbeddedTemplateAst=function(){/**
     * @param {?} attrs
     * @param {?} outputs
     * @param {?} references
     * @param {?} variables
     * @param {?} directives
     * @param {?} providers
     * @param {?} hasViewContainer
     * @param {?} queryMatches
     * @param {?} children
     * @param {?} ngContentIndex
     * @param {?} sourceSpan
     */function EmbeddedTemplateAst(attrs,outputs,references,variables,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan){_classCallCheck(this,EmbeddedTemplateAst);this.attrs=attrs;this.outputs=outputs;this.references=references;this.variables=variables;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(EmbeddedTemplateAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitEmbeddedTemplate(this,context);}}]);return EmbeddedTemplateAst;}();/**
 * A directive property with a bound value (e.g. `*ngIf="condition").
 */var BoundDirectivePropertyAst=function(){/**
     * @param {?} directiveName
     * @param {?} templateName
     * @param {?} value
     * @param {?} sourceSpan
     */function BoundDirectivePropertyAst(directiveName,templateName,value,sourceSpan){_classCallCheck(this,BoundDirectivePropertyAst);this.directiveName=directiveName;this.templateName=templateName;this.value=value;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(BoundDirectivePropertyAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitDirectiveProperty(this,context);}}]);return BoundDirectivePropertyAst;}();/**
 * A directive declared on an element.
 */var DirectiveAst=function(){/**
     * @param {?} directive
     * @param {?} inputs
     * @param {?} hostProperties
     * @param {?} hostEvents
     * @param {?} contentQueryStartId
     * @param {?} sourceSpan
     */function DirectiveAst(directive,inputs,hostProperties,hostEvents,contentQueryStartId,sourceSpan){_classCallCheck(this,DirectiveAst);this.directive=directive;this.inputs=inputs;this.hostProperties=hostProperties;this.hostEvents=hostEvents;this.contentQueryStartId=contentQueryStartId;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(DirectiveAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitDirective(this,context);}}]);return DirectiveAst;}();/**
 * A provider declared on an element
 */var ProviderAst=function(){/**
     * @param {?} token
     * @param {?} multiProvider
     * @param {?} eager
     * @param {?} providers
     * @param {?} providerType
     * @param {?} lifecycleHooks
     * @param {?} sourceSpan
     */function ProviderAst(token,multiProvider,eager,providers,providerType,lifecycleHooks,sourceSpan){_classCallCheck(this,ProviderAst);this.token=token;this.multiProvider=multiProvider;this.eager=eager;this.providers=providers;this.providerType=providerType;this.lifecycleHooks=lifecycleHooks;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ProviderAst,[{key:'visit',value:function visit(visitor,context){// No visit method in the visitor for now...
return null;}}]);return ProviderAst;}();var ProviderAstType={};ProviderAstType.PublicService=0;ProviderAstType.PrivateService=1;ProviderAstType.Component=2;ProviderAstType.Directive=3;ProviderAstType.Builtin=4;ProviderAstType[ProviderAstType.PublicService]="PublicService";ProviderAstType[ProviderAstType.PrivateService]="PrivateService";ProviderAstType[ProviderAstType.Component]="Component";ProviderAstType[ProviderAstType.Directive]="Directive";ProviderAstType[ProviderAstType.Builtin]="Builtin";/**
 * Position where content is to be projected (instance of `<ng-content>` in a template).
 */var NgContentAst=function(){/**
     * @param {?} index
     * @param {?} ngContentIndex
     * @param {?} sourceSpan
     */function NgContentAst(index,ngContentIndex,sourceSpan){_classCallCheck(this,NgContentAst);this.index=index;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(NgContentAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitNgContent(this,context);}}]);return NgContentAst;}();var PropertyBindingType={};PropertyBindingType.Property=0;PropertyBindingType.Attribute=1;PropertyBindingType.Class=2;PropertyBindingType.Style=3;PropertyBindingType.Animation=4;PropertyBindingType[PropertyBindingType.Property]="Property";PropertyBindingType[PropertyBindingType.Attribute]="Attribute";PropertyBindingType[PropertyBindingType.Class]="Class";PropertyBindingType[PropertyBindingType.Style]="Style";PropertyBindingType[PropertyBindingType.Animation]="Animation";/**
 * Visit every node in a list of {\@link TemplateAst}s with the given {\@link TemplateAstVisitor}.
 * @param {?} visitor
 * @param {?} asts
 * @param {?=} context
 * @return {?}
 */function templateVisitAll(visitor,asts){var context=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */result=[];var/** @type {?} */visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};asts.forEach(function(ast){var/** @type {?} */astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}/**
 * A token representing the a reference to a static type.
 *
 * This token is unique for a filePath and name and can be used as a hash table key.
 */var StaticSymbol=function(){/**
     * @param {?} filePath
     * @param {?} name
     * @param {?} members
     */function StaticSymbol(filePath,name,members){_classCallCheck(this,StaticSymbol);this.filePath=filePath;this.name=name;this.members=members;}/**
     * @return {?}
     */_createClass(StaticSymbol,[{key:'assertNoMembers',value:function assertNoMembers(){if(this.members.length){throw new Error('Illegal state: symbol without members expected, but got '+JSON.stringify(this)+'.');}}}]);return StaticSymbol;}();/**
 * A cache of static symbol used by the StaticReflector to return the same symbol for the
 * same symbol values.
 */var StaticSymbolCache=function(){function StaticSymbolCache(){_classCallCheck(this,StaticSymbolCache);this.cache=new Map();}/**
     * @param {?} declarationFile
     * @param {?} name
     * @param {?=} members
     * @return {?}
     */_createClass(StaticSymbolCache,[{key:'get',value:function get(declarationFile,name,members){members=members||[];var/** @type {?} */memberSuffix=members.length?'.'+members.join('.'):'';var/** @type {?} */key='"'+declarationFile+'".'+name+memberSuffix;var/** @type {?} */result=this.cache.get(key);if(!result){result=new StaticSymbol(declarationFile,name,members);this.cache.set(key,result);}return result;}}]);return StaticSymbolCache;}();/**
 * @param {?} obj
 * @return {?}
 */function isPresent(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank(obj){return obj==null;}var/** @type {?} */STRING_MAP_PROTO=Object.getPrototypeOf({});/**
 * @param {?} obj
 * @return {?}
 */function isStrictStringMap(obj){return(typeof obj==='undefined'?'undefined':_typeof(obj))==='object'&&obj!==null&&Object.getPrototypeOf(obj)===STRING_MAP_PROTO;}/**
 * @param {?} token
 * @return {?}
 */function stringify(token){if(typeof token==='string'){return token;}if(token==null){return''+token;}if(token.overriddenName){return''+token.overriddenName;}if(token.name){return''+token.name;}var/** @type {?} */res=token.toString();var/** @type {?} */newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}var NumberWrapper=function(){function NumberWrapper(){_classCallCheck(this,NumberWrapper);}_createClass(NumberWrapper,null,[{key:'parseIntAutoRadix',/**
     * @param {?} text
     * @return {?}
     */value:function parseIntAutoRadix(text){var/** @type {?} */result=parseInt(text);if(isNaN(result)){throw new Error('Invalid integer literal when parsing '+text);}return result;}/**
     * @param {?} value
     * @return {?}
     */},{key:'isNumeric',value:function isNumeric(value){return!isNaN(value-parseFloat(value));}}]);return NumberWrapper;}();/**
 * @param {?} o
 * @return {?}
 */function isJsObject(o){return o!==null&&(typeof o==='function'||(typeof o==='undefined'?'undefined':_typeof(o))==='object');}/**
 * @param {?} obj
 * @return {?}
 */function isPrimitive(obj){return!isJsObject(obj);}/**
 * @param {?} s
 * @return {?}
 */function escapeRegExp(s){return s.replace(/([.*+?^=!:${}()|[\]\/\\])/g,'\\$1');}/**
 * Wraps Javascript Objects
 */var StringMapWrapper=function(){function StringMapWrapper(){_classCallCheck(this,StringMapWrapper);}_createClass(StringMapWrapper,null,[{key:'merge',/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */value:function merge(m1,m2){var/** @type {?} */m={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(m1)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var k=_step.value;m[k]=m1[k];}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(m2)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _k=_step2.value;m[_k]=m2[_k];}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return m;}/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */},{key:'equals',value:function equals(m1,m2){var/** @type {?} */k1=Object.keys(m1);var/** @type {?} */k2=Object.keys(m2);if(k1.length!=k2.length){return false;}for(var/** @type {?} */i=0;i<k1.length;i++){var/** @type {?} */key=k1[i];if(m1[key]!==m2[key]){return false;}}return true;}}]);return StringMapWrapper;}();var ListWrapper=function(){function ListWrapper(){_classCallCheck(this,ListWrapper);}_createClass(ListWrapper,null,[{key:'findLast',/**
     * @param {?} arr
     * @param {?} condition
     * @return {?}
     */value:function findLast(arr,condition){for(var/** @type {?} */i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
     * @param {?} list
     * @param {?} items
     * @return {?}
     */},{key:'removeAll',value:function removeAll(list,items){for(var/** @type {?} */i=0;i<items.length;++i){var/** @type {?} */index=list.indexOf(items[i]);if(index>-1){list.splice(index,1);}}}/**
     * @param {?} list
     * @param {?} el
     * @return {?}
     */},{key:'remove',value:function remove(list,el){var/** @type {?} */index=list.indexOf(el);if(index>-1){list.splice(index,1);return true;}return false;}/**
     * @param {?} a
     * @param {?} b
     * @return {?}
     */},{key:'equals',value:function equals(a,b){if(a.length!=b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i]!==b[i])return false;}return true;}/**
     * @param {?} list
     * @return {?}
     */},{key:'flatten',value:function flatten(list){return list.reduce(function(flat,item){var/** @type {?} */flatItem=Array.isArray(item)?ListWrapper.flatten(item):item;return flat.concat(flatItem);},[]);}}]);return ListWrapper;}();var TagContentType={};TagContentType.RAW_TEXT=0;TagContentType.ESCAPABLE_RAW_TEXT=1;TagContentType.PARSABLE_DATA=2;TagContentType[TagContentType.RAW_TEXT]="RAW_TEXT";TagContentType[TagContentType.ESCAPABLE_RAW_TEXT]="ESCAPABLE_RAW_TEXT";TagContentType[TagContentType.PARSABLE_DATA]="PARSABLE_DATA";/**
 * @param {?} elementName
 * @return {?}
 */function splitNsName(elementName){if(elementName[0]!=':'){return[null,elementName];}var/** @type {?} */colonIndex=elementName.indexOf(':',1);if(colonIndex==-1){throw new Error('Unsupported format "'+elementName+'" expecting ":namespace:name"');}return[elementName.slice(1,colonIndex),elementName.slice(colonIndex+1)];}/**
 * @param {?} fullName
 * @return {?}
 */function getNsPrefix(fullName){return fullName===null?null:splitNsName(fullName)[0];}/**
 * @param {?} prefix
 * @param {?} localName
 * @return {?}
 */function mergeNsAndName(prefix,localName){return prefix?':'+prefix+':'+localName:localName;}// see http://www.w3.org/TR/html51/syntax.html#named-character-references
// see https://html.spec.whatwg.org/multipage/entities.json
// This list is not exhaustive to keep the compiler footprint low.
// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.
var/** @type {?} */NAMED_ENTITIES={'Aacute':'\xC1','aacute':'\xE1','Acirc':'\xC2','acirc':'\xE2','acute':'\xB4','AElig':'\xC6','aelig':'\xE6','Agrave':'\xC0','agrave':'\xE0','alefsym':'\u2135','Alpha':'\u0391','alpha':'\u03B1','amp':'&','and':'\u2227','ang':'\u2220','apos':'\'','Aring':'\xC5','aring':'\xE5','asymp':'\u2248','Atilde':'\xC3','atilde':'\xE3','Auml':'\xC4','auml':'\xE4','bdquo':'\u201E','Beta':'\u0392','beta':'\u03B2','brvbar':'\xA6','bull':'\u2022','cap':'\u2229','Ccedil':'\xC7','ccedil':'\xE7','cedil':'\xB8','cent':'\xA2','Chi':'\u03A7','chi':'\u03C7','circ':'\u02C6','clubs':'\u2663','cong':'\u2245','copy':'\xA9','crarr':'\u21B5','cup':'\u222A','curren':'\xA4','dagger':'\u2020','Dagger':'\u2021','darr':'\u2193','dArr':'\u21D3','deg':'\xB0','Delta':'\u0394','delta':'\u03B4','diams':'\u2666','divide':'\xF7','Eacute':'\xC9','eacute':'\xE9','Ecirc':'\xCA','ecirc':'\xEA','Egrave':'\xC8','egrave':'\xE8','empty':'\u2205','emsp':'\u2003','ensp':'\u2002','Epsilon':'\u0395','epsilon':'\u03B5','equiv':'\u2261','Eta':'\u0397','eta':'\u03B7','ETH':'\xD0','eth':'\xF0','Euml':'\xCB','euml':'\xEB','euro':'\u20AC','exist':'\u2203','fnof':'\u0192','forall':'\u2200','frac12':'\xBD','frac14':'\xBC','frac34':'\xBE','frasl':'\u2044','Gamma':'\u0393','gamma':'\u03B3','ge':'\u2265','gt':'>','harr':'\u2194','hArr':'\u21D4','hearts':'\u2665','hellip':'\u2026','Iacute':'\xCD','iacute':'\xED','Icirc':'\xCE','icirc':'\xEE','iexcl':'\xA1','Igrave':'\xCC','igrave':'\xEC','image':'\u2111','infin':'\u221E','int':'\u222B','Iota':'\u0399','iota':'\u03B9','iquest':'\xBF','isin':'\u2208','Iuml':'\xCF','iuml':'\xEF','Kappa':'\u039A','kappa':'\u03BA','Lambda':'\u039B','lambda':'\u03BB','lang':'\u27E8','laquo':'\xAB','larr':'\u2190','lArr':'\u21D0','lceil':'\u2308','ldquo':'\u201C','le':'\u2264','lfloor':'\u230A','lowast':'\u2217','loz':'\u25CA','lrm':'\u200E','lsaquo':'\u2039','lsquo':'\u2018','lt':'<','macr':'\xAF','mdash':'\u2014','micro':'\xB5','middot':'\xB7','minus':'\u2212','Mu':'\u039C','mu':'\u03BC','nabla':'\u2207','nbsp':'\xA0','ndash':'\u2013','ne':'\u2260','ni':'\u220B','not':'\xAC','notin':'\u2209','nsub':'\u2284','Ntilde':'\xD1','ntilde':'\xF1','Nu':'\u039D','nu':'\u03BD','Oacute':'\xD3','oacute':'\xF3','Ocirc':'\xD4','ocirc':'\xF4','OElig':'\u0152','oelig':'\u0153','Ograve':'\xD2','ograve':'\xF2','oline':'\u203E','Omega':'\u03A9','omega':'\u03C9','Omicron':'\u039F','omicron':'\u03BF','oplus':'\u2295','or':'\u2228','ordf':'\xAA','ordm':'\xBA','Oslash':'\xD8','oslash':'\xF8','Otilde':'\xD5','otilde':'\xF5','otimes':'\u2297','Ouml':'\xD6','ouml':'\xF6','para':'\xB6','permil':'\u2030','perp':'\u22A5','Phi':'\u03A6','phi':'\u03C6','Pi':'\u03A0','pi':'\u03C0','piv':'\u03D6','plusmn':'\xB1','pound':'\xA3','prime':'\u2032','Prime':'\u2033','prod':'\u220F','prop':'\u221D','Psi':'\u03A8','psi':'\u03C8','quot':'"','radic':'\u221A','rang':'\u27E9','raquo':'\xBB','rarr':'\u2192','rArr':'\u21D2','rceil':'\u2309','rdquo':'\u201D','real':'\u211C','reg':'\xAE','rfloor':'\u230B','Rho':'\u03A1','rho':'\u03C1','rlm':'\u200F','rsaquo':'\u203A','rsquo':'\u2019','sbquo':'\u201A','Scaron':'\u0160','scaron':'\u0161','sdot':'\u22C5','sect':'\xA7','shy':'\xAD','Sigma':'\u03A3','sigma':'\u03C3','sigmaf':'\u03C2','sim':'\u223C','spades':'\u2660','sub':'\u2282','sube':'\u2286','sum':'\u2211','sup':'\u2283','sup1':'\xB9','sup2':'\xB2','sup3':'\xB3','supe':'\u2287','szlig':'\xDF','Tau':'\u03A4','tau':'\u03C4','there4':'\u2234','Theta':'\u0398','theta':'\u03B8','thetasym':'\u03D1','thinsp':'\u2009','THORN':'\xDE','thorn':'\xFE','tilde':'\u02DC','times':'\xD7','trade':'\u2122','Uacute':'\xDA','uacute':'\xFA','uarr':'\u2191','uArr':'\u21D1','Ucirc':'\xDB','ucirc':'\xFB','Ugrave':'\xD9','ugrave':'\xF9','uml':'\xA8','upsih':'\u03D2','Upsilon':'\u03A5','upsilon':'\u03C5','Uuml':'\xDC','uuml':'\xFC','weierp':'\u2118','Xi':'\u039E','xi':'\u03BE','Yacute':'\xDD','yacute':'\xFD','yen':'\xA5','yuml':'\xFF','Yuml':'\u0178','Zeta':'\u0396','zeta':'\u03B6','zwj':'\u200D','zwnj':'\u200C'};var HtmlTagDefinition=function(){/**
     * @param {?=} __0
     */function HtmlTagDefinition(){var _this=this;var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},closedByChildren=_ref.closedByChildren,requiredParents=_ref.requiredParents,implicitNamespacePrefix=_ref.implicitNamespacePrefix,_ref$contentType=_ref.contentType,contentType=_ref$contentType===undefined?TagContentType.PARSABLE_DATA:_ref$contentType,_ref$closedByParent=_ref.closedByParent,closedByParent=_ref$closedByParent===undefined?false:_ref$closedByParent,_ref$isVoid=_ref.isVoid,isVoid=_ref$isVoid===undefined?false:_ref$isVoid,_ref$ignoreFirstLf=_ref.ignoreFirstLf,ignoreFirstLf=_ref$ignoreFirstLf===undefined?false:_ref$ignoreFirstLf;_classCallCheck(this,HtmlTagDefinition);this.closedByChildren={};this.closedByParent=false;this.canSelfClose=false;if(closedByChildren&&closedByChildren.length>0){closedByChildren.forEach(function(tagName){return _this.closedByChildren[tagName]=true;});}this.isVoid=isVoid;this.closedByParent=closedByParent||isVoid;if(requiredParents&&requiredParents.length>0){this.requiredParents={};// The first parent is the list is automatically when none of the listed parents are present
this.parentToAdd=requiredParents[0];requiredParents.forEach(function(tagName){return _this.requiredParents[tagName]=true;});}this.implicitNamespacePrefix=implicitNamespacePrefix;this.contentType=contentType;this.ignoreFirstLf=ignoreFirstLf;}/**
     * @param {?} currentParent
     * @return {?}
     */_createClass(HtmlTagDefinition,[{key:'requireExtraParent',value:function requireExtraParent(currentParent){if(!this.requiredParents){return false;}if(!currentParent){return true;}var/** @type {?} */lcParent=currentParent.toLowerCase();var/** @type {?} */isParentTemplate=lcParent==='template'||currentParent==='ng-template';return!isParentTemplate&&this.requiredParents[lcParent]!=true;}/**
     * @param {?} name
     * @return {?}
     */},{key:'isClosedByChild',value:function isClosedByChild(name){return this.isVoid||name.toLowerCase()in this.closedByChildren;}}]);return HtmlTagDefinition;}();// see http://www.w3.org/TR/html51/syntax.html#optional-tags
// This implementation does not fully conform to the HTML5 spec.
var/** @type {?} */TAG_DEFINITIONS={'base':new HtmlTagDefinition({isVoid:true}),'meta':new HtmlTagDefinition({isVoid:true}),'area':new HtmlTagDefinition({isVoid:true}),'embed':new HtmlTagDefinition({isVoid:true}),'link':new HtmlTagDefinition({isVoid:true}),'img':new HtmlTagDefinition({isVoid:true}),'input':new HtmlTagDefinition({isVoid:true}),'param':new HtmlTagDefinition({isVoid:true}),'hr':new HtmlTagDefinition({isVoid:true}),'br':new HtmlTagDefinition({isVoid:true}),'source':new HtmlTagDefinition({isVoid:true}),'track':new HtmlTagDefinition({isVoid:true}),'wbr':new HtmlTagDefinition({isVoid:true}),'p':new HtmlTagDefinition({closedByChildren:['address','article','aside','blockquote','div','dl','fieldset','footer','form','h1','h2','h3','h4','h5','h6','header','hgroup','hr','main','nav','ol','p','pre','section','table','ul'],closedByParent:true}),'thead':new HtmlTagDefinition({closedByChildren:['tbody','tfoot']}),'tbody':new HtmlTagDefinition({closedByChildren:['tbody','tfoot'],closedByParent:true}),'tfoot':new HtmlTagDefinition({closedByChildren:['tbody'],closedByParent:true}),'tr':new HtmlTagDefinition({closedByChildren:['tr'],requiredParents:['tbody','tfoot','thead'],closedByParent:true}),'td':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'th':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'col':new HtmlTagDefinition({requiredParents:['colgroup'],isVoid:true}),'svg':new HtmlTagDefinition({implicitNamespacePrefix:'svg'}),'math':new HtmlTagDefinition({implicitNamespacePrefix:'math'}),'li':new HtmlTagDefinition({closedByChildren:['li'],closedByParent:true}),'dt':new HtmlTagDefinition({closedByChildren:['dt','dd']}),'dd':new HtmlTagDefinition({closedByChildren:['dt','dd'],closedByParent:true}),'rb':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rt':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rtc':new HtmlTagDefinition({closedByChildren:['rb','rtc','rp'],closedByParent:true}),'rp':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'optgroup':new HtmlTagDefinition({closedByChildren:['optgroup'],closedByParent:true}),'option':new HtmlTagDefinition({closedByChildren:['option','optgroup'],closedByParent:true}),'pre':new HtmlTagDefinition({ignoreFirstLf:true}),'listing':new HtmlTagDefinition({ignoreFirstLf:true}),'style':new HtmlTagDefinition({contentType:TagContentType.RAW_TEXT}),'script':new HtmlTagDefinition({contentType:TagContentType.RAW_TEXT}),'title':new HtmlTagDefinition({contentType:TagContentType.ESCAPABLE_RAW_TEXT}),'textarea':new HtmlTagDefinition({contentType:TagContentType.ESCAPABLE_RAW_TEXT,ignoreFirstLf:true})};var/** @type {?} */_DEFAULT_TAG_DEFINITION=new HtmlTagDefinition();/**
 * @param {?} tagName
 * @return {?}
 */function getHtmlTagDefinition(tagName){return TAG_DEFINITIONS[tagName.toLowerCase()]||_DEFAULT_TAG_DEFINITION;}var/** @type {?} */_SELECTOR_REGEXP=new RegExp('(\\:not\\()|'+'([-\\w]+)|'+'(?:\\.([-\\w]+))|'+// "-" should appear first in the regexp below as FF31 parses "[.-\w]" as a range
'(?:\\[([-.\\w*]+)(?:=([^\\]]*))?\\])|'+'(\\))|'+'(\\s*,\\s*)',// ","
'g');/**
 * A css selector contains an element name,
 * css classes and attribute/value pairs with the purpose
 * of selecting subsets out of them.
 */var CssSelector=function(){function CssSelector(){_classCallCheck(this,CssSelector);this.element=null;this.classNames=[];this.attrs=[];this.notSelectors=[];}/**
     * @param {?} selector
     * @return {?}
     */_createClass(CssSelector,[{key:'isElementSelector',/**
     * @return {?}
     */value:function isElementSelector(){return this.hasElementSelector()&&this.classNames.length==0&&this.attrs.length==0&&this.notSelectors.length===0;}/**
     * @return {?}
     */},{key:'hasElementSelector',value:function hasElementSelector(){return!!this.element;}/**
     * @param {?=} element
     * @return {?}
     */},{key:'setElement',value:function setElement(){var element=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;this.element=element;}/**
     * Gets a template string for an element that matches the selector.
     * @return {?}
     */},{key:'getMatchingElementTemplate',value:function getMatchingElementTemplate(){var/** @type {?} */tagName=this.element||'div';var/** @type {?} */classAttr=this.classNames.length>0?' class="'+this.classNames.join(' ')+'"':'';var/** @type {?} */attrs='';for(var/** @type {?} */i=0;i<this.attrs.length;i+=2){var/** @type {?} */attrName=this.attrs[i];var/** @type {?} */attrValue=this.attrs[i+1]!==''?'="'+this.attrs[i+1]+'"':'';attrs+=' '+attrName+attrValue;}return getHtmlTagDefinition(tagName).isVoid?'<'+tagName+classAttr+attrs+'/>':'<'+tagName+classAttr+attrs+'></'+tagName+'>';}/**
     * @param {?} name
     * @param {?=} value
     * @return {?}
     */},{key:'addAttribute',value:function addAttribute(name){var value=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';this.attrs.push(name,value&&value.toLowerCase()||'');}/**
     * @param {?} name
     * @return {?}
     */},{key:'addClassName',value:function addClassName(name){this.classNames.push(name.toLowerCase());}/**
     * @return {?}
     */},{key:'toString',value:function toString(){var/** @type {?} */res=this.element||'';if(this.classNames){this.classNames.forEach(function(klass){return res+='.'+klass;});}if(this.attrs){for(var/** @type {?} */i=0;i<this.attrs.length;i+=2){var/** @type {?} */name=this.attrs[i];var/** @type {?} */value=this.attrs[i+1];res+='['+name+(value?'='+value:'')+']';}}this.notSelectors.forEach(function(notSelector){return res+=':not('+notSelector+')';});return res;}}],[{key:'parse',value:function parse(selector){var/** @type {?} */results=[];var/** @type {?} */_addResult=function _addResult(res,cssSel){if(cssSel.notSelectors.length>0&&!cssSel.element&&cssSel.classNames.length==0&&cssSel.attrs.length==0){cssSel.element='*';}res.push(cssSel);};var/** @type {?} */cssSelector=new CssSelector();var/** @type {?} */match=void 0;var/** @type {?} */current=cssSelector;var/** @type {?} */inNot=false;_SELECTOR_REGEXP.lastIndex=0;while(match=_SELECTOR_REGEXP.exec(selector)){if(match[1]){if(inNot){throw new Error('Nesting :not is not allowed in a selector');}inNot=true;current=new CssSelector();cssSelector.notSelectors.push(current);}if(match[2]){current.setElement(match[2]);}if(match[3]){current.addClassName(match[3]);}if(match[4]){current.addAttribute(match[4],match[5]);}if(match[6]){inNot=false;current=cssSelector;}if(match[7]){if(inNot){throw new Error('Multiple selectors in :not are not supported');}_addResult(results,cssSelector);cssSelector=current=new CssSelector();}}_addResult(results,cssSelector);return results;}}]);return CssSelector;}();/**
 * Reads a list of CssSelectors and allows to calculate which ones
 * are contained in a given CssSelector.
 */var SelectorMatcher=function(){function SelectorMatcher(){_classCallCheck(this,SelectorMatcher);this._elementMap=new Map();this._elementPartialMap=new Map();this._classMap=new Map();this._classPartialMap=new Map();this._attrValueMap=new Map();this._attrValuePartialMap=new Map();this._listContexts=[];}/**
     * @param {?} notSelectors
     * @return {?}
     */_createClass(SelectorMatcher,[{key:'addSelectables',/**
     * @param {?} cssSelectors
     * @param {?=} callbackCtxt
     * @return {?}
     */value:function addSelectables(cssSelectors,callbackCtxt){var/** @type {?} */listContext=null;if(cssSelectors.length>1){listContext=new SelectorListContext(cssSelectors);this._listContexts.push(listContext);}for(var/** @type {?} */i=0;i<cssSelectors.length;i++){this._addSelectable(cssSelectors[i],callbackCtxt,listContext);}}/**
     * Add an object that can be found later on by calling `match`.
     * @param {?} cssSelector A css selector
     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function
     * @param {?} listContext
     * @return {?}
     */},{key:'_addSelectable',value:function _addSelectable(cssSelector,callbackCtxt,listContext){var/** @type {?} */matcher=this;var/** @type {?} */element=cssSelector.element;var/** @type {?} */classNames=cssSelector.classNames;var/** @type {?} */attrs=cssSelector.attrs;var/** @type {?} */selectable=new SelectorContext(cssSelector,callbackCtxt,listContext);if(element){var/** @type {?} */isTerminal=attrs.length===0&&classNames.length===0;if(isTerminal){this._addTerminal(matcher._elementMap,element,selectable);}else{matcher=this._addPartial(matcher._elementPartialMap,element);}}if(classNames){for(var/** @type {?} */i=0;i<classNames.length;i++){var/** @type {?} */_isTerminal=attrs.length===0&&i===classNames.length-1;var/** @type {?} */className=classNames[i];if(_isTerminal){this._addTerminal(matcher._classMap,className,selectable);}else{matcher=this._addPartial(matcher._classPartialMap,className);}}}if(attrs){for(var/** @type {?} */_i=0;_i<attrs.length;_i+=2){var/** @type {?} */_isTerminal2=_i===attrs.length-2;var/** @type {?} */name=attrs[_i];var/** @type {?} */value=attrs[_i+1];if(_isTerminal2){var/** @type {?} */terminalMap=matcher._attrValueMap;var/** @type {?} */terminalValuesMap=terminalMap.get(name);if(!terminalValuesMap){terminalValuesMap=new Map();terminalMap.set(name,terminalValuesMap);}this._addTerminal(terminalValuesMap,value,selectable);}else{var/** @type {?} */partialMap=matcher._attrValuePartialMap;var/** @type {?} */partialValuesMap=partialMap.get(name);if(!partialValuesMap){partialValuesMap=new Map();partialMap.set(name,partialValuesMap);}matcher=this._addPartial(partialValuesMap,value);}}}}/**
     * @param {?} map
     * @param {?} name
     * @param {?} selectable
     * @return {?}
     */},{key:'_addTerminal',value:function _addTerminal(map,name,selectable){var/** @type {?} */terminalList=map.get(name);if(!terminalList){terminalList=[];map.set(name,terminalList);}terminalList.push(selectable);}/**
     * @param {?} map
     * @param {?} name
     * @return {?}
     */},{key:'_addPartial',value:function _addPartial(map,name){var/** @type {?} */matcher=map.get(name);if(!matcher){matcher=new SelectorMatcher();map.set(name,matcher);}return matcher;}/**
     * Find the objects that have been added via `addSelectable`
     * whose css selector is contained in the given css selector.
     * @param {?} cssSelector A css selector
     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`
     * @return {?} boolean true if a match was found
     */},{key:'match',value:function match(cssSelector,matchedCallback){var/** @type {?} */result=false;var/** @type {?} */element=cssSelector.element;var/** @type {?} */classNames=cssSelector.classNames;var/** @type {?} */attrs=cssSelector.attrs;for(var/** @type {?} */i=0;i<this._listContexts.length;i++){this._listContexts[i].alreadyMatched=false;}result=this._matchTerminal(this._elementMap,element,cssSelector,matchedCallback)||result;result=this._matchPartial(this._elementPartialMap,element,cssSelector,matchedCallback)||result;if(classNames){for(var/** @type {?} */_i2=0;_i2<classNames.length;_i2++){var/** @type {?} */className=classNames[_i2];result=this._matchTerminal(this._classMap,className,cssSelector,matchedCallback)||result;result=this._matchPartial(this._classPartialMap,className,cssSelector,matchedCallback)||result;}}if(attrs){for(var/** @type {?} */_i3=0;_i3<attrs.length;_i3+=2){var/** @type {?} */name=attrs[_i3];var/** @type {?} */value=attrs[_i3+1];var/** @type {?} */terminalValuesMap=this._attrValueMap.get(name);if(value){result=this._matchTerminal(terminalValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchTerminal(terminalValuesMap,value,cssSelector,matchedCallback)||result;var/** @type {?} */partialValuesMap=this._attrValuePartialMap.get(name);if(value){result=this._matchPartial(partialValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchPartial(partialValuesMap,value,cssSelector,matchedCallback)||result;}}return result;}/**
     * \@internal
     * @param {?} map
     * @param {?} name
     * @param {?} cssSelector
     * @param {?} matchedCallback
     * @return {?}
     */},{key:'_matchTerminal',value:function _matchTerminal(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var/** @type {?} */selectables=map.get(name)||[];var/** @type {?} */starSelectables=map.get('*');if(starSelectables){selectables=selectables.concat(starSelectables);}if(selectables.length===0){return false;}var/** @type {?} */selectable=void 0;var/** @type {?} */result=false;for(var/** @type {?} */i=0;i<selectables.length;i++){selectable=selectables[i];result=selectable.finalize(cssSelector,matchedCallback)||result;}return result;}/**
     * \@internal
     * @param {?} map
     * @param {?} name
     * @param {?} cssSelector
     * @param {?} matchedCallback
     * @return {?}
     */},{key:'_matchPartial',value:function _matchPartial(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var/** @type {?} */nestedSelector=map.get(name);if(!nestedSelector){return false;}// TODO(perf): get rid of recursion and measure again
// TODO(perf): don't pass the whole selector into the recursion,
// but only the not processed parts
return nestedSelector.match(cssSelector,matchedCallback);}}],[{key:'createNotMatcher',value:function createNotMatcher(notSelectors){var/** @type {?} */notMatcher=new SelectorMatcher();notMatcher.addSelectables(notSelectors,null);return notMatcher;}}]);return SelectorMatcher;}();var SelectorListContext=/**
     * @param {?} selectors
     */function SelectorListContext(selectors){_classCallCheck(this,SelectorListContext);this.selectors=selectors;this.alreadyMatched=false;};var SelectorContext=function(){/**
     * @param {?} selector
     * @param {?} cbContext
     * @param {?} listContext
     */function SelectorContext(selector,cbContext,listContext){_classCallCheck(this,SelectorContext);this.selector=selector;this.cbContext=cbContext;this.listContext=listContext;this.notSelectors=selector.notSelectors;}/**
     * @param {?} cssSelector
     * @param {?} callback
     * @return {?}
     */_createClass(SelectorContext,[{key:'finalize',value:function finalize(cssSelector,callback){var/** @type {?} */result=true;if(this.notSelectors.length>0&&(!this.listContext||!this.listContext.alreadyMatched)){var/** @type {?} */notMatcher=SelectorMatcher.createNotMatcher(this.notSelectors);result=!notMatcher.match(cssSelector,null);}if(result&&callback&&(!this.listContext||!this.listContext.alreadyMatched)){if(this.listContext){this.listContext.alreadyMatched=true;}callback(this.selector,this.cbContext);}return result;}}]);return SelectorContext;}();var/** @type {?} */MODULE_SUFFIX='';var/** @type {?} */DASH_CASE_REGEXP=/-+([a-z0-9])/g;/**
 * @param {?} input
 * @return {?}
 */function dashCaseToCamelCase(input){return input.replace(DASH_CASE_REGEXP,function(){for(var _len=arguments.length,m=Array(_len),_key=0;_key<_len;_key++){m[_key]=arguments[_key];}return m[1].toUpperCase();});}/**
 * @param {?} input
 * @param {?} defaultValues
 * @return {?}
 */function splitAtColon(input,defaultValues){return _splitAt(input,':',defaultValues);}/**
 * @param {?} input
 * @param {?} defaultValues
 * @return {?}
 */function splitAtPeriod(input,defaultValues){return _splitAt(input,'.',defaultValues);}/**
 * @param {?} input
 * @param {?} character
 * @param {?} defaultValues
 * @return {?}
 */function _splitAt(input,character,defaultValues){var/** @type {?} */characterIndex=input.indexOf(character);if(characterIndex==-1)return defaultValues;return[input.slice(0,characterIndex).trim(),input.slice(characterIndex+1).trim()];}/**
 * @param {?} value
 * @param {?} visitor
 * @param {?} context
 * @return {?}
 */function visitValue(value,visitor,context){if(Array.isArray(value)){return visitor.visitArray(/** @type {?} */value,context);}if(isStrictStringMap(value)){return visitor.visitStringMap(/** @type {?} */value,context);}if(value==null||isPrimitive(value)){return visitor.visitPrimitive(value,context);}return visitor.visitOther(value,context);}var ValueTransformer=function(){function ValueTransformer(){_classCallCheck(this,ValueTransformer);}_createClass(ValueTransformer,[{key:'visitArray',/**
     * @param {?} arr
     * @param {?} context
     * @return {?}
     */value:function visitArray(arr,context){var _this2=this;return arr.map(function(value){return visitValue(value,_this2,context);});}/**
     * @param {?} map
     * @param {?} context
     * @return {?}
     */},{key:'visitStringMap',value:function visitStringMap(map,context){var _this3=this;var/** @type {?} */result={};Object.keys(map).forEach(function(key){result[key]=visitValue(map[key],_this3,context);});return result;}/**
     * @param {?} value
     * @param {?} context
     * @return {?}
     */},{key:'visitPrimitive',value:function visitPrimitive(value,context){return value;}/**
     * @param {?} value
     * @param {?} context
     * @return {?}
     */},{key:'visitOther',value:function visitOther(value,context){return value;}}]);return ValueTransformer;}();var SyncAsyncResult=/**
     * @param {?} syncResult
     * @param {?=} asyncResult
     */function SyncAsyncResult(syncResult){var asyncResult=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,SyncAsyncResult);this.syncResult=syncResult;this.asyncResult=asyncResult;if(!asyncResult){this.asyncResult=Promise.resolve(syncResult);}};/**
 * @param {?} msg
 * @return {?}
 */function syntaxError(msg){var/** @type {?} */error=Error(msg);error[ERROR_SYNTAX_ERROR]=true;return error;}var/** @type {?} */ERROR_SYNTAX_ERROR='ngSyntaxError';/**
 * @param {?} error
 * @return {?}
 */function isSyntaxError(error){return error[ERROR_SYNTAX_ERROR];}// group 0: "[prop] or (event) or @trigger"
// group 1: "prop" from "[prop]"
// group 2: "event" from "(event)"
// group 3: "@trigger" from "@trigger"
var/** @type {?} */HOST_REG_EXP=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;var CompileAnimationEntryMetadata=/**
     * @param {?=} name
     * @param {?=} definitions
     */function CompileAnimationEntryMetadata(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var definitions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,CompileAnimationEntryMetadata);this.name=name;this.definitions=definitions;};/**
 * @abstract
 */var CompileAnimationStateMetadata=function CompileAnimationStateMetadata(){_classCallCheck(this,CompileAnimationStateMetadata);};var CompileAnimationStateDeclarationMetadata=function(_CompileAnimationStat){_inherits(CompileAnimationStateDeclarationMetadata,_CompileAnimationStat);/**
     * @param {?} stateNameExpr
     * @param {?} styles
     */function CompileAnimationStateDeclarationMetadata(stateNameExpr,styles){_classCallCheck(this,CompileAnimationStateDeclarationMetadata);var _this4=_possibleConstructorReturn(this,(CompileAnimationStateDeclarationMetadata.__proto__||Object.getPrototypeOf(CompileAnimationStateDeclarationMetadata)).call(this));_this4.stateNameExpr=stateNameExpr;_this4.styles=styles;return _this4;}return CompileAnimationStateDeclarationMetadata;}(CompileAnimationStateMetadata);var CompileAnimationStateTransitionMetadata=function(_CompileAnimationStat2){_inherits(CompileAnimationStateTransitionMetadata,_CompileAnimationStat2);/**
     * @param {?} stateChangeExpr
     * @param {?} steps
     */function CompileAnimationStateTransitionMetadata(stateChangeExpr,steps){_classCallCheck(this,CompileAnimationStateTransitionMetadata);var _this5=_possibleConstructorReturn(this,(CompileAnimationStateTransitionMetadata.__proto__||Object.getPrototypeOf(CompileAnimationStateTransitionMetadata)).call(this));_this5.stateChangeExpr=stateChangeExpr;_this5.steps=steps;return _this5;}return CompileAnimationStateTransitionMetadata;}(CompileAnimationStateMetadata);/**
 * @abstract
 */var CompileAnimationMetadata=function CompileAnimationMetadata(){_classCallCheck(this,CompileAnimationMetadata);};var CompileAnimationKeyframesSequenceMetadata=function(_CompileAnimationMeta){_inherits(CompileAnimationKeyframesSequenceMetadata,_CompileAnimationMeta);/**
     * @param {?=} steps
     */function CompileAnimationKeyframesSequenceMetadata(){var steps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,CompileAnimationKeyframesSequenceMetadata);var _this6=_possibleConstructorReturn(this,(CompileAnimationKeyframesSequenceMetadata.__proto__||Object.getPrototypeOf(CompileAnimationKeyframesSequenceMetadata)).call(this));_this6.steps=steps;return _this6;}return CompileAnimationKeyframesSequenceMetadata;}(CompileAnimationMetadata);var CompileAnimationStyleMetadata=function(_CompileAnimationMeta2){_inherits(CompileAnimationStyleMetadata,_CompileAnimationMeta2);/**
     * @param {?} offset
     * @param {?=} styles
     */function CompileAnimationStyleMetadata(offset){var styles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,CompileAnimationStyleMetadata);var _this7=_possibleConstructorReturn(this,(CompileAnimationStyleMetadata.__proto__||Object.getPrototypeOf(CompileAnimationStyleMetadata)).call(this));_this7.offset=offset;_this7.styles=styles;return _this7;}return CompileAnimationStyleMetadata;}(CompileAnimationMetadata);var CompileAnimationAnimateMetadata=function(_CompileAnimationMeta3){_inherits(CompileAnimationAnimateMetadata,_CompileAnimationMeta3);/**
     * @param {?=} timings
     * @param {?=} styles
     */function CompileAnimationAnimateMetadata(){var timings=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var styles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,CompileAnimationAnimateMetadata);var _this8=_possibleConstructorReturn(this,(CompileAnimationAnimateMetadata.__proto__||Object.getPrototypeOf(CompileAnimationAnimateMetadata)).call(this));_this8.timings=timings;_this8.styles=styles;return _this8;}return CompileAnimationAnimateMetadata;}(CompileAnimationMetadata);/**
 * @abstract
 */var CompileAnimationWithStepsMetadata=function(_CompileAnimationMeta4){_inherits(CompileAnimationWithStepsMetadata,_CompileAnimationMeta4);/**
     * @param {?=} steps
     */function CompileAnimationWithStepsMetadata(){var steps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,CompileAnimationWithStepsMetadata);var _this9=_possibleConstructorReturn(this,(CompileAnimationWithStepsMetadata.__proto__||Object.getPrototypeOf(CompileAnimationWithStepsMetadata)).call(this));_this9.steps=steps;return _this9;}return CompileAnimationWithStepsMetadata;}(CompileAnimationMetadata);var CompileAnimationSequenceMetadata=function(_CompileAnimationWith){_inherits(CompileAnimationSequenceMetadata,_CompileAnimationWith);/**
     * @param {?=} steps
     */function CompileAnimationSequenceMetadata(){var steps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,CompileAnimationSequenceMetadata);return _possibleConstructorReturn(this,(CompileAnimationSequenceMetadata.__proto__||Object.getPrototypeOf(CompileAnimationSequenceMetadata)).call(this,steps));}return CompileAnimationSequenceMetadata;}(CompileAnimationWithStepsMetadata);var CompileAnimationGroupMetadata=function(_CompileAnimationWith2){_inherits(CompileAnimationGroupMetadata,_CompileAnimationWith2);/**
     * @param {?=} steps
     */function CompileAnimationGroupMetadata(){var steps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,CompileAnimationGroupMetadata);return _possibleConstructorReturn(this,(CompileAnimationGroupMetadata.__proto__||Object.getPrototypeOf(CompileAnimationGroupMetadata)).call(this,steps));}return CompileAnimationGroupMetadata;}(CompileAnimationWithStepsMetadata);/**
 * @param {?} name
 * @return {?}
 */function _sanitizeIdentifier(name){return name.replace(/\W/g,'_');}var/** @type {?} */_anonymousTypeIndex=0;/**
 * @param {?} compileIdentifier
 * @return {?}
 */function identifierName(compileIdentifier){if(!compileIdentifier||!compileIdentifier.reference){return null;}var/** @type {?} */ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.name;}if(ref['__anonymousType']){return ref['__anonymousType'];}var/** @type {?} */identifier=stringify(ref);if(identifier.indexOf('(')>=0){// case: anonymous functions!
identifier='anonymous_'+_anonymousTypeIndex++;ref['__anonymousType']=identifier;}else{identifier=_sanitizeIdentifier(identifier);}return identifier;}/**
 * @param {?} compileIdentifier
 * @return {?}
 */function identifierModuleUrl(compileIdentifier){var/** @type {?} */ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.filePath;}return __WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */].importUri(ref);}/**
 * @param {?} compType
 * @param {?} embeddedTemplateIndex
 * @return {?}
 */function viewClassName(compType,embeddedTemplateIndex){return'View_'+identifierName({reference:compType})+'_'+embeddedTemplateIndex;}/**
 * @param {?} compType
 * @return {?}
 */function rendererTypeName(compType){return'RenderType_'+identifierName({reference:compType});}/**
 * @param {?} compType
 * @return {?}
 */function hostViewClassName(compType){return'HostView_'+identifierName({reference:compType});}/**
 * @param {?} dirType
 * @return {?}
 */function dirWrapperClassName(dirType){return'Wrapper_'+identifierName({reference:dirType});}/**
 * @param {?} compType
 * @return {?}
 */function componentFactoryName(compType){return identifierName({reference:compType})+'NgFactory';}var CompileSummaryKind={};CompileSummaryKind.Pipe=0;CompileSummaryKind.Directive=1;CompileSummaryKind.NgModule=2;CompileSummaryKind.Injectable=3;CompileSummaryKind[CompileSummaryKind.Pipe]="Pipe";CompileSummaryKind[CompileSummaryKind.Directive]="Directive";CompileSummaryKind[CompileSummaryKind.NgModule]="NgModule";CompileSummaryKind[CompileSummaryKind.Injectable]="Injectable";/**
 * @param {?} token
 * @return {?}
 */function tokenName(token){return isPresent(token.value)?_sanitizeIdentifier(token.value):identifierName(token.identifier);}/**
 * @param {?} token
 * @return {?}
 */function tokenReference(token){if(isPresent(token.identifier)){return token.identifier.reference;}else{return token.value;}}/**
 * Metadata about a stylesheet
 */var CompileStylesheetMetadata=/**
     * @param {?=} __0
     */function CompileStylesheetMetadata(){var _ref2=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},moduleUrl=_ref2.moduleUrl,styles=_ref2.styles,styleUrls=_ref2.styleUrls;_classCallCheck(this,CompileStylesheetMetadata);this.moduleUrl=moduleUrl;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);};/**
 * Metadata regarding compilation of a template.
 */var CompileTemplateMetadata=function(){/**
     * @param {?=} __0
     */function CompileTemplateMetadata(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},encapsulation=_ref3.encapsulation,template=_ref3.template,templateUrl=_ref3.templateUrl,styles=_ref3.styles,styleUrls=_ref3.styleUrls,externalStylesheets=_ref3.externalStylesheets,animations=_ref3.animations,ngContentSelectors=_ref3.ngContentSelectors,interpolation=_ref3.interpolation;_classCallCheck(this,CompileTemplateMetadata);this.encapsulation=encapsulation;this.template=template;this.templateUrl=templateUrl;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);this.externalStylesheets=_normalizeArray(externalStylesheets);this.animations=animations?ListWrapper.flatten(animations):[];this.ngContentSelectors=ngContentSelectors||[];if(interpolation&&interpolation.length!=2){throw new Error('\'interpolation\' should have a start and an end symbol.');}this.interpolation=interpolation;}/**
     * @return {?}
     */_createClass(CompileTemplateMetadata,[{key:'toSummary',value:function toSummary(){return{animations:this.animations.map(function(anim){return anim.name;}),ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation};}}]);return CompileTemplateMetadata;}();/**
 * Metadata regarding compilation of a directive.
 */var CompileDirectiveMetadata=function(){_createClass(CompileDirectiveMetadata,null,[{key:'create',/**
     * @param {?=} __0
     * @return {?}
     */value:function create(){var _ref4=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},isHost=_ref4.isHost,type=_ref4.type,isComponent=_ref4.isComponent,selector=_ref4.selector,exportAs=_ref4.exportAs,changeDetection=_ref4.changeDetection,inputs=_ref4.inputs,outputs=_ref4.outputs,host=_ref4.host,providers=_ref4.providers,viewProviders=_ref4.viewProviders,queries=_ref4.queries,viewQueries=_ref4.viewQueries,entryComponents=_ref4.entryComponents,template=_ref4.template,wrapperType=_ref4.wrapperType,componentViewType=_ref4.componentViewType,rendererType=_ref4.rendererType,componentFactory=_ref4.componentFactory;var/** @type {?} */hostListeners={};var/** @type {?} */hostProperties={};var/** @type {?} */hostAttributes={};if(isPresent(host)){Object.keys(host).forEach(function(key){var/** @type {?} */value=host[key];var/** @type {?} */matches=key.match(HOST_REG_EXP);if(matches===null){hostAttributes[key]=value;}else if(isPresent(matches[1])){hostProperties[matches[1]]=value;}else if(isPresent(matches[2])){hostListeners[matches[2]]=value;}});}var/** @type {?} */inputsMap={};if(isPresent(inputs)){inputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var/** @type {?} */parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);inputsMap[parts[0]]=parts[1];});}var/** @type {?} */outputsMap={};if(isPresent(outputs)){outputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var/** @type {?} */parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);outputsMap[parts[0]]=parts[1];});}return new CompileDirectiveMetadata({isHost:isHost,type:type,isComponent:!!isComponent,selector:selector,exportAs:exportAs,changeDetection:changeDetection,inputs:inputsMap,outputs:outputsMap,hostListeners:hostListeners,hostProperties:hostProperties,hostAttributes:hostAttributes,providers:providers,viewProviders:viewProviders,queries:queries,viewQueries:viewQueries,entryComponents:entryComponents,template:template,wrapperType:wrapperType,componentViewType:componentViewType,rendererType:rendererType,componentFactory:componentFactory});}/**
     * @param {?=} __0
     */}]);function CompileDirectiveMetadata(){var _ref5=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},isHost=_ref5.isHost,type=_ref5.type,isComponent=_ref5.isComponent,selector=_ref5.selector,exportAs=_ref5.exportAs,changeDetection=_ref5.changeDetection,inputs=_ref5.inputs,outputs=_ref5.outputs,hostListeners=_ref5.hostListeners,hostProperties=_ref5.hostProperties,hostAttributes=_ref5.hostAttributes,providers=_ref5.providers,viewProviders=_ref5.viewProviders,queries=_ref5.queries,viewQueries=_ref5.viewQueries,entryComponents=_ref5.entryComponents,template=_ref5.template,wrapperType=_ref5.wrapperType,componentViewType=_ref5.componentViewType,rendererType=_ref5.rendererType,componentFactory=_ref5.componentFactory;_classCallCheck(this,CompileDirectiveMetadata);this.isHost=!!isHost;this.type=type;this.isComponent=isComponent;this.selector=selector;this.exportAs=exportAs;this.changeDetection=changeDetection;this.inputs=inputs;this.outputs=outputs;this.hostListeners=hostListeners;this.hostProperties=hostProperties;this.hostAttributes=hostAttributes;this.providers=_normalizeArray(providers);this.viewProviders=_normalizeArray(viewProviders);this.queries=_normalizeArray(queries);this.viewQueries=_normalizeArray(viewQueries);this.entryComponents=_normalizeArray(entryComponents);this.template=template;this.wrapperType=wrapperType;this.componentViewType=componentViewType;this.rendererType=rendererType;this.componentFactory=componentFactory;}/**
     * @return {?}
     */_createClass(CompileDirectiveMetadata,[{key:'toSummary',value:function toSummary(){return{summaryKind:CompileSummaryKind.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),wrapperType:this.wrapperType,componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory};}}]);return CompileDirectiveMetadata;}();/**
 * Construct {\@link CompileDirectiveMetadata} from {\@link ComponentTypeMetadata} and a selector.
 * @param {?} hostTypeReference
 * @param {?} compMeta
 * @param {?} hostViewType
 * @return {?}
 */function createHostComponentMeta(hostTypeReference,compMeta,hostViewType){var/** @type {?} */template=CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();return CompileDirectiveMetadata.create({isHost:true,type:{reference:hostTypeReference,diDeps:[],lifecycleHooks:[]},template:new CompileTemplateMetadata({encapsulation:__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,template:template,templateUrl:'',styles:[],styleUrls:[],ngContentSelectors:[],animations:[]}),changeDetection:__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].Default,inputs:[],outputs:[],host:{},isComponent:true,selector:'*',providers:[],viewProviders:[],queries:[],viewQueries:[],componentViewType:hostViewType,rendererType:{id:'__Host__',encapsulation:__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,styles:[],data:{}}});}var CompilePipeMetadata=function(){/**
     * @param {?=} __0
     */function CompilePipeMetadata(){var _ref6=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},type=_ref6.type,name=_ref6.name,pure=_ref6.pure;_classCallCheck(this,CompilePipeMetadata);this.type=type;this.name=name;this.pure=!!pure;}/**
     * @return {?}
     */_createClass(CompilePipeMetadata,[{key:'toSummary',value:function toSummary(){return{summaryKind:CompileSummaryKind.Pipe,type:this.type,name:this.name,pure:this.pure};}}]);return CompilePipeMetadata;}();/**
 * Metadata regarding compilation of a module.
 */var CompileNgModuleMetadata=function(){/**
     * @param {?=} __0
     */function CompileNgModuleMetadata(){var _ref7=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},type=_ref7.type,providers=_ref7.providers,declaredDirectives=_ref7.declaredDirectives,exportedDirectives=_ref7.exportedDirectives,declaredPipes=_ref7.declaredPipes,exportedPipes=_ref7.exportedPipes,entryComponents=_ref7.entryComponents,bootstrapComponents=_ref7.bootstrapComponents,importedModules=_ref7.importedModules,exportedModules=_ref7.exportedModules,schemas=_ref7.schemas,transitiveModule=_ref7.transitiveModule,id=_ref7.id;_classCallCheck(this,CompileNgModuleMetadata);this.type=type;this.declaredDirectives=_normalizeArray(declaredDirectives);this.exportedDirectives=_normalizeArray(exportedDirectives);this.declaredPipes=_normalizeArray(declaredPipes);this.exportedPipes=_normalizeArray(exportedPipes);this.providers=_normalizeArray(providers);this.entryComponents=_normalizeArray(entryComponents);this.bootstrapComponents=_normalizeArray(bootstrapComponents);this.importedModules=_normalizeArray(importedModules);this.exportedModules=_normalizeArray(exportedModules);this.schemas=_normalizeArray(schemas);this.id=id;this.transitiveModule=transitiveModule;}/**
     * @return {?}
     */_createClass(CompileNgModuleMetadata,[{key:'toSummary',value:function toSummary(){return{summaryKind:CompileSummaryKind.NgModule,type:this.type,entryComponents:this.transitiveModule.entryComponents,providers:this.transitiveModule.providers,modules:this.transitiveModule.modules,exportedDirectives:this.transitiveModule.exportedDirectives,exportedPipes:this.transitiveModule.exportedPipes};}}]);return CompileNgModuleMetadata;}();var TransitiveCompileNgModuleMetadata=function(){function TransitiveCompileNgModuleMetadata(){_classCallCheck(this,TransitiveCompileNgModuleMetadata);this.directivesSet=new Set();this.directives=[];this.exportedDirectivesSet=new Set();this.exportedDirectives=[];this.pipesSet=new Set();this.pipes=[];this.exportedPipesSet=new Set();this.exportedPipes=[];this.modulesSet=new Set();this.modules=[];this.entryComponentsSet=new Set();this.entryComponents=[];this.providers=[];}/**
     * @param {?} provider
     * @param {?} module
     * @return {?}
     */_createClass(TransitiveCompileNgModuleMetadata,[{key:'addProvider',value:function addProvider(provider,module){this.providers.push({provider:provider,module:module});}/**
     * @param {?} id
     * @return {?}
     */},{key:'addDirective',value:function addDirective(id){if(!this.directivesSet.has(id.reference)){this.directivesSet.add(id.reference);this.directives.push(id);}}/**
     * @param {?} id
     * @return {?}
     */},{key:'addExportedDirective',value:function addExportedDirective(id){if(!this.exportedDirectivesSet.has(id.reference)){this.exportedDirectivesSet.add(id.reference);this.exportedDirectives.push(id);}}/**
     * @param {?} id
     * @return {?}
     */},{key:'addPipe',value:function addPipe(id){if(!this.pipesSet.has(id.reference)){this.pipesSet.add(id.reference);this.pipes.push(id);}}/**
     * @param {?} id
     * @return {?}
     */},{key:'addExportedPipe',value:function addExportedPipe(id){if(!this.exportedPipesSet.has(id.reference)){this.exportedPipesSet.add(id.reference);this.exportedPipes.push(id);}}/**
     * @param {?} id
     * @return {?}
     */},{key:'addModule',value:function addModule(id){if(!this.modulesSet.has(id.reference)){this.modulesSet.add(id.reference);this.modules.push(id);}}/**
     * @param {?} ec
     * @return {?}
     */},{key:'addEntryComponent',value:function addEntryComponent(ec){if(!this.entryComponentsSet.has(ec.componentType)){this.entryComponentsSet.add(ec.componentType);this.entryComponents.push(ec);}}}]);return TransitiveCompileNgModuleMetadata;}();/**
 * @param {?} obj
 * @return {?}
 */function _normalizeArray(obj){return obj||[];}var ProviderMeta=/**
     * @param {?} token
     * @param {?} __1
     */function ProviderMeta(token,_ref8){var useClass=_ref8.useClass,useValue=_ref8.useValue,useExisting=_ref8.useExisting,useFactory=_ref8.useFactory,deps=_ref8.deps,multi=_ref8.multi;_classCallCheck(this,ProviderMeta);this.token=token;this.useClass=useClass;this.useValue=useValue;this.useExisting=useExisting;this.useFactory=useFactory;this.dependencies=deps;this.multi=!!multi;};var/** @type {?} */CORE=assetUrl('core');var/** @type {?} */VIEW_UTILS_MODULE_URL=assetUrl('core','linker/view_utils');var Identifiers=function Identifiers(){_classCallCheck(this,Identifiers);};Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS={name:'ANALYZE_FOR_ENTRY_COMPONENTS',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_13" /* ANALYZE_FOR_ENTRY_COMPONENTS */]};Identifiers.ViewUtils={name:'ɵViewUtils',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_17" /* ɵViewUtils */]};Identifiers.AppView={name:'ɵAppView',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_18" /* ɵAppView */]};Identifiers.DebugAppView={name:'ɵDebugAppView',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_19" /* ɵDebugAppView */]};Identifiers.ViewContainer={name:'ɵViewContainer',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_20" /* ɵViewContainer */]};Identifiers.ElementRef={name:'ElementRef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */]};Identifiers.ViewContainerRef={name:'ViewContainerRef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */]};Identifiers.ChangeDetectorRef={name:'ChangeDetectorRef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["C" /* ChangeDetectorRef */]};Identifiers.RenderComponentType={name:'RenderComponentType',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_21" /* RenderComponentType */]};Identifiers.QueryList={name:'QueryList',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_22" /* QueryList */]};Identifiers.TemplateRef={name:'TemplateRef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */]};Identifiers.TemplateRef_={name:'ɵTemplateRef_',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_23" /* ɵTemplateRef_ */]};Identifiers.CodegenComponentFactoryResolver={name:'ɵCodegenComponentFactoryResolver',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_24" /* ɵCodegenComponentFactoryResolver */]};Identifiers.ComponentFactoryResolver={name:'ComponentFactoryResolver',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["v" /* ComponentFactoryResolver */]};Identifiers.ComponentFactory={name:'ComponentFactory',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_25" /* ComponentFactory */]};Identifiers.ComponentRef_={name:'ɵComponentRef_',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_26" /* ɵComponentRef_ */]};Identifiers.ComponentRef={name:'ComponentRef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_27" /* ComponentRef */]};Identifiers.NgModuleFactory={name:'NgModuleFactory',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_28" /* NgModuleFactory */]};Identifiers.NgModuleInjector={name:'ɵNgModuleInjector',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_29" /* ɵNgModuleInjector */]};Identifiers.RegisterModuleFactoryFn={name:'ɵregisterModuleFactory',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_30" /* ɵregisterModuleFactory */]};Identifiers.ValueUnwrapper={name:'ɵValueUnwrapper',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_31" /* ɵValueUnwrapper */]};Identifiers.Injector={name:'Injector',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["x" /* Injector */]};Identifiers.ViewEncapsulation={name:'ViewEncapsulation',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */]};Identifiers.ViewType={name:'ɵViewType',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */]};Identifiers.ChangeDetectionStrategy={name:'ChangeDetectionStrategy',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */]};Identifiers.StaticNodeDebugInfo={name:'ɵStaticNodeDebugInfo',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_33" /* ɵStaticNodeDebugInfo */]};Identifiers.DebugContext={name:'ɵDebugContext',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_34" /* ɵDebugContext */]};Identifiers.Renderer={name:'Renderer',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */]};Identifiers.SimpleChange={name:'SimpleChange',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_35" /* SimpleChange */]};Identifiers.ChangeDetectorStatus={name:'ɵChangeDetectorStatus',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_36" /* ɵChangeDetectorStatus */]};Identifiers.checkBinding={name:'ɵcheckBinding',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_37" /* ɵcheckBinding */]};Identifiers.checkBindingChange={name:'ɵcheckBindingChange',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_38" /* ɵcheckBindingChange */]};Identifiers.checkRenderText={name:'ɵcheckRenderText',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_39" /* ɵcheckRenderText */]};Identifiers.checkRenderProperty={name:'ɵcheckRenderProperty',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_40" /* ɵcheckRenderProperty */]};Identifiers.checkRenderAttribute={name:'ɵcheckRenderAttribute',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_41" /* ɵcheckRenderAttribute */]};Identifiers.checkRenderClass={name:'ɵcheckRenderClass',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_42" /* ɵcheckRenderClass */]};Identifiers.checkRenderStyle={name:'ɵcheckRenderStyle',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_43" /* ɵcheckRenderStyle */]};Identifiers.devModeEqual={name:'ɵdevModeEqual',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_44" /* ɵdevModeEqual */]};Identifiers.inlineInterpolate={name:'ɵinlineInterpolate',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_45" /* ɵinlineInterpolate */]};Identifiers.interpolate={name:'ɵinterpolate',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_46" /* ɵinterpolate */]};Identifiers.castByValue={name:'ɵcastByValue',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_47" /* ɵcastByValue */]};Identifiers.EMPTY_ARRAY={name:'ɵEMPTY_ARRAY',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_48" /* ɵEMPTY_ARRAY */]};Identifiers.EMPTY_MAP={name:'ɵEMPTY_MAP',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_49" /* ɵEMPTY_MAP */]};Identifiers.createRenderElement={name:'ɵcreateRenderElement',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_50" /* ɵcreateRenderElement */]};Identifiers.selectOrCreateRenderHostElement={name:'ɵselectOrCreateRenderHostElement',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_51" /* ɵselectOrCreateRenderHostElement */]};Identifiers.pureProxies=[null,{name:'ɵpureProxy1',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_52" /* ɵpureProxy1 */]},{name:'ɵpureProxy2',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_53" /* ɵpureProxy2 */]},{name:'ɵpureProxy3',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_54" /* ɵpureProxy3 */]},{name:'ɵpureProxy4',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_55" /* ɵpureProxy4 */]},{name:'ɵpureProxy5',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_56" /* ɵpureProxy5 */]},{name:'ɵpureProxy6',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_57" /* ɵpureProxy6 */]},{name:'ɵpureProxy7',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_58" /* ɵpureProxy7 */]},{name:'ɵpureProxy8',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_59" /* ɵpureProxy8 */]},{name:'ɵpureProxy9',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_60" /* ɵpureProxy9 */]},{name:'ɵpureProxy10',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_61" /* ɵpureProxy10 */]}];Identifiers.SecurityContext={name:'SecurityContext',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */]};Identifiers.AnimationKeyframe={name:'ɵAnimationKeyframe',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_62" /* ɵAnimationKeyframe */]};Identifiers.AnimationStyles={name:'ɵAnimationStyles',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_63" /* ɵAnimationStyles */]};Identifiers.NoOpAnimationPlayer={name:'ɵNoOpAnimationPlayer',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["N" /* ɵNoOpAnimationPlayer */]};Identifiers.AnimationGroupPlayer={name:'ɵAnimationGroupPlayer',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_64" /* ɵAnimationGroupPlayer */]};Identifiers.AnimationSequencePlayer={name:'ɵAnimationSequencePlayer',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_65" /* ɵAnimationSequencePlayer */]};Identifiers.prepareFinalAnimationStyles={name:'ɵprepareFinalAnimationStyles',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_66" /* ɵprepareFinalAnimationStyles */]};Identifiers.balanceAnimationKeyframes={name:'ɵbalanceAnimationKeyframes',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_67" /* ɵbalanceAnimationKeyframes */]};Identifiers.clearStyles={name:'ɵclearStyles',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_68" /* ɵclearStyles */]};Identifiers.renderStyles={name:'ɵrenderStyles',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_69" /* ɵrenderStyles */]};Identifiers.collectAndResolveStyles={name:'ɵcollectAndResolveStyles',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_70" /* ɵcollectAndResolveStyles */]};Identifiers.LOCALE_ID={name:'LOCALE_ID',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_4" /* LOCALE_ID */]};Identifiers.TRANSLATIONS_FORMAT={name:'TRANSLATIONS_FORMAT',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_71" /* TRANSLATIONS_FORMAT */]};Identifiers.setBindingDebugInfo={name:'ɵsetBindingDebugInfo',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_72" /* ɵsetBindingDebugInfo */]};Identifiers.setBindingDebugInfoForChanges={name:'ɵsetBindingDebugInfoForChanges',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_73" /* ɵsetBindingDebugInfoForChanges */]};Identifiers.AnimationTransition={name:'ɵAnimationTransition',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_74" /* ɵAnimationTransition */]};// This is just the interface!
Identifiers.InlineArray={name:'InlineArray',moduleUrl:VIEW_UTILS_MODULE_URL,runtime:null};Identifiers.inlineArrays=[{name:'ɵInlineArray2',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_75" /* ɵInlineArray2 */]},{name:'ɵInlineArray2',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_75" /* ɵInlineArray2 */]},{name:'ɵInlineArray4',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_76" /* ɵInlineArray4 */]},{name:'ɵInlineArray8',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_77" /* ɵInlineArray8 */]},{name:'ɵInlineArray16',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_78" /* ɵInlineArray16 */]}];Identifiers.EMPTY_INLINE_ARRAY={name:'ɵEMPTY_INLINE_ARRAY',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_79" /* ɵEMPTY_INLINE_ARRAY */]};Identifiers.InlineArrayDynamic={name:'ɵInlineArrayDynamic',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_80" /* ɵInlineArrayDynamic */]};Identifiers.subscribeToRenderElement={name:'ɵsubscribeToRenderElement',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_81" /* ɵsubscribeToRenderElement */]};Identifiers.createRenderComponentType={name:'ɵcreateRenderComponentType',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_82" /* ɵcreateRenderComponentType */]};Identifiers.noop={name:'ɵnoop',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_83" /* ɵnoop */]};Identifiers.viewDef={name:'ɵviewDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_84" /* ɵviewDef */]};Identifiers.elementDef={name:'ɵelementDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_85" /* ɵelementDef */]};Identifiers.anchorDef={name:'ɵanchorDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_86" /* ɵanchorDef */]};Identifiers.textDef={name:'ɵtextDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_87" /* ɵtextDef */]};Identifiers.directiveDef={name:'ɵdirectiveDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_88" /* ɵdirectiveDef */]};Identifiers.providerDef={name:'ɵproviderDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_89" /* ɵproviderDef */]};Identifiers.queryDef={name:'ɵqueryDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_90" /* ɵqueryDef */]};Identifiers.pureArrayDef={name:'ɵpureArrayDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_91" /* ɵpureArrayDef */]};Identifiers.pureObjectDef={name:'ɵpureObjectDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_92" /* ɵpureObjectDef */]};Identifiers.purePipeDef={name:'ɵpurePipeDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_93" /* ɵpurePipeDef */]};Identifiers.pipeDef={name:'ɵpipeDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_94" /* ɵpipeDef */]};Identifiers.nodeValue={name:'ɵnodeValue',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_95" /* ɵnodeValue */]};Identifiers.ngContentDef={name:'ɵngContentDef',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_96" /* ɵngContentDef */]};Identifiers.unwrapValue={name:'ɵunwrapValue',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_97" /* ɵunwrapValue */]};Identifiers.createRendererTypeV2={name:'ɵcreateRendererTypeV2',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_98" /* ɵcreateRendererTypeV2 */]};Identifiers.RendererTypeV2={name:'RendererTypeV2',moduleUrl:CORE,// type only
runtime:null};Identifiers.ViewDefinition={name:'ɵViewDefinition',moduleUrl:CORE,// type only
runtime:null};Identifiers.createComponentFactory={name:'ɵcreateComponentFactory',moduleUrl:CORE,runtime:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_99" /* ɵcreateComponentFactory */]};/**
 * @param {?} pkg
 * @param {?=} path
 * @param {?=} type
 * @return {?}
 */function assetUrl(pkg){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'src';if(path==null){return'@angular/'+pkg;}else{return'@angular/'+pkg+'/'+type+'/'+path;}}/**
 * @param {?} identifier
 * @return {?}
 */function resolveIdentifier(identifier){var/** @type {?} */name=identifier.name;return __WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */].resolveIdentifier(name,identifier.moduleUrl,null,identifier.runtime);}/**
 * @param {?} identifier
 * @return {?}
 */function createIdentifier(identifier){return{reference:resolveIdentifier(identifier)};}/**
 * @param {?} identifier
 * @return {?}
 */function identifierToken(identifier){return{identifier:identifier};}/**
 * @param {?} identifier
 * @return {?}
 */function createIdentifierToken(identifier){return identifierToken(createIdentifier(identifier));}/**
 * @param {?} enumType
 * @param {?} name
 * @return {?}
 */function createEnumIdentifier(enumType,name){var/** @type {?} */resolvedEnum=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */].resolveEnum(resolveIdentifier(enumType),name);return{reference:resolvedEnum};}/**
 * Temporal switch for the compiler to use the new view engine,
 * until it is fully integrated.
 *
 * Only works in Jit for now.
 */var/** @type {?} */USE_VIEW_ENGINE=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('UseViewEngine');var CompilerConfig=function(){/**
     * @param {?=} __0
     */function CompilerConfig(){var _ref9=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref9$renderTypes=_ref9.renderTypes,renderTypes=_ref9$renderTypes===undefined?new DefaultRenderTypes():_ref9$renderTypes,_ref9$defaultEncapsul=_ref9.defaultEncapsulation,defaultEncapsulation=_ref9$defaultEncapsul===undefined?__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].Emulated:_ref9$defaultEncapsul,genDebugInfo=_ref9.genDebugInfo,logBindingUpdate=_ref9.logBindingUpdate,_ref9$useJit=_ref9.useJit,useJit=_ref9$useJit===undefined?true:_ref9$useJit,missingTranslation=_ref9.missingTranslation,useViewEngine=_ref9.useViewEngine,enableLegacyTemplate=_ref9.enableLegacyTemplate;_classCallCheck(this,CompilerConfig);this.renderTypes=renderTypes;this.defaultEncapsulation=defaultEncapsulation;this._genDebugInfo=genDebugInfo;this._logBindingUpdate=logBindingUpdate;this.useJit=useJit;this.missingTranslation=missingTranslation;this.useViewEngine=true;this.enableLegacyTemplate=enableLegacyTemplate!==false;}/**
     * @return {?}
     */_createClass(CompilerConfig,[{key:'genDebugInfo',get:function get(){return this._genDebugInfo===void 0?__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])():this._genDebugInfo;}/**
     * @return {?}
     */},{key:'logBindingUpdate',get:function get(){return this._logBindingUpdate===void 0?__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])():this._logBindingUpdate;}}]);return CompilerConfig;}();/**
 * Types used for the renderer.
 * Can be replaced to specialize the generated output to a specific renderer
 * to help tree shaking.
 * @abstract
 */var RenderTypes=function(){function RenderTypes(){_classCallCheck(this,RenderTypes);}_createClass(RenderTypes,[{key:'renderer',/**
     * @abstract
     * @return {?}
     */value:function renderer(){}/**
     * @abstract
     * @return {?}
     */},{key:'renderText',value:function renderText(){}/**
     * @abstract
     * @return {?}
     */},{key:'renderElement',value:function renderElement(){}/**
     * @abstract
     * @return {?}
     */},{key:'renderComment',value:function renderComment(){}/**
     * @abstract
     * @return {?}
     */},{key:'renderNode',value:function renderNode(){}/**
     * @abstract
     * @return {?}
     */},{key:'renderEvent',value:function renderEvent(){}}]);return RenderTypes;}();var DefaultRenderTypes=function(){function DefaultRenderTypes(){_classCallCheck(this,DefaultRenderTypes);this.renderText=null;this.renderElement=null;this.renderComment=null;this.renderNode=null;this.renderEvent=null;}/**
     * @return {?}
     */_createClass(DefaultRenderTypes,[{key:'renderer',get:function get(){return createIdentifier(Identifiers.Renderer);}}]);return DefaultRenderTypes;}();var ParserError=/**
     * @param {?} message
     * @param {?} input
     * @param {?} errLocation
     * @param {?=} ctxLocation
     */function ParserError(message,input,errLocation,ctxLocation){_classCallCheck(this,ParserError);this.input=input;this.errLocation=errLocation;this.ctxLocation=ctxLocation;this.message='Parser Error: '+message+' '+errLocation+' ['+input+'] in '+ctxLocation;};var ParseSpan=/**
     * @param {?} start
     * @param {?} end
     */function ParseSpan(start,end){_classCallCheck(this,ParseSpan);this.start=start;this.end=end;};var AST=function(){/**
     * @param {?} span
     */function AST(span){_classCallCheck(this,AST);this.span=span;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(AST,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return null;}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return'AST';}}]);return AST;}();/**
 * Represents a quoted expression of the form:
 *
 * quote = prefix `:` uninterpretedExpression
 * prefix = identifier
 * uninterpretedExpression = arbitrary string
 *
 * A quoted expression is meant to be pre-processed by an AST transformer that
 * converts it into another AST that no longer contains quoted expressions.
 * It is meant to allow third-party developers to extend Angular template
 * expression language. The `uninterpretedExpression` part of the quote is
 * therefore not interpreted by the Angular's own expression parser.
 */var Quote=function(_AST){_inherits(Quote,_AST);/**
     * @param {?} span
     * @param {?} prefix
     * @param {?} uninterpretedExpression
     * @param {?} location
     */function Quote(span,prefix,uninterpretedExpression,location){_classCallCheck(this,Quote);var _this12=_possibleConstructorReturn(this,(Quote.__proto__||Object.getPrototypeOf(Quote)).call(this,span));_this12.prefix=prefix;_this12.uninterpretedExpression=uninterpretedExpression;_this12.location=location;return _this12;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Quote,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitQuote(this,context);}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return'Quote';}}]);return Quote;}(AST);var EmptyExpr=function(_AST2){_inherits(EmptyExpr,_AST2);function EmptyExpr(){_classCallCheck(this,EmptyExpr);return _possibleConstructorReturn(this,(EmptyExpr.__proto__||Object.getPrototypeOf(EmptyExpr)).apply(this,arguments));}_createClass(EmptyExpr,[{key:'visit',/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */value:function visit(visitor){// do nothing
var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;}}]);return EmptyExpr;}(AST);var ImplicitReceiver=function(_AST3){_inherits(ImplicitReceiver,_AST3);function ImplicitReceiver(){_classCallCheck(this,ImplicitReceiver);return _possibleConstructorReturn(this,(ImplicitReceiver.__proto__||Object.getPrototypeOf(ImplicitReceiver)).apply(this,arguments));}_createClass(ImplicitReceiver,[{key:'visit',/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitImplicitReceiver(this,context);}}]);return ImplicitReceiver;}(AST);/**
 * Multiple expressions separated by a semicolon.
 */var Chain=function(_AST4){_inherits(Chain,_AST4);/**
     * @param {?} span
     * @param {?} expressions
     */function Chain(span,expressions){_classCallCheck(this,Chain);var _this15=_possibleConstructorReturn(this,(Chain.__proto__||Object.getPrototypeOf(Chain)).call(this,span));_this15.expressions=expressions;return _this15;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Chain,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitChain(this,context);}}]);return Chain;}(AST);var Conditional=function(_AST5){_inherits(Conditional,_AST5);/**
     * @param {?} span
     * @param {?} condition
     * @param {?} trueExp
     * @param {?} falseExp
     */function Conditional(span,condition,trueExp,falseExp){_classCallCheck(this,Conditional);var _this16=_possibleConstructorReturn(this,(Conditional.__proto__||Object.getPrototypeOf(Conditional)).call(this,span));_this16.condition=condition;_this16.trueExp=trueExp;_this16.falseExp=falseExp;return _this16;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Conditional,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitConditional(this,context);}}]);return Conditional;}(AST);var PropertyRead=function(_AST6){_inherits(PropertyRead,_AST6);/**
     * @param {?} span
     * @param {?} receiver
     * @param {?} name
     */function PropertyRead(span,receiver,name){_classCallCheck(this,PropertyRead);var _this17=_possibleConstructorReturn(this,(PropertyRead.__proto__||Object.getPrototypeOf(PropertyRead)).call(this,span));_this17.receiver=receiver;_this17.name=name;return _this17;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(PropertyRead,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitPropertyRead(this,context);}}]);return PropertyRead;}(AST);var PropertyWrite=function(_AST7){_inherits(PropertyWrite,_AST7);/**
     * @param {?} span
     * @param {?} receiver
     * @param {?} name
     * @param {?} value
     */function PropertyWrite(span,receiver,name,value){_classCallCheck(this,PropertyWrite);var _this18=_possibleConstructorReturn(this,(PropertyWrite.__proto__||Object.getPrototypeOf(PropertyWrite)).call(this,span));_this18.receiver=receiver;_this18.name=name;_this18.value=value;return _this18;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(PropertyWrite,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitPropertyWrite(this,context);}}]);return PropertyWrite;}(AST);var SafePropertyRead=function(_AST8){_inherits(SafePropertyRead,_AST8);/**
     * @param {?} span
     * @param {?} receiver
     * @param {?} name
     */function SafePropertyRead(span,receiver,name){_classCallCheck(this,SafePropertyRead);var _this19=_possibleConstructorReturn(this,(SafePropertyRead.__proto__||Object.getPrototypeOf(SafePropertyRead)).call(this,span));_this19.receiver=receiver;_this19.name=name;return _this19;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(SafePropertyRead,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitSafePropertyRead(this,context);}}]);return SafePropertyRead;}(AST);var KeyedRead=function(_AST9){_inherits(KeyedRead,_AST9);/**
     * @param {?} span
     * @param {?} obj
     * @param {?} key
     */function KeyedRead(span,obj,key){_classCallCheck(this,KeyedRead);var _this20=_possibleConstructorReturn(this,(KeyedRead.__proto__||Object.getPrototypeOf(KeyedRead)).call(this,span));_this20.obj=obj;_this20.key=key;return _this20;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(KeyedRead,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitKeyedRead(this,context);}}]);return KeyedRead;}(AST);var KeyedWrite=function(_AST10){_inherits(KeyedWrite,_AST10);/**
     * @param {?} span
     * @param {?} obj
     * @param {?} key
     * @param {?} value
     */function KeyedWrite(span,obj,key,value){_classCallCheck(this,KeyedWrite);var _this21=_possibleConstructorReturn(this,(KeyedWrite.__proto__||Object.getPrototypeOf(KeyedWrite)).call(this,span));_this21.obj=obj;_this21.key=key;_this21.value=value;return _this21;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(KeyedWrite,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitKeyedWrite(this,context);}}]);return KeyedWrite;}(AST);var BindingPipe=function(_AST11){_inherits(BindingPipe,_AST11);/**
     * @param {?} span
     * @param {?} exp
     * @param {?} name
     * @param {?} args
     */function BindingPipe(span,exp,name,args){_classCallCheck(this,BindingPipe);var _this22=_possibleConstructorReturn(this,(BindingPipe.__proto__||Object.getPrototypeOf(BindingPipe)).call(this,span));_this22.exp=exp;_this22.name=name;_this22.args=args;return _this22;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(BindingPipe,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitPipe(this,context);}}]);return BindingPipe;}(AST);var LiteralPrimitive=function(_AST12){_inherits(LiteralPrimitive,_AST12);/**
     * @param {?} span
     * @param {?} value
     */function LiteralPrimitive(span,value){_classCallCheck(this,LiteralPrimitive);var _this23=_possibleConstructorReturn(this,(LiteralPrimitive.__proto__||Object.getPrototypeOf(LiteralPrimitive)).call(this,span));_this23.value=value;return _this23;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(LiteralPrimitive,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitLiteralPrimitive(this,context);}}]);return LiteralPrimitive;}(AST);var LiteralArray=function(_AST13){_inherits(LiteralArray,_AST13);/**
     * @param {?} span
     * @param {?} expressions
     */function LiteralArray(span,expressions){_classCallCheck(this,LiteralArray);var _this24=_possibleConstructorReturn(this,(LiteralArray.__proto__||Object.getPrototypeOf(LiteralArray)).call(this,span));_this24.expressions=expressions;return _this24;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(LiteralArray,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitLiteralArray(this,context);}}]);return LiteralArray;}(AST);var LiteralMap=function(_AST14){_inherits(LiteralMap,_AST14);/**
     * @param {?} span
     * @param {?} keys
     * @param {?} values
     */function LiteralMap(span,keys,values){_classCallCheck(this,LiteralMap);var _this25=_possibleConstructorReturn(this,(LiteralMap.__proto__||Object.getPrototypeOf(LiteralMap)).call(this,span));_this25.keys=keys;_this25.values=values;return _this25;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(LiteralMap,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitLiteralMap(this,context);}}]);return LiteralMap;}(AST);var Interpolation=function(_AST15){_inherits(Interpolation,_AST15);/**
     * @param {?} span
     * @param {?} strings
     * @param {?} expressions
     */function Interpolation(span,strings,expressions){_classCallCheck(this,Interpolation);var _this26=_possibleConstructorReturn(this,(Interpolation.__proto__||Object.getPrototypeOf(Interpolation)).call(this,span));_this26.strings=strings;_this26.expressions=expressions;return _this26;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Interpolation,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitInterpolation(this,context);}}]);return Interpolation;}(AST);var Binary=function(_AST16){_inherits(Binary,_AST16);/**
     * @param {?} span
     * @param {?} operation
     * @param {?} left
     * @param {?} right
     */function Binary(span,operation,left,right){_classCallCheck(this,Binary);var _this27=_possibleConstructorReturn(this,(Binary.__proto__||Object.getPrototypeOf(Binary)).call(this,span));_this27.operation=operation;_this27.left=left;_this27.right=right;return _this27;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Binary,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitBinary(this,context);}}]);return Binary;}(AST);var PrefixNot=function(_AST17){_inherits(PrefixNot,_AST17);/**
     * @param {?} span
     * @param {?} expression
     */function PrefixNot(span,expression){_classCallCheck(this,PrefixNot);var _this28=_possibleConstructorReturn(this,(PrefixNot.__proto__||Object.getPrototypeOf(PrefixNot)).call(this,span));_this28.expression=expression;return _this28;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(PrefixNot,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitPrefixNot(this,context);}}]);return PrefixNot;}(AST);var MethodCall=function(_AST18){_inherits(MethodCall,_AST18);/**
     * @param {?} span
     * @param {?} receiver
     * @param {?} name
     * @param {?} args
     */function MethodCall(span,receiver,name,args){_classCallCheck(this,MethodCall);var _this29=_possibleConstructorReturn(this,(MethodCall.__proto__||Object.getPrototypeOf(MethodCall)).call(this,span));_this29.receiver=receiver;_this29.name=name;_this29.args=args;return _this29;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(MethodCall,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitMethodCall(this,context);}}]);return MethodCall;}(AST);var SafeMethodCall=function(_AST19){_inherits(SafeMethodCall,_AST19);/**
     * @param {?} span
     * @param {?} receiver
     * @param {?} name
     * @param {?} args
     */function SafeMethodCall(span,receiver,name,args){_classCallCheck(this,SafeMethodCall);var _this30=_possibleConstructorReturn(this,(SafeMethodCall.__proto__||Object.getPrototypeOf(SafeMethodCall)).call(this,span));_this30.receiver=receiver;_this30.name=name;_this30.args=args;return _this30;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(SafeMethodCall,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitSafeMethodCall(this,context);}}]);return SafeMethodCall;}(AST);var FunctionCall=function(_AST20){_inherits(FunctionCall,_AST20);/**
     * @param {?} span
     * @param {?} target
     * @param {?} args
     */function FunctionCall(span,target,args){_classCallCheck(this,FunctionCall);var _this31=_possibleConstructorReturn(this,(FunctionCall.__proto__||Object.getPrototypeOf(FunctionCall)).call(this,span));_this31.target=target;_this31.args=args;return _this31;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(FunctionCall,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitor.visitFunctionCall(this,context);}}]);return FunctionCall;}(AST);var ASTWithSource=function(_AST21){_inherits(ASTWithSource,_AST21);/**
     * @param {?} ast
     * @param {?} source
     * @param {?} location
     * @param {?} errors
     */function ASTWithSource(ast,source,location,errors){_classCallCheck(this,ASTWithSource);var _this32=_possibleConstructorReturn(this,(ASTWithSource.__proto__||Object.getPrototypeOf(ASTWithSource)).call(this,new ParseSpan(0,isBlank(source)?0:source.length)));_this32.ast=ast;_this32.source=source;_this32.location=location;_this32.errors=errors;return _this32;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(ASTWithSource,[{key:'visit',value:function visit(visitor){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return this.ast.visit(visitor,context);}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return this.source+' in '+this.location;}}]);return ASTWithSource;}(AST);var TemplateBinding=/**
     * @param {?} span
     * @param {?} key
     * @param {?} keyIsVar
     * @param {?} name
     * @param {?} expression
     */function TemplateBinding(span,key,keyIsVar,name,expression){_classCallCheck(this,TemplateBinding);this.span=span;this.key=key;this.keyIsVar=keyIsVar;this.name=name;this.expression=expression;};var RecursiveAstVisitor=function(){function RecursiveAstVisitor(){_classCallCheck(this,RecursiveAstVisitor);}_createClass(RecursiveAstVisitor,[{key:'visitBinary',/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */value:function visitBinary(ast,context){ast.left.visit(this);ast.right.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitChain',value:function visitChain(ast,context){return this.visitAll(ast.expressions,context);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitConditional',value:function visitConditional(ast,context){ast.condition.visit(this);ast.trueExp.visit(this);ast.falseExp.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPipe',value:function visitPipe(ast,context){ast.exp.visit(this);this.visitAll(ast.args,context);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitFunctionCall',value:function visitFunctionCall(ast,context){ast.target.visit(this);this.visitAll(ast.args,context);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitImplicitReceiver',value:function visitImplicitReceiver(ast,context){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInterpolation',value:function visitInterpolation(ast,context){return this.visitAll(ast.expressions,context);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitKeyedRead',value:function visitKeyedRead(ast,context){ast.obj.visit(this);ast.key.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitKeyedWrite',value:function visitKeyedWrite(ast,context){ast.obj.visit(this);ast.key.visit(this);ast.value.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralArray',value:function visitLiteralArray(ast,context){return this.visitAll(ast.expressions,context);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralMap',value:function visitLiteralMap(ast,context){return this.visitAll(ast.values,context);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralPrimitive',value:function visitLiteralPrimitive(ast,context){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitMethodCall',value:function visitMethodCall(ast,context){ast.receiver.visit(this);return this.visitAll(ast.args,context);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPrefixNot',value:function visitPrefixNot(ast,context){ast.expression.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPropertyRead',value:function visitPropertyRead(ast,context){ast.receiver.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPropertyWrite',value:function visitPropertyWrite(ast,context){ast.receiver.visit(this);ast.value.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitSafePropertyRead',value:function visitSafePropertyRead(ast,context){ast.receiver.visit(this);return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitSafeMethodCall',value:function visitSafeMethodCall(ast,context){ast.receiver.visit(this);return this.visitAll(ast.args,context);}/**
     * @param {?} asts
     * @param {?} context
     * @return {?}
     */},{key:'visitAll',value:function visitAll(asts,context){var _this33=this;asts.forEach(function(ast){return ast.visit(_this33,context);});return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitQuote',value:function visitQuote(ast,context){return null;}}]);return RecursiveAstVisitor;}();var AstTransformer=function(){function AstTransformer(){_classCallCheck(this,AstTransformer);}_createClass(AstTransformer,[{key:'visitImplicitReceiver',/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */value:function visitImplicitReceiver(ast,context){return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInterpolation',value:function visitInterpolation(ast,context){return new Interpolation(ast.span,ast.strings,this.visitAll(ast.expressions));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralPrimitive',value:function visitLiteralPrimitive(ast,context){return new LiteralPrimitive(ast.span,ast.value);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPropertyRead',value:function visitPropertyRead(ast,context){return new PropertyRead(ast.span,ast.receiver.visit(this),ast.name);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPropertyWrite',value:function visitPropertyWrite(ast,context){return new PropertyWrite(ast.span,ast.receiver.visit(this),ast.name,ast.value);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitSafePropertyRead',value:function visitSafePropertyRead(ast,context){return new SafePropertyRead(ast.span,ast.receiver.visit(this),ast.name);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitMethodCall',value:function visitMethodCall(ast,context){return new MethodCall(ast.span,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitSafeMethodCall',value:function visitSafeMethodCall(ast,context){return new SafeMethodCall(ast.span,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitFunctionCall',value:function visitFunctionCall(ast,context){return new FunctionCall(ast.span,ast.target.visit(this),this.visitAll(ast.args));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralArray',value:function visitLiteralArray(ast,context){return new LiteralArray(ast.span,this.visitAll(ast.expressions));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralMap',value:function visitLiteralMap(ast,context){return new LiteralMap(ast.span,ast.keys,this.visitAll(ast.values));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitBinary',value:function visitBinary(ast,context){return new Binary(ast.span,ast.operation,ast.left.visit(this),ast.right.visit(this));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPrefixNot',value:function visitPrefixNot(ast,context){return new PrefixNot(ast.span,ast.expression.visit(this));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitConditional',value:function visitConditional(ast,context){return new Conditional(ast.span,ast.condition.visit(this),ast.trueExp.visit(this),ast.falseExp.visit(this));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPipe',value:function visitPipe(ast,context){return new BindingPipe(ast.span,ast.exp.visit(this),ast.name,this.visitAll(ast.args));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitKeyedRead',value:function visitKeyedRead(ast,context){return new KeyedRead(ast.span,ast.obj.visit(this),ast.key.visit(this));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitKeyedWrite',value:function visitKeyedWrite(ast,context){return new KeyedWrite(ast.span,ast.obj.visit(this),ast.key.visit(this),ast.value.visit(this));}/**
     * @param {?} asts
     * @return {?}
     */},{key:'visitAll',value:function visitAll(asts){var/** @type {?} */res=new Array(asts.length);for(var/** @type {?} */i=0;i<asts.length;++i){res[i]=asts[i].visit(this);}return res;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitChain',value:function visitChain(ast,context){return new Chain(ast.span,this.visitAll(ast.expressions));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitQuote',value:function visitQuote(ast,context){return new Quote(ast.span,ast.prefix,ast.uninterpretedExpression,ast.location);}}]);return AstTransformer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */$EOF=0;var/** @type {?} */$TAB=9;var/** @type {?} */$LF=10;var/** @type {?} */$VTAB=11;var/** @type {?} */$FF=12;var/** @type {?} */$CR=13;var/** @type {?} */$SPACE=32;var/** @type {?} */$BANG=33;var/** @type {?} */$DQ=34;var/** @type {?} */$HASH=35;var/** @type {?} */$$=36;var/** @type {?} */$PERCENT=37;var/** @type {?} */$AMPERSAND=38;var/** @type {?} */$SQ=39;var/** @type {?} */$LPAREN=40;var/** @type {?} */$RPAREN=41;var/** @type {?} */$STAR=42;var/** @type {?} */$PLUS=43;var/** @type {?} */$COMMA=44;var/** @type {?} */$MINUS=45;var/** @type {?} */$PERIOD=46;var/** @type {?} */$SLASH=47;var/** @type {?} */$COLON=58;var/** @type {?} */$SEMICOLON=59;var/** @type {?} */$LT=60;var/** @type {?} */$EQ=61;var/** @type {?} */$GT=62;var/** @type {?} */$QUESTION=63;var/** @type {?} */$0=48;var/** @type {?} */$9=57;var/** @type {?} */$A=65;var/** @type {?} */$E=69;var/** @type {?} */$F=70;var/** @type {?} */$X=88;var/** @type {?} */$Z=90;var/** @type {?} */$LBRACKET=91;var/** @type {?} */$BACKSLASH=92;var/** @type {?} */$RBRACKET=93;var/** @type {?} */$CARET=94;var/** @type {?} */$_=95;var/** @type {?} */$a=97;var/** @type {?} */$e=101;var/** @type {?} */$f=102;var/** @type {?} */$n=110;var/** @type {?} */$r=114;var/** @type {?} */$t=116;var/** @type {?} */$u=117;var/** @type {?} */$v=118;var/** @type {?} */$x=120;var/** @type {?} */$z=122;var/** @type {?} */$LBRACE=123;var/** @type {?} */$BAR=124;var/** @type {?} */$RBRACE=125;var/** @type {?} */$NBSP=160;var/** @type {?} */$BT=96;/**
 * @param {?} code
 * @return {?}
 */function isWhitespace(code){return code>=$TAB&&code<=$SPACE||code==$NBSP;}/**
 * @param {?} code
 * @return {?}
 */function isDigit(code){return $0<=code&&code<=$9;}/**
 * @param {?} code
 * @return {?}
 */function isAsciiLetter(code){return code>=$a&&code<=$z||code>=$A&&code<=$Z;}/**
 * @param {?} code
 * @return {?}
 */function isAsciiHexDigit(code){return code>=$a&&code<=$f||code>=$A&&code<=$F||isDigit(code);}/**
 * A replacement for \@Injectable to be used in the compiler, so that
 * we don't try to evaluate the metadata in the compiler during AoT.
 * This decorator is enough to make the compiler work with the ReflectiveInjector though.
 * \@Annotation
 * @return {?}
 */function CompilerInjectable(){return function(x){return x;};}/**
 * @param {?} identifier
 * @param {?} value
 * @return {?}
 */function assertArrayOfStrings(identifier,value){if(!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])()||isBlank(value)){return;}if(!Array.isArray(value)){throw new Error('Expected \''+identifier+'\' to be an array of strings.');}for(var/** @type {?} */i=0;i<value.length;i+=1){if(typeof value[i]!=='string'){throw new Error('Expected \''+identifier+'\' to be an array of strings.');}}}var/** @type {?} */INTERPOLATION_BLACKLIST_REGEXPS=[/^\s*$/,/[<>]/,/^[{}]$/,/&(#|[a-z])/i,/^\/\//];/**
 * @param {?} identifier
 * @param {?} value
 * @return {?}
 */function assertInterpolationSymbols(identifier,value){if(isPresent(value)&&!(Array.isArray(value)&&value.length==2)){throw new Error('Expected \''+identifier+'\' to be an array, [start, end].');}else if(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])()&&!isBlank(value)){var/** @type {?} */start=value[0];var/** @type {?} */end=value[1];// black list checking
INTERPOLATION_BLACKLIST_REGEXPS.forEach(function(regexp){if(regexp.test(start)||regexp.test(end)){throw new Error('[\''+start+'\', \''+end+'\'] contains unusable interpolation symbol.');}});}}var InterpolationConfig=function(){/**
     * @param {?} start
     * @param {?} end
     */function InterpolationConfig(start,end){_classCallCheck(this,InterpolationConfig);this.start=start;this.end=end;}/**
     * @param {?} markers
     * @return {?}
     */_createClass(InterpolationConfig,null,[{key:'fromArray',value:function fromArray(markers){if(!markers){return DEFAULT_INTERPOLATION_CONFIG;}assertInterpolationSymbols('interpolation',markers);return new InterpolationConfig(markers[0],markers[1]);}}]);return InterpolationConfig;}();var/** @type {?} */DEFAULT_INTERPOLATION_CONFIG=new InterpolationConfig('{{','}}');var TokenType={};TokenType.Character=0;TokenType.Identifier=1;TokenType.Keyword=2;TokenType.String=3;TokenType.Operator=4;TokenType.Number=5;TokenType.Error=6;TokenType[TokenType.Character]="Character";TokenType[TokenType.Identifier]="Identifier";TokenType[TokenType.Keyword]="Keyword";TokenType[TokenType.String]="String";TokenType[TokenType.Operator]="Operator";TokenType[TokenType.Number]="Number";TokenType[TokenType.Error]="Error";var/** @type {?} */KEYWORDS=['var','let','null','undefined','true','false','if','else','this'];var Lexer=function(){function Lexer(){_classCallCheck(this,Lexer);}_createClass(Lexer,[{key:'tokenize',/**
     * @param {?} text
     * @return {?}
     */value:function tokenize(text){var/** @type {?} */scanner=new _Scanner(text);var/** @type {?} */tokens=[];var/** @type {?} */token=scanner.scanToken();while(token!=null){tokens.push(token);token=scanner.scanToken();}return tokens;}}]);return Lexer;}();Lexer.decorators=[{type:CompilerInjectable}];/** @nocollapse */Lexer.ctorParameters=function(){return[];};var Token=function(){/**
     * @param {?} index
     * @param {?} type
     * @param {?} numValue
     * @param {?} strValue
     */function Token(index,type,numValue,strValue){_classCallCheck(this,Token);this.index=index;this.type=type;this.numValue=numValue;this.strValue=strValue;}/**
     * @param {?} code
     * @return {?}
     */_createClass(Token,[{key:'isCharacter',value:function isCharacter(code){return this.type==TokenType.Character&&this.numValue==code;}/**
     * @return {?}
     */},{key:'isNumber',value:function isNumber(){return this.type==TokenType.Number;}/**
     * @return {?}
     */},{key:'isString',value:function isString(){return this.type==TokenType.String;}/**
     * @param {?} operater
     * @return {?}
     */},{key:'isOperator',value:function isOperator(operater){return this.type==TokenType.Operator&&this.strValue==operater;}/**
     * @return {?}
     */},{key:'isIdentifier',value:function isIdentifier(){return this.type==TokenType.Identifier;}/**
     * @return {?}
     */},{key:'isKeyword',value:function isKeyword(){return this.type==TokenType.Keyword;}/**
     * @return {?}
     */},{key:'isKeywordLet',value:function isKeywordLet(){return this.type==TokenType.Keyword&&this.strValue=='let';}/**
     * @return {?}
     */},{key:'isKeywordNull',value:function isKeywordNull(){return this.type==TokenType.Keyword&&this.strValue=='null';}/**
     * @return {?}
     */},{key:'isKeywordUndefined',value:function isKeywordUndefined(){return this.type==TokenType.Keyword&&this.strValue=='undefined';}/**
     * @return {?}
     */},{key:'isKeywordTrue',value:function isKeywordTrue(){return this.type==TokenType.Keyword&&this.strValue=='true';}/**
     * @return {?}
     */},{key:'isKeywordFalse',value:function isKeywordFalse(){return this.type==TokenType.Keyword&&this.strValue=='false';}/**
     * @return {?}
     */},{key:'isKeywordThis',value:function isKeywordThis(){return this.type==TokenType.Keyword&&this.strValue=='this';}/**
     * @return {?}
     */},{key:'isError',value:function isError(){return this.type==TokenType.Error;}/**
     * @return {?}
     */},{key:'toNumber',value:function toNumber(){return this.type==TokenType.Number?this.numValue:-1;}/**
     * @return {?}
     */},{key:'toString',value:function toString(){switch(this.type){case TokenType.Character:case TokenType.Identifier:case TokenType.Keyword:case TokenType.Operator:case TokenType.String:case TokenType.Error:return this.strValue;case TokenType.Number:return this.numValue.toString();default:return null;}}}]);return Token;}();/**
 * @param {?} index
 * @param {?} code
 * @return {?}
 */function newCharacterToken(index,code){return new Token(index,TokenType.Character,code,String.fromCharCode(code));}/**
 * @param {?} index
 * @param {?} text
 * @return {?}
 */function newIdentifierToken(index,text){return new Token(index,TokenType.Identifier,0,text);}/**
 * @param {?} index
 * @param {?} text
 * @return {?}
 */function newKeywordToken(index,text){return new Token(index,TokenType.Keyword,0,text);}/**
 * @param {?} index
 * @param {?} text
 * @return {?}
 */function newOperatorToken(index,text){return new Token(index,TokenType.Operator,0,text);}/**
 * @param {?} index
 * @param {?} text
 * @return {?}
 */function newStringToken(index,text){return new Token(index,TokenType.String,0,text);}/**
 * @param {?} index
 * @param {?} n
 * @return {?}
 */function newNumberToken(index,n){return new Token(index,TokenType.Number,n,'');}/**
 * @param {?} index
 * @param {?} message
 * @return {?}
 */function newErrorToken(index,message){return new Token(index,TokenType.Error,0,message);}var/** @type {?} */EOF=new Token(-1,TokenType.Character,0,'');var _Scanner=function(){/**
     * @param {?} input
     */function _Scanner(input){_classCallCheck(this,_Scanner);this.input=input;this.peek=0;this.index=-1;this.length=input.length;this.advance();}/**
     * @return {?}
     */_createClass(_Scanner,[{key:'advance',value:function advance(){this.peek=++this.index>=this.length?$EOF:this.input.charCodeAt(this.index);}/**
     * @return {?}
     */},{key:'scanToken',value:function scanToken(){var/** @type {?} */input=this.input,/** @type {?} */length=this.length;var/** @type {?} */peek=this.peek,/** @type {?} */index=this.index;// Skip whitespace.
while(peek<=$SPACE){if(++index>=length){peek=$EOF;break;}else{peek=input.charCodeAt(index);}}this.peek=peek;this.index=index;if(index>=length){return null;}// Handle identifiers and numbers.
if(isIdentifierStart(peek))return this.scanIdentifier();if(isDigit(peek))return this.scanNumber(index);var/** @type {?} */start=index;switch(peek){case $PERIOD:this.advance();return isDigit(this.peek)?this.scanNumber(start):newCharacterToken(start,$PERIOD);case $LPAREN:case $RPAREN:case $LBRACE:case $RBRACE:case $LBRACKET:case $RBRACKET:case $COMMA:case $COLON:case $SEMICOLON:return this.scanCharacter(start,peek);case $SQ:case $DQ:return this.scanString();case $HASH:case $PLUS:case $MINUS:case $STAR:case $SLASH:case $PERCENT:case $CARET:return this.scanOperator(start,String.fromCharCode(peek));case $QUESTION:return this.scanComplexOperator(start,'?',$PERIOD,'.');case $LT:case $GT:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=');case $BANG:case $EQ:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=',$EQ,'=');case $AMPERSAND:return this.scanComplexOperator(start,'&',$AMPERSAND,'&');case $BAR:return this.scanComplexOperator(start,'|',$BAR,'|');case $NBSP:while(isWhitespace(this.peek)){this.advance();}return this.scanToken();}this.advance();return this.error('Unexpected character ['+String.fromCharCode(peek)+']',0);}/**
     * @param {?} start
     * @param {?} code
     * @return {?}
     */},{key:'scanCharacter',value:function scanCharacter(start,code){this.advance();return newCharacterToken(start,code);}/**
     * @param {?} start
     * @param {?} str
     * @return {?}
     */},{key:'scanOperator',value:function scanOperator(start,str){this.advance();return newOperatorToken(start,str);}/**
     * Tokenize a 2/3 char long operator
     *
     * @param {?} start start index in the expression
     * @param {?} one first symbol (always part of the operator)
     * @param {?} twoCode code point for the second symbol
     * @param {?} two second symbol (part of the operator when the second code point matches)
     * @param {?=} threeCode code point for the third symbol
     * @param {?=} three third symbol (part of the operator when provided and matches source expression)
     * @return {?}
     */},{key:'scanComplexOperator',value:function scanComplexOperator(start,one,twoCode,two,threeCode,three){this.advance();var/** @type {?} */str=one;if(this.peek==twoCode){this.advance();str+=two;}if(threeCode!=null&&this.peek==threeCode){this.advance();str+=three;}return newOperatorToken(start,str);}/**
     * @return {?}
     */},{key:'scanIdentifier',value:function scanIdentifier(){var/** @type {?} */start=this.index;this.advance();while(isIdentifierPart(this.peek)){this.advance();}var/** @type {?} */str=this.input.substring(start,this.index);return KEYWORDS.indexOf(str)>-1?newKeywordToken(start,str):newIdentifierToken(start,str);}/**
     * @param {?} start
     * @return {?}
     */},{key:'scanNumber',value:function scanNumber(start){var/** @type {?} */simple=this.index===start;this.advance();// Skip initial digit.
while(true){if(isDigit(this.peek)){}else if(this.peek==$PERIOD){simple=false;}else if(isExponentStart(this.peek)){this.advance();if(isExponentSign(this.peek))this.advance();if(!isDigit(this.peek))return this.error('Invalid exponent',-1);simple=false;}else{break;}this.advance();}var/** @type {?} */str=this.input.substring(start,this.index);var/** @type {?} */value=simple?NumberWrapper.parseIntAutoRadix(str):parseFloat(str);return newNumberToken(start,value);}/**
     * @return {?}
     */},{key:'scanString',value:function scanString(){var/** @type {?} */start=this.index;var/** @type {?} */quote=this.peek;this.advance();// Skip initial quote.
var/** @type {?} */buffer='';var/** @type {?} */marker=this.index;var/** @type {?} */input=this.input;while(this.peek!=quote){if(this.peek==$BACKSLASH){buffer+=input.substring(marker,this.index);this.advance();var/** @type {?} */unescapedCode=void 0;// Workaround for TS2.1-introduced type strictness
this.peek=this.peek;if(this.peek==$u){// 4 character hex code for unicode character.
var/** @type {?} */hex=input.substring(this.index+1,this.index+5);if(/^[0-9a-f]+$/i.test(hex)){unescapedCode=parseInt(hex,16);}else{return this.error('Invalid unicode escape [\\u'+hex+']',0);}for(var/** @type {?} */i=0;i<5;i++){this.advance();}}else{unescapedCode=unescape(this.peek);this.advance();}buffer+=String.fromCharCode(unescapedCode);marker=this.index;}else if(this.peek==$EOF){return this.error('Unterminated quote',0);}else{this.advance();}}var/** @type {?} */last=input.substring(marker,this.index);this.advance();// Skip terminating quote.
return newStringToken(start,buffer+last);}/**
     * @param {?} message
     * @param {?} offset
     * @return {?}
     */},{key:'error',value:function error(message,offset){var/** @type {?} */position=this.index+offset;return newErrorToken(position,'Lexer Error: '+message+' at column '+position+' in expression ['+this.input+']');}}]);return _Scanner;}();/**
 * @param {?} code
 * @return {?}
 */function isIdentifierStart(code){return $a<=code&&code<=$z||$A<=code&&code<=$Z||code==$_||code==$$;}/**
 * @param {?} input
 * @return {?}
 */function isIdentifier(input){if(input.length==0)return false;var/** @type {?} */scanner=new _Scanner(input);if(!isIdentifierStart(scanner.peek))return false;scanner.advance();while(scanner.peek!==$EOF){if(!isIdentifierPart(scanner.peek))return false;scanner.advance();}return true;}/**
 * @param {?} code
 * @return {?}
 */function isIdentifierPart(code){return isAsciiLetter(code)||isDigit(code)||code==$_||code==$$;}/**
 * @param {?} code
 * @return {?}
 */function isExponentStart(code){return code==$e||code==$E;}/**
 * @param {?} code
 * @return {?}
 */function isExponentSign(code){return code==$MINUS||code==$PLUS;}/**
 * @param {?} code
 * @return {?}
 */function isQuote(code){return code===$SQ||code===$DQ||code===$BT;}/**
 * @param {?} code
 * @return {?}
 */function unescape(code){switch(code){case $n:return $LF;case $f:return $FF;case $r:return $CR;case $t:return $TAB;case $v:return $VTAB;default:return code;}}var SplitInterpolation=/**
     * @param {?} strings
     * @param {?} expressions
     * @param {?} offsets
     */function SplitInterpolation(strings,expressions,offsets){_classCallCheck(this,SplitInterpolation);this.strings=strings;this.expressions=expressions;this.offsets=offsets;};var TemplateBindingParseResult=/**
     * @param {?} templateBindings
     * @param {?} warnings
     * @param {?} errors
     */function TemplateBindingParseResult(templateBindings,warnings,errors){_classCallCheck(this,TemplateBindingParseResult);this.templateBindings=templateBindings;this.warnings=warnings;this.errors=errors;};/**
 * @param {?} config
 * @return {?}
 */function _createInterpolateRegExp(config){var/** @type {?} */pattern=escapeRegExp(config.start)+'([\\s\\S]*?)'+escapeRegExp(config.end);return new RegExp(pattern,'g');}var Parser=function(){/**
     * @param {?} _lexer
     */function Parser(_lexer){_classCallCheck(this,Parser);this._lexer=_lexer;this.errors=[];}/**
     * @param {?} input
     * @param {?} location
     * @param {?=} interpolationConfig
     * @return {?}
     */_createClass(Parser,[{key:'parseAction',value:function parseAction(input,location){var interpolationConfig=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_INTERPOLATION_CONFIG;this._checkNoInterpolation(input,location,interpolationConfig);var/** @type {?} */sourceToLex=this._stripComments(input);var/** @type {?} */tokens=this._lexer.tokenize(this._stripComments(input));var/** @type {?} */ast=new _ParseAST(input,location,tokens,sourceToLex.length,true,this.errors,input.length-sourceToLex.length).parseChain();return new ASTWithSource(ast,input,location,this.errors);}/**
     * @param {?} input
     * @param {?} location
     * @param {?=} interpolationConfig
     * @return {?}
     */},{key:'parseBinding',value:function parseBinding(input,location){var interpolationConfig=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_INTERPOLATION_CONFIG;var/** @type {?} */ast=this._parseBindingAst(input,location,interpolationConfig);return new ASTWithSource(ast,input,location,this.errors);}/**
     * @param {?} input
     * @param {?} location
     * @param {?=} interpolationConfig
     * @return {?}
     */},{key:'parseSimpleBinding',value:function parseSimpleBinding(input,location){var interpolationConfig=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_INTERPOLATION_CONFIG;var/** @type {?} */ast=this._parseBindingAst(input,location,interpolationConfig);var/** @type {?} */errors=SimpleExpressionChecker.check(ast);if(errors.length>0){this._reportError('Host binding expression cannot contain '+errors.join(' '),input,location);}return new ASTWithSource(ast,input,location,this.errors);}/**
     * @param {?} message
     * @param {?} input
     * @param {?} errLocation
     * @param {?=} ctxLocation
     * @return {?}
     */},{key:'_reportError',value:function _reportError(message,input,errLocation,ctxLocation){this.errors.push(new ParserError(message,input,errLocation,ctxLocation));}/**
     * @param {?} input
     * @param {?} location
     * @param {?} interpolationConfig
     * @return {?}
     */},{key:'_parseBindingAst',value:function _parseBindingAst(input,location,interpolationConfig){// Quotes expressions use 3rd-party expression language. We don't want to use
// our lexer or parser for that, so we check for that ahead of time.
var/** @type {?} */quote=this._parseQuote(input,location);if(isPresent(quote)){return quote;}this._checkNoInterpolation(input,location,interpolationConfig);var/** @type {?} */sourceToLex=this._stripComments(input);var/** @type {?} */tokens=this._lexer.tokenize(sourceToLex);return new _ParseAST(input,location,tokens,sourceToLex.length,false,this.errors,input.length-sourceToLex.length).parseChain();}/**
     * @param {?} input
     * @param {?} location
     * @return {?}
     */},{key:'_parseQuote',value:function _parseQuote(input,location){if(isBlank(input))return null;var/** @type {?} */prefixSeparatorIndex=input.indexOf(':');if(prefixSeparatorIndex==-1)return null;var/** @type {?} */prefix=input.substring(0,prefixSeparatorIndex).trim();if(!isIdentifier(prefix))return null;var/** @type {?} */uninterpretedExpression=input.substring(prefixSeparatorIndex+1);return new Quote(new ParseSpan(0,input.length),prefix,uninterpretedExpression,location);}/**
     * @param {?} prefixToken
     * @param {?} input
     * @param {?} location
     * @return {?}
     */},{key:'parseTemplateBindings',value:function parseTemplateBindings(prefixToken,input,location){var/** @type {?} */tokens=this._lexer.tokenize(input);if(prefixToken){// Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).
var/** @type {?} */prefixTokens=this._lexer.tokenize(prefixToken).map(function(t){t.index=0;return t;});tokens.unshift.apply(tokens,_toConsumableArray(prefixTokens));}return new _ParseAST(input,location,tokens,input.length,false,this.errors,0).parseTemplateBindings();}/**
     * @param {?} input
     * @param {?} location
     * @param {?=} interpolationConfig
     * @return {?}
     */},{key:'parseInterpolation',value:function parseInterpolation(input,location){var interpolationConfig=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_INTERPOLATION_CONFIG;var/** @type {?} */split=this.splitInterpolation(input,location,interpolationConfig);if(split==null)return null;var/** @type {?} */expressions=[];for(var/** @type {?} */i=0;i<split.expressions.length;++i){var/** @type {?} */expressionText=split.expressions[i];var/** @type {?} */sourceToLex=this._stripComments(expressionText);var/** @type {?} */tokens=this._lexer.tokenize(this._stripComments(split.expressions[i]));var/** @type {?} */ast=new _ParseAST(input,location,tokens,sourceToLex.length,false,this.errors,split.offsets[i]+(expressionText.length-sourceToLex.length)).parseChain();expressions.push(ast);}return new ASTWithSource(new Interpolation(new ParseSpan(0,isBlank(input)?0:input.length),split.strings,expressions),input,location,this.errors);}/**
     * @param {?} input
     * @param {?} location
     * @param {?=} interpolationConfig
     * @return {?}
     */},{key:'splitInterpolation',value:function splitInterpolation(input,location){var interpolationConfig=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_INTERPOLATION_CONFIG;var/** @type {?} */regexp=_createInterpolateRegExp(interpolationConfig);var/** @type {?} */parts=input.split(regexp);if(parts.length<=1){return null;}var/** @type {?} */strings=[];var/** @type {?} */expressions=[];var/** @type {?} */offsets=[];var/** @type {?} */offset=0;for(var/** @type {?} */i=0;i<parts.length;i++){var/** @type {?} */part=parts[i];if(i%2===0){// fixed string
strings.push(part);offset+=part.length;}else if(part.trim().length>0){offset+=interpolationConfig.start.length;expressions.push(part);offsets.push(offset);offset+=part.length+interpolationConfig.end.length;}else{this._reportError('Blank expressions are not allowed in interpolated strings',input,'at column '+this._findInterpolationErrorColumn(parts,i,interpolationConfig)+' in',location);expressions.push('$implict');offsets.push(offset);}}return new SplitInterpolation(strings,expressions,offsets);}/**
     * @param {?} input
     * @param {?} location
     * @return {?}
     */},{key:'wrapLiteralPrimitive',value:function wrapLiteralPrimitive(input,location){return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0,isBlank(input)?0:input.length),input),input,location,this.errors);}/**
     * @param {?} input
     * @return {?}
     */},{key:'_stripComments',value:function _stripComments(input){var/** @type {?} */i=this._commentStart(input);return isPresent(i)?input.substring(0,i).trim():input;}/**
     * @param {?} input
     * @return {?}
     */},{key:'_commentStart',value:function _commentStart(input){var/** @type {?} */outerQuote=null;for(var/** @type {?} */i=0;i<input.length-1;i++){var/** @type {?} */char=input.charCodeAt(i);var/** @type {?} */nextChar=input.charCodeAt(i+1);if(char===$SLASH&&nextChar==$SLASH&&isBlank(outerQuote))return i;if(outerQuote===char){outerQuote=null;}else if(isBlank(outerQuote)&&isQuote(char)){outerQuote=char;}}return null;}/**
     * @param {?} input
     * @param {?} location
     * @param {?} interpolationConfig
     * @return {?}
     */},{key:'_checkNoInterpolation',value:function _checkNoInterpolation(input,location,interpolationConfig){var/** @type {?} */regexp=_createInterpolateRegExp(interpolationConfig);var/** @type {?} */parts=input.split(regexp);if(parts.length>1){this._reportError('Got interpolation ('+interpolationConfig.start+interpolationConfig.end+') where expression was expected',input,'at column '+this._findInterpolationErrorColumn(parts,1,interpolationConfig)+' in',location);}}/**
     * @param {?} parts
     * @param {?} partInErrIdx
     * @param {?} interpolationConfig
     * @return {?}
     */},{key:'_findInterpolationErrorColumn',value:function _findInterpolationErrorColumn(parts,partInErrIdx,interpolationConfig){var/** @type {?} */errLocation='';for(var/** @type {?} */j=0;j<partInErrIdx;j++){errLocation+=j%2===0?parts[j]:''+interpolationConfig.start+parts[j]+interpolationConfig.end;}return errLocation.length;}}]);return Parser;}();Parser.decorators=[{type:CompilerInjectable}];/** @nocollapse */Parser.ctorParameters=function(){return[{type:Lexer}];};var _ParseAST=function(){/**
     * @param {?} input
     * @param {?} location
     * @param {?} tokens
     * @param {?} inputLength
     * @param {?} parseAction
     * @param {?} errors
     * @param {?} offset
     */function _ParseAST(input,location,tokens,inputLength,parseAction,errors,offset){_classCallCheck(this,_ParseAST);this.input=input;this.location=location;this.tokens=tokens;this.inputLength=inputLength;this.parseAction=parseAction;this.errors=errors;this.offset=offset;this.rparensExpected=0;this.rbracketsExpected=0;this.rbracesExpected=0;this.index=0;}/**
     * @param {?} offset
     * @return {?}
     */_createClass(_ParseAST,[{key:'peek',value:function peek(offset){var/** @type {?} */i=this.index+offset;return i<this.tokens.length?this.tokens[i]:EOF;}/**
     * @return {?}
     */},{key:'span',/**
     * @param {?} start
     * @return {?}
     */value:function span(start){return new ParseSpan(start,this.inputIndex);}/**
     * @return {?}
     */},{key:'advance',value:function advance(){this.index++;}/**
     * @param {?} code
     * @return {?}
     */},{key:'optionalCharacter',value:function optionalCharacter(code){if(this.next.isCharacter(code)){this.advance();return true;}else{return false;}}/**
     * @return {?}
     */},{key:'peekKeywordLet',value:function peekKeywordLet(){return this.next.isKeywordLet();}/**
     * @param {?} code
     * @return {?}
     */},{key:'expectCharacter',value:function expectCharacter(code){if(this.optionalCharacter(code))return;this.error('Missing expected '+String.fromCharCode(code));}/**
     * @param {?} op
     * @return {?}
     */},{key:'optionalOperator',value:function optionalOperator(op){if(this.next.isOperator(op)){this.advance();return true;}else{return false;}}/**
     * @param {?} operator
     * @return {?}
     */},{key:'expectOperator',value:function expectOperator(operator){if(this.optionalOperator(operator))return;this.error('Missing expected operator '+operator);}/**
     * @return {?}
     */},{key:'expectIdentifierOrKeyword',value:function expectIdentifierOrKeyword(){var/** @type {?} */n=this.next;if(!n.isIdentifier()&&!n.isKeyword()){this.error('Unexpected token '+n+', expected identifier or keyword');return'';}this.advance();return n.toString();}/**
     * @return {?}
     */},{key:'expectIdentifierOrKeywordOrString',value:function expectIdentifierOrKeywordOrString(){var/** @type {?} */n=this.next;if(!n.isIdentifier()&&!n.isKeyword()&&!n.isString()){this.error('Unexpected token '+n+', expected identifier, keyword, or string');return'';}this.advance();return n.toString();}/**
     * @return {?}
     */},{key:'parseChain',value:function parseChain(){var/** @type {?} */exprs=[];var/** @type {?} */start=this.inputIndex;while(this.index<this.tokens.length){var/** @type {?} */expr=this.parsePipe();exprs.push(expr);if(this.optionalCharacter($SEMICOLON)){if(!this.parseAction){this.error('Binding expression cannot contain chained expression');}while(this.optionalCharacter($SEMICOLON)){}// read all semicolons
}else if(this.index<this.tokens.length){this.error('Unexpected token \''+this.next+'\'');}}if(exprs.length==0)return new EmptyExpr(this.span(start));if(exprs.length==1)return exprs[0];return new Chain(this.span(start),exprs);}/**
     * @return {?}
     */},{key:'parsePipe',value:function parsePipe(){var/** @type {?} */result=this.parseExpression();if(this.optionalOperator('|')){if(this.parseAction){this.error('Cannot have a pipe in an action expression');}do{var/** @type {?} */name=this.expectIdentifierOrKeyword();var/** @type {?} */args=[];while(this.optionalCharacter($COLON)){args.push(this.parseExpression());}result=new BindingPipe(this.span(result.span.start),result,name,args);}while(this.optionalOperator('|'));}return result;}/**
     * @return {?}
     */},{key:'parseExpression',value:function parseExpression(){return this.parseConditional();}/**
     * @return {?}
     */},{key:'parseConditional',value:function parseConditional(){var/** @type {?} */start=this.inputIndex;var/** @type {?} */result=this.parseLogicalOr();if(this.optionalOperator('?')){var/** @type {?} */yes=this.parsePipe();var/** @type {?} */no=void 0;if(!this.optionalCharacter($COLON)){var/** @type {?} */end=this.inputIndex;var/** @type {?} */expression=this.input.substring(start,end);this.error('Conditional expression '+expression+' requires all 3 expressions');no=new EmptyExpr(this.span(start));}else{no=this.parsePipe();}return new Conditional(this.span(start),result,yes,no);}else{return result;}}/**
     * @return {?}
     */},{key:'parseLogicalOr',value:function parseLogicalOr(){// '||'
var/** @type {?} */result=this.parseLogicalAnd();while(this.optionalOperator('||')){var/** @type {?} */right=this.parseLogicalAnd();result=new Binary(this.span(result.span.start),'||',result,right);}return result;}/**
     * @return {?}
     */},{key:'parseLogicalAnd',value:function parseLogicalAnd(){// '&&'
var/** @type {?} */result=this.parseEquality();while(this.optionalOperator('&&')){var/** @type {?} */right=this.parseEquality();result=new Binary(this.span(result.span.start),'&&',result,right);}return result;}/**
     * @return {?}
     */},{key:'parseEquality',value:function parseEquality(){// '==','!=','===','!=='
var/** @type {?} */result=this.parseRelational();while(this.next.type==TokenType.Operator){var/** @type {?} */operator=this.next.strValue;switch(operator){case'==':case'===':case'!=':case'!==':this.advance();var/** @type {?} */right=this.parseRelational();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;}/**
     * @return {?}
     */},{key:'parseRelational',value:function parseRelational(){// '<', '>', '<=', '>='
var/** @type {?} */result=this.parseAdditive();while(this.next.type==TokenType.Operator){var/** @type {?} */operator=this.next.strValue;switch(operator){case'<':case'>':case'<=':case'>=':this.advance();var/** @type {?} */right=this.parseAdditive();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;}/**
     * @return {?}
     */},{key:'parseAdditive',value:function parseAdditive(){// '+', '-'
var/** @type {?} */result=this.parseMultiplicative();while(this.next.type==TokenType.Operator){var/** @type {?} */operator=this.next.strValue;switch(operator){case'+':case'-':this.advance();var/** @type {?} */right=this.parseMultiplicative();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;}/**
     * @return {?}
     */},{key:'parseMultiplicative',value:function parseMultiplicative(){// '*', '%', '/'
var/** @type {?} */result=this.parsePrefix();while(this.next.type==TokenType.Operator){var/** @type {?} */operator=this.next.strValue;switch(operator){case'*':case'%':case'/':this.advance();var/** @type {?} */right=this.parsePrefix();result=new Binary(this.span(result.span.start),operator,result,right);continue;}break;}return result;}/**
     * @return {?}
     */},{key:'parsePrefix',value:function parsePrefix(){if(this.next.type==TokenType.Operator){var/** @type {?} */start=this.inputIndex;var/** @type {?} */operator=this.next.strValue;var/** @type {?} */result=void 0;switch(operator){case'+':this.advance();return this.parsePrefix();case'-':this.advance();result=this.parsePrefix();return new Binary(this.span(start),operator,new LiteralPrimitive(new ParseSpan(start,start),0),result);case'!':this.advance();result=this.parsePrefix();return new PrefixNot(this.span(start),result);}}return this.parseCallChain();}/**
     * @return {?}
     */},{key:'parseCallChain',value:function parseCallChain(){var/** @type {?} */result=this.parsePrimary();while(true){if(this.optionalCharacter($PERIOD)){result=this.parseAccessMemberOrMethodCall(result,false);}else if(this.optionalOperator('?.')){result=this.parseAccessMemberOrMethodCall(result,true);}else if(this.optionalCharacter($LBRACKET)){this.rbracketsExpected++;var/** @type {?} */key=this.parsePipe();this.rbracketsExpected--;this.expectCharacter($RBRACKET);if(this.optionalOperator('=')){var/** @type {?} */value=this.parseConditional();result=new KeyedWrite(this.span(result.span.start),result,key,value);}else{result=new KeyedRead(this.span(result.span.start),result,key);}}else if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var/** @type {?} */args=this.parseCallArguments();this.rparensExpected--;this.expectCharacter($RPAREN);result=new FunctionCall(this.span(result.span.start),result,args);}else{return result;}}}/**
     * @return {?}
     */},{key:'parsePrimary',value:function parsePrimary(){var/** @type {?} */start=this.inputIndex;if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var/** @type {?} */result=this.parsePipe();this.rparensExpected--;this.expectCharacter($RPAREN);return result;}else if(this.next.isKeywordNull()){this.advance();return new LiteralPrimitive(this.span(start),null);}else if(this.next.isKeywordUndefined()){this.advance();return new LiteralPrimitive(this.span(start),void 0);}else if(this.next.isKeywordTrue()){this.advance();return new LiteralPrimitive(this.span(start),true);}else if(this.next.isKeywordFalse()){this.advance();return new LiteralPrimitive(this.span(start),false);}else if(this.next.isKeywordThis()){this.advance();return new ImplicitReceiver(this.span(start));}else if(this.optionalCharacter($LBRACKET)){this.rbracketsExpected++;var/** @type {?} */elements=this.parseExpressionList($RBRACKET);this.rbracketsExpected--;this.expectCharacter($RBRACKET);return new LiteralArray(this.span(start),elements);}else if(this.next.isCharacter($LBRACE)){return this.parseLiteralMap();}else if(this.next.isIdentifier()){return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)),false);}else if(this.next.isNumber()){var/** @type {?} */value=this.next.toNumber();this.advance();return new LiteralPrimitive(this.span(start),value);}else if(this.next.isString()){var/** @type {?} */literalValue=this.next.toString();this.advance();return new LiteralPrimitive(this.span(start),literalValue);}else if(this.index>=this.tokens.length){this.error('Unexpected end of expression: '+this.input);return new EmptyExpr(this.span(start));}else{this.error('Unexpected token '+this.next);return new EmptyExpr(this.span(start));}}/**
     * @param {?} terminator
     * @return {?}
     */},{key:'parseExpressionList',value:function parseExpressionList(terminator){var/** @type {?} */result=[];if(!this.next.isCharacter(terminator)){do{result.push(this.parsePipe());}while(this.optionalCharacter($COMMA));}return result;}/**
     * @return {?}
     */},{key:'parseLiteralMap',value:function parseLiteralMap(){var/** @type {?} */keys=[];var/** @type {?} */values=[];var/** @type {?} */start=this.inputIndex;this.expectCharacter($LBRACE);if(!this.optionalCharacter($RBRACE)){this.rbracesExpected++;do{var/** @type {?} */key=this.expectIdentifierOrKeywordOrString();keys.push(key);this.expectCharacter($COLON);values.push(this.parsePipe());}while(this.optionalCharacter($COMMA));this.rbracesExpected--;this.expectCharacter($RBRACE);}return new LiteralMap(this.span(start),keys,values);}/**
     * @param {?} receiver
     * @param {?=} isSafe
     * @return {?}
     */},{key:'parseAccessMemberOrMethodCall',value:function parseAccessMemberOrMethodCall(receiver){var isSafe=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var/** @type {?} */start=receiver.span.start;var/** @type {?} */id=this.expectIdentifierOrKeyword();if(this.optionalCharacter($LPAREN)){this.rparensExpected++;var/** @type {?} */args=this.parseCallArguments();this.expectCharacter($RPAREN);this.rparensExpected--;var/** @type {?} */span=this.span(start);return isSafe?new SafeMethodCall(span,receiver,id,args):new MethodCall(span,receiver,id,args);}else{if(isSafe){if(this.optionalOperator('=')){this.error('The \'?.\' operator cannot be used in the assignment');return new EmptyExpr(this.span(start));}else{return new SafePropertyRead(this.span(start),receiver,id);}}else{if(this.optionalOperator('=')){if(!this.parseAction){this.error('Bindings cannot contain assignments');return new EmptyExpr(this.span(start));}var/** @type {?} */value=this.parseConditional();return new PropertyWrite(this.span(start),receiver,id,value);}else{return new PropertyRead(this.span(start),receiver,id);}}}}/**
     * @return {?}
     */},{key:'parseCallArguments',value:function parseCallArguments(){if(this.next.isCharacter($RPAREN))return[];var/** @type {?} */positionals=[];do{positionals.push(this.parsePipe());}while(this.optionalCharacter($COMMA));return positionals;}/**
     * An identifier, a keyword, a string with an optional `-` inbetween.
     * @return {?}
     */},{key:'expectTemplateBindingKey',value:function expectTemplateBindingKey(){var/** @type {?} */result='';var/** @type {?} */operatorFound=false;do{result+=this.expectIdentifierOrKeywordOrString();operatorFound=this.optionalOperator('-');if(operatorFound){result+='-';}}while(operatorFound);return result.toString();}/**
     * @return {?}
     */},{key:'parseTemplateBindings',value:function parseTemplateBindings(){var/** @type {?} */bindings=[];var/** @type {?} */prefix=null;var/** @type {?} */warnings=[];while(this.index<this.tokens.length){var/** @type {?} */start=this.inputIndex;var/** @type {?} */keyIsVar=this.peekKeywordLet();if(keyIsVar){this.advance();}var/** @type {?} */key=this.expectTemplateBindingKey();if(!keyIsVar){if(prefix==null){prefix=key;}else{key=prefix+key[0].toUpperCase()+key.substring(1);}}this.optionalCharacter($COLON);var/** @type {?} */name=null;var/** @type {?} */expression=null;if(keyIsVar){if(this.optionalOperator('=')){name=this.expectTemplateBindingKey();}else{name='\$implicit';}}else if(this.next!==EOF&&!this.peekKeywordLet()){var/** @type {?} */_start=this.inputIndex;var/** @type {?} */ast=this.parsePipe();var/** @type {?} */source=this.input.substring(_start-this.offset,this.inputIndex-this.offset);expression=new ASTWithSource(ast,source,this.location,this.errors);}bindings.push(new TemplateBinding(this.span(start),key,keyIsVar,name,expression));if(!this.optionalCharacter($SEMICOLON)){this.optionalCharacter($COMMA);}}return new TemplateBindingParseResult(bindings,warnings,this.errors);}/**
     * @param {?} message
     * @param {?=} index
     * @return {?}
     */},{key:'error',value:function error(message){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;this.errors.push(new ParserError(message,this.input,this.locationText(index),this.location));this.skip();}/**
     * @param {?=} index
     * @return {?}
     */},{key:'locationText',value:function locationText(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(isBlank(index))index=this.index;return index<this.tokens.length?'at column '+(this.tokens[index].index+1)+' in':'at the end of the expression';}/**
     * @return {?}
     */},{key:'skip',value:function skip(){var/** @type {?} */n=this.next;while(this.index<this.tokens.length&&!n.isCharacter($SEMICOLON)&&(this.rparensExpected<=0||!n.isCharacter($RPAREN))&&(this.rbracesExpected<=0||!n.isCharacter($RBRACE))&&(this.rbracketsExpected<=0||!n.isCharacter($RBRACKET))){if(this.next.isError()){this.errors.push(new ParserError(this.next.toString(),this.input,this.locationText(),this.location));}this.advance();n=this.next;}}},{key:'next',get:function get(){return this.peek(0);}/**
     * @return {?}
     */},{key:'inputIndex',get:function get(){return this.index<this.tokens.length?this.next.index+this.offset:this.inputLength+this.offset;}}]);return _ParseAST;}();var SimpleExpressionChecker=function(){function SimpleExpressionChecker(){_classCallCheck(this,SimpleExpressionChecker);this.errors=[];}/**
     * @param {?} ast
     * @return {?}
     */_createClass(SimpleExpressionChecker,[{key:'visitImplicitReceiver',/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */value:function visitImplicitReceiver(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInterpolation',value:function visitInterpolation(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralPrimitive',value:function visitLiteralPrimitive(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPropertyRead',value:function visitPropertyRead(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPropertyWrite',value:function visitPropertyWrite(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitSafePropertyRead',value:function visitSafePropertyRead(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitMethodCall',value:function visitMethodCall(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitSafeMethodCall',value:function visitSafeMethodCall(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitFunctionCall',value:function visitFunctionCall(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralArray',value:function visitLiteralArray(ast,context){this.visitAll(ast.expressions);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralMap',value:function visitLiteralMap(ast,context){this.visitAll(ast.values);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitBinary',value:function visitBinary(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPrefixNot',value:function visitPrefixNot(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitConditional',value:function visitConditional(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitPipe',value:function visitPipe(ast,context){this.errors.push('pipes');}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitKeyedRead',value:function visitKeyedRead(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitKeyedWrite',value:function visitKeyedWrite(ast,context){}/**
     * @param {?} asts
     * @return {?}
     */},{key:'visitAll',value:function visitAll(asts){var _this34=this;return asts.map(function(node){return node.visit(_this34);});}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitChain',value:function visitChain(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitQuote',value:function visitQuote(ast,context){}}],[{key:'check',value:function check(ast){var/** @type {?} */s=new SimpleExpressionChecker();ast.visit(s);return s.errors;}}]);return SimpleExpressionChecker;}();var ParseLocation=function(){/**
     * @param {?} file
     * @param {?} offset
     * @param {?} line
     * @param {?} col
     */function ParseLocation(file,offset,line,col){_classCallCheck(this,ParseLocation);this.file=file;this.offset=offset;this.line=line;this.col=col;}/**
     * @return {?}
     */_createClass(ParseLocation,[{key:'toString',value:function toString(){return isPresent(this.offset)?this.file.url+'@'+this.line+':'+this.col:this.file.url;}/**
     * @param {?} delta
     * @return {?}
     */},{key:'moveBy',value:function moveBy(delta){var/** @type {?} */source=this.file.content;var/** @type {?} */len=source.length;var/** @type {?} */offset=this.offset;var/** @type {?} */line=this.line;var/** @type {?} */col=this.col;while(offset>0&&delta<0){offset--;delta++;var/** @type {?} */ch=source.charCodeAt(offset);if(ch==$LF){line--;var/** @type {?} */priorLine=source.substr(0,offset-1).lastIndexOf(String.fromCharCode($LF));col=priorLine>0?offset-priorLine:offset;}else{col--;}}while(offset<len&&delta>0){var/** @type {?} */_ch=source.charCodeAt(offset);offset++;delta--;if(_ch==$LF){line++;col=0;}else{col++;}}return new ParseLocation(this.file,offset,line,col);}/**
     * @param {?} maxChars
     * @param {?} maxLines
     * @return {?}
     */},{key:'getContext',value:function getContext(maxChars,maxLines){var/** @type {?} */content=this.file.content;var/** @type {?} */startOffset=this.offset;if(isPresent(startOffset)){if(startOffset>content.length-1){startOffset=content.length-1;}var/** @type {?} */endOffset=startOffset;var/** @type {?} */ctxChars=0;var/** @type {?} */ctxLines=0;while(ctxChars<maxChars&&startOffset>0){startOffset--;ctxChars++;if(content[startOffset]=='\n'){if(++ctxLines==maxLines){break;}}}ctxChars=0;ctxLines=0;while(ctxChars<maxChars&&endOffset<content.length-1){endOffset++;ctxChars++;if(content[endOffset]=='\n'){if(++ctxLines==maxLines){break;}}}return{before:content.substring(startOffset,this.offset),after:content.substring(this.offset,endOffset+1)};}return null;}}]);return ParseLocation;}();var ParseSourceFile=/**
     * @param {?} content
     * @param {?} url
     */function ParseSourceFile(content,url){_classCallCheck(this,ParseSourceFile);this.content=content;this.url=url;};var ParseSourceSpan=function(){/**
     * @param {?} start
     * @param {?} end
     * @param {?=} details
     */function ParseSourceSpan(start,end){var details=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck(this,ParseSourceSpan);this.start=start;this.end=end;this.details=details;}/**
     * @return {?}
     */_createClass(ParseSourceSpan,[{key:'toString',value:function toString(){return this.start.file.content.substring(this.start.offset,this.end.offset);}}]);return ParseSourceSpan;}();var ParseErrorLevel={};ParseErrorLevel.WARNING=0;ParseErrorLevel.FATAL=1;ParseErrorLevel[ParseErrorLevel.WARNING]="WARNING";ParseErrorLevel[ParseErrorLevel.FATAL]="FATAL";var ParseError=function(){/**
     * @param {?} span
     * @param {?} msg
     * @param {?=} level
     */function ParseError(span,msg){var level=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ParseErrorLevel.FATAL;_classCallCheck(this,ParseError);this.span=span;this.msg=msg;this.level=level;}/**
     * @return {?}
     */_createClass(ParseError,[{key:'toString',value:function toString(){var/** @type {?} */ctx=this.span.start.getContext(100,3);var/** @type {?} */contextStr=ctx?' ("'+ctx.before+'[ERROR ->]'+ctx.after+'")':'';var/** @type {?} */details=this.span.details?', '+this.span.details:'';return''+this.msg+contextStr+': '+this.span.start+details;}}]);return ParseError;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Text=function(){/**
     * @param {?} value
     * @param {?} sourceSpan
     */function Text(value,sourceSpan){_classCallCheck(this,Text);this.value=value;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Text,[{key:'visit',value:function visit(visitor,context){return visitor.visitText(this,context);}}]);return Text;}();var Expansion=function(){/**
     * @param {?} switchValue
     * @param {?} type
     * @param {?} cases
     * @param {?} sourceSpan
     * @param {?} switchValueSourceSpan
     */function Expansion(switchValue,type,cases,sourceSpan,switchValueSourceSpan){_classCallCheck(this,Expansion);this.switchValue=switchValue;this.type=type;this.cases=cases;this.sourceSpan=sourceSpan;this.switchValueSourceSpan=switchValueSourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Expansion,[{key:'visit',value:function visit(visitor,context){return visitor.visitExpansion(this,context);}}]);return Expansion;}();var ExpansionCase=function(){/**
     * @param {?} value
     * @param {?} expression
     * @param {?} sourceSpan
     * @param {?} valueSourceSpan
     * @param {?} expSourceSpan
     */function ExpansionCase(value,expression,sourceSpan,valueSourceSpan,expSourceSpan){_classCallCheck(this,ExpansionCase);this.value=value;this.expression=expression;this.sourceSpan=sourceSpan;this.valueSourceSpan=valueSourceSpan;this.expSourceSpan=expSourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ExpansionCase,[{key:'visit',value:function visit(visitor,context){return visitor.visitExpansionCase(this,context);}}]);return ExpansionCase;}();var Attribute$1=function(){/**
     * @param {?} name
     * @param {?} value
     * @param {?} sourceSpan
     * @param {?=} valueSpan
     */function Attribute$1(name,value,sourceSpan,valueSpan){_classCallCheck(this,Attribute$1);this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Attribute$1,[{key:'visit',value:function visit(visitor,context){return visitor.visitAttribute(this,context);}}]);return Attribute$1;}();var Element=function(){/**
     * @param {?} name
     * @param {?} attrs
     * @param {?} children
     * @param {?} sourceSpan
     * @param {?} startSourceSpan
     * @param {?} endSourceSpan
     */function Element(name,attrs,children,sourceSpan,startSourceSpan,endSourceSpan){_classCallCheck(this,Element);this.name=name;this.attrs=attrs;this.children=children;this.sourceSpan=sourceSpan;this.startSourceSpan=startSourceSpan;this.endSourceSpan=endSourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Element,[{key:'visit',value:function visit(visitor,context){return visitor.visitElement(this,context);}}]);return Element;}();var Comment=function(){/**
     * @param {?} value
     * @param {?} sourceSpan
     */function Comment(value,sourceSpan){_classCallCheck(this,Comment);this.value=value;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Comment,[{key:'visit',value:function visit(visitor,context){return visitor.visitComment(this,context);}}]);return Comment;}();/**
 * @param {?} visitor
 * @param {?} nodes
 * @param {?=} context
 * @return {?}
 */function visitAll(visitor,nodes){var context=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */result=[];var/** @type {?} */visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};nodes.forEach(function(ast){var/** @type {?} */astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}var TokenType$1={};TokenType$1.TAG_OPEN_START=0;TokenType$1.TAG_OPEN_END=1;TokenType$1.TAG_OPEN_END_VOID=2;TokenType$1.TAG_CLOSE=3;TokenType$1.TEXT=4;TokenType$1.ESCAPABLE_RAW_TEXT=5;TokenType$1.RAW_TEXT=6;TokenType$1.COMMENT_START=7;TokenType$1.COMMENT_END=8;TokenType$1.CDATA_START=9;TokenType$1.CDATA_END=10;TokenType$1.ATTR_NAME=11;TokenType$1.ATTR_VALUE=12;TokenType$1.DOC_TYPE=13;TokenType$1.EXPANSION_FORM_START=14;TokenType$1.EXPANSION_CASE_VALUE=15;TokenType$1.EXPANSION_CASE_EXP_START=16;TokenType$1.EXPANSION_CASE_EXP_END=17;TokenType$1.EXPANSION_FORM_END=18;TokenType$1.EOF=19;TokenType$1[TokenType$1.TAG_OPEN_START]="TAG_OPEN_START";TokenType$1[TokenType$1.TAG_OPEN_END]="TAG_OPEN_END";TokenType$1[TokenType$1.TAG_OPEN_END_VOID]="TAG_OPEN_END_VOID";TokenType$1[TokenType$1.TAG_CLOSE]="TAG_CLOSE";TokenType$1[TokenType$1.TEXT]="TEXT";TokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT]="ESCAPABLE_RAW_TEXT";TokenType$1[TokenType$1.RAW_TEXT]="RAW_TEXT";TokenType$1[TokenType$1.COMMENT_START]="COMMENT_START";TokenType$1[TokenType$1.COMMENT_END]="COMMENT_END";TokenType$1[TokenType$1.CDATA_START]="CDATA_START";TokenType$1[TokenType$1.CDATA_END]="CDATA_END";TokenType$1[TokenType$1.ATTR_NAME]="ATTR_NAME";TokenType$1[TokenType$1.ATTR_VALUE]="ATTR_VALUE";TokenType$1[TokenType$1.DOC_TYPE]="DOC_TYPE";TokenType$1[TokenType$1.EXPANSION_FORM_START]="EXPANSION_FORM_START";TokenType$1[TokenType$1.EXPANSION_CASE_VALUE]="EXPANSION_CASE_VALUE";TokenType$1[TokenType$1.EXPANSION_CASE_EXP_START]="EXPANSION_CASE_EXP_START";TokenType$1[TokenType$1.EXPANSION_CASE_EXP_END]="EXPANSION_CASE_EXP_END";TokenType$1[TokenType$1.EXPANSION_FORM_END]="EXPANSION_FORM_END";TokenType$1[TokenType$1.EOF]="EOF";var Token$1=/**
     * @param {?} type
     * @param {?} parts
     * @param {?} sourceSpan
     */function Token$1(type,parts,sourceSpan){_classCallCheck(this,Token$1);this.type=type;this.parts=parts;this.sourceSpan=sourceSpan;};var TokenError=function(_ParseError){_inherits(TokenError,_ParseError);/**
     * @param {?} errorMsg
     * @param {?} tokenType
     * @param {?} span
     */function TokenError(errorMsg,tokenType,span){_classCallCheck(this,TokenError);var _this35=_possibleConstructorReturn(this,(TokenError.__proto__||Object.getPrototypeOf(TokenError)).call(this,span,errorMsg));_this35.tokenType=tokenType;return _this35;}return TokenError;}(ParseError);var TokenizeResult=/**
     * @param {?} tokens
     * @param {?} errors
     */function TokenizeResult(tokens,errors){_classCallCheck(this,TokenizeResult);this.tokens=tokens;this.errors=errors;};/**
 * @param {?} source
 * @param {?} url
 * @param {?} getTagDefinition
 * @param {?=} tokenizeExpansionForms
 * @param {?=} interpolationConfig
 * @return {?}
 */function tokenize(source,url,getTagDefinition){var tokenizeExpansionForms=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var interpolationConfig=arguments.length>4&&arguments[4]!==undefined?arguments[4]:DEFAULT_INTERPOLATION_CONFIG;return new _Tokenizer(new ParseSourceFile(source,url),getTagDefinition,tokenizeExpansionForms,interpolationConfig).tokenize();}var/** @type {?} */_CR_OR_CRLF_REGEXP=/\r\n?/g;/**
 * @param {?} charCode
 * @return {?}
 */function _unexpectedCharacterErrorMsg(charCode){var/** @type {?} */char=charCode===$EOF?'EOF':String.fromCharCode(charCode);return'Unexpected character "'+char+'"';}/**
 * @param {?} entitySrc
 * @return {?}
 */function _unknownEntityErrorMsg(entitySrc){return'Unknown entity "'+entitySrc+'" - use the "&#<decimal>;" or  "&#x<hex>;" syntax';}var _ControlFlowError=/**
     * @param {?} error
     */function _ControlFlowError(error){_classCallCheck(this,_ControlFlowError);this.error=error;};var _Tokenizer=function(){/**
     * @param {?} _file The html source
     * @param {?} _getTagDefinition
     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)
     * @param {?=} _interpolationConfig
     */function _Tokenizer(_file,_getTagDefinition,_tokenizeIcu){var _interpolationConfig=arguments.length>3&&arguments[3]!==undefined?arguments[3]:DEFAULT_INTERPOLATION_CONFIG;_classCallCheck(this,_Tokenizer);this._file=_file;this._getTagDefinition=_getTagDefinition;this._tokenizeIcu=_tokenizeIcu;this._interpolationConfig=_interpolationConfig;this._peek=-1;this._nextPeek=-1;this._index=-1;this._line=0;this._column=-1;this._expansionCaseStack=[];this._inInterpolation=false;this.tokens=[];this.errors=[];this._input=_file.content;this._length=_file.content.length;this._advance();}/**
     * @param {?} content
     * @return {?}
     */_createClass(_Tokenizer,[{key:'_processCarriageReturns',value:function _processCarriageReturns(content){// http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream
// In order to keep the original position in the source, we can not
// pre-process it.
// Instead CRs are processed right before instantiating the tokens.
return content.replace(_CR_OR_CRLF_REGEXP,'\n');}/**
     * @return {?}
     */},{key:'tokenize',value:function tokenize(){while(this._peek!==$EOF){var/** @type {?} */start=this._getLocation();try{if(this._attemptCharCode($LT)){if(this._attemptCharCode($BANG)){if(this._attemptCharCode($LBRACKET)){this._consumeCdata(start);}else if(this._attemptCharCode($MINUS)){this._consumeComment(start);}else{this._consumeDocType(start);}}else if(this._attemptCharCode($SLASH)){this._consumeTagClose(start);}else{this._consumeTagOpen(start);}}else if(!(this._tokenizeIcu&&this._tokenizeExpansionForm())){this._consumeText();}}catch(e){if(e instanceof _ControlFlowError){this.errors.push(e.error);}else{throw e;}}}this._beginToken(TokenType$1.EOF);this._endToken([]);return new TokenizeResult(mergeTextTokens(this.tokens),this.errors);}/**
     * \@internal
     * @return {?}
     */},{key:'_tokenizeExpansionForm',value:function _tokenizeExpansionForm(){if(isExpansionFormStart(this._input,this._index,this._interpolationConfig)){this._consumeExpansionFormStart();return true;}if(isExpansionCaseStart(this._peek)&&this._isInExpansionForm()){this._consumeExpansionCaseStart();return true;}if(this._peek===$RBRACE){if(this._isInExpansionCase()){this._consumeExpansionCaseEnd();return true;}if(this._isInExpansionForm()){this._consumeExpansionFormEnd();return true;}}return false;}/**
     * @return {?}
     */},{key:'_getLocation',value:function _getLocation(){return new ParseLocation(this._file,this._index,this._line,this._column);}/**
     * @param {?=} start
     * @param {?=} end
     * @return {?}
     */},{key:'_getSpan',value:function _getSpan(){var start=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this._getLocation();var end=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this._getLocation();return new ParseSourceSpan(start,end);}/**
     * @param {?} type
     * @param {?=} start
     * @return {?}
     */},{key:'_beginToken',value:function _beginToken(type){var start=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this._getLocation();this._currentTokenStart=start;this._currentTokenType=type;}/**
     * @param {?} parts
     * @param {?=} end
     * @return {?}
     */},{key:'_endToken',value:function _endToken(parts){var end=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this._getLocation();var/** @type {?} */token=new Token$1(this._currentTokenType,parts,new ParseSourceSpan(this._currentTokenStart,end));this.tokens.push(token);this._currentTokenStart=null;this._currentTokenType=null;return token;}/**
     * @param {?} msg
     * @param {?} span
     * @return {?}
     */},{key:'_createError',value:function _createError(msg,span){if(this._isInExpansionForm()){msg+=' (Do you have an unescaped "{" in your template? Use "{{ \'{\' }}") to escape it.)';}var/** @type {?} */error=new TokenError(msg,this._currentTokenType,span);this._currentTokenStart=null;this._currentTokenType=null;return new _ControlFlowError(error);}/**
     * @return {?}
     */},{key:'_advance',value:function _advance(){if(this._index>=this._length){throw this._createError(_unexpectedCharacterErrorMsg($EOF),this._getSpan());}if(this._peek===$LF){this._line++;this._column=0;}else if(this._peek!==$LF&&this._peek!==$CR){this._column++;}this._index++;this._peek=this._index>=this._length?$EOF:this._input.charCodeAt(this._index);this._nextPeek=this._index+1>=this._length?$EOF:this._input.charCodeAt(this._index+1);}/**
     * @param {?} charCode
     * @return {?}
     */},{key:'_attemptCharCode',value:function _attemptCharCode(charCode){if(this._peek===charCode){this._advance();return true;}return false;}/**
     * @param {?} charCode
     * @return {?}
     */},{key:'_attemptCharCodeCaseInsensitive',value:function _attemptCharCodeCaseInsensitive(charCode){if(compareCharCodeCaseInsensitive(this._peek,charCode)){this._advance();return true;}return false;}/**
     * @param {?} charCode
     * @return {?}
     */},{key:'_requireCharCode',value:function _requireCharCode(charCode){var/** @type {?} */location=this._getLocation();if(!this._attemptCharCode(charCode)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(location,location));}}/**
     * @param {?} chars
     * @return {?}
     */},{key:'_attemptStr',value:function _attemptStr(chars){var/** @type {?} */len=chars.length;if(this._index+len>this._length){return false;}var/** @type {?} */initialPosition=this._savePosition();for(var/** @type {?} */i=0;i<len;i++){if(!this._attemptCharCode(chars.charCodeAt(i))){// If attempting to parse the string fails, we want to reset the parser
// to where it was before the attempt
this._restorePosition(initialPosition);return false;}}return true;}/**
     * @param {?} chars
     * @return {?}
     */},{key:'_attemptStrCaseInsensitive',value:function _attemptStrCaseInsensitive(chars){for(var/** @type {?} */i=0;i<chars.length;i++){if(!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))){return false;}}return true;}/**
     * @param {?} chars
     * @return {?}
     */},{key:'_requireStr',value:function _requireStr(chars){var/** @type {?} */location=this._getLocation();if(!this._attemptStr(chars)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(location));}}/**
     * @param {?} predicate
     * @return {?}
     */},{key:'_attemptCharCodeUntilFn',value:function _attemptCharCodeUntilFn(predicate){while(!predicate(this._peek)){this._advance();}}/**
     * @param {?} predicate
     * @param {?} len
     * @return {?}
     */},{key:'_requireCharCodeUntilFn',value:function _requireCharCodeUntilFn(predicate,len){var/** @type {?} */start=this._getLocation();this._attemptCharCodeUntilFn(predicate);if(this._index-start.offset<len){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan(start,start));}}/**
     * @param {?} char
     * @return {?}
     */},{key:'_attemptUntilChar',value:function _attemptUntilChar(char){while(this._peek!==char){this._advance();}}/**
     * @param {?} decodeEntities
     * @return {?}
     */},{key:'_readChar',value:function _readChar(decodeEntities){if(decodeEntities&&this._peek===$AMPERSAND){return this._decodeEntity();}else{var/** @type {?} */index=this._index;this._advance();return this._input[index];}}/**
     * @return {?}
     */},{key:'_decodeEntity',value:function _decodeEntity(){var/** @type {?} */start=this._getLocation();this._advance();if(this._attemptCharCode($HASH)){var/** @type {?} */isHex=this._attemptCharCode($x)||this._attemptCharCode($X);var/** @type {?} */numberStart=this._getLocation().offset;this._attemptCharCodeUntilFn(isDigitEntityEnd);if(this._peek!=$SEMICOLON){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan());}this._advance();var/** @type {?} */strNum=this._input.substring(numberStart,this._index-1);try{var/** @type {?} */charCode=parseInt(strNum,isHex?16:10);return String.fromCharCode(charCode);}catch(e){var/** @type {?} */entity=this._input.substring(start.offset+1,this._index-1);throw this._createError(_unknownEntityErrorMsg(entity),this._getSpan(start));}}else{var/** @type {?} */startPosition=this._savePosition();this._attemptCharCodeUntilFn(isNamedEntityEnd);if(this._peek!=$SEMICOLON){this._restorePosition(startPosition);return'&';}this._advance();var/** @type {?} */name=this._input.substring(start.offset+1,this._index-1);var/** @type {?} */char=NAMED_ENTITIES[name];if(!char){throw this._createError(_unknownEntityErrorMsg(name),this._getSpan(start));}return char;}}/**
     * @param {?} decodeEntities
     * @param {?} firstCharOfEnd
     * @param {?} attemptEndRest
     * @return {?}
     */},{key:'_consumeRawText',value:function _consumeRawText(decodeEntities,firstCharOfEnd,attemptEndRest){var/** @type {?} */tagCloseStart=void 0;var/** @type {?} */textStart=this._getLocation();this._beginToken(decodeEntities?TokenType$1.ESCAPABLE_RAW_TEXT:TokenType$1.RAW_TEXT,textStart);var/** @type {?} */parts=[];while(true){tagCloseStart=this._getLocation();if(this._attemptCharCode(firstCharOfEnd)&&attemptEndRest()){break;}if(this._index>tagCloseStart.offset){// add the characters consumed by the previous if statement to the output
parts.push(this._input.substring(tagCloseStart.offset,this._index));}while(this._peek!==firstCharOfEnd){parts.push(this._readChar(decodeEntities));}}return this._endToken([this._processCarriageReturns(parts.join(''))],tagCloseStart);}/**
     * @param {?} start
     * @return {?}
     */},{key:'_consumeComment',value:function _consumeComment(start){var _this36=this;this._beginToken(TokenType$1.COMMENT_START,start);this._requireCharCode($MINUS);this._endToken([]);var/** @type {?} */textToken=this._consumeRawText(false,$MINUS,function(){return _this36._attemptStr('->');});this._beginToken(TokenType$1.COMMENT_END,textToken.sourceSpan.end);this._endToken([]);}/**
     * @param {?} start
     * @return {?}
     */},{key:'_consumeCdata',value:function _consumeCdata(start){var _this37=this;this._beginToken(TokenType$1.CDATA_START,start);this._requireStr('CDATA[');this._endToken([]);var/** @type {?} */textToken=this._consumeRawText(false,$RBRACKET,function(){return _this37._attemptStr(']>');});this._beginToken(TokenType$1.CDATA_END,textToken.sourceSpan.end);this._endToken([]);}/**
     * @param {?} start
     * @return {?}
     */},{key:'_consumeDocType',value:function _consumeDocType(start){this._beginToken(TokenType$1.DOC_TYPE,start);this._attemptUntilChar($GT);this._advance();this._endToken([this._input.substring(start.offset+2,this._index-1)]);}/**
     * @return {?}
     */},{key:'_consumePrefixAndName',value:function _consumePrefixAndName(){var/** @type {?} */nameOrPrefixStart=this._index;var/** @type {?} */prefix=null;while(this._peek!==$COLON&&!isPrefixEnd(this._peek)){this._advance();}var/** @type {?} */nameStart=void 0;if(this._peek===$COLON){this._advance();prefix=this._input.substring(nameOrPrefixStart,this._index-1);nameStart=this._index;}else{nameStart=nameOrPrefixStart;}this._requireCharCodeUntilFn(isNameEnd,this._index===nameStart?1:0);var/** @type {?} */name=this._input.substring(nameStart,this._index);return[prefix,name];}/**
     * @param {?} start
     * @return {?}
     */},{key:'_consumeTagOpen',value:function _consumeTagOpen(start){var/** @type {?} */savedPos=this._savePosition();var/** @type {?} */tagName=void 0;var/** @type {?} */lowercaseTagName=void 0;try{if(!isAsciiLetter(this._peek)){throw this._createError(_unexpectedCharacterErrorMsg(this._peek),this._getSpan());}var/** @type {?} */nameStart=this._index;this._consumeTagOpenStart(start);tagName=this._input.substring(nameStart,this._index);lowercaseTagName=tagName.toLowerCase();this._attemptCharCodeUntilFn(isNotWhitespace);while(this._peek!==$SLASH&&this._peek!==$GT){this._consumeAttributeName();this._attemptCharCodeUntilFn(isNotWhitespace);if(this._attemptCharCode($EQ)){this._attemptCharCodeUntilFn(isNotWhitespace);this._consumeAttributeValue();}this._attemptCharCodeUntilFn(isNotWhitespace);}this._consumeTagOpenEnd();}catch(e){if(e instanceof _ControlFlowError){// When the start tag is invalid, assume we want a "<"
this._restorePosition(savedPos);// Back to back text tokens are merged at the end
this._beginToken(TokenType$1.TEXT,start);this._endToken(['<']);return;}throw e;}var/** @type {?} */contentTokenType=this._getTagDefinition(tagName).contentType;if(contentTokenType===TagContentType.RAW_TEXT){this._consumeRawTextWithTagClose(lowercaseTagName,false);}else if(contentTokenType===TagContentType.ESCAPABLE_RAW_TEXT){this._consumeRawTextWithTagClose(lowercaseTagName,true);}}/**
     * @param {?} lowercaseTagName
     * @param {?} decodeEntities
     * @return {?}
     */},{key:'_consumeRawTextWithTagClose',value:function _consumeRawTextWithTagClose(lowercaseTagName,decodeEntities){var _this38=this;var/** @type {?} */textToken=this._consumeRawText(decodeEntities,$LT,function(){if(!_this38._attemptCharCode($SLASH))return false;_this38._attemptCharCodeUntilFn(isNotWhitespace);if(!_this38._attemptStrCaseInsensitive(lowercaseTagName))return false;_this38._attemptCharCodeUntilFn(isNotWhitespace);return _this38._attemptCharCode($GT);});this._beginToken(TokenType$1.TAG_CLOSE,textToken.sourceSpan.end);this._endToken([null,lowercaseTagName]);}/**
     * @param {?} start
     * @return {?}
     */},{key:'_consumeTagOpenStart',value:function _consumeTagOpenStart(start){this._beginToken(TokenType$1.TAG_OPEN_START,start);var/** @type {?} */parts=this._consumePrefixAndName();this._endToken(parts);}/**
     * @return {?}
     */},{key:'_consumeAttributeName',value:function _consumeAttributeName(){this._beginToken(TokenType$1.ATTR_NAME);var/** @type {?} */prefixAndName=this._consumePrefixAndName();this._endToken(prefixAndName);}/**
     * @return {?}
     */},{key:'_consumeAttributeValue',value:function _consumeAttributeValue(){this._beginToken(TokenType$1.ATTR_VALUE);var/** @type {?} */value=void 0;if(this._peek===$SQ||this._peek===$DQ){var/** @type {?} */quoteChar=this._peek;this._advance();var/** @type {?} */parts=[];while(this._peek!==quoteChar){parts.push(this._readChar(true));}value=parts.join('');this._advance();}else{var/** @type {?} */valueStart=this._index;this._requireCharCodeUntilFn(isNameEnd,1);value=this._input.substring(valueStart,this._index);}this._endToken([this._processCarriageReturns(value)]);}/**
     * @return {?}
     */},{key:'_consumeTagOpenEnd',value:function _consumeTagOpenEnd(){var/** @type {?} */tokenType=this._attemptCharCode($SLASH)?TokenType$1.TAG_OPEN_END_VOID:TokenType$1.TAG_OPEN_END;this._beginToken(tokenType);this._requireCharCode($GT);this._endToken([]);}/**
     * @param {?} start
     * @return {?}
     */},{key:'_consumeTagClose',value:function _consumeTagClose(start){this._beginToken(TokenType$1.TAG_CLOSE,start);this._attemptCharCodeUntilFn(isNotWhitespace);var/** @type {?} */prefixAndName=this._consumePrefixAndName();this._attemptCharCodeUntilFn(isNotWhitespace);this._requireCharCode($GT);this._endToken(prefixAndName);}/**
     * @return {?}
     */},{key:'_consumeExpansionFormStart',value:function _consumeExpansionFormStart(){this._beginToken(TokenType$1.EXPANSION_FORM_START,this._getLocation());this._requireCharCode($LBRACE);this._endToken([]);this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);this._beginToken(TokenType$1.RAW_TEXT,this._getLocation());var/** @type {?} */condition=this._readUntil($COMMA);this._endToken([condition],this._getLocation());this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType$1.RAW_TEXT,this._getLocation());var/** @type {?} */type=this._readUntil($COMMA);this._endToken([type],this._getLocation());this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);}/**
     * @return {?}
     */},{key:'_consumeExpansionCaseStart',value:function _consumeExpansionCaseStart(){this._beginToken(TokenType$1.EXPANSION_CASE_VALUE,this._getLocation());var/** @type {?} */value=this._readUntil($LBRACE).trim();this._endToken([value],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START,this._getLocation());this._requireCharCode($LBRACE);this._endToken([],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);}/**
     * @return {?}
     */},{key:'_consumeExpansionCaseEnd',value:function _consumeExpansionCaseEnd(){this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END,this._getLocation());this._requireCharCode($RBRACE);this._endToken([],this._getLocation());this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.pop();}/**
     * @return {?}
     */},{key:'_consumeExpansionFormEnd',value:function _consumeExpansionFormEnd(){this._beginToken(TokenType$1.EXPANSION_FORM_END,this._getLocation());this._requireCharCode($RBRACE);this._endToken([]);this._expansionCaseStack.pop();}/**
     * @return {?}
     */},{key:'_consumeText',value:function _consumeText(){var/** @type {?} */start=this._getLocation();this._beginToken(TokenType$1.TEXT,start);var/** @type {?} */parts=[];do{if(this._interpolationConfig&&this._attemptStr(this._interpolationConfig.start)){parts.push(this._interpolationConfig.start);this._inInterpolation=true;}else if(this._interpolationConfig&&this._inInterpolation&&this._attemptStr(this._interpolationConfig.end)){parts.push(this._interpolationConfig.end);this._inInterpolation=false;}else{parts.push(this._readChar(true));}}while(!this._isTextEnd());this._endToken([this._processCarriageReturns(parts.join(''))]);}/**
     * @return {?}
     */},{key:'_isTextEnd',value:function _isTextEnd(){if(this._peek===$LT||this._peek===$EOF){return true;}if(this._tokenizeIcu&&!this._inInterpolation){if(isExpansionFormStart(this._input,this._index,this._interpolationConfig)){// start of an expansion form
return true;}if(this._peek===$RBRACE&&this._isInExpansionCase()){// end of and expansion case
return true;}}return false;}/**
     * @return {?}
     */},{key:'_savePosition',value:function _savePosition(){return[this._peek,this._index,this._column,this._line,this.tokens.length];}/**
     * @param {?} char
     * @return {?}
     */},{key:'_readUntil',value:function _readUntil(char){var/** @type {?} */start=this._index;this._attemptUntilChar(char);return this._input.substring(start,this._index);}/**
     * @param {?} position
     * @return {?}
     */},{key:'_restorePosition',value:function _restorePosition(position){this._peek=position[0];this._index=position[1];this._column=position[2];this._line=position[3];var/** @type {?} */nbTokens=position[4];if(nbTokens<this.tokens.length){// remove any extra tokens
this.tokens=this.tokens.slice(0,nbTokens);}}/**
     * @return {?}
     */},{key:'_isInExpansionCase',value:function _isInExpansionCase(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType$1.EXPANSION_CASE_EXP_START;}/**
     * @return {?}
     */},{key:'_isInExpansionForm',value:function _isInExpansionForm(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType$1.EXPANSION_FORM_START;}}]);return _Tokenizer;}();/**
 * @param {?} code
 * @return {?}
 */function isNotWhitespace(code){return!isWhitespace(code)||code===$EOF;}/**
 * @param {?} code
 * @return {?}
 */function isNameEnd(code){return isWhitespace(code)||code===$GT||code===$SLASH||code===$SQ||code===$DQ||code===$EQ;}/**
 * @param {?} code
 * @return {?}
 */function isPrefixEnd(code){return(code<$a||$z<code)&&(code<$A||$Z<code)&&(code<$0||code>$9);}/**
 * @param {?} code
 * @return {?}
 */function isDigitEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiHexDigit(code);}/**
 * @param {?} code
 * @return {?}
 */function isNamedEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiLetter(code);}/**
 * @param {?} input
 * @param {?} offset
 * @param {?} interpolationConfig
 * @return {?}
 */function isExpansionFormStart(input,offset,interpolationConfig){var/** @type {?} */isInterpolationStart=interpolationConfig?input.indexOf(interpolationConfig.start,offset)==offset:false;return input.charCodeAt(offset)==$LBRACE&&!isInterpolationStart;}/**
 * @param {?} peek
 * @return {?}
 */function isExpansionCaseStart(peek){return peek===$EQ||isAsciiLetter(peek);}/**
 * @param {?} code1
 * @param {?} code2
 * @return {?}
 */function compareCharCodeCaseInsensitive(code1,code2){return toUpperCaseCharCode(code1)==toUpperCaseCharCode(code2);}/**
 * @param {?} code
 * @return {?}
 */function toUpperCaseCharCode(code){return code>=$a&&code<=$z?code-$a+$A:code;}/**
 * @param {?} srcTokens
 * @return {?}
 */function mergeTextTokens(srcTokens){var/** @type {?} */dstTokens=[];var/** @type {?} */lastDstToken=void 0;for(var/** @type {?} */i=0;i<srcTokens.length;i++){var/** @type {?} */token=srcTokens[i];if(lastDstToken&&lastDstToken.type==TokenType$1.TEXT&&token.type==TokenType$1.TEXT){lastDstToken.parts[0]+=token.parts[0];lastDstToken.sourceSpan.end=token.sourceSpan.end;}else{lastDstToken=token;dstTokens.push(lastDstToken);}}return dstTokens;}var TreeError=function(_ParseError2){_inherits(TreeError,_ParseError2);/**
     * @param {?} elementName
     * @param {?} span
     * @param {?} msg
     */function TreeError(elementName,span,msg){_classCallCheck(this,TreeError);var _this39=_possibleConstructorReturn(this,(TreeError.__proto__||Object.getPrototypeOf(TreeError)).call(this,span,msg));_this39.elementName=elementName;return _this39;}/**
     * @param {?} elementName
     * @param {?} span
     * @param {?} msg
     * @return {?}
     */_createClass(TreeError,null,[{key:'create',value:function create(elementName,span,msg){return new TreeError(elementName,span,msg);}}]);return TreeError;}(ParseError);var ParseTreeResult=/**
     * @param {?} rootNodes
     * @param {?} errors
     */function ParseTreeResult(rootNodes,errors){_classCallCheck(this,ParseTreeResult);this.rootNodes=rootNodes;this.errors=errors;};var Parser$1=function(){/**
     * @param {?} getTagDefinition
     */function Parser$1(getTagDefinition){_classCallCheck(this,Parser$1);this.getTagDefinition=getTagDefinition;}/**
     * @param {?} source
     * @param {?} url
     * @param {?=} parseExpansionForms
     * @param {?=} interpolationConfig
     * @return {?}
     */_createClass(Parser$1,[{key:'parse',value:function parse(source,url){var parseExpansionForms=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var interpolationConfig=arguments.length>3&&arguments[3]!==undefined?arguments[3]:DEFAULT_INTERPOLATION_CONFIG;var/** @type {?} */tokensAndErrors=tokenize(source,url,this.getTagDefinition,parseExpansionForms,interpolationConfig);var/** @type {?} */treeAndErrors=new _TreeBuilder(tokensAndErrors.tokens,this.getTagDefinition).build();return new ParseTreeResult(treeAndErrors.rootNodes,tokensAndErrors.errors.concat(treeAndErrors.errors));}}]);return Parser$1;}();var _TreeBuilder=function(){/**
     * @param {?} tokens
     * @param {?} getTagDefinition
     */function _TreeBuilder(tokens,getTagDefinition){_classCallCheck(this,_TreeBuilder);this.tokens=tokens;this.getTagDefinition=getTagDefinition;this._index=-1;this._rootNodes=[];this._errors=[];this._elementStack=[];this._advance();}/**
     * @return {?}
     */_createClass(_TreeBuilder,[{key:'build',value:function build(){while(this._peek.type!==TokenType$1.EOF){if(this._peek.type===TokenType$1.TAG_OPEN_START){this._consumeStartTag(this._advance());}else if(this._peek.type===TokenType$1.TAG_CLOSE){this._consumeEndTag(this._advance());}else if(this._peek.type===TokenType$1.CDATA_START){this._closeVoidElement();this._consumeCdata(this._advance());}else if(this._peek.type===TokenType$1.COMMENT_START){this._closeVoidElement();this._consumeComment(this._advance());}else if(this._peek.type===TokenType$1.TEXT||this._peek.type===TokenType$1.RAW_TEXT||this._peek.type===TokenType$1.ESCAPABLE_RAW_TEXT){this._closeVoidElement();this._consumeText(this._advance());}else if(this._peek.type===TokenType$1.EXPANSION_FORM_START){this._consumeExpansion(this._advance());}else{// Skip all other tokens...
this._advance();}}return new ParseTreeResult(this._rootNodes,this._errors);}/**
     * @return {?}
     */},{key:'_advance',value:function _advance(){var/** @type {?} */prev=this._peek;if(this._index<this.tokens.length-1){// Note: there is always an EOF token at the end
this._index++;}this._peek=this.tokens[this._index];return prev;}/**
     * @param {?} type
     * @return {?}
     */},{key:'_advanceIf',value:function _advanceIf(type){if(this._peek.type===type){return this._advance();}return null;}/**
     * @param {?} startToken
     * @return {?}
     */},{key:'_consumeCdata',value:function _consumeCdata(startToken){this._consumeText(this._advance());this._advanceIf(TokenType$1.CDATA_END);}/**
     * @param {?} token
     * @return {?}
     */},{key:'_consumeComment',value:function _consumeComment(token){var/** @type {?} */text=this._advanceIf(TokenType$1.RAW_TEXT);this._advanceIf(TokenType$1.COMMENT_END);var/** @type {?} */value=isPresent(text)?text.parts[0].trim():null;this._addToParent(new Comment(value,token.sourceSpan));}/**
     * @param {?} token
     * @return {?}
     */},{key:'_consumeExpansion',value:function _consumeExpansion(token){var/** @type {?} */switchValue=this._advance();var/** @type {?} */type=this._advance();var/** @type {?} */cases=[];// read =
while(this._peek.type===TokenType$1.EXPANSION_CASE_VALUE){var/** @type {?} */expCase=this._parseExpansionCase();if(!expCase)return;// error
cases.push(expCase);}// read the final }
if(this._peek.type!==TokenType$1.EXPANSION_FORM_END){this._errors.push(TreeError.create(null,this._peek.sourceSpan,'Invalid ICU message. Missing \'}\'.'));return;}var/** @type {?} */sourceSpan=new ParseSourceSpan(token.sourceSpan.start,this._peek.sourceSpan.end);this._addToParent(new Expansion(switchValue.parts[0],type.parts[0],cases,sourceSpan,switchValue.sourceSpan));this._advance();}/**
     * @return {?}
     */},{key:'_parseExpansionCase',value:function _parseExpansionCase(){var/** @type {?} */value=this._advance();// read {
if(this._peek.type!==TokenType$1.EXPANSION_CASE_EXP_START){this._errors.push(TreeError.create(null,this._peek.sourceSpan,'Invalid ICU message. Missing \'{\'.'));return null;}// read until }
var/** @type {?} */start=this._advance();var/** @type {?} */exp=this._collectExpansionExpTokens(start);if(!exp)return null;var/** @type {?} */end=this._advance();exp.push(new Token$1(TokenType$1.EOF,[],end.sourceSpan));// parse everything in between { and }
var/** @type {?} */parsedExp=new _TreeBuilder(exp,this.getTagDefinition).build();if(parsedExp.errors.length>0){this._errors=this._errors.concat(/** @type {?} */parsedExp.errors);return null;}var/** @type {?} */sourceSpan=new ParseSourceSpan(value.sourceSpan.start,end.sourceSpan.end);var/** @type {?} */expSourceSpan=new ParseSourceSpan(start.sourceSpan.start,end.sourceSpan.end);return new ExpansionCase(value.parts[0],parsedExp.rootNodes,sourceSpan,value.sourceSpan,expSourceSpan);}/**
     * @param {?} start
     * @return {?}
     */},{key:'_collectExpansionExpTokens',value:function _collectExpansionExpTokens(start){var/** @type {?} */exp=[];var/** @type {?} */expansionFormStack=[TokenType$1.EXPANSION_CASE_EXP_START];while(true){if(this._peek.type===TokenType$1.EXPANSION_FORM_START||this._peek.type===TokenType$1.EXPANSION_CASE_EXP_START){expansionFormStack.push(this._peek.type);}if(this._peek.type===TokenType$1.EXPANSION_CASE_EXP_END){if(lastOnStack(expansionFormStack,TokenType$1.EXPANSION_CASE_EXP_START)){expansionFormStack.pop();if(expansionFormStack.length==0)return exp;}else{this._errors.push(TreeError.create(null,start.sourceSpan,'Invalid ICU message. Missing \'}\'.'));return null;}}if(this._peek.type===TokenType$1.EXPANSION_FORM_END){if(lastOnStack(expansionFormStack,TokenType$1.EXPANSION_FORM_START)){expansionFormStack.pop();}else{this._errors.push(TreeError.create(null,start.sourceSpan,'Invalid ICU message. Missing \'}\'.'));return null;}}if(this._peek.type===TokenType$1.EOF){this._errors.push(TreeError.create(null,start.sourceSpan,'Invalid ICU message. Missing \'}\'.'));return null;}exp.push(this._advance());}}/**
     * @param {?} token
     * @return {?}
     */},{key:'_consumeText',value:function _consumeText(token){var/** @type {?} */text=token.parts[0];if(text.length>0&&text[0]=='\n'){var/** @type {?} */parent=this._getParentElement();if(isPresent(parent)&&parent.children.length==0&&this.getTagDefinition(parent.name).ignoreFirstLf){text=text.substring(1);}}if(text.length>0){this._addToParent(new Text(text,token.sourceSpan));}}/**
     * @return {?}
     */},{key:'_closeVoidElement',value:function _closeVoidElement(){if(this._elementStack.length>0){var/** @type {?} */el=this._elementStack[this._elementStack.length-1];if(this.getTagDefinition(el.name).isVoid){this._elementStack.pop();}}}/**
     * @param {?} startTagToken
     * @return {?}
     */},{key:'_consumeStartTag',value:function _consumeStartTag(startTagToken){var/** @type {?} */prefix=startTagToken.parts[0];var/** @type {?} */name=startTagToken.parts[1];var/** @type {?} */attrs=[];while(this._peek.type===TokenType$1.ATTR_NAME){attrs.push(this._consumeAttr(this._advance()));}var/** @type {?} */fullName=this._getElementFullName(prefix,name,this._getParentElement());var/** @type {?} */selfClosing=false;// Note: There could have been a tokenizer error
// so that we don't get a token for the end tag...
if(this._peek.type===TokenType$1.TAG_OPEN_END_VOID){this._advance();selfClosing=true;var/** @type {?} */tagDef=this.getTagDefinition(fullName);if(!(tagDef.canSelfClose||getNsPrefix(fullName)!==null||tagDef.isVoid)){this._errors.push(TreeError.create(fullName,startTagToken.sourceSpan,'Only void and foreign elements can be self closed "'+startTagToken.parts[1]+'"'));}}else if(this._peek.type===TokenType$1.TAG_OPEN_END){this._advance();selfClosing=false;}var/** @type {?} */end=this._peek.sourceSpan.start;var/** @type {?} */span=new ParseSourceSpan(startTagToken.sourceSpan.start,end);var/** @type {?} */el=new Element(fullName,attrs,[],span,span,null);this._pushElement(el);if(selfClosing){this._popElement(fullName);el.endSourceSpan=span;}}/**
     * @param {?} el
     * @return {?}
     */},{key:'_pushElement',value:function _pushElement(el){if(this._elementStack.length>0){var/** @type {?} */parentEl=this._elementStack[this._elementStack.length-1];if(this.getTagDefinition(parentEl.name).isClosedByChild(el.name)){this._elementStack.pop();}}var/** @type {?} */tagDef=this.getTagDefinition(el.name);var _getParentElementSkip=this._getParentElementSkippingContainers(),parent=_getParentElementSkip.parent,container=_getParentElementSkip.container;if(parent&&tagDef.requireExtraParent(parent.name)){var/** @type {?} */newParent=new Element(tagDef.parentToAdd,[],[],el.sourceSpan,el.startSourceSpan,el.endSourceSpan);this._insertBeforeContainer(parent,container,newParent);}this._addToParent(el);this._elementStack.push(el);}/**
     * @param {?} endTagToken
     * @return {?}
     */},{key:'_consumeEndTag',value:function _consumeEndTag(endTagToken){var/** @type {?} */fullName=this._getElementFullName(endTagToken.parts[0],endTagToken.parts[1],this._getParentElement());if(this._getParentElement()){this._getParentElement().endSourceSpan=endTagToken.sourceSpan;}if(this.getTagDefinition(fullName).isVoid){this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,'Void elements do not have end tags "'+endTagToken.parts[1]+'"'));}else if(!this._popElement(fullName)){this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,'Unexpected closing tag "'+endTagToken.parts[1]+'"'));}}/**
     * @param {?} fullName
     * @return {?}
     */},{key:'_popElement',value:function _popElement(fullName){for(var/** @type {?} */stackIndex=this._elementStack.length-1;stackIndex>=0;stackIndex--){var/** @type {?} */el=this._elementStack[stackIndex];if(el.name==fullName){this._elementStack.splice(stackIndex,this._elementStack.length-stackIndex);return true;}if(!this.getTagDefinition(el.name).closedByParent){return false;}}return false;}/**
     * @param {?} attrName
     * @return {?}
     */},{key:'_consumeAttr',value:function _consumeAttr(attrName){var/** @type {?} */fullName=mergeNsAndName(attrName.parts[0],attrName.parts[1]);var/** @type {?} */end=attrName.sourceSpan.end;var/** @type {?} */value='';var/** @type {?} */valueSpan=void 0;if(this._peek.type===TokenType$1.ATTR_VALUE){var/** @type {?} */valueToken=this._advance();value=valueToken.parts[0];end=valueToken.sourceSpan.end;valueSpan=valueToken.sourceSpan;}return new Attribute$1(fullName,value,new ParseSourceSpan(attrName.sourceSpan.start,end),valueSpan);}/**
     * @return {?}
     */},{key:'_getParentElement',value:function _getParentElement(){return this._elementStack.length>0?this._elementStack[this._elementStack.length-1]:null;}/**
     * Returns the parent in the DOM and the container.
     *
     * `<ng-container>` elements are skipped as they are not rendered as DOM element.
     * @return {?}
     */},{key:'_getParentElementSkippingContainers',value:function _getParentElementSkippingContainers(){var/** @type {?} */container=null;for(var/** @type {?} */i=this._elementStack.length-1;i>=0;i--){if(this._elementStack[i].name!=='ng-container'){return{parent:this._elementStack[i],container:container};}container=this._elementStack[i];}return{parent:this._elementStack[this._elementStack.length-1],container:container};}/**
     * @param {?} node
     * @return {?}
     */},{key:'_addToParent',value:function _addToParent(node){var/** @type {?} */parent=this._getParentElement();if(isPresent(parent)){parent.children.push(node);}else{this._rootNodes.push(node);}}/**
     * Insert a node between the parent and the container.
     * When no container is given, the node is appended as a child of the parent.
     * Also updates the element stack accordingly.
     *
     * \@internal
     * @param {?} parent
     * @param {?} container
     * @param {?} node
     * @return {?}
     */},{key:'_insertBeforeContainer',value:function _insertBeforeContainer(parent,container,node){if(!container){this._addToParent(node);this._elementStack.push(node);}else{if(parent){// replace the container with the new node in the children
var/** @type {?} */index=parent.children.indexOf(container);parent.children[index]=node;}else{this._rootNodes.push(node);}node.children.push(container);this._elementStack.splice(this._elementStack.indexOf(container),0,node);}}/**
     * @param {?} prefix
     * @param {?} localName
     * @param {?} parentElement
     * @return {?}
     */},{key:'_getElementFullName',value:function _getElementFullName(prefix,localName,parentElement){if(isBlank(prefix)){prefix=this.getTagDefinition(localName).implicitNamespacePrefix;if(isBlank(prefix)&&isPresent(parentElement)){prefix=getNsPrefix(parentElement.name);}}return mergeNsAndName(prefix,localName);}}]);return _TreeBuilder;}();/**
 * @param {?} stack
 * @param {?} element
 * @return {?}
 */function lastOnStack(stack,element){return stack.length>0&&stack[stack.length-1]===element;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Message=/**
     * @param {?} nodes message AST
     * @param {?} placeholders maps placeholder names to static content
     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)
     * @param {?} meaning
     * @param {?} description
     * @param {?} id
     */function Message(nodes,placeholders,placeholderToMessage,meaning,description,id){_classCallCheck(this,Message);this.nodes=nodes;this.placeholders=placeholders;this.placeholderToMessage=placeholderToMessage;this.meaning=meaning;this.description=description;this.id=id;};var Text$1=function(){/**
     * @param {?} value
     * @param {?} sourceSpan
     */function Text$1(value,sourceSpan){_classCallCheck(this,Text$1);this.value=value;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Text$1,[{key:'visit',value:function visit(visitor,context){return visitor.visitText(this,context);}}]);return Text$1;}();var Container=function(){/**
     * @param {?} children
     * @param {?} sourceSpan
     */function Container(children,sourceSpan){_classCallCheck(this,Container);this.children=children;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Container,[{key:'visit',value:function visit(visitor,context){return visitor.visitContainer(this,context);}}]);return Container;}();var Icu=function(){/**
     * @param {?} expression
     * @param {?} type
     * @param {?} cases
     * @param {?} sourceSpan
     */function Icu(expression,type,cases,sourceSpan){_classCallCheck(this,Icu);this.expression=expression;this.type=type;this.cases=cases;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Icu,[{key:'visit',value:function visit(visitor,context){return visitor.visitIcu(this,context);}}]);return Icu;}();var TagPlaceholder=function(){/**
     * @param {?} tag
     * @param {?} attrs
     * @param {?} startName
     * @param {?} closeName
     * @param {?} children
     * @param {?} isVoid
     * @param {?} sourceSpan
     */function TagPlaceholder(tag,attrs,startName,closeName,children,isVoid,sourceSpan){_classCallCheck(this,TagPlaceholder);this.tag=tag;this.attrs=attrs;this.startName=startName;this.closeName=closeName;this.children=children;this.isVoid=isVoid;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(TagPlaceholder,[{key:'visit',value:function visit(visitor,context){return visitor.visitTagPlaceholder(this,context);}}]);return TagPlaceholder;}();var Placeholder=function(){/**
     * @param {?} value
     * @param {?} name
     * @param {?} sourceSpan
     */function Placeholder(value,name,sourceSpan){_classCallCheck(this,Placeholder);this.value=value;this.name=name;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(Placeholder,[{key:'visit',value:function visit(visitor,context){return visitor.visitPlaceholder(this,context);}}]);return Placeholder;}();var IcuPlaceholder=function(){/**
     * @param {?} value
     * @param {?} name
     * @param {?} sourceSpan
     */function IcuPlaceholder(value,name,sourceSpan){_classCallCheck(this,IcuPlaceholder);this.value=value;this.name=name;this.sourceSpan=sourceSpan;}/**
     * @param {?} visitor
     * @param {?=} context
     * @return {?}
     */_createClass(IcuPlaceholder,[{key:'visit',value:function visit(visitor,context){return visitor.visitIcuPlaceholder(this,context);}}]);return IcuPlaceholder;}();var CloneVisitor=function(){function CloneVisitor(){_classCallCheck(this,CloneVisitor);}_createClass(CloneVisitor,[{key:'visitText',/**
     * @param {?} text
     * @param {?=} context
     * @return {?}
     */value:function visitText(text,context){return new Text$1(text.value,text.sourceSpan);}/**
     * @param {?} container
     * @param {?=} context
     * @return {?}
     */},{key:'visitContainer',value:function visitContainer(container,context){var _this40=this;var/** @type {?} */children=container.children.map(function(n){return n.visit(_this40,context);});return new Container(children,container.sourceSpan);}/**
     * @param {?} icu
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcu',value:function visitIcu(icu,context){var _this41=this;var/** @type {?} */cases={};Object.keys(icu.cases).forEach(function(key){return cases[key]=icu.cases[key].visit(_this41,context);});var/** @type {?} */msg=new Icu(icu.expression,icu.type,cases,icu.sourceSpan);msg.expressionPlaceholder=icu.expressionPlaceholder;return msg;}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,context){var _this42=this;var/** @type {?} */children=ph.children.map(function(n){return n.visit(_this42,context);});return new TagPlaceholder(ph.tag,ph.attrs,ph.startName,ph.closeName,children,ph.isVoid,ph.sourceSpan);}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,context){return new Placeholder(ph.value,ph.name,ph.sourceSpan);}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcuPlaceholder',value:function visitIcuPlaceholder(ph,context){return new IcuPlaceholder(ph.value,ph.name,ph.sourceSpan);}}]);return CloneVisitor;}();var RecurseVisitor=function(){function RecurseVisitor(){_classCallCheck(this,RecurseVisitor);}_createClass(RecurseVisitor,[{key:'visitText',/**
     * @param {?} text
     * @param {?=} context
     * @return {?}
     */value:function visitText(text,context){}},{key:'visitContainer',/**
     * @param {?} container
     * @param {?=} context
     * @return {?}
     */value:function visitContainer(container,context){var _this43=this;container.children.forEach(function(child){return child.visit(_this43);});}/**
     * @param {?} icu
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcu',value:function visitIcu(icu,context){var _this44=this;Object.keys(icu.cases).forEach(function(k){icu.cases[k].visit(_this44);});}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,context){var _this45=this;ph.children.forEach(function(child){return child.visit(_this45);});}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,context){}},{key:'visitIcuPlaceholder',/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */value:function visitIcuPlaceholder(ph,context){}}]);return RecurseVisitor;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */TAG_TO_PLACEHOLDER_NAMES={'A':'LINK','B':'BOLD_TEXT','BR':'LINE_BREAK','EM':'EMPHASISED_TEXT','H1':'HEADING_LEVEL1','H2':'HEADING_LEVEL2','H3':'HEADING_LEVEL3','H4':'HEADING_LEVEL4','H5':'HEADING_LEVEL5','H6':'HEADING_LEVEL6','HR':'HORIZONTAL_RULE','I':'ITALIC_TEXT','LI':'LIST_ITEM','LINK':'MEDIA_LINK','OL':'ORDERED_LIST','P':'PARAGRAPH','Q':'QUOTATION','S':'STRIKETHROUGH_TEXT','SMALL':'SMALL_TEXT','SUB':'SUBSTRIPT','SUP':'SUPERSCRIPT','TBODY':'TABLE_BODY','TD':'TABLE_CELL','TFOOT':'TABLE_FOOTER','TH':'TABLE_HEADER_CELL','THEAD':'TABLE_HEADER','TR':'TABLE_ROW','TT':'MONOSPACED_TEXT','U':'UNDERLINED_TEXT','UL':'UNORDERED_LIST'};/**
 * Creates unique names for placeholder with different content.
 *
 * Returns the same placeholder name when the content is identical.
 *
 * \@internal
 */var PlaceholderRegistry=function(){function PlaceholderRegistry(){_classCallCheck(this,PlaceholderRegistry);this._placeHolderNameCounts={};this._signatureToName={};}/**
     * @param {?} tag
     * @param {?} attrs
     * @param {?} isVoid
     * @return {?}
     */_createClass(PlaceholderRegistry,[{key:'getStartTagPlaceholderName',value:function getStartTagPlaceholderName(tag,attrs,isVoid){var/** @type {?} */signature=this._hashTag(tag,attrs,isVoid);if(this._signatureToName[signature]){return this._signatureToName[signature];}var/** @type {?} */upperTag=tag.toUpperCase();var/** @type {?} */baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||'TAG_'+upperTag;var/** @type {?} */name=this._generateUniqueName(isVoid?baseName:'START_'+baseName);this._signatureToName[signature]=name;return name;}/**
     * @param {?} tag
     * @return {?}
     */},{key:'getCloseTagPlaceholderName',value:function getCloseTagPlaceholderName(tag){var/** @type {?} */signature=this._hashClosingTag(tag);if(this._signatureToName[signature]){return this._signatureToName[signature];}var/** @type {?} */upperTag=tag.toUpperCase();var/** @type {?} */baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||'TAG_'+upperTag;var/** @type {?} */name=this._generateUniqueName('CLOSE_'+baseName);this._signatureToName[signature]=name;return name;}/**
     * @param {?} name
     * @param {?} content
     * @return {?}
     */},{key:'getPlaceholderName',value:function getPlaceholderName(name,content){var/** @type {?} */upperName=name.toUpperCase();var/** @type {?} */signature='PH: '+upperName+'='+content;if(this._signatureToName[signature]){return this._signatureToName[signature];}var/** @type {?} */uniqueName=this._generateUniqueName(upperName);this._signatureToName[signature]=uniqueName;return uniqueName;}/**
     * @param {?} name
     * @return {?}
     */},{key:'getUniquePlaceholder',value:function getUniquePlaceholder(name){return this._generateUniqueName(name.toUpperCase());}/**
     * @param {?} tag
     * @param {?} attrs
     * @param {?} isVoid
     * @return {?}
     */},{key:'_hashTag',value:function _hashTag(tag,attrs,isVoid){var/** @type {?} */start='<'+tag;var/** @type {?} */strAttrs=Object.keys(attrs).sort().map(function(name){return' '+name+'='+attrs[name];}).join('');var/** @type {?} */end=isVoid?'/>':'></'+tag+'>';return start+strAttrs+end;}/**
     * @param {?} tag
     * @return {?}
     */},{key:'_hashClosingTag',value:function _hashClosingTag(tag){return this._hashTag('/'+tag,{},false);}/**
     * @param {?} base
     * @return {?}
     */},{key:'_generateUniqueName',value:function _generateUniqueName(base){var/** @type {?} */seen=this._placeHolderNameCounts.hasOwnProperty(base);if(!seen){this._placeHolderNameCounts[base]=1;return base;}var/** @type {?} */id=this._placeHolderNameCounts[base];this._placeHolderNameCounts[base]=id+1;return base+'_'+id;}}]);return PlaceholderRegistry;}();var/** @type {?} */_expParser=new Parser(new Lexer());/**
 * Returns a function converting html nodes to an i18n Message given an interpolationConfig
 * @param {?} interpolationConfig
 * @return {?}
 */function createI18nMessageFactory(interpolationConfig){var/** @type {?} */visitor=new _I18nVisitor(_expParser,interpolationConfig);return function(nodes,meaning,description,id){return visitor.toI18nMessage(nodes,meaning,description,id);};}var _I18nVisitor=function(){/**
     * @param {?} _expressionParser
     * @param {?} _interpolationConfig
     */function _I18nVisitor(_expressionParser,_interpolationConfig){_classCallCheck(this,_I18nVisitor);this._expressionParser=_expressionParser;this._interpolationConfig=_interpolationConfig;}/**
     * @param {?} nodes
     * @param {?} meaning
     * @param {?} description
     * @param {?} id
     * @return {?}
     */_createClass(_I18nVisitor,[{key:'toI18nMessage',value:function toI18nMessage(nodes,meaning,description,id){this._isIcu=nodes.length==1&&nodes[0]instanceof Expansion;this._icuDepth=0;this._placeholderRegistry=new PlaceholderRegistry();this._placeholderToContent={};this._placeholderToMessage={};var/** @type {?} */i18nodes=visitAll(this,nodes,{});return new Message(i18nodes,this._placeholderToContent,this._placeholderToMessage,meaning,description,id);}/**
     * @param {?} el
     * @param {?} context
     * @return {?}
     */},{key:'visitElement',value:function visitElement(el,context){var/** @type {?} */children=visitAll(this,el.children);var/** @type {?} */attrs={};el.attrs.forEach(function(attr){// Do not visit the attributes, translatable ones are top-level ASTs
attrs[attr.name]=attr.value;});var/** @type {?} */isVoid=getHtmlTagDefinition(el.name).isVoid;var/** @type {?} */startPhName=this._placeholderRegistry.getStartTagPlaceholderName(el.name,attrs,isVoid);this._placeholderToContent[startPhName]=el.sourceSpan.toString();var/** @type {?} */closePhName='';if(!isVoid){closePhName=this._placeholderRegistry.getCloseTagPlaceholderName(el.name);this._placeholderToContent[closePhName]='</'+el.name+'>';}return new TagPlaceholder(el.name,attrs,startPhName,closePhName,children,isVoid,el.sourceSpan);}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){return this._visitTextWithInterpolation(attribute.value,attribute.sourceSpan);}/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){return this._visitTextWithInterpolation(text.value,text.sourceSpan);}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){return null;}/**
     * @param {?} icu
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(icu,context){var _this46=this;this._icuDepth++;var/** @type {?} */i18nIcuCases={};var/** @type {?} */i18nIcu=new Icu(icu.switchValue,icu.type,i18nIcuCases,icu.sourceSpan);icu.cases.forEach(function(caze){i18nIcuCases[caze.value]=new Container(caze.expression.map(function(node){return node.visit(_this46,{});}),caze.expSourceSpan);});this._icuDepth--;if(this._isIcu||this._icuDepth>0){// Returns an ICU node when:
// - the message (vs a part of the message) is an ICU message, or
// - the ICU message is nested.
var/** @type {?} */expPh=this._placeholderRegistry.getUniquePlaceholder('VAR_'+icu.type);i18nIcu.expressionPlaceholder=expPh;this._placeholderToContent[expPh]=icu.switchValue;return i18nIcu;}// Else returns a placeholder
// ICU placeholders should not be replaced with their original content but with the their
// translations. We need to create a new visitor (they are not re-entrant) to compute the
// message id.
// TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg
var/** @type {?} */phName=this._placeholderRegistry.getPlaceholderName('ICU',icu.sourceSpan.toString());var/** @type {?} */visitor=new _I18nVisitor(this._expressionParser,this._interpolationConfig);this._placeholderToMessage[phName]=visitor.toI18nMessage([icu],'','','');return new IcuPlaceholder(i18nIcu,phName,icu.sourceSpan);}/**
     * @param {?} icuCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(icuCase,context){throw new Error('Unreachable code');}/**
     * @param {?} text
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_visitTextWithInterpolation',value:function _visitTextWithInterpolation(text,sourceSpan){var/** @type {?} */splitInterpolation=this._expressionParser.splitInterpolation(text,sourceSpan.start.toString(),this._interpolationConfig);if(!splitInterpolation){// No expression, return a single text
return new Text$1(text,sourceSpan);}// Return a group of text + expressions
var/** @type {?} */nodes=[];var/** @type {?} */container=new Container(nodes,sourceSpan);var _interpolationConfig2=this._interpolationConfig,sDelimiter=_interpolationConfig2.start,eDelimiter=_interpolationConfig2.end;for(var/** @type {?} */i=0;i<splitInterpolation.strings.length-1;i++){var/** @type {?} */expression=splitInterpolation.expressions[i];var/** @type {?} */baseName=_extractPlaceholderName(expression)||'INTERPOLATION';var/** @type {?} */phName=this._placeholderRegistry.getPlaceholderName(baseName,expression);if(splitInterpolation.strings[i].length){// No need to add empty strings
nodes.push(new Text$1(splitInterpolation.strings[i],sourceSpan));}nodes.push(new Placeholder(expression,phName,sourceSpan));this._placeholderToContent[phName]=sDelimiter+expression+eDelimiter;}// The last index contains no expression
var/** @type {?} */lastStringIdx=splitInterpolation.strings.length-1;if(splitInterpolation.strings[lastStringIdx].length){nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx],sourceSpan));}return container;}}]);return _I18nVisitor;}();var/** @type {?} */_CUSTOM_PH_EXP=/\/\/[\s\S]*i18n[\s\S]*\([\s\S]*ph[\s\S]*=[\s\S]*"([\s\S]*?)"[\s\S]*\)/g;/**
 * @param {?} input
 * @return {?}
 */function _extractPlaceholderName(input){return input.split(_CUSTOM_PH_EXP)[1];}/**
 * An i18n error.
 */var I18nError=function(_ParseError3){_inherits(I18nError,_ParseError3);/**
     * @param {?} span
     * @param {?} msg
     */function I18nError(span,msg){_classCallCheck(this,I18nError);return _possibleConstructorReturn(this,(I18nError.__proto__||Object.getPrototypeOf(I18nError)).call(this,span,msg));}return I18nError;}(ParseError);var/** @type {?} */_I18N_ATTR='i18n';var/** @type {?} */_I18N_ATTR_PREFIX='i18n-';var/** @type {?} */_I18N_COMMENT_PREFIX_REGEXP=/^i18n:?/;var/** @type {?} */MEANING_SEPARATOR='|';var/** @type {?} */ID_SEPARATOR='@@';/**
 * Extract translatable messages from an html AST
 * @param {?} nodes
 * @param {?} interpolationConfig
 * @param {?} implicitTags
 * @param {?} implicitAttrs
 * @return {?}
 */function extractMessages(nodes,interpolationConfig,implicitTags,implicitAttrs){var/** @type {?} */visitor=new _Visitor(implicitTags,implicitAttrs);return visitor.extract(nodes,interpolationConfig);}/**
 * @param {?} nodes
 * @param {?} translations
 * @param {?} interpolationConfig
 * @param {?} implicitTags
 * @param {?} implicitAttrs
 * @return {?}
 */function mergeTranslations(nodes,translations,interpolationConfig,implicitTags,implicitAttrs){var/** @type {?} */visitor=new _Visitor(implicitTags,implicitAttrs);return visitor.merge(nodes,translations,interpolationConfig);}var ExtractionResult=/**
     * @param {?} messages
     * @param {?} errors
     */function ExtractionResult(messages,errors){_classCallCheck(this,ExtractionResult);this.messages=messages;this.errors=errors;};var _VisitorMode={};_VisitorMode.Extract=0;_VisitorMode.Merge=1;_VisitorMode[_VisitorMode.Extract]="Extract";_VisitorMode[_VisitorMode.Merge]="Merge";/**
 * This Visitor is used:
 * 1. to extract all the translatable strings from an html AST (see `extract()`),
 * 2. to replace the translatable strings with the actual translations (see `merge()`)
 *
 * \@internal
 */var _Visitor=function(){/**
     * @param {?} _implicitTags
     * @param {?} _implicitAttrs
     */function _Visitor(_implicitTags,_implicitAttrs){_classCallCheck(this,_Visitor);this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;}/**
     * Extracts the messages from the tree
     * @param {?} nodes
     * @param {?} interpolationConfig
     * @return {?}
     */_createClass(_Visitor,[{key:'extract',value:function extract(nodes,interpolationConfig){var _this48=this;this._init(_VisitorMode.Extract,interpolationConfig);nodes.forEach(function(node){return node.visit(_this48,null);});if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ExtractionResult(this._messages,this._errors);}/**
     * Returns a tree where all translatable nodes are translated
     * @param {?} nodes
     * @param {?} translations
     * @param {?} interpolationConfig
     * @return {?}
     */},{key:'merge',value:function merge(nodes,translations,interpolationConfig){this._init(_VisitorMode.Merge,interpolationConfig);this._translations=translations;// Construct a single fake root element
var/** @type {?} */wrapper=new Element('wrapper',[],nodes,null,null,null);var/** @type {?} */translatedNode=wrapper.visit(this,null);if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ParseTreeResult(translatedNode.children,this._errors);}/**
     * @param {?} icuCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(icuCase,context){// Parse cases for translatable html attributes
var/** @type {?} */expression=visitAll(this,icuCase.expression,context);if(this._mode===_VisitorMode.Merge){return new ExpansionCase(icuCase.value,expression,icuCase.sourceSpan,icuCase.valueSourceSpan,icuCase.expSourceSpan);}}/**
     * @param {?} icu
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(icu,context){this._mayBeAddBlockChildren(icu);var/** @type {?} */wasInIcu=this._inIcu;if(!this._inIcu){// nested ICU messages should not be extracted but top-level translated as a whole
if(this._isInTranslatableSection){this._addMessage([icu]);}this._inIcu=true;}var/** @type {?} */cases=visitAll(this,icu.cases,context);if(this._mode===_VisitorMode.Merge){icu=new Expansion(icu.switchValue,icu.type,cases,icu.sourceSpan,icu.switchValueSourceSpan);}this._inIcu=wasInIcu;return icu;}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){var/** @type {?} */isOpening=_isOpeningComment(comment);if(isOpening&&this._isInTranslatableSection){this._reportError(comment,'Could not start a block inside a translatable section');return;}var/** @type {?} */isClosing=_isClosingComment(comment);if(isClosing&&!this._inI18nBlock){this._reportError(comment,'Trying to close an unopened block');return;}if(!this._inI18nNode&&!this._inIcu){if(!this._inI18nBlock){if(isOpening){this._inI18nBlock=true;this._blockStartDepth=this._depth;this._blockChildren=[];this._blockMeaningAndDesc=comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP,'').trim();this._openTranslatableSection(comment);}}else{if(isClosing){if(this._depth==this._blockStartDepth){this._closeTranslatableSection(comment,this._blockChildren);this._inI18nBlock=false;var/** @type {?} */message=this._addMessage(this._blockChildren,this._blockMeaningAndDesc);// merge attributes in sections
var/** @type {?} */nodes=this._translateMessage(comment,message);return visitAll(this,nodes);}else{this._reportError(comment,'I18N blocks should not cross element boundaries');return;}}}}}/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){if(this._isInTranslatableSection){this._mayBeAddBlockChildren(text);}return text;}/**
     * @param {?} el
     * @param {?} context
     * @return {?}
     */},{key:'visitElement',value:function visitElement(el,context){var _this49=this;this._mayBeAddBlockChildren(el);this._depth++;var/** @type {?} */wasInI18nNode=this._inI18nNode;var/** @type {?} */wasInImplicitNode=this._inImplicitNode;var/** @type {?} */childNodes=[];var/** @type {?} */translatedChildNodes=void 0;// Extract:
// - top level nodes with the (implicit) "i18n" attribute if not already in a section
// - ICU messages
var/** @type {?} */i18nAttr=_getI18nAttr(el);var/** @type {?} */i18nMeta=i18nAttr?i18nAttr.value:'';var/** @type {?} */isImplicit=this._implicitTags.some(function(tag){return el.name===tag;})&&!this._inIcu&&!this._isInTranslatableSection;var/** @type {?} */isTopLevelImplicit=!wasInImplicitNode&&isImplicit;this._inImplicitNode=wasInImplicitNode||isImplicit;if(!this._isInTranslatableSection&&!this._inIcu){if(i18nAttr||isTopLevelImplicit){this._inI18nNode=true;var/** @type {?} */message=this._addMessage(el.children,i18nMeta);translatedChildNodes=this._translateMessage(el,message);}if(this._mode==_VisitorMode.Extract){var/** @type {?} */isTranslatable=i18nAttr||isTopLevelImplicit;if(isTranslatable)this._openTranslatableSection(el);visitAll(this,el.children);if(isTranslatable)this._closeTranslatableSection(el,el.children);}}else{if(i18nAttr||isTopLevelImplicit){this._reportError(el,'Could not mark an element as translatable inside a translatable section');}if(this._mode==_VisitorMode.Extract){// Descend into child nodes for extraction
visitAll(this,el.children);}}if(this._mode===_VisitorMode.Merge){var/** @type {?} */visitNodes=translatedChildNodes||el.children;visitNodes.forEach(function(child){var/** @type {?} */visited=child.visit(_this49,context);if(visited&&!_this49._isInTranslatableSection){// Do not add the children from translatable sections (= i18n blocks here)
// They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)
childNodes=childNodes.concat(visited);}});}this._visitAttributesOf(el);this._depth--;this._inI18nNode=wasInI18nNode;this._inImplicitNode=wasInImplicitNode;if(this._mode===_VisitorMode.Merge){var/** @type {?} */translatedAttrs=this._translateAttributes(el);return new Element(el.name,translatedAttrs,childNodes,el.sourceSpan,el.startSourceSpan,el.endSourceSpan);}}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){throw new Error('unreachable code');}/**
     * @param {?} mode
     * @param {?} interpolationConfig
     * @return {?}
     */},{key:'_init',value:function _init(mode,interpolationConfig){this._mode=mode;this._inI18nBlock=false;this._inI18nNode=false;this._depth=0;this._inIcu=false;this._msgCountAtSectionStart=void 0;this._errors=[];this._messages=[];this._inImplicitNode=false;this._createI18nMessage=createI18nMessageFactory(interpolationConfig);}/**
     * @param {?} el
     * @return {?}
     */},{key:'_visitAttributesOf',value:function _visitAttributesOf(el){var _this50=this;var/** @type {?} */explicitAttrNameToValue={};var/** @type {?} */implicitAttrNames=this._implicitAttrs[el.name]||[];el.attrs.filter(function(attr){return attr.name.startsWith(_I18N_ATTR_PREFIX);}).forEach(function(attr){return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)]=attr.value;});el.attrs.forEach(function(attr){if(attr.name in explicitAttrNameToValue){_this50._addMessage([attr],explicitAttrNameToValue[attr.name]);}else if(implicitAttrNames.some(function(name){return attr.name===name;})){_this50._addMessage([attr]);}});}/**
     * @param {?} ast
     * @param {?=} msgMeta
     * @return {?}
     */},{key:'_addMessage',value:function _addMessage(ast,msgMeta){if(ast.length==0||ast.length==1&&ast[0]instanceof Attribute$1&&!ast[0].value){// Do not create empty messages
return;}var _parseMessageMeta2=_parseMessageMeta(msgMeta),meaning=_parseMessageMeta2.meaning,description=_parseMessageMeta2.description,id=_parseMessageMeta2.id;var/** @type {?} */message=this._createI18nMessage(ast,meaning,description,id);this._messages.push(message);return message;}/**
     * @param {?} el
     * @param {?} message
     * @return {?}
     */},{key:'_translateMessage',value:function _translateMessage(el,message){if(message&&this._mode===_VisitorMode.Merge){var/** @type {?} */nodes=this._translations.get(message);if(nodes){return nodes;}this._reportError(el,'Translation unavailable for message id="'+this._translations.digest(message)+'"');}return[];}/**
     * @param {?} el
     * @return {?}
     */},{key:'_translateAttributes',value:function _translateAttributes(el){var _this51=this;var/** @type {?} */attributes=el.attrs;var/** @type {?} */i18nAttributeMeanings={};attributes.forEach(function(attr){if(attr.name.startsWith(_I18N_ATTR_PREFIX)){i18nAttributeMeanings[attr.name.slice(_I18N_ATTR_PREFIX.length)]=_parseMessageMeta(attr.value).meaning;}});var/** @type {?} */translatedAttributes=[];attributes.forEach(function(attr){if(attr.name===_I18N_ATTR||attr.name.startsWith(_I18N_ATTR_PREFIX)){// strip i18n specific attributes
return;}if(attr.value&&attr.value!=''&&i18nAttributeMeanings.hasOwnProperty(attr.name)){var/** @type {?} */meaning=i18nAttributeMeanings[attr.name];var/** @type {?} */message=_this51._createI18nMessage([attr],meaning,'','');var/** @type {?} */nodes=_this51._translations.get(message);if(nodes){if(nodes.length==0){translatedAttributes.push(new Attribute$1(attr.name,'',attr.sourceSpan));}else if(nodes[0]instanceof Text){var/** @type {?} */value=nodes[0].value;translatedAttributes.push(new Attribute$1(attr.name,value,attr.sourceSpan));}else{_this51._reportError(el,'Unexpected translation for attribute "'+attr.name+'" (id="'+_this51._translations.digest(message)+'")');}}else{_this51._reportError(el,'Translation unavailable for attribute "'+attr.name+'" (id="'+_this51._translations.digest(message)+'")');}}else{translatedAttributes.push(attr);}});return translatedAttributes;}/**
     * Add the node as a child of the block when:
     * - we are in a block,
     * - we are not inside a ICU message (those are handled separately),
     * - the node is a "direct child" of the block
     * @param {?} node
     * @return {?}
     */},{key:'_mayBeAddBlockChildren',value:function _mayBeAddBlockChildren(node){if(this._inI18nBlock&&!this._inIcu&&this._depth==this._blockStartDepth){this._blockChildren.push(node);}}/**
     * Marks the start of a section, see `_closeTranslatableSection`
     * @param {?} node
     * @return {?}
     */},{key:'_openTranslatableSection',value:function _openTranslatableSection(node){if(this._isInTranslatableSection){this._reportError(node,'Unexpected section start');}else{this._msgCountAtSectionStart=this._messages.length;}}/**
     * A translatable section could be:
     * - the content of translatable element,
     * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments
     * @return {?}
     */},{key:'_closeTranslatableSection',/**
     * Terminates a section.
     *
     * If a section has only one significant children (comments not significant) then we should not
     * keep the message from this children:
     *
     * `<p i18n="meaning|description">{ICU message}</p>` would produce two messages:
     * - one for the <p> content with meaning and description,
     * - another one for the ICU message.
     *
     * In this case the last message is discarded as it contains less information (the AST is
     * otherwise identical).
     *
     * Note that we should still keep messages extracted from attributes inside the section (ie in the
     * ICU message here)
     * @param {?} node
     * @param {?} directChildren
     * @return {?}
     */value:function _closeTranslatableSection(node,directChildren){if(!this._isInTranslatableSection){this._reportError(node,'Unexpected section end');return;}var/** @type {?} */startIndex=this._msgCountAtSectionStart;var/** @type {?} */significantChildren=directChildren.reduce(function(count,node){return count+(node instanceof Comment?0:1);},0);if(significantChildren==1){for(var/** @type {?} */i=this._messages.length-1;i>=startIndex;i--){var/** @type {?} */ast=this._messages[i].nodes;if(!(ast.length==1&&ast[0]instanceof Text$1)){this._messages.splice(i,1);break;}}}this._msgCountAtSectionStart=void 0;}/**
     * @param {?} node
     * @param {?} msg
     * @return {?}
     */},{key:'_reportError',value:function _reportError(node,msg){this._errors.push(new I18nError(node.sourceSpan,msg));}},{key:'_isInTranslatableSection',get:function get(){return this._msgCountAtSectionStart!==void 0;}}]);return _Visitor;}();/**
 * @param {?} n
 * @return {?}
 */function _isOpeningComment(n){return n instanceof Comment&&n.value&&n.value.startsWith('i18n');}/**
 * @param {?} n
 * @return {?}
 */function _isClosingComment(n){return n instanceof Comment&&n.value&&n.value==='/i18n';}/**
 * @param {?} p
 * @return {?}
 */function _getI18nAttr(p){return p.attrs.find(function(attr){return attr.name===_I18N_ATTR;})||null;}/**
 * @param {?} i18n
 * @return {?}
 */function _parseMessageMeta(i18n){if(!i18n)return{meaning:'',description:'',id:''};var/** @type {?} */idIndex=i18n.indexOf(ID_SEPARATOR);var/** @type {?} */descIndex=i18n.indexOf(MEANING_SEPARATOR);var _ref10=idIndex>-1?[i18n.slice(0,idIndex),i18n.slice(idIndex+2)]:[i18n,''],_ref11=_slicedToArray(_ref10,2),meaningAndDesc=_ref11[0],id=_ref11[1];var _ref12=descIndex>-1?[meaningAndDesc.slice(0,descIndex),meaningAndDesc.slice(descIndex+1)]:['',meaningAndDesc],_ref13=_slicedToArray(_ref12,2),meaning=_ref13[0],description=_ref13[1];return{meaning:meaning,description:description,id:id};}var XmlTagDefinition=function(){function XmlTagDefinition(){_classCallCheck(this,XmlTagDefinition);this.closedByParent=false;this.contentType=TagContentType.PARSABLE_DATA;this.isVoid=false;this.ignoreFirstLf=false;this.canSelfClose=true;}/**
     * @param {?} currentParent
     * @return {?}
     */_createClass(XmlTagDefinition,[{key:'requireExtraParent',value:function requireExtraParent(currentParent){return false;}/**
     * @param {?} name
     * @return {?}
     */},{key:'isClosedByChild',value:function isClosedByChild(name){return false;}}]);return XmlTagDefinition;}();var/** @type {?} */_TAG_DEFINITION=new XmlTagDefinition();/**
 * @param {?} tagName
 * @return {?}
 */function getXmlTagDefinition(tagName){return _TAG_DEFINITION;}var XmlParser=function(_Parser$){_inherits(XmlParser,_Parser$);function XmlParser(){_classCallCheck(this,XmlParser);return _possibleConstructorReturn(this,(XmlParser.__proto__||Object.getPrototypeOf(XmlParser)).call(this,getXmlTagDefinition));}/**
     * @param {?} source
     * @param {?} url
     * @param {?=} parseExpansionForms
     * @return {?}
     */_createClass(XmlParser,[{key:'parse',value:function parse(source,url){var parseExpansionForms=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return _get(XmlParser.prototype.__proto__||Object.getPrototypeOf(XmlParser.prototype),'parse',this).call(this,source,url,parseExpansionForms,null);}}]);return XmlParser;}(Parser$1);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @param {?} message
 * @return {?}
 */function _digest2(message){return message.id||sha1(serializeNodes(message.nodes).join('')+('['+message.meaning+']'));}/**
 * @param {?} message
 * @return {?}
 */function decimalDigest(message){if(message.id){return message.id;}var/** @type {?} */visitor=new _SerializerIgnoreIcuExpVisitor();var/** @type {?} */parts=message.nodes.map(function(a){return a.visit(visitor,null);});return computeMsgId(parts.join(''),message.meaning);}/**
 * Serialize the i18n ast to something xml-like in order to generate an UID.
 *
 * The visitor is also used in the i18n parser tests
 *
 * \@internal
 */var _SerializerVisitor=function(){function _SerializerVisitor(){_classCallCheck(this,_SerializerVisitor);}_createClass(_SerializerVisitor,[{key:'visitText',/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */value:function visitText(text,context){return text.value;}/**
     * @param {?} container
     * @param {?} context
     * @return {?}
     */},{key:'visitContainer',value:function visitContainer(container,context){var _this53=this;return'['+container.children.map(function(child){return child.visit(_this53);}).join(', ')+']';}/**
     * @param {?} icu
     * @param {?} context
     * @return {?}
     */},{key:'visitIcu',value:function visitIcu(icu,context){var _this54=this;var/** @type {?} */strCases=Object.keys(icu.cases).map(function(k){return k+' {'+icu.cases[k].visit(_this54)+'}';});return'{'+icu.expression+', '+icu.type+', '+strCases.join(', ')+'}';}/**
     * @param {?} ph
     * @param {?} context
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,context){var _this55=this;return ph.isVoid?'<ph tag name="'+ph.startName+'"/>':'<ph tag name="'+ph.startName+'">'+ph.children.map(function(child){return child.visit(_this55);}).join(', ')+'</ph name="'+ph.closeName+'">';}/**
     * @param {?} ph
     * @param {?} context
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,context){return ph.value?'<ph name="'+ph.name+'">'+ph.value+'</ph>':'<ph name="'+ph.name+'"/>';}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcuPlaceholder',value:function visitIcuPlaceholder(ph,context){return'<ph icu name="'+ph.name+'">'+ph.value.visit(this)+'</ph>';}}]);return _SerializerVisitor;}();var/** @type {?} */serializerVisitor=new _SerializerVisitor();/**
 * @param {?} nodes
 * @return {?}
 */function serializeNodes(nodes){return nodes.map(function(a){return a.visit(serializerVisitor,null);});}/**
 * Serialize the i18n ast to something xml-like in order to generate an UID.
 *
 * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.
 *
 * \@internal
 */var _SerializerIgnoreIcuExpVisitor=function(_SerializerVisitor2){_inherits(_SerializerIgnoreIcuExpVisitor,_SerializerVisitor2);function _SerializerIgnoreIcuExpVisitor(){_classCallCheck(this,_SerializerIgnoreIcuExpVisitor);return _possibleConstructorReturn(this,(_SerializerIgnoreIcuExpVisitor.__proto__||Object.getPrototypeOf(_SerializerIgnoreIcuExpVisitor)).apply(this,arguments));}_createClass(_SerializerIgnoreIcuExpVisitor,[{key:'visitIcu',/**
     * @param {?} icu
     * @param {?} context
     * @return {?}
     */value:function visitIcu(icu,context){var _this57=this;var/** @type {?} */strCases=Object.keys(icu.cases).map(function(k){return k+' {'+icu.cases[k].visit(_this57)+'}';});// Do not take the expression into account
return'{'+icu.type+', '+strCases.join(', ')+'}';}}]);return _SerializerIgnoreIcuExpVisitor;}(_SerializerVisitor);/**
 * Compute the SHA1 of the given string
 *
 * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
 *
 * WARNING: this function has not been designed not tested with security in mind.
 *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.
 * @param {?} str
 * @return {?}
 */function sha1(str){var/** @type {?} */utf8=utf8Encode(str);var/** @type {?} */words32=stringToWords32(utf8,Endian.Big);var/** @type {?} */len=utf8.length*8;var/** @type {?} */w=new Array(80);var a=0x67452301,b=0xefcdab89,c=0x98badcfe,d=0x10325476,e=0xc3d2e1f0;words32[len>>5]|=0x80<<24-len%32;words32[(len+64>>9<<4)+15]=len;for(var/** @type {?} */i=0;i<words32.length;i+=16){var h0=a,h1=b,h2=c,h3=d,h4=e;for(var/** @type {?} */j=0;j<80;j++){if(j<16){w[j]=words32[i+j];}else{w[j]=rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16],1);}var _fk=fk(j,b,c,d),_fk2=_slicedToArray(_fk,2),f=_fk2[0],k=_fk2[1];var/** @type {?} */temp=[rol32(a,5),f,e,k,w[j]].reduce(add32);var _ref14=[d,c,rol32(b,30),a,temp];e=_ref14[0];d=_ref14[1];c=_ref14[2];b=_ref14[3];a=_ref14[4];}var _ref15=[add32(a,h0),add32(b,h1),add32(c,h2),add32(d,h3),add32(e,h4)];a=_ref15[0];b=_ref15[1];c=_ref15[2];d=_ref15[3];e=_ref15[4];}return byteStringToHexString(words32ToByteString([a,b,c,d,e]));}/**
 * @param {?} index
 * @param {?} b
 * @param {?} c
 * @param {?} d
 * @return {?}
 */function fk(index,b,c,d){if(index<20){return[b&c|~b&d,0x5a827999];}if(index<40){return[b^c^d,0x6ed9eba1];}if(index<60){return[b&c|b&d|c&d,0x8f1bbcdc];}return[b^c^d,0xca62c1d6];}/**
 * Compute the fingerprint of the given string
 *
 * The output is 64 bit number encoded as a decimal string
 *
 * based on:
 * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
 * @param {?} str
 * @return {?}
 */function fingerprint(str){var/** @type {?} */utf8=utf8Encode(str);var _ref16=[hash32(utf8,0),hash32(utf8,102072)],hi=_ref16[0],lo=_ref16[1];if(hi==0&&(lo==0||lo==1)){hi=hi^0x130f9bef;lo=lo^-0x6b5f56d8;}return[hi,lo];}/**
 * @param {?} msg
 * @param {?} meaning
 * @return {?}
 */function computeMsgId(msg,meaning){var _fingerprint=fingerprint(msg),_fingerprint2=_slicedToArray(_fingerprint,2),hi=_fingerprint2[0],lo=_fingerprint2[1];if(meaning){var _fingerprint3=fingerprint(meaning),_fingerprint4=_slicedToArray(_fingerprint3,2),him=_fingerprint4[0],lom=_fingerprint4[1];var _add=add64(rol64([hi,lo],1),[him,lom]);var _add2=_slicedToArray(_add,2);hi=_add2[0];lo=_add2[1];}return byteStringToDecString(words32ToByteString([hi&0x7fffffff,lo]));}/**
 * @param {?} str
 * @param {?} c
 * @return {?}
 */function hash32(str,c){var a=0x9e3779b9,b=0x9e3779b9;var/** @type {?} */i=void 0;var/** @type {?} */len=str.length;for(i=0;i+12<=len;i+=12){a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));c=add32(c,wordAt(str,i+8,Endian.Little));var _mix=mix([a,b,c]);var _mix2=_slicedToArray(_mix,3);a=_mix2[0];b=_mix2[1];c=_mix2[2];}a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));// the first byte of c is reserved for the length
c=add32(c,len);c=add32(c,wordAt(str,i+8,Endian.Little)<<8);return mix([a,b,c])[2];}/**
 * @param {?} __0
 * @return {?}
 */function mix(_ref17){var _ref18=_slicedToArray(_ref17,3),a=_ref18[0],b=_ref18[1],c=_ref18[2];a=sub32(a,b);a=sub32(a,c);a^=c>>>13;b=sub32(b,c);b=sub32(b,a);b^=a<<8;c=sub32(c,a);c=sub32(c,b);c^=b>>>13;a=sub32(a,b);a=sub32(a,c);a^=c>>>12;b=sub32(b,c);b=sub32(b,a);b^=a<<16;c=sub32(c,a);c=sub32(c,b);c^=b>>>5;a=sub32(a,b);a=sub32(a,c);a^=c>>>3;b=sub32(b,c);b=sub32(b,a);b^=a<<10;c=sub32(c,a);c=sub32(c,b);c^=b>>>15;return[a,b,c];}var Endian={};Endian.Little=0;Endian.Big=1;Endian[Endian.Little]="Little";Endian[Endian.Big]="Big";/**
 * @param {?} str
 * @return {?}
 */function utf8Encode(str){var/** @type {?} */encoded='';for(var/** @type {?} */index=0;index<str.length;index++){var/** @type {?} */codePoint=decodeSurrogatePairs(str,index);if(codePoint<=0x7f){encoded+=String.fromCharCode(codePoint);}else if(codePoint<=0x7ff){encoded+=String.fromCharCode(0xc0|codePoint>>>6,0x80|codePoint&0x3f);}else if(codePoint<=0xffff){encoded+=String.fromCharCode(0xe0|codePoint>>>12,0x80|codePoint>>>6&0x3f,0x80|codePoint&0x3f);}else if(codePoint<=0x1fffff){encoded+=String.fromCharCode(0xf0|codePoint>>>18,0x80|codePoint>>>12&0x3f,0x80|codePoint>>>6&0x3f,0x80|codePoint&0x3f);}}return encoded;}/**
 * @param {?} str
 * @param {?} index
 * @return {?}
 */function decodeSurrogatePairs(str,index){if(index<0||index>=str.length){throw new Error('index='+index+' is out of range in "'+str+'"');}var/** @type {?} */high=str.charCodeAt(index);if(high>=0xd800&&high<=0xdfff&&str.length>index+1){var/** @type {?} */low=byteAt(str,index+1);if(low>=0xdc00&&low<=0xdfff){return(high-0xd800)*0x400+low-0xdc00+0x10000;}}return high;}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function add32(a,b){return add32to64(a,b)[1];}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function add32to64(a,b){var/** @type {?} */low=(a&0xffff)+(b&0xffff);var/** @type {?} */high=(a>>>16)+(b>>>16)+(low>>>16);return[high>>>16,high<<16|low&0xffff];}/**
 * @param {?} __0
 * @param {?} __1
 * @return {?}
 */function add64(_ref19,_ref20){var _ref22=_slicedToArray(_ref19,2),ah=_ref22[0],al=_ref22[1];var _ref21=_slicedToArray(_ref20,2),bh=_ref21[0],bl=_ref21[1];var _add32to=add32to64(al,bl),_add32to2=_slicedToArray(_add32to,2),carry=_add32to2[0],l=_add32to2[1];var/** @type {?} */h=add32(add32(ah,bh),carry);return[h,l];}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function sub32(a,b){var/** @type {?} */low=(a&0xffff)-(b&0xffff);var/** @type {?} */high=(a>>16)-(b>>16)+(low>>16);return high<<16|low&0xffff;}/**
 * @param {?} a
 * @param {?} count
 * @return {?}
 */function rol32(a,count){return a<<count|a>>>32-count;}/**
 * @param {?} __0
 * @param {?} count
 * @return {?}
 */function rol64(_ref23,count){var _ref24=_slicedToArray(_ref23,2),hi=_ref24[0],lo=_ref24[1];var/** @type {?} */h=hi<<count|lo>>>32-count;var/** @type {?} */l=lo<<count|hi>>>32-count;return[h,l];}/**
 * @param {?} str
 * @param {?} endian
 * @return {?}
 */function stringToWords32(str,endian){var/** @type {?} */words32=Array(str.length+3>>>2);for(var/** @type {?} */i=0;i<words32.length;i++){words32[i]=wordAt(str,i*4,endian);}return words32;}/**
 * @param {?} str
 * @param {?} index
 * @return {?}
 */function byteAt(str,index){return index>=str.length?0:str.charCodeAt(index)&0xff;}/**
 * @param {?} str
 * @param {?} index
 * @param {?} endian
 * @return {?}
 */function wordAt(str,index,endian){var/** @type {?} */word=0;if(endian===Endian.Big){for(var/** @type {?} */i=0;i<4;i++){word+=byteAt(str,index+i)<<24-8*i;}}else{for(var/** @type {?} */_i4=0;_i4<4;_i4++){word+=byteAt(str,index+_i4)<<8*_i4;}}return word;}/**
 * @param {?} words32
 * @return {?}
 */function words32ToByteString(words32){return words32.reduce(function(str,word){return str+word32ToByteString(word);},'');}/**
 * @param {?} word
 * @return {?}
 */function word32ToByteString(word){var/** @type {?} */str='';for(var/** @type {?} */i=0;i<4;i++){str+=String.fromCharCode(word>>>8*(3-i)&0xff);}return str;}/**
 * @param {?} str
 * @return {?}
 */function byteStringToHexString(str){var/** @type {?} */hex='';for(var/** @type {?} */i=0;i<str.length;i++){var/** @type {?} */b=byteAt(str,i);hex+=(b>>>4).toString(16)+(b&0x0f).toString(16);}return hex.toLowerCase();}/**
 * @param {?} str
 * @return {?}
 */function byteStringToDecString(str){var/** @type {?} */decimal='';var/** @type {?} */toThePower='1';for(var/** @type {?} */i=str.length-1;i>=0;i--){decimal=addBigInt(decimal,numberTimesBigInt(byteAt(str,i),toThePower));toThePower=numberTimesBigInt(256,toThePower);}return decimal.split('').reverse().join('');}/**
 * @param {?} x
 * @param {?} y
 * @return {?}
 */function addBigInt(x,y){var/** @type {?} */sum='';var/** @type {?} */len=Math.max(x.length,y.length);for(var/** @type {?} */i=0,/** @type {?} */carry=0;i<len||carry;i++){var/** @type {?} */tmpSum=carry+ +(x[i]||0)+ +(y[i]||0);if(tmpSum>=10){carry=1;sum+=tmpSum-10;}else{carry=0;sum+=tmpSum;}}return sum;}/**
 * @param {?} num
 * @param {?} b
 * @return {?}
 */function numberTimesBigInt(num,b){var/** @type {?} */product='';var/** @type {?} */bToThePower=b;for(;num!==0;num=num>>>1){if(num&1)product=addBigInt(product,bToThePower);bToThePower=addBigInt(bToThePower,bToThePower);}return product;}/**
 * @abstract
 */var Serializer=function(){function Serializer(){_classCallCheck(this,Serializer);}_createClass(Serializer,[{key:'write',/**
     * @abstract
     * @param {?} messages
     * @param {?} locale
     * @return {?}
     */value:function write(messages,locale){}/**
     * @abstract
     * @param {?} content
     * @param {?} url
     * @return {?}
     */},{key:'load',value:function load(content,url){}/**
     * @abstract
     * @param {?} message
     * @return {?}
     */},{key:'digest',value:function digest(message){}/**
     * @param {?} message
     * @return {?}
     */},{key:'createNameMapper',value:function createNameMapper(message){return null;}}]);return Serializer;}();/**
 * A simple mapper that take a function to transform an internal name to a public name
 */var SimplePlaceholderMapper=function(_RecurseVisitor){_inherits(SimplePlaceholderMapper,_RecurseVisitor);/**
     * @param {?} message
     * @param {?} mapName
     */function SimplePlaceholderMapper(message,mapName){_classCallCheck(this,SimplePlaceholderMapper);var _this58=_possibleConstructorReturn(this,(SimplePlaceholderMapper.__proto__||Object.getPrototypeOf(SimplePlaceholderMapper)).call(this));_this58.mapName=mapName;_this58.internalToPublic={};_this58.publicToNextId={};_this58.publicToInternal={};message.nodes.forEach(function(node){return node.visit(_this58);});return _this58;}/**
     * @param {?} internalName
     * @return {?}
     */_createClass(SimplePlaceholderMapper,[{key:'toPublicName',value:function toPublicName(internalName){return this.internalToPublic.hasOwnProperty(internalName)?this.internalToPublic[internalName]:null;}/**
     * @param {?} publicName
     * @return {?}
     */},{key:'toInternalName',value:function toInternalName(publicName){return this.publicToInternal.hasOwnProperty(publicName)?this.publicToInternal[publicName]:null;}/**
     * @param {?} text
     * @param {?=} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){return null;}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,context){this.visitPlaceholderName(ph.startName);_get(SimplePlaceholderMapper.prototype.__proto__||Object.getPrototypeOf(SimplePlaceholderMapper.prototype),'visitTagPlaceholder',this).call(this,ph,context);this.visitPlaceholderName(ph.closeName);}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,context){this.visitPlaceholderName(ph.name);}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcuPlaceholder',value:function visitIcuPlaceholder(ph,context){this.visitPlaceholderName(ph.name);}/**
     * @param {?} internalName
     * @return {?}
     */},{key:'visitPlaceholderName',value:function visitPlaceholderName(internalName){if(!internalName||this.internalToPublic.hasOwnProperty(internalName)){return;}var/** @type {?} */publicName=this.mapName(internalName);if(this.publicToInternal.hasOwnProperty(publicName)){// Create a new XMB when it has already been used
var/** @type {?} */nextId=this.publicToNextId[publicName];this.publicToNextId[publicName]=nextId+1;publicName=publicName+'_'+nextId;}else{this.publicToNextId[publicName]=1;}this.internalToPublic[internalName]=publicName;this.publicToInternal[publicName]=internalName;}}]);return SimplePlaceholderMapper;}(RecurseVisitor);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _Visitor$1=function(){function _Visitor$1(){_classCallCheck(this,_Visitor$1);}_createClass(_Visitor$1,[{key:'visitTag',/**
     * @param {?} tag
     * @return {?}
     */value:function visitTag(tag){var _this59=this;var/** @type {?} */strAttrs=this._serializeAttributes(tag.attrs);if(tag.children.length==0){return'<'+tag.name+strAttrs+'/>';}var/** @type {?} */strChildren=tag.children.map(function(node){return node.visit(_this59);});return'<'+tag.name+strAttrs+'>'+strChildren.join('')+'</'+tag.name+'>';}/**
     * @param {?} text
     * @return {?}
     */},{key:'visitText',value:function visitText(text){return text.value;}/**
     * @param {?} decl
     * @return {?}
     */},{key:'visitDeclaration',value:function visitDeclaration(decl){return'<?xml'+this._serializeAttributes(decl.attrs)+' ?>';}/**
     * @param {?} attrs
     * @return {?}
     */},{key:'_serializeAttributes',value:function _serializeAttributes(attrs){var/** @type {?} */strAttrs=Object.keys(attrs).map(function(name){return name+'="'+attrs[name]+'"';}).join(' ');return strAttrs.length>0?' '+strAttrs:'';}/**
     * @param {?} doctype
     * @return {?}
     */},{key:'visitDoctype',value:function visitDoctype(doctype){return'<!DOCTYPE '+doctype.rootTag+' [\n'+doctype.dtd+'\n]>';}}]);return _Visitor$1;}();var/** @type {?} */_visitor=new _Visitor$1();/**
 * @param {?} nodes
 * @return {?}
 */function serialize(nodes){return nodes.map(function(node){return node.visit(_visitor);}).join('');}var Declaration=function(){/**
     * @param {?} unescapedAttrs
     */function Declaration(unescapedAttrs){var _this60=this;_classCallCheck(this,Declaration);this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this60.attrs[k]=_escapeXml(unescapedAttrs[k]);});}/**
     * @param {?} visitor
     * @return {?}
     */_createClass(Declaration,[{key:'visit',value:function visit(visitor){return visitor.visitDeclaration(this);}}]);return Declaration;}();var Doctype=function(){/**
     * @param {?} rootTag
     * @param {?} dtd
     */function Doctype(rootTag,dtd){_classCallCheck(this,Doctype);this.rootTag=rootTag;this.dtd=dtd;}_createClass(Doctype,[{key:'visit',/**
     * @param {?} visitor
     * @return {?}
     */value:function visit(visitor){return visitor.visitDoctype(this);}}]);return Doctype;}();var Tag=function(){/**
     * @param {?} name
     * @param {?=} unescapedAttrs
     * @param {?=} children
     */function Tag(name){var _this61=this;var unescapedAttrs=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var children=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];_classCallCheck(this,Tag);this.name=name;this.children=children;this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this61.attrs[k]=_escapeXml(unescapedAttrs[k]);});}/**
     * @param {?} visitor
     * @return {?}
     */_createClass(Tag,[{key:'visit',value:function visit(visitor){return visitor.visitTag(this);}}]);return Tag;}();var Text$2=function(){/**
     * @param {?} unescapedValue
     */function Text$2(unescapedValue){_classCallCheck(this,Text$2);this.value=_escapeXml(unescapedValue);}_createClass(Text$2,[{key:'visit',/**
     * @param {?} visitor
     * @return {?}
     */value:function visit(visitor){return visitor.visitText(this);}}]);return Text$2;}();var CR=function(_Text$){_inherits(CR,_Text$);/**
     * @param {?=} ws
     */function CR(){var ws=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;_classCallCheck(this,CR);return _possibleConstructorReturn(this,(CR.__proto__||Object.getPrototypeOf(CR)).call(this,'\n'+new Array(ws+1).join(' ')));}return CR;}(Text$2);var/** @type {?} */_ESCAPED_CHARS=[[/&/g,'&amp;'],[/"/g,'&quot;'],[/'/g,'&apos;'],[/</g,'&lt;'],[/>/g,'&gt;']];/**
 * @param {?} text
 * @return {?}
 */function _escapeXml(text){return _ESCAPED_CHARS.reduce(function(text,entry){return text.replace(entry[0],entry[1]);},text);}var/** @type {?} */_VERSION='1.2';var/** @type {?} */_XMLNS='urn:oasis:names:tc:xliff:document:1.2';// TODO(vicb): make this a param (s/_/-/)
var/** @type {?} */_DEFAULT_SOURCE_LANG='en';var/** @type {?} */_PLACEHOLDER_TAG='x';var/** @type {?} */_FILE_TAG='file';var/** @type {?} */_SOURCE_TAG='source';var/** @type {?} */_TARGET_TAG='target';var/** @type {?} */_UNIT_TAG='trans-unit';var Xliff=function(_Serializer){_inherits(Xliff,_Serializer);function Xliff(){_classCallCheck(this,Xliff);return _possibleConstructorReturn(this,(Xliff.__proto__||Object.getPrototypeOf(Xliff)).apply(this,arguments));}_createClass(Xliff,[{key:'write',/**
     * @param {?} messages
     * @param {?} locale
     * @return {?}
     */value:function write(messages,locale){var/** @type {?} */visitor=new _WriteVisitor();var/** @type {?} */transUnits=[];messages.forEach(function(message){var/** @type {?} */transUnit=new Tag(_UNIT_TAG,{id:message.id,datatype:'html'});transUnit.children.push(new CR(8),new Tag(_SOURCE_TAG,{},visitor.serialize(message.nodes)),new CR(8),new Tag(_TARGET_TAG));if(message.description){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'description'},[new Text$2(message.description)]));}if(message.meaning){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'meaning'},[new Text$2(message.meaning)]));}transUnit.children.push(new CR(6));transUnits.push(new CR(6),transUnit);});var/** @type {?} */body=new Tag('body',{},[].concat(transUnits,[new CR(4)]));var/** @type {?} */file=new Tag('file',{'source-language':locale||_DEFAULT_SOURCE_LANG,datatype:'plaintext',original:'ng2.template'},[new CR(4),body,new CR(2)]);var/** @type {?} */xliff=new Tag('xliff',{version:_VERSION,xmlns:_XMLNS},[new CR(2),file,new CR()]);return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),xliff,new CR()]);}/**
     * @param {?} content
     * @param {?} url
     * @return {?}
     */},{key:'load',value:function load(content,url){// xliff to xml nodes
var/** @type {?} */xliffParser=new XliffParser();var _xliffParser$parse=xliffParser.parse(content,url),locale=_xliffParser$parse.locale,mlNodesByMsgId=_xliffParser$parse.mlNodesByMsgId,errors=_xliffParser$parse.errors;// xml nodes to i18n nodes
var/** @type {?} */i18nNodesByMsgId={};var/** @type {?} */converter=new XmlToI18n();Object.keys(mlNodesByMsgId).forEach(function(msgId){var _converter$convert=converter.convert(mlNodesByMsgId[msgId]),i18nNodes=_converter$convert.i18nNodes,e=_converter$convert.errors;errors.push.apply(errors,_toConsumableArray(e));i18nNodesByMsgId[msgId]=i18nNodes;});if(errors.length){throw new Error('xliff parse errors:\n'+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};}/**
     * @param {?} message
     * @return {?}
     */},{key:'digest',value:function digest(message){return _digest2(message);}}]);return Xliff;}(Serializer);var _WriteVisitor=function(){function _WriteVisitor(){_classCallCheck(this,_WriteVisitor);}_createClass(_WriteVisitor,[{key:'visitText',/**
     * @param {?} text
     * @param {?=} context
     * @return {?}
     */value:function visitText(text,context){return[new Text$2(text.value)];}/**
     * @param {?} container
     * @param {?=} context
     * @return {?}
     */},{key:'visitContainer',value:function visitContainer(container,context){var _this64=this;var/** @type {?} */nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,_toConsumableArray(node.visit(_this64)));});return nodes;}/**
     * @param {?} icu
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcu',value:function visitIcu(icu,context){if(this._isInIcu){// nested ICU is not supported
throw new Error('xliff does not support nested ICU messages');}this._isInIcu=true;// TODO(vicb): support ICU messages
// https://lists.oasis-open.org/archives/xliff/201201/msg00028.html
// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html
var/** @type {?} */nodes=[];this._isInIcu=false;return nodes;}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,context){var/** @type {?} */ctype=getCtypeForTag(ph.tag);var/** @type {?} */startTagPh=new Tag(_PLACEHOLDER_TAG,{id:ph.startName,ctype:ctype});if(ph.isVoid){// void tags have no children nor closing tags
return[startTagPh];}var/** @type {?} */closeTagPh=new Tag(_PLACEHOLDER_TAG,{id:ph.closeName,ctype:ctype});return[startTagPh].concat(_toConsumableArray(this.serialize(ph.children)),[closeTagPh]);}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,context){return[new Tag(_PLACEHOLDER_TAG,{id:ph.name})];}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcuPlaceholder',value:function visitIcuPlaceholder(ph,context){return[new Tag(_PLACEHOLDER_TAG,{id:ph.name})];}/**
     * @param {?} nodes
     * @return {?}
     */},{key:'serialize',value:function serialize(nodes){var _ref25,_this65=this;this._isInIcu=false;return(_ref25=[]).concat.apply(_ref25,_toConsumableArray(nodes.map(function(node){return node.visit(_this65);})));}}]);return _WriteVisitor;}();var XliffParser=function(){function XliffParser(){_classCallCheck(this,XliffParser);this._locale=null;}/**
     * @param {?} xliff
     * @param {?} url
     * @return {?}
     */_createClass(XliffParser,[{key:'parse',value:function parse(xliff,url){this._unitMlNodes=[];this._mlNodesByMsgId={};var/** @type {?} */xml=new XmlParser().parse(xliff,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes,null);return{mlNodesByMsgId:this._mlNodesByMsgId,errors:this._errors,locale:this._locale};}/**
     * @param {?} element
     * @param {?} context
     * @return {?}
     */},{key:'visitElement',value:function visitElement(element,context){switch(element.name){case _UNIT_TAG:this._unitMlNodes=null;var/** @type {?} */idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,'<'+_UNIT_TAG+'> misses the "id" attribute');}else{var/** @type {?} */id=idAttr.value;if(this._mlNodesByMsgId.hasOwnProperty(id)){this._addError(element,'Duplicated translations for msg '+id);}else{visitAll(this,element.children,null);if(this._unitMlNodes){this._mlNodesByMsgId[id]=this._unitMlNodes;}else{this._addError(element,'Message '+id+' misses a translation');}}}break;case _SOURCE_TAG:// ignore source message
break;case _TARGET_TAG:this._unitMlNodes=element.children;break;case _FILE_TAG:var/** @type {?} */localeAttr=element.attrs.find(function(attr){return attr.name==='target-language';});if(localeAttr){this._locale=localeAttr.value;}visitAll(this,element.children,null);break;default:// TODO(vicb): assert file structure, xliff version
// For now only recurse on unhandled nodes
visitAll(this,element.children,null);}}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){}/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){}/**
     * @param {?} expansion
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(expansion,context){}/**
     * @param {?} expansionCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(expansionCase,context){}/**
     * @param {?} node
     * @param {?} message
     * @return {?}
     */},{key:'_addError',value:function _addError(node,message){this._errors.push(new I18nError(node.sourceSpan,message));}}]);return XliffParser;}();var XmlToI18n=function(){function XmlToI18n(){_classCallCheck(this,XmlToI18n);}_createClass(XmlToI18n,[{key:'convert',/**
     * @param {?} nodes
     * @return {?}
     */value:function convert(nodes){this._errors=[];return{i18nNodes:visitAll(this,nodes),errors:this._errors};}/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){return new Text$1(text.value,text.sourceSpan);}/**
     * @param {?} el
     * @param {?} context
     * @return {?}
     */},{key:'visitElement',value:function visitElement(el,context){if(el.name===_PLACEHOLDER_TAG){var/** @type {?} */nameAttr=el.attrs.find(function(attr){return attr.name==='id';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,'<'+_PLACEHOLDER_TAG+'> misses the "id" attribute');}else{this._addError(el,'Unexpected tag');}}/**
     * @param {?} icu
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(icu,context){}/**
     * @param {?} icuCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(icuCase,context){}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){}/**
     * @param {?} node
     * @param {?} message
     * @return {?}
     */},{key:'_addError',value:function _addError(node,message){this._errors.push(new I18nError(node.sourceSpan,message));}}]);return XmlToI18n;}();/**
 * @param {?} tag
 * @return {?}
 */function getCtypeForTag(tag){switch(tag.toLowerCase()){case'br':return'lb';case'img':return'image';default:return'x-'+tag;}}var/** @type {?} */_MESSAGES_TAG='messagebundle';var/** @type {?} */_MESSAGE_TAG='msg';var/** @type {?} */_PLACEHOLDER_TAG$1='ph';var/** @type {?} */_EXEMPLE_TAG='ex';var/** @type {?} */_DOCTYPE='<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) "default">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>';var Xmb=function(_Serializer2){_inherits(Xmb,_Serializer2);function Xmb(){_classCallCheck(this,Xmb);return _possibleConstructorReturn(this,(Xmb.__proto__||Object.getPrototypeOf(Xmb)).apply(this,arguments));}_createClass(Xmb,[{key:'write',/**
     * @param {?} messages
     * @param {?} locale
     * @return {?}
     */value:function write(messages,locale){var/** @type {?} */exampleVisitor=new ExampleVisitor();var/** @type {?} */visitor=new _Visitor$2();var/** @type {?} */rootNode=new Tag(_MESSAGES_TAG);messages.forEach(function(message){var/** @type {?} */attrs={id:message.id};if(message.description){attrs['desc']=message.description;}if(message.meaning){attrs['meaning']=message.meaning;}rootNode.children.push(new CR(2),new Tag(_MESSAGE_TAG,attrs,visitor.serialize(message.nodes)));});rootNode.children.push(new CR());return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),new Doctype(_MESSAGES_TAG,_DOCTYPE),new CR(),exampleVisitor.addDefaultExamples(rootNode),new CR()]);}/**
     * @param {?} content
     * @param {?} url
     * @return {?}
     */},{key:'load',value:function load(content,url){throw new Error('Unsupported');}/**
     * @param {?} message
     * @return {?}
     */},{key:'digest',value:function digest(message){return digest$1(message);}/**
     * @param {?} message
     * @return {?}
     */},{key:'createNameMapper',value:function createNameMapper(message){return new SimplePlaceholderMapper(message,toPublicName);}}]);return Xmb;}(Serializer);var _Visitor$2=function(){function _Visitor$2(){_classCallCheck(this,_Visitor$2);}_createClass(_Visitor$2,[{key:'visitText',/**
     * @param {?} text
     * @param {?=} context
     * @return {?}
     */value:function visitText(text,context){return[new Text$2(text.value)];}/**
     * @param {?} container
     * @param {?} context
     * @return {?}
     */},{key:'visitContainer',value:function visitContainer(container,context){var _this67=this;var/** @type {?} */nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,_toConsumableArray(node.visit(_this67)));});return nodes;}/**
     * @param {?} icu
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcu',value:function visitIcu(icu,context){var _this68=this;var/** @type {?} */nodes=[new Text$2('{'+icu.expressionPlaceholder+', '+icu.type+', ')];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,[new Text$2(c+' {')].concat(_toConsumableArray(icu.cases[c].visit(_this68)),[new Text$2('} ')]));});nodes.push(new Text$2('}'));return nodes;}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,context){var/** @type {?} */startEx=new Tag(_EXEMPLE_TAG,{},[new Text$2('<'+ph.tag+'>')]);var/** @type {?} */startTagPh=new Tag(_PLACEHOLDER_TAG$1,{name:ph.startName},[startEx]);if(ph.isVoid){// void tags have no children nor closing tags
return[startTagPh];}var/** @type {?} */closeEx=new Tag(_EXEMPLE_TAG,{},[new Text$2('</'+ph.tag+'>')]);var/** @type {?} */closeTagPh=new Tag(_PLACEHOLDER_TAG$1,{name:ph.closeName},[closeEx]);return[startTagPh].concat(_toConsumableArray(this.serialize(ph.children)),[closeTagPh]);}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,context){return[new Tag(_PLACEHOLDER_TAG$1,{name:ph.name})];}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcuPlaceholder',value:function visitIcuPlaceholder(ph,context){return[new Tag(_PLACEHOLDER_TAG$1,{name:ph.name})];}/**
     * @param {?} nodes
     * @return {?}
     */},{key:'serialize',value:function serialize(nodes){var _ref26,_this69=this;return(_ref26=[]).concat.apply(_ref26,_toConsumableArray(nodes.map(function(node){return node.visit(_this69);})));}}]);return _Visitor$2;}();/**
 * @param {?} message
 * @return {?}
 */function digest$1(message){return decimalDigest(message);}var ExampleVisitor=function(){function ExampleVisitor(){_classCallCheck(this,ExampleVisitor);}_createClass(ExampleVisitor,[{key:'addDefaultExamples',/**
     * @param {?} node
     * @return {?}
     */value:function addDefaultExamples(node){node.visit(this);return node;}/**
     * @param {?} tag
     * @return {?}
     */},{key:'visitTag',value:function visitTag(tag){var _this70=this;if(tag.name===_PLACEHOLDER_TAG$1){if(!tag.children||tag.children.length==0){var/** @type {?} */exText=new Text$2(tag.attrs['name']||'...');tag.children=[new Tag(_EXEMPLE_TAG,{},[exText])];}}else if(tag.children){tag.children.forEach(function(node){return node.visit(_this70);});}}/**
     * @param {?} text
     * @return {?}
     */},{key:'visitText',value:function visitText(text){}/**
     * @param {?} decl
     * @return {?}
     */},{key:'visitDeclaration',value:function visitDeclaration(decl){}/**
     * @param {?} doctype
     * @return {?}
     */},{key:'visitDoctype',value:function visitDoctype(doctype){}}]);return ExampleVisitor;}();/**
 * @param {?} internalName
 * @return {?}
 */function toPublicName(internalName){return internalName.toUpperCase().replace(/[^A-Z0-9_]/g,'_');}var/** @type {?} */_TRANSLATIONS_TAG='translationbundle';var/** @type {?} */_TRANSLATION_TAG='translation';var/** @type {?} */_PLACEHOLDER_TAG$2='ph';var Xtb=function(_Serializer3){_inherits(Xtb,_Serializer3);function Xtb(){_classCallCheck(this,Xtb);return _possibleConstructorReturn(this,(Xtb.__proto__||Object.getPrototypeOf(Xtb)).apply(this,arguments));}_createClass(Xtb,[{key:'write',/**
     * @param {?} messages
     * @param {?} locale
     * @return {?}
     */value:function write(messages,locale){throw new Error('Unsupported');}/**
     * @param {?} content
     * @param {?} url
     * @return {?}
     */},{key:'load',value:function load(content,url){// xtb to xml nodes
var/** @type {?} */xtbParser=new XtbParser();var _xtbParser$parse=xtbParser.parse(content,url),locale=_xtbParser$parse.locale,msgIdToHtml=_xtbParser$parse.msgIdToHtml,errors=_xtbParser$parse.errors;// xml nodes to i18n nodes
var/** @type {?} */i18nNodesByMsgId={};var/** @type {?} */converter=new XmlToI18n$1();// Because we should be able to load xtb files that rely on features not supported by angular,
// we need to delay the conversion of html to i18n nodes so that non angular messages are not
// converted
Object.keys(msgIdToHtml).forEach(function(msgId){var/** @type {?} */valueFn=function valueFn(){var _converter$convert2=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_converter$convert2.i18nNodes,errors=_converter$convert2.errors;if(errors.length){throw new Error('xtb parse errors:\n'+errors.join('\n'));}return i18nNodes;};createLazyProperty(i18nNodesByMsgId,msgId,valueFn);});if(errors.length){throw new Error('xtb parse errors:\n'+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};}/**
     * @param {?} message
     * @return {?}
     */},{key:'digest',value:function digest(message){return digest$1(message);}/**
     * @param {?} message
     * @return {?}
     */},{key:'createNameMapper',value:function createNameMapper(message){return new SimplePlaceholderMapper(message,toPublicName);}}]);return Xtb;}(Serializer);/**
 * @param {?} messages
 * @param {?} id
 * @param {?} valueFn
 * @return {?}
 */function createLazyProperty(messages,id,valueFn){Object.defineProperty(messages,id,{configurable:true,enumerable:true,get:function get(){var/** @type {?} */value=valueFn();Object.defineProperty(messages,id,{enumerable:true,value:value});return value;},set:function set(_){throw new Error('Could not overwrite an XTB translation');}});}var XtbParser=function(){function XtbParser(){_classCallCheck(this,XtbParser);this._locale=null;}/**
     * @param {?} xtb
     * @param {?} url
     * @return {?}
     */_createClass(XtbParser,[{key:'parse',value:function parse(xtb,url){this._bundleDepth=0;this._msgIdToHtml={};// We can not parse the ICU messages at this point as some messages might not originate
// from Angular that could not be lex'd.
var/** @type {?} */xml=new XmlParser().parse(xtb,url,false);this._errors=xml.errors;visitAll(this,xml.rootNodes);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};}/**
     * @param {?} element
     * @param {?} context
     * @return {?}
     */},{key:'visitElement',value:function visitElement(element,context){switch(element.name){case _TRANSLATIONS_TAG:this._bundleDepth++;if(this._bundleDepth>1){this._addError(element,'<'+_TRANSLATIONS_TAG+'> elements can not be nested');}var/** @type {?} */langAttr=element.attrs.find(function(attr){return attr.name==='lang';});if(langAttr){this._locale=langAttr.value;}visitAll(this,element.children,null);this._bundleDepth--;break;case _TRANSLATION_TAG:var/** @type {?} */idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,'<'+_TRANSLATION_TAG+'> misses the "id" attribute');}else{var/** @type {?} */id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,'Duplicated translations for msg '+id);}else{var/** @type {?} */innerTextStart=element.startSourceSpan.end.offset;var/** @type {?} */innerTextEnd=element.endSourceSpan.start.offset;var/** @type {?} */content=element.startSourceSpan.start.file.content;var/** @type {?} */innerText=content.slice(innerTextStart,innerTextEnd);this._msgIdToHtml[id]=innerText;}}break;default:this._addError(element,'Unexpected tag');}}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){}/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){}/**
     * @param {?} expansion
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(expansion,context){}/**
     * @param {?} expansionCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(expansionCase,context){}/**
     * @param {?} node
     * @param {?} message
     * @return {?}
     */},{key:'_addError',value:function _addError(node,message){this._errors.push(new I18nError(node.sourceSpan,message));}}]);return XtbParser;}();var XmlToI18n$1=function(){function XmlToI18n$1(){_classCallCheck(this,XmlToI18n$1);}_createClass(XmlToI18n$1,[{key:'convert',/**
     * @param {?} message
     * @param {?} url
     * @return {?}
     */value:function convert(message,url){var/** @type {?} */xmlIcu=new XmlParser().parse(message,url,true);this._errors=xmlIcu.errors;var/** @type {?} */i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:visitAll(this,xmlIcu.rootNodes);return{i18nNodes:i18nNodes,errors:this._errors};}/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){return new Text$1(text.value,text.sourceSpan);}/**
     * @param {?} icu
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(icu,context){var/** @type {?} */caseMap={};visitAll(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu(icu.switchValue,icu.type,caseMap,icu.sourceSpan);}/**
     * @param {?} icuCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(icuCase,context){return{value:icuCase.value,nodes:visitAll(this,icuCase.expression)};}/**
     * @param {?} el
     * @param {?} context
     * @return {?}
     */},{key:'visitElement',value:function visitElement(el,context){if(el.name===_PLACEHOLDER_TAG$2){var/** @type {?} */nameAttr=el.attrs.find(function(attr){return attr.name==='name';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,'<'+_PLACEHOLDER_TAG$2+'> misses the "name" attribute');}else{this._addError(el,'Unexpected tag');}}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){}/**
     * @param {?} node
     * @param {?} message
     * @return {?}
     */},{key:'_addError',value:function _addError(node,message){this._errors.push(new I18nError(node.sourceSpan,message));}}]);return XmlToI18n$1;}();var HtmlParser=function(_Parser$2){_inherits(HtmlParser,_Parser$2);function HtmlParser(){_classCallCheck(this,HtmlParser);return _possibleConstructorReturn(this,(HtmlParser.__proto__||Object.getPrototypeOf(HtmlParser)).call(this,getHtmlTagDefinition));}/**
     * @param {?} source
     * @param {?} url
     * @param {?=} parseExpansionForms
     * @param {?=} interpolationConfig
     * @return {?}
     */_createClass(HtmlParser,[{key:'parse',value:function parse(source,url){var parseExpansionForms=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var interpolationConfig=arguments.length>3&&arguments[3]!==undefined?arguments[3]:DEFAULT_INTERPOLATION_CONFIG;return _get(HtmlParser.prototype.__proto__||Object.getPrototypeOf(HtmlParser.prototype),'parse',this).call(this,source,url,parseExpansionForms,interpolationConfig);}}]);return HtmlParser;}(Parser$1);HtmlParser.decorators=[{type:CompilerInjectable}];/** @nocollapse */HtmlParser.ctorParameters=function(){return[];};/**
 * A container for translated messages
 */var TranslationBundle=function(){/**
     * @param {?=} _i18nNodesByMsgId
     * @param {?} locale
     * @param {?} digest
     * @param {?=} mapperFactory
     * @param {?=} missingTranslationStrategy
     * @param {?=} console
     */function TranslationBundle(){var _i18nNodesByMsgId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var locale=arguments[1];var digest=arguments[2];var mapperFactory=arguments[3];var missingTranslationStrategy=arguments.length>4&&arguments[4]!==undefined?arguments[4]:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_100" /* MissingTranslationStrategy */].Warning;var console=arguments[5];_classCallCheck(this,TranslationBundle);this._i18nNodesByMsgId=_i18nNodesByMsgId;this.digest=digest;this.mapperFactory=mapperFactory;this._i18nToHtml=new I18nToHtmlVisitor(_i18nNodesByMsgId,locale,digest,mapperFactory,missingTranslationStrategy,console);}/**
     * @param {?} content
     * @param {?} url
     * @param {?} serializer
     * @param {?} missingTranslationStrategy
     * @param {?=} console
     * @return {?}
     */_createClass(TranslationBundle,[{key:'get',/**
     * @param {?} srcMsg
     * @return {?}
     */value:function get(srcMsg){var/** @type {?} */html=this._i18nToHtml.convert(srcMsg);if(html.errors.length){throw new Error(html.errors.join('\n'));}return html.nodes;}/**
     * @param {?} srcMsg
     * @return {?}
     */},{key:'has',value:function has(srcMsg){return this.digest(srcMsg)in this._i18nNodesByMsgId;}}],[{key:'load',value:function load(content,url,serializer,missingTranslationStrategy,console){var _serializer$load=serializer.load(content,url),locale=_serializer$load.locale,i18nNodesByMsgId=_serializer$load.i18nNodesByMsgId;var/** @type {?} */digestFn=function digestFn(m){return serializer.digest(m);};var/** @type {?} */mapperFactory=function mapperFactory(m){return serializer.createNameMapper(m);};return new TranslationBundle(i18nNodesByMsgId,locale,digestFn,mapperFactory,missingTranslationStrategy,console);}}]);return TranslationBundle;}();var I18nToHtmlVisitor=function(){/**
     * @param {?=} _i18nNodesByMsgId
     * @param {?} _locale
     * @param {?} _digest
     * @param {?} _mapperFactory
     * @param {?} _missingTranslationStrategy
     * @param {?=} _console
     */function I18nToHtmlVisitor(){var _i18nNodesByMsgId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _locale=arguments[1];var _digest=arguments[2];var _mapperFactory=arguments[3];var _missingTranslationStrategy=arguments[4];var _console=arguments[5];_classCallCheck(this,I18nToHtmlVisitor);this._i18nNodesByMsgId=_i18nNodesByMsgId;this._locale=_locale;this._digest=_digest;this._mapperFactory=_mapperFactory;this._missingTranslationStrategy=_missingTranslationStrategy;this._console=_console;this._contextStack=[];this._errors=[];}/**
     * @param {?} srcMsg
     * @return {?}
     */_createClass(I18nToHtmlVisitor,[{key:'convert',value:function convert(srcMsg){this._contextStack.length=0;this._errors.length=0;// i18n to text
var/** @type {?} */text=this._convertToText(srcMsg);// text to html
var/** @type {?} */url=srcMsg.nodes[0].sourceSpan.start.file.url;var/** @type {?} */html=new HtmlParser().parse(text,url,true);return{nodes:html.rootNodes,errors:[].concat(_toConsumableArray(this._errors),_toConsumableArray(html.errors))};}/**
     * @param {?} text
     * @param {?=} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){return text.value;}/**
     * @param {?} container
     * @param {?=} context
     * @return {?}
     */},{key:'visitContainer',value:function visitContainer(container,context){var _this73=this;return container.children.map(function(n){return n.visit(_this73);}).join('');}/**
     * @param {?} icu
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcu',value:function visitIcu(icu,context){var _this74=this;var/** @type {?} */cases=Object.keys(icu.cases).map(function(k){return k+' {'+icu.cases[k].visit(_this74)+'}';});// TODO(vicb): Once all format switch to using expression placeholders
// we should throw when the placeholder is not in the source message
var/** @type {?} */exp=this._srcMsg.placeholders.hasOwnProperty(icu.expression)?this._srcMsg.placeholders[icu.expression]:icu.expression;return'{'+exp+', '+icu.type+', '+cases.join(' ')+'}';}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,context){var/** @type {?} */phName=this._mapper(ph.name);if(this._srcMsg.placeholders.hasOwnProperty(phName)){return this._srcMsg.placeholders[phName];}if(this._srcMsg.placeholderToMessage.hasOwnProperty(phName)){return this._convertToText(this._srcMsg.placeholderToMessage[phName]);}this._addError(ph,'Unknown placeholder "'+ph.name+'"');return'';}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,context){var _this75=this;var/** @type {?} */tag=''+ph.tag;var/** @type {?} */attrs=Object.keys(ph.attrs).map(function(name){return name+'="'+ph.attrs[name]+'"';}).join(' ');if(ph.isVoid){return'<'+tag+' '+attrs+'/>';}var/** @type {?} */children=ph.children.map(function(c){return c.visit(_this75);}).join('');return'<'+tag+' '+attrs+'>'+children+'</'+tag+'>';}/**
     * @param {?} ph
     * @param {?=} context
     * @return {?}
     */},{key:'visitIcuPlaceholder',value:function visitIcuPlaceholder(ph,context){// An ICU placeholder references the source message to be serialized
return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);}/**
     * Convert a source message to a translated text string:
     * - text nodes are replaced with their translation,
     * - placeholders are replaced with their content,
     * - ICU nodes are converted to ICU expressions.
     * @param {?} srcMsg
     * @return {?}
     */},{key:'_convertToText',value:function _convertToText(srcMsg){var _this76=this;var/** @type {?} */id=this._digest(srcMsg);var/** @type {?} */mapper=this._mapperFactory?this._mapperFactory(srcMsg):null;var/** @type {?} */nodes=void 0;this._contextStack.push({msg:this._srcMsg,mapper:this._mapper});this._srcMsg=srcMsg;if(this._i18nNodesByMsgId.hasOwnProperty(id)){// When there is a translation use its nodes as the source
// And create a mapper to convert serialized placeholder names to internal names
nodes=this._i18nNodesByMsgId[id];this._mapper=function(name){return mapper?mapper.toInternalName(name):name;};}else{// When no translation has been found
// - report an error / a warning / nothing,
// - use the nodes from the original message
// - placeholders are already internal and need no mapper
if(this._missingTranslationStrategy===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_100" /* MissingTranslationStrategy */].Error){var/** @type {?} */ctx=this._locale?' for locale "'+this._locale+'"':'';this._addError(srcMsg.nodes[0],'Missing translation for message "'+id+'"'+ctx);}else if(this._console&&this._missingTranslationStrategy===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_100" /* MissingTranslationStrategy */].Warning){var/** @type {?} */_ctx2=this._locale?' for locale "'+this._locale+'"':'';this._console.warn('Missing translation for message "'+id+'"'+_ctx2);}nodes=srcMsg.nodes;this._mapper=function(name){return name;};}var/** @type {?} */text=nodes.map(function(node){return node.visit(_this76);}).join('');var/** @type {?} */context=this._contextStack.pop();this._srcMsg=context.msg;this._mapper=context.mapper;return text;}/**
     * @param {?} el
     * @param {?} msg
     * @return {?}
     */},{key:'_addError',value:function _addError(el,msg){this._errors.push(new I18nError(el.sourceSpan,msg));}}]);return I18nToHtmlVisitor;}();var I18NHtmlParser=function(){/**
     * @param {?} _htmlParser
     * @param {?=} translations
     * @param {?=} translationsFormat
     * @param {?=} missingTranslation
     * @param {?=} console
     */function I18NHtmlParser(_htmlParser,translations,translationsFormat){var missingTranslation=arguments.length>3&&arguments[3]!==undefined?arguments[3]:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_100" /* MissingTranslationStrategy */].Warning;var console=arguments[4];_classCallCheck(this,I18NHtmlParser);this._htmlParser=_htmlParser;if(translations){var serializer=createSerializer(translationsFormat);this._translationBundle=TranslationBundle.load(translations,'i18n',serializer,missingTranslation,console);}}/**
     * @param {?} source
     * @param {?} url
     * @param {?=} parseExpansionForms
     * @param {?=} interpolationConfig
     * @return {?}
     */_createClass(I18NHtmlParser,[{key:'parse',value:function parse(source,url){var parseExpansionForms=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var interpolationConfig=arguments.length>3&&arguments[3]!==undefined?arguments[3]:DEFAULT_INTERPOLATION_CONFIG;var/** @type {?} */parseResult=this._htmlParser.parse(source,url,parseExpansionForms,interpolationConfig);if(!this._translationBundle){// Do not enable i18n when no translation bundle is provided
return parseResult;}if(parseResult.errors.length){return new ParseTreeResult(parseResult.rootNodes,parseResult.errors);}return mergeTranslations(parseResult.rootNodes,this._translationBundle,interpolationConfig,[],{});}}]);return I18NHtmlParser;}();/**
 * @param {?=} format
 * @return {?}
 */function createSerializer(format){format=(format||'xlf').toLowerCase();switch(format){case'xmb':return new Xmb();case'xtb':return new Xtb();case'xliff':case'xlf':default:return new Xliff();}}// http://cldr.unicode.org/index/cldr-spec/plural-rules
var/** @type {?} */PLURAL_CASES=['zero','one','two','few','many','other'];/**
 * Expands special forms into elements.
 *
 * For example,
 *
 * ```
 * { messages.length, plural,
 *   =0 {zero}
 *   =1 {one}
 *   other {more than one}
 * }
 * ```
 *
 * will be expanded into
 *
 * ```
 * <ng-container [ngPlural]="messages.length">
 *   <ng-template ngPluralCase="=0">zero</ng-template>
 *   <ng-template ngPluralCase="=1">one</ng-template>
 *   <ng-template ngPluralCase="other">more than one</ng-template>
 * </ng-container>
 * ```
 * @param {?} nodes
 * @return {?}
 */function expandNodes(nodes){var/** @type {?} */expander=new _Expander();return new ExpansionResult(visitAll(expander,nodes),expander.isExpanded,expander.errors);}var ExpansionResult=/**
     * @param {?} nodes
     * @param {?} expanded
     * @param {?} errors
     */function ExpansionResult(nodes,expanded,errors){_classCallCheck(this,ExpansionResult);this.nodes=nodes;this.expanded=expanded;this.errors=errors;};var ExpansionError=function(_ParseError4){_inherits(ExpansionError,_ParseError4);/**
     * @param {?} span
     * @param {?} errorMsg
     */function ExpansionError(span,errorMsg){_classCallCheck(this,ExpansionError);return _possibleConstructorReturn(this,(ExpansionError.__proto__||Object.getPrototypeOf(ExpansionError)).call(this,span,errorMsg));}return ExpansionError;}(ParseError);/**
 * Expand expansion forms (plural, select) to directives
 *
 * \@internal
 */var _Expander=function(){function _Expander(){_classCallCheck(this,_Expander);this.isExpanded=false;this.errors=[];}/**
     * @param {?} element
     * @param {?} context
     * @return {?}
     */_createClass(_Expander,[{key:'visitElement',value:function visitElement(element,context){return new Element(element.name,element.attrs,visitAll(this,element.children),element.sourceSpan,element.startSourceSpan,element.endSourceSpan);}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){return attribute;}/**
     * @param {?} text
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(text,context){return text;}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){return comment;}/**
     * @param {?} icu
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(icu,context){this.isExpanded=true;return icu.type=='plural'?_expandPluralForm(icu,this.errors):_expandDefaultForm(icu,this.errors);}/**
     * @param {?} icuCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(icuCase,context){throw new Error('Should not be reached');}}]);return _Expander;}();/**
 * @param {?} ast
 * @param {?} errors
 * @return {?}
 */function _expandPluralForm(ast,errors){var/** @type {?} */children=ast.cases.map(function(c){if(PLURAL_CASES.indexOf(c.value)==-1&&!c.value.match(/^=\d+$/)){errors.push(new ExpansionError(c.valueSourceSpan,'Plural cases should be "=<number>" or one of '+PLURAL_CASES.join(", ")));}var/** @type {?} */expansionResult=expandNodes(c.expression);errors.push.apply(errors,_toConsumableArray(expansionResult.errors));return new Element('ng-template',[new Attribute$1('ngPluralCase',''+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var/** @type {?} */switchAttr=new Attribute$1('[ngPlural]',ast.switchValue,ast.switchValueSourceSpan);return new Element('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}/**
 * @param {?} ast
 * @param {?} errors
 * @return {?}
 */function _expandDefaultForm(ast,errors){var/** @type {?} */children=ast.cases.map(function(c){var/** @type {?} */expansionResult=expandNodes(c.expression);errors.push.apply(errors,_toConsumableArray(expansionResult.errors));if(c.value==='other'){// other is the default case when no values match
return new Element('ng-template',[new Attribute$1('ngSwitchDefault','',c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);}return new Element('ng-template',[new Attribute$1('ngSwitchCase',''+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var/** @type {?} */switchAttr=new Attribute$1('[ngSwitch]',ast.switchValue,ast.switchValueSourceSpan);return new Element('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}var ProviderError=function(_ParseError5){_inherits(ProviderError,_ParseError5);/**
     * @param {?} message
     * @param {?} span
     */function ProviderError(message,span){_classCallCheck(this,ProviderError);return _possibleConstructorReturn(this,(ProviderError.__proto__||Object.getPrototypeOf(ProviderError)).call(this,span,message));}return ProviderError;}(ParseError);var ProviderViewContext=/**
     * @param {?} component
     * @param {?} sourceSpan
     */function ProviderViewContext(component,sourceSpan){var _this79=this;_classCallCheck(this,ProviderViewContext);this.component=component;this.sourceSpan=sourceSpan;this.errors=[];this.viewQueries=_getViewQueries(component);this.viewProviders=new Map();component.viewProviders.forEach(function(provider){if(isBlank(_this79.viewProviders.get(tokenReference(provider.token)))){_this79.viewProviders.set(tokenReference(provider.token),true);}});};var ProviderElementContext=function(){/**
     * @param {?} viewContext
     * @param {?} _parent
     * @param {?} _isViewRoot
     * @param {?} _directiveAsts
     * @param {?} attrs
     * @param {?} refs
     * @param {?} isTemplate
     * @param {?} contentQueryStartId
     * @param {?} _sourceSpan
     */function ProviderElementContext(viewContext,_parent,_isViewRoot,_directiveAsts,attrs,refs,isTemplate,contentQueryStartId,_sourceSpan){var _this80=this;_classCallCheck(this,ProviderElementContext);this.viewContext=viewContext;this._parent=_parent;this._isViewRoot=_isViewRoot;this._directiveAsts=_directiveAsts;this._sourceSpan=_sourceSpan;this._transformedProviders=new Map();this._seenProviders=new Map();this._hasViewContainer=false;this._queriedTokens=new Map();this._attrs={};attrs.forEach(function(attrAst){return _this80._attrs[attrAst.name]=attrAst.value;});var directivesMeta=_directiveAsts.map(function(directiveAst){return directiveAst.directive;});this._allProviders=_resolveProvidersFromDirectives(directivesMeta,_sourceSpan,viewContext.errors);this._contentQueries=_getContentQueries(contentQueryStartId,directivesMeta);Array.from(this._allProviders.values()).forEach(function(provider){_this80._addQueryReadsTo(provider.token,provider.token,_this80._queriedTokens);});if(isTemplate){var templateRefId=createIdentifierToken(Identifiers.TemplateRef);this._addQueryReadsTo(templateRefId,templateRefId,this._queriedTokens);}refs.forEach(function(refAst){var defaultQueryValue=refAst.value||createIdentifierToken(Identifiers.ElementRef);_this80._addQueryReadsTo({value:refAst.name},defaultQueryValue,_this80._queriedTokens);});if(this._queriedTokens.get(resolveIdentifier(Identifiers.ViewContainerRef))){this._hasViewContainer=true;}// create the providers that we know are eager first
Array.from(this._allProviders.values()).forEach(function(provider){var eager=provider.eager||_this80._queriedTokens.get(tokenReference(provider.token));if(eager){_this80._getOrCreateLocalProvider(provider.providerType,provider.token,true);}});}/**
     * @return {?}
     */_createClass(ProviderElementContext,[{key:'afterElement',value:function afterElement(){var _this81=this;// collect lazy providers
Array.from(this._allProviders.values()).forEach(function(provider){_this81._getOrCreateLocalProvider(provider.providerType,provider.token,false);});}/**
     * @return {?}
     */},{key:'_addQueryReadsTo',/**
     * @param {?} token
     * @param {?} defaultValue
     * @param {?} queryReadTokens
     * @return {?}
     */value:function _addQueryReadsTo(token,defaultValue,queryReadTokens){this._getQueriesFor(token).forEach(function(query){var/** @type {?} */queryValue=query.meta.read||defaultValue;var/** @type {?} */tokenRef=tokenReference(queryValue);var/** @type {?} */queryMatches=queryReadTokens.get(tokenRef);if(!queryMatches){queryMatches=[];queryReadTokens.set(tokenRef,queryMatches);}queryMatches.push({queryId:query.queryId,value:queryValue});});}/**
     * @param {?} token
     * @return {?}
     */},{key:'_getQueriesFor',value:function _getQueriesFor(token){var/** @type {?} */result=[];var/** @type {?} */currentEl=this;var/** @type {?} */distance=0;var/** @type {?} */queries=void 0;while(currentEl!==null){queries=currentEl._contentQueries.get(tokenReference(token));if(queries){result.push.apply(result,_toConsumableArray(queries.filter(function(query){return query.meta.descendants||distance<=1;})));}if(currentEl._directiveAsts.length>0){distance++;}currentEl=currentEl._parent;}queries=this.viewContext.viewQueries.get(tokenReference(token));if(queries){result.push.apply(result,_toConsumableArray(queries));}return result;}/**
     * @param {?} requestingProviderType
     * @param {?} token
     * @param {?} eager
     * @return {?}
     */},{key:'_getOrCreateLocalProvider',value:function _getOrCreateLocalProvider(requestingProviderType,token,eager){var _this82=this;var/** @type {?} */resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider||(requestingProviderType===ProviderAstType.Directive||requestingProviderType===ProviderAstType.PublicService)&&resolvedProvider.providerType===ProviderAstType.PrivateService||(requestingProviderType===ProviderAstType.PrivateService||requestingProviderType===ProviderAstType.PublicService)&&resolvedProvider.providerType===ProviderAstType.Builtin){return null;}var/** @type {?} */transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(isPresent(this._seenProviders.get(tokenReference(token)))){this.viewContext.errors.push(new ProviderError('Cannot instantiate cyclic dependency! '+tokenName(token),this._sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var/** @type {?} */transformedProviders=resolvedProvider.providers.map(function(provider){var/** @type {?} */transformedUseValue=provider.useValue;var/** @type {?} */transformedUseExisting=provider.useExisting;var/** @type {?} */transformedDeps=void 0;if(isPresent(provider.useExisting)){var/** @type {?} */existingDiDep=_this82._getDependency(resolvedProvider.providerType,{token:provider.useExisting},eager);if(isPresent(existingDiDep.token)){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var/** @type {?} */deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this82._getDependency(resolvedProvider.providerType,dep,eager);});}else if(provider.useClass){var/** @type {?} */_deps=provider.deps||provider.useClass.diDeps;transformedDeps=_deps.map(function(dep){return _this82._getDependency(resolvedProvider.providerType,dep,eager);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;}/**
     * @param {?} requestingProviderType
     * @param {?} dep
     * @param {?=} eager
     * @return {?}
     */},{key:'_getLocalDependency',value:function _getLocalDependency(requestingProviderType,dep){var eager=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(dep.isAttribute){var/** @type {?} */attrValue=this._attrs[dep.token.value];return{isValue:true,value:attrValue==null?null:attrValue};}if(isPresent(dep.token)){// access builtints
if(requestingProviderType===ProviderAstType.Directive||requestingProviderType===ProviderAstType.Component){if(tokenReference(dep.token)===resolveIdentifier(Identifiers.Renderer)||tokenReference(dep.token)===resolveIdentifier(Identifiers.ElementRef)||tokenReference(dep.token)===resolveIdentifier(Identifiers.ChangeDetectorRef)||tokenReference(dep.token)===resolveIdentifier(Identifiers.TemplateRef)){return dep;}if(tokenReference(dep.token)===resolveIdentifier(Identifiers.ViewContainerRef)){this._hasViewContainer=true;}}// access the injector
if(tokenReference(dep.token)===resolveIdentifier(Identifiers.Injector)){return dep;}// access providers
if(isPresent(this._getOrCreateLocalProvider(requestingProviderType,dep.token,eager))){return dep;}}return null;}/**
     * @param {?} requestingProviderType
     * @param {?} dep
     * @param {?=} eager
     * @return {?}
     */},{key:'_getDependency',value:function _getDependency(requestingProviderType,dep){var eager=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */currElement=this;var/** @type {?} */currEager=eager;var/** @type {?} */result=null;if(!dep.isSkipSelf){result=this._getLocalDependency(requestingProviderType,dep,eager);}if(dep.isSelf){if(!result&&dep.isOptional){result={isValue:true,value:null};}}else{// check parent elements
while(!result&&currElement._parent){var/** @type {?} */prevElement=currElement;currElement=currElement._parent;if(prevElement._isViewRoot){currEager=false;}result=currElement._getLocalDependency(ProviderAstType.PublicService,dep,currEager);}// check @Host restriction
if(!result){if(!dep.isHost||this.viewContext.component.isHost||this.viewContext.component.type.reference===tokenReference(dep.token)||isPresent(this.viewContext.viewProviders.get(tokenReference(dep.token)))){result=dep;}else{result=dep.isOptional?result={isValue:true,value:null}:null;}}}if(!result){this.viewContext.errors.push(new ProviderError('No provider for '+tokenName(dep.token),this._sourceSpan));}return result;}},{key:'transformProviders',get:function get(){return Array.from(this._transformedProviders.values());}/**
     * @return {?}
     */},{key:'transformedDirectiveAsts',get:function get(){var/** @type {?} */sortedProviderTypes=this.transformProviders.map(function(provider){return provider.token.identifier;});var/** @type {?} */sortedDirectives=this._directiveAsts.slice();sortedDirectives.sort(function(dir1,dir2){return sortedProviderTypes.indexOf(dir1.directive.type)-sortedProviderTypes.indexOf(dir2.directive.type);});return sortedDirectives;}/**
     * @return {?}
     */},{key:'transformedHasViewContainer',get:function get(){return this._hasViewContainer;}/**
     * @return {?}
     */},{key:'queryMatches',get:function get(){var/** @type {?} */allMatches=[];this._queriedTokens.forEach(function(matches){allMatches.push.apply(allMatches,_toConsumableArray(matches));});return allMatches;}}]);return ProviderElementContext;}();var NgModuleProviderAnalyzer=function(){/**
     * @param {?} ngModule
     * @param {?} extraProviders
     * @param {?} sourceSpan
     */function NgModuleProviderAnalyzer(ngModule,extraProviders,sourceSpan){var _this83=this;_classCallCheck(this,NgModuleProviderAnalyzer);this._transformedProviders=new Map();this._seenProviders=new Map();this._errors=[];this._allProviders=new Map();ngModule.transitiveModule.modules.forEach(function(ngModuleType){var ngModuleProvider={token:{identifier:ngModuleType},useClass:ngModuleType};_resolveProviders([ngModuleProvider],ProviderAstType.PublicService,true,sourceSpan,_this83._errors,_this83._allProviders);});_resolveProviders(ngModule.transitiveModule.providers.map(function(entry){return entry.provider;}).concat(extraProviders),ProviderAstType.PublicService,false,sourceSpan,this._errors,this._allProviders);}/**
     * @return {?}
     */_createClass(NgModuleProviderAnalyzer,[{key:'parse',value:function parse(){var _this84=this;Array.from(this._allProviders.values()).forEach(function(provider){_this84._getOrCreateLocalProvider(provider.token,provider.eager);});if(this._errors.length>0){var/** @type {?} */errorString=this._errors.join('\n');throw new Error('Provider parse errors:\n'+errorString);}return Array.from(this._transformedProviders.values());}/**
     * @param {?} token
     * @param {?} eager
     * @return {?}
     */},{key:'_getOrCreateLocalProvider',value:function _getOrCreateLocalProvider(token,eager){var _this85=this;var/** @type {?} */resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider){return null;}var/** @type {?} */transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(isPresent(this._seenProviders.get(tokenReference(token)))){this._errors.push(new ProviderError('Cannot instantiate cyclic dependency! '+tokenName(token),resolvedProvider.sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var/** @type {?} */transformedProviders=resolvedProvider.providers.map(function(provider){var/** @type {?} */transformedUseValue=provider.useValue;var/** @type {?} */transformedUseExisting=provider.useExisting;var/** @type {?} */transformedDeps=void 0;if(isPresent(provider.useExisting)){var/** @type {?} */existingDiDep=_this85._getDependency({token:provider.useExisting},eager,resolvedProvider.sourceSpan);if(isPresent(existingDiDep.token)){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var/** @type {?} */deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this85._getDependency(dep,eager,resolvedProvider.sourceSpan);});}else if(provider.useClass){var/** @type {?} */_deps2=provider.deps||provider.useClass.diDeps;transformedDeps=_deps2.map(function(dep){return _this85._getDependency(dep,eager,resolvedProvider.sourceSpan);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;}/**
     * @param {?} dep
     * @param {?=} eager
     * @param {?} requestorSourceSpan
     * @return {?}
     */},{key:'_getDependency',value:function _getDependency(dep){var eager=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var requestorSourceSpan=arguments[2];var/** @type {?} */foundLocal=false;if(!dep.isSkipSelf&&isPresent(dep.token)){// access the injector
if(tokenReference(dep.token)===resolveIdentifier(Identifiers.Injector)||tokenReference(dep.token)===resolveIdentifier(Identifiers.ComponentFactoryResolver)){foundLocal=true;}else if(isPresent(this._getOrCreateLocalProvider(dep.token,eager))){foundLocal=true;}}var/** @type {?} */result=dep;if(dep.isSelf&&!foundLocal){if(dep.isOptional){result={isValue:true,value:null};}else{this._errors.push(new ProviderError('No provider for '+tokenName(dep.token),requestorSourceSpan));}}return result;}}]);return NgModuleProviderAnalyzer;}();/**
 * @param {?} provider
 * @param {?} __1
 * @return {?}
 */function _transformProvider(provider,_ref27){var useExisting=_ref27.useExisting,useValue=_ref27.useValue,deps=_ref27.deps;return{token:provider.token,useClass:provider.useClass,useExisting:useExisting,useFactory:provider.useFactory,useValue:useValue,deps:deps,multi:provider.multi};}/**
 * @param {?} provider
 * @param {?} __1
 * @return {?}
 */function _transformProviderAst(provider,_ref28){var eager=_ref28.eager,providers=_ref28.providers;return new ProviderAst(provider.token,provider.multiProvider,provider.eager||eager,providers,provider.providerType,provider.lifecycleHooks,provider.sourceSpan);}/**
 * @param {?} directives
 * @param {?} sourceSpan
 * @param {?} targetErrors
 * @return {?}
 */function _resolveProvidersFromDirectives(directives,sourceSpan,targetErrors){var/** @type {?} */providersByToken=new Map();directives.forEach(function(directive){var/** @type {?} */dirProvider={token:{identifier:directive.type},useClass:directive.type};_resolveProviders([dirProvider],directive.isComponent?ProviderAstType.Component:ProviderAstType.Directive,true,sourceSpan,targetErrors,providersByToken);});// Note: directives need to be able to overwrite providers of a component!
var/** @type {?} */directivesWithComponentFirst=directives.filter(function(dir){return dir.isComponent;}).concat(directives.filter(function(dir){return!dir.isComponent;}));directivesWithComponentFirst.forEach(function(directive){_resolveProviders(directive.providers,ProviderAstType.PublicService,false,sourceSpan,targetErrors,providersByToken);_resolveProviders(directive.viewProviders,ProviderAstType.PrivateService,false,sourceSpan,targetErrors,providersByToken);});return providersByToken;}/**
 * @param {?} providers
 * @param {?} providerType
 * @param {?} eager
 * @param {?} sourceSpan
 * @param {?} targetErrors
 * @param {?} targetProvidersByToken
 * @return {?}
 */function _resolveProviders(providers,providerType,eager,sourceSpan,targetErrors,targetProvidersByToken){providers.forEach(function(provider){var/** @type {?} */resolvedProvider=targetProvidersByToken.get(tokenReference(provider.token));if(isPresent(resolvedProvider)&&!!resolvedProvider.multiProvider!==!!provider.multi){targetErrors.push(new ProviderError('Mixing multi and non multi provider is not possible for token '+tokenName(resolvedProvider.token),sourceSpan));}if(!resolvedProvider){var/** @type {?} */lifecycleHooks=provider.token.identifier&&provider.token.identifier.lifecycleHooks?provider.token.identifier.lifecycleHooks:[];resolvedProvider=new ProviderAst(provider.token,provider.multi,eager||lifecycleHooks.length>0,[provider],providerType,lifecycleHooks,sourceSpan);targetProvidersByToken.set(tokenReference(provider.token),resolvedProvider);}else{if(!provider.multi){resolvedProvider.providers.length=0;}resolvedProvider.providers.push(provider);}});}/**
 * @param {?} component
 * @return {?}
 */function _getViewQueries(component){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var/** @type {?} */viewQueryId=1;var/** @type {?} */viewQueries=new Map();if(component.viewQueries){component.viewQueries.forEach(function(query){return _addQueryToTokenMap(viewQueries,{meta:query,queryId:viewQueryId++});});}return viewQueries;}/**
 * @param {?} contentQueryStartId
 * @param {?} directives
 * @return {?}
 */function _getContentQueries(contentQueryStartId,directives){var/** @type {?} */contentQueryId=contentQueryStartId;var/** @type {?} */contentQueries=new Map();directives.forEach(function(directive,directiveIndex){if(directive.queries){directive.queries.forEach(function(query){return _addQueryToTokenMap(contentQueries,{meta:query,queryId:contentQueryId++});});}});return contentQueries;}/**
 * @param {?} map
 * @param {?} query
 * @return {?}
 */function _addQueryToTokenMap(map,query){query.meta.selectors.forEach(function(token){var/** @type {?} */entry=map.get(tokenReference(token));if(!entry){entry=[];map.set(tokenReference(token),entry);}entry.push(query);});}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @abstract
 */var ElementSchemaRegistry=function(){function ElementSchemaRegistry(){_classCallCheck(this,ElementSchemaRegistry);}_createClass(ElementSchemaRegistry,[{key:'hasProperty',/**
     * @abstract
     * @param {?} tagName
     * @param {?} propName
     * @param {?} schemaMetas
     * @return {?}
     */value:function hasProperty(tagName,propName,schemaMetas){}/**
     * @abstract
     * @param {?} tagName
     * @param {?} schemaMetas
     * @return {?}
     */},{key:'hasElement',value:function hasElement(tagName,schemaMetas){}/**
     * @abstract
     * @param {?} elementName
     * @param {?} propName
     * @param {?} isAttribute
     * @return {?}
     */},{key:'securityContext',value:function securityContext(elementName,propName,isAttribute){}/**
     * @abstract
     * @return {?}
     */},{key:'allKnownElementNames',value:function allKnownElementNames(){}/**
     * @abstract
     * @param {?} propName
     * @return {?}
     */},{key:'getMappedPropName',value:function getMappedPropName(propName){}/**
     * @abstract
     * @return {?}
     */},{key:'getDefaultComponentElementName',value:function getDefaultComponentElementName(){}/**
     * @abstract
     * @param {?} name
     * @return {?}
     */},{key:'validateProperty',value:function validateProperty(name){}/**
     * @abstract
     * @param {?} name
     * @return {?}
     */},{key:'validateAttribute',value:function validateAttribute(name){}/**
     * @abstract
     * @param {?} propName
     * @return {?}
     */},{key:'normalizeAnimationStyleProperty',value:function normalizeAnimationStyleProperty(propName){}/**
     * @abstract
     * @param {?} camelCaseProp
     * @param {?} userProvidedProp
     * @param {?} val
     * @return {?}
     */},{key:'normalizeAnimationStyleValue',value:function normalizeAnimationStyleValue(camelCaseProp,userProvidedProp,val){}}]);return ElementSchemaRegistry;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var StyleWithImports=/**
     * @param {?} style
     * @param {?} styleUrls
     */function StyleWithImports(style,styleUrls){_classCallCheck(this,StyleWithImports);this.style=style;this.styleUrls=styleUrls;};/**
 * @param {?} url
 * @return {?}
 */function isStyleUrlResolvable(url){if(url==null||url.length===0||url[0]=='/')return false;var/** @type {?} */schemeMatch=url.match(URL_WITH_SCHEMA_REGEXP);return schemeMatch===null||schemeMatch[1]=='package'||schemeMatch[1]=='asset';}/**
 * Rewrites stylesheets by resolving and removing the \@import urls that
 * are either relative or don't have a `package:` scheme
 * @param {?} resolver
 * @param {?} baseUrl
 * @param {?} cssText
 * @return {?}
 */function extractStyleUrls(resolver,baseUrl,cssText){var/** @type {?} */foundUrls=[];var/** @type {?} */modifiedCssText=cssText.replace(CSS_COMMENT_REGEXP,'').replace(CSS_IMPORT_REGEXP,function(){var/** @type {?} */url=(arguments.length<=1?undefined:arguments[1])||(arguments.length<=2?undefined:arguments[2]);if(!isStyleUrlResolvable(url)){// Do not attempt to resolve non-package absolute URLs with URI scheme
return arguments.length<=0?undefined:arguments[0];}foundUrls.push(resolver.resolve(baseUrl,url));return'';});return new StyleWithImports(modifiedCssText,foundUrls);}var/** @type {?} */CSS_IMPORT_REGEXP=/@import\s+(?:url\()?\s*(?:(?:['"]([^'"]*))|([^;\)\s]*))[^;]*;?/g;var/** @type {?} */CSS_COMMENT_REGEXP=/\/\*.+?\*\//g;var/** @type {?} */URL_WITH_SCHEMA_REGEXP=/^([^:/?#]+):/;var/** @type {?} */PROPERTY_PARTS_SEPARATOR='.';var/** @type {?} */ATTRIBUTE_PREFIX='attr';var/** @type {?} */CLASS_PREFIX='class';var/** @type {?} */STYLE_PREFIX='style';var/** @type {?} */ANIMATE_PROP_PREFIX='animate-';var BoundPropertyType={};BoundPropertyType.DEFAULT=0;BoundPropertyType.LITERAL_ATTR=1;BoundPropertyType.ANIMATION=2;BoundPropertyType[BoundPropertyType.DEFAULT]="DEFAULT";BoundPropertyType[BoundPropertyType.LITERAL_ATTR]="LITERAL_ATTR";BoundPropertyType[BoundPropertyType.ANIMATION]="ANIMATION";/**
 * Represents a parsed property.
 */var BoundProperty=function(){/**
     * @param {?} name
     * @param {?} expression
     * @param {?} type
     * @param {?} sourceSpan
     */function BoundProperty(name,expression,type,sourceSpan){_classCallCheck(this,BoundProperty);this.name=name;this.expression=expression;this.type=type;this.sourceSpan=sourceSpan;}/**
     * @return {?}
     */_createClass(BoundProperty,[{key:'isLiteral',get:function get(){return this.type===BoundPropertyType.LITERAL_ATTR;}/**
     * @return {?}
     */},{key:'isAnimation',get:function get(){return this.type===BoundPropertyType.ANIMATION;}}]);return BoundProperty;}();/**
 * Parses bindings in templates and in the directive host area.
 */var BindingParser=function(){/**
     * @param {?} _exprParser
     * @param {?} _interpolationConfig
     * @param {?} _schemaRegistry
     * @param {?} pipes
     * @param {?} _targetErrors
     */function BindingParser(_exprParser,_interpolationConfig,_schemaRegistry,pipes,_targetErrors){var _this86=this;_classCallCheck(this,BindingParser);this._exprParser=_exprParser;this._interpolationConfig=_interpolationConfig;this._schemaRegistry=_schemaRegistry;this._targetErrors=_targetErrors;this.pipesByName=new Map();this._usedPipes=new Map();pipes.forEach(function(pipe){return _this86.pipesByName.set(pipe.name,pipe);});}/**
     * @return {?}
     */_createClass(BindingParser,[{key:'getUsedPipes',value:function getUsedPipes(){return Array.from(this._usedPipes.values());}/**
     * @param {?} dirMeta
     * @param {?} elementSelector
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'createDirectiveHostPropertyAsts',value:function createDirectiveHostPropertyAsts(dirMeta,elementSelector,sourceSpan){var _this87=this;if(dirMeta.hostProperties){var/** @type {?} */boundProps=[];Object.keys(dirMeta.hostProperties).forEach(function(propName){var/** @type {?} */expression=dirMeta.hostProperties[propName];if(typeof expression==='string'){_this87.parsePropertyBinding(propName,expression,true,sourceSpan,[],boundProps);}else{_this87._reportError('Value of the host property binding "'+propName+'" needs to be a string representing an expression but got "'+expression+'" ('+(typeof expression==='undefined'?'undefined':_typeof(expression))+')',sourceSpan);}});return boundProps.map(function(prop){return _this87.createElementPropertyAst(elementSelector,prop);});}}/**
     * @param {?} dirMeta
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'createDirectiveHostEventAsts',value:function createDirectiveHostEventAsts(dirMeta,sourceSpan){var _this88=this;if(dirMeta.hostListeners){var/** @type {?} */targetEventAsts=[];Object.keys(dirMeta.hostListeners).forEach(function(propName){var/** @type {?} */expression=dirMeta.hostListeners[propName];if(typeof expression==='string'){_this88.parseEvent(propName,expression,sourceSpan,[],targetEventAsts);}else{_this88._reportError('Value of the host listener "'+propName+'" needs to be a string representing an expression but got "'+expression+'" ('+(typeof expression==='undefined'?'undefined':_typeof(expression))+')',sourceSpan);}});return targetEventAsts;}}/**
     * @param {?} value
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'parseInterpolation',value:function parseInterpolation(value,sourceSpan){var/** @type {?} */sourceInfo=sourceSpan.start.toString();try{var/** @type {?} */ast=this._exprParser.parseInterpolation(value,sourceInfo,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(''+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}}/**
     * @param {?} prefixToken
     * @param {?} value
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetProps
     * @param {?} targetVars
     * @return {?}
     */},{key:'parseInlineTemplateBinding',value:function parseInlineTemplateBinding(prefixToken,value,sourceSpan,targetMatchableAttrs,targetProps,targetVars){var/** @type {?} */bindings=this._parseTemplateBindings(prefixToken,value,sourceSpan);for(var/** @type {?} */i=0;i<bindings.length;i++){var/** @type {?} */binding=bindings[i];if(binding.keyIsVar){targetVars.push(new VariableAst(binding.key,binding.name,sourceSpan));}else if(binding.expression){this._parsePropertyAst(binding.key,binding.expression,sourceSpan,targetMatchableAttrs,targetProps);}else{targetMatchableAttrs.push([binding.key,'']);this.parseLiteralAttr(binding.key,null,sourceSpan,targetMatchableAttrs,targetProps);}}}/**
     * @param {?} prefixToken
     * @param {?} value
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_parseTemplateBindings',value:function _parseTemplateBindings(prefixToken,value,sourceSpan){var _this89=this;var/** @type {?} */sourceInfo=sourceSpan.start.toString();try{var/** @type {?} */bindingsResult=this._exprParser.parseTemplateBindings(prefixToken,value,sourceInfo);this._reportExpressionParserErrors(bindingsResult.errors,sourceSpan);bindingsResult.templateBindings.forEach(function(binding){if(binding.expression){_this89._checkPipes(binding.expression,sourceSpan);}});bindingsResult.warnings.forEach(function(warning){_this89._reportError(warning,sourceSpan,ParseErrorLevel.WARNING);});return bindingsResult.templateBindings;}catch(e){this._reportError(''+e,sourceSpan);return[];}}/**
     * @param {?} name
     * @param {?} value
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetProps
     * @return {?}
     */},{key:'parseLiteralAttr',value:function parseLiteralAttr(name,value,sourceSpan,targetMatchableAttrs,targetProps){if(_isAnimationLabel(name)){name=name.substring(1);if(value){this._reportError('Assigning animation triggers via @prop="exp" attributes with an expression is invalid.'+' Use property bindings (e.g. [@prop]="exp") or use an attribute without a value (e.g. @prop) instead.',sourceSpan,ParseErrorLevel.FATAL);}this._parseAnimation(name,value,sourceSpan,targetMatchableAttrs,targetProps);}else{targetProps.push(new BoundProperty(name,this._exprParser.wrapLiteralPrimitive(value,''),BoundPropertyType.LITERAL_ATTR,sourceSpan));}}/**
     * @param {?} name
     * @param {?} expression
     * @param {?} isHost
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetProps
     * @return {?}
     */},{key:'parsePropertyBinding',value:function parsePropertyBinding(name,expression,isHost,sourceSpan,targetMatchableAttrs,targetProps){var/** @type {?} */isAnimationProp=false;if(name.startsWith(ANIMATE_PROP_PREFIX)){isAnimationProp=true;name=name.substring(ANIMATE_PROP_PREFIX.length);}else if(_isAnimationLabel(name)){isAnimationProp=true;name=name.substring(1);}if(isAnimationProp){this._parseAnimation(name,expression,sourceSpan,targetMatchableAttrs,targetProps);}else{this._parsePropertyAst(name,this._parseBinding(expression,isHost,sourceSpan),sourceSpan,targetMatchableAttrs,targetProps);}}/**
     * @param {?} name
     * @param {?} value
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetProps
     * @return {?}
     */},{key:'parsePropertyInterpolation',value:function parsePropertyInterpolation(name,value,sourceSpan,targetMatchableAttrs,targetProps){var/** @type {?} */expr=this.parseInterpolation(value,sourceSpan);if(expr){this._parsePropertyAst(name,expr,sourceSpan,targetMatchableAttrs,targetProps);return true;}return false;}/**
     * @param {?} name
     * @param {?} ast
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetProps
     * @return {?}
     */},{key:'_parsePropertyAst',value:function _parsePropertyAst(name,ast,sourceSpan,targetMatchableAttrs,targetProps){targetMatchableAttrs.push([name,ast.source]);targetProps.push(new BoundProperty(name,ast,BoundPropertyType.DEFAULT,sourceSpan));}/**
     * @param {?} name
     * @param {?} expression
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetProps
     * @return {?}
     */},{key:'_parseAnimation',value:function _parseAnimation(name,expression,sourceSpan,targetMatchableAttrs,targetProps){// This will occur when a @trigger is not paired with an expression.
// For animations it is valid to not have an expression since */void
// states will be applied by angular when the element is attached/detached
var/** @type {?} */ast=this._parseBinding(expression||'null',false,sourceSpan);targetMatchableAttrs.push([name,ast.source]);targetProps.push(new BoundProperty(name,ast,BoundPropertyType.ANIMATION,sourceSpan));}/**
     * @param {?} value
     * @param {?} isHostBinding
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_parseBinding',value:function _parseBinding(value,isHostBinding,sourceSpan){var/** @type {?} */sourceInfo=sourceSpan.start.toString();try{var/** @type {?} */ast=isHostBinding?this._exprParser.parseSimpleBinding(value,sourceInfo,this._interpolationConfig):this._exprParser.parseBinding(value,sourceInfo,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(''+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}}/**
     * @param {?} elementSelector
     * @param {?} boundProp
     * @return {?}
     */},{key:'createElementPropertyAst',value:function createElementPropertyAst(elementSelector,boundProp){if(boundProp.isAnimation){return new BoundElementPropertyAst(boundProp.name,PropertyBindingType.Animation,__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].NONE,false,boundProp.expression,null,boundProp.sourceSpan);}var/** @type {?} */unit=null;var/** @type {?} */bindingType=void 0;var/** @type {?} */boundPropertyName=null;var/** @type {?} */parts=boundProp.name.split(PROPERTY_PARTS_SEPARATOR);var/** @type {?} */securityContexts=void 0;// Check check for special cases (prefix style, attr, class)
if(parts.length>1){if(parts[0]==ATTRIBUTE_PREFIX){boundPropertyName=parts[1];this._validatePropertyOrAttributeName(boundPropertyName,boundProp.sourceSpan,true);securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,boundPropertyName,true);var/** @type {?} */nsSeparatorIdx=boundPropertyName.indexOf(':');if(nsSeparatorIdx>-1){var/** @type {?} */ns=boundPropertyName.substring(0,nsSeparatorIdx);var/** @type {?} */name=boundPropertyName.substring(nsSeparatorIdx+1);boundPropertyName=mergeNsAndName(ns,name);}bindingType=PropertyBindingType.Attribute;}else if(parts[0]==CLASS_PREFIX){boundPropertyName=parts[1];bindingType=PropertyBindingType.Class;securityContexts=[__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].NONE];}else if(parts[0]==STYLE_PREFIX){unit=parts.length>2?parts[2]:null;boundPropertyName=parts[1];bindingType=PropertyBindingType.Style;securityContexts=[__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].STYLE];}}// If not a special case, use the full property name
if(boundPropertyName===null){boundPropertyName=this._schemaRegistry.getMappedPropName(boundProp.name);securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,boundPropertyName,false);bindingType=PropertyBindingType.Property;this._validatePropertyOrAttributeName(boundPropertyName,boundProp.sourceSpan,false);}return new BoundElementPropertyAst(boundPropertyName,bindingType,securityContexts.length===1?securityContexts[0]:null,securityContexts.length>1,boundProp.expression,unit,boundProp.sourceSpan);}/**
     * @param {?} name
     * @param {?} expression
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetEvents
     * @return {?}
     */},{key:'parseEvent',value:function parseEvent(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){if(_isAnimationLabel(name)){name=name.substr(1);this._parseAnimationEvent(name,expression,sourceSpan,targetEvents);}else{this._parseEvent(name,expression,sourceSpan,targetMatchableAttrs,targetEvents);}}/**
     * @param {?} name
     * @param {?} expression
     * @param {?} sourceSpan
     * @param {?} targetEvents
     * @return {?}
     */},{key:'_parseAnimationEvent',value:function _parseAnimationEvent(name,expression,sourceSpan,targetEvents){var/** @type {?} */matches=splitAtPeriod(name,[name,'']);var/** @type {?} */eventName=matches[0];var/** @type {?} */phase=matches[1].toLowerCase();if(phase){switch(phase){case'start':case'done':var/** @type {?} */ast=this._parseAction(expression,sourceSpan);targetEvents.push(new BoundEventAst(eventName,null,phase,ast,sourceSpan));break;default:this._reportError('The provided animation output phase value "'+phase+'" for "@'+eventName+'" is not supported (use start or done)',sourceSpan);break;}}else{this._reportError('The animation trigger output event (@'+eventName+') is missing its phase value name (start or done are currently supported)',sourceSpan);}}/**
     * @param {?} name
     * @param {?} expression
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetEvents
     * @return {?}
     */},{key:'_parseEvent',value:function _parseEvent(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){// long format: 'target: eventName'
var _splitAtColon=splitAtColon(name,[null,name]),_splitAtColon2=_slicedToArray(_splitAtColon,2),target=_splitAtColon2[0],eventName=_splitAtColon2[1];var/** @type {?} */ast=this._parseAction(expression,sourceSpan);targetMatchableAttrs.push([name,ast.source]);targetEvents.push(new BoundEventAst(eventName,target,null,ast,sourceSpan));// Don't detect directives for event names for now,
// so don't add the event name to the matchableAttrs
}/**
     * @param {?} value
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_parseAction',value:function _parseAction(value,sourceSpan){var/** @type {?} */sourceInfo=sourceSpan.start.toString();try{var/** @type {?} */ast=this._exprParser.parseAction(value,sourceInfo,this._interpolationConfig);if(ast){this._reportExpressionParserErrors(ast.errors,sourceSpan);}if(!ast||ast.ast instanceof EmptyExpr){this._reportError('Empty expressions are not allowed',sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(''+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo);}}/**
     * @param {?} message
     * @param {?} sourceSpan
     * @param {?=} level
     * @return {?}
     */},{key:'_reportError',value:function _reportError(message,sourceSpan){var level=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ParseErrorLevel.FATAL;this._targetErrors.push(new ParseError(sourceSpan,message,level));}/**
     * @param {?} errors
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_reportExpressionParserErrors',value:function _reportExpressionParserErrors(errors,sourceSpan){var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=errors[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var error=_step3.value;this._reportError(error.message,sourceSpan);}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}}/**
     * @param {?} ast
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_checkPipes',value:function _checkPipes(ast,sourceSpan){var _this90=this;if(ast){var/** @type {?} */collector=new PipeCollector();ast.visit(collector);collector.pipes.forEach(function(ast,pipeName){var/** @type {?} */pipeMeta=_this90.pipesByName.get(pipeName);if(!pipeMeta){_this90._reportError('The pipe \''+pipeName+'\' could not be found',new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start),sourceSpan.start.moveBy(ast.span.end)));}else{_this90._usedPipes.set(pipeName,pipeMeta);}});}}/**
     * @param {?} propName the name of the property / attribute
     * @param {?} sourceSpan
     * @param {?} isAttr true when binding to an attribute
     * @return {?}
     */},{key:'_validatePropertyOrAttributeName',value:function _validatePropertyOrAttributeName(propName,sourceSpan,isAttr){var/** @type {?} */report=isAttr?this._schemaRegistry.validateAttribute(propName):this._schemaRegistry.validateProperty(propName);if(report.error){this._reportError(report.msg,sourceSpan,ParseErrorLevel.FATAL);}}}]);return BindingParser;}();var PipeCollector=function(_RecursiveAstVisitor){_inherits(PipeCollector,_RecursiveAstVisitor);function PipeCollector(){_classCallCheck(this,PipeCollector);var _this91=_possibleConstructorReturn(this,(PipeCollector.__proto__||Object.getPrototypeOf(PipeCollector)).apply(this,arguments));_this91.pipes=new Map();return _this91;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */_createClass(PipeCollector,[{key:'visitPipe',value:function visitPipe(ast,context){this.pipes.set(ast.name,ast);ast.exp.visit(this);this.visitAll(ast.args,context);return null;}}]);return PipeCollector;}(RecursiveAstVisitor);/**
 * @param {?} name
 * @return {?}
 */function _isAnimationLabel(name){return name[0]=='@';}/**
 * @param {?} registry
 * @param {?} selector
 * @param {?} propName
 * @param {?} isAttribute
 * @return {?}
 */function calcPossibleSecurityContexts(registry,selector,propName,isAttribute){var/** @type {?} */ctxs=[];CssSelector.parse(selector).forEach(function(selector){var/** @type {?} */elementNames=selector.element?[selector.element]:registry.allKnownElementNames();var/** @type {?} */notElementNames=new Set(selector.notSelectors.filter(function(selector){return selector.isElementSelector();}).map(function(selector){return selector.element;}));var/** @type {?} */possibleElementNames=elementNames.filter(function(elementName){return!notElementNames.has(elementName);});ctxs.push.apply(ctxs,_toConsumableArray(possibleElementNames.map(function(elementName){return registry.securityContext(elementName,propName,isAttribute);})));});return ctxs.length===0?[__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].NONE]:Array.from(new Set(ctxs)).sort();}var/** @type {?} */NG_CONTENT_SELECT_ATTR='select';var/** @type {?} */NG_CONTENT_ELEMENT='ng-content';var/** @type {?} */LINK_ELEMENT='link';var/** @type {?} */LINK_STYLE_REL_ATTR='rel';var/** @type {?} */LINK_STYLE_HREF_ATTR='href';var/** @type {?} */LINK_STYLE_REL_VALUE='stylesheet';var/** @type {?} */STYLE_ELEMENT='style';var/** @type {?} */SCRIPT_ELEMENT='script';var/** @type {?} */NG_NON_BINDABLE_ATTR='ngNonBindable';var/** @type {?} */NG_PROJECT_AS='ngProjectAs';/**
 * @param {?} ast
 * @return {?}
 */function preparseElement(ast){var/** @type {?} */selectAttr=null;var/** @type {?} */hrefAttr=null;var/** @type {?} */relAttr=null;var/** @type {?} */nonBindable=false;var/** @type {?} */projectAs=null;ast.attrs.forEach(function(attr){var/** @type {?} */lcAttrName=attr.name.toLowerCase();if(lcAttrName==NG_CONTENT_SELECT_ATTR){selectAttr=attr.value;}else if(lcAttrName==LINK_STYLE_HREF_ATTR){hrefAttr=attr.value;}else if(lcAttrName==LINK_STYLE_REL_ATTR){relAttr=attr.value;}else if(attr.name==NG_NON_BINDABLE_ATTR){nonBindable=true;}else if(attr.name==NG_PROJECT_AS){if(attr.value.length>0){projectAs=attr.value;}}});selectAttr=normalizeNgContentSelect(selectAttr);var/** @type {?} */nodeName=ast.name.toLowerCase();var/** @type {?} */type=PreparsedElementType.OTHER;if(splitNsName(nodeName)[1]==NG_CONTENT_ELEMENT){type=PreparsedElementType.NG_CONTENT;}else if(nodeName==STYLE_ELEMENT){type=PreparsedElementType.STYLE;}else if(nodeName==SCRIPT_ELEMENT){type=PreparsedElementType.SCRIPT;}else if(nodeName==LINK_ELEMENT&&relAttr==LINK_STYLE_REL_VALUE){type=PreparsedElementType.STYLESHEET;}return new PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs);}var PreparsedElementType={};PreparsedElementType.NG_CONTENT=0;PreparsedElementType.STYLE=1;PreparsedElementType.STYLESHEET=2;PreparsedElementType.SCRIPT=3;PreparsedElementType.OTHER=4;PreparsedElementType[PreparsedElementType.NG_CONTENT]="NG_CONTENT";PreparsedElementType[PreparsedElementType.STYLE]="STYLE";PreparsedElementType[PreparsedElementType.STYLESHEET]="STYLESHEET";PreparsedElementType[PreparsedElementType.SCRIPT]="SCRIPT";PreparsedElementType[PreparsedElementType.OTHER]="OTHER";var PreparsedElement=/**
     * @param {?} type
     * @param {?} selectAttr
     * @param {?} hrefAttr
     * @param {?} nonBindable
     * @param {?} projectAs
     */function PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs){_classCallCheck(this,PreparsedElement);this.type=type;this.selectAttr=selectAttr;this.hrefAttr=hrefAttr;this.nonBindable=nonBindable;this.projectAs=projectAs;};/**
 * @param {?} selectAttr
 * @return {?}
 */function normalizeNgContentSelect(selectAttr){if(selectAttr===null||selectAttr.length===0){return'*';}return selectAttr;}var/** @type {?} */BIND_NAME_REGEXP=/^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;// Group 1 = "bind-"
var/** @type {?} */KW_BIND_IDX=1;// Group 2 = "let-"
var/** @type {?} */KW_LET_IDX=2;// Group 3 = "ref-/#"
var/** @type {?} */KW_REF_IDX=3;// Group 4 = "on-"
var/** @type {?} */KW_ON_IDX=4;// Group 5 = "bindon-"
var/** @type {?} */KW_BINDON_IDX=5;// Group 6 = "@"
var/** @type {?} */KW_AT_IDX=6;// Group 7 = the identifier after "bind-", "let-", "ref-/#", "on-", "bindon-" or "@"
var/** @type {?} */IDENT_KW_IDX=7;// Group 8 = identifier inside [()]
var/** @type {?} */IDENT_BANANA_BOX_IDX=8;// Group 9 = identifier inside []
var/** @type {?} */IDENT_PROPERTY_IDX=9;// Group 10 = identifier inside ()
var/** @type {?} */IDENT_EVENT_IDX=10;var/** @type {?} */NG_TEMPLATE_ELEMENT='ng-template';// deprecated in 4.x
var/** @type {?} */TEMPLATE_ELEMENT='template';// deprecated in 4.x
var/** @type {?} */TEMPLATE_ATTR='template';var/** @type {?} */TEMPLATE_ATTR_PREFIX='*';var/** @type {?} */CLASS_ATTR='class';var/** @type {?} */TEXT_CSS_SELECTOR=CssSelector.parse('*')[0];/**
 * Provides an array of {@link TemplateAstVisitor}s which will be used to transform
 * parsed templates before compilation is invoked, allowing custom expression syntax
 * and other advanced transformations.
 *
 * This is currently an internal-only feature and not meant for general use.
 */var/** @type {?} */TEMPLATE_TRANSFORMS=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('TemplateTransforms');var TemplateParseError=function(_ParseError6){_inherits(TemplateParseError,_ParseError6);/**
     * @param {?} message
     * @param {?} span
     * @param {?} level
     */function TemplateParseError(message,span,level){_classCallCheck(this,TemplateParseError);return _possibleConstructorReturn(this,(TemplateParseError.__proto__||Object.getPrototypeOf(TemplateParseError)).call(this,span,message,level));}return TemplateParseError;}(ParseError);var TemplateParseResult=/**
     * @param {?=} templateAst
     * @param {?=} usedPipes
     * @param {?=} errors
     */function TemplateParseResult(templateAst,usedPipes,errors){_classCallCheck(this,TemplateParseResult);this.templateAst=templateAst;this.usedPipes=usedPipes;this.errors=errors;};var TemplateParser=function(){/**
     * @param {?} _config
     * @param {?} _exprParser
     * @param {?} _schemaRegistry
     * @param {?} _htmlParser
     * @param {?} _console
     * @param {?} transforms
     */function TemplateParser(_config,_exprParser,_schemaRegistry,_htmlParser,_console,transforms){_classCallCheck(this,TemplateParser);this._config=_config;this._exprParser=_exprParser;this._schemaRegistry=_schemaRegistry;this._htmlParser=_htmlParser;this._console=_console;this.transforms=transforms;}/**
     * @param {?} component
     * @param {?} template
     * @param {?} directives
     * @param {?} pipes
     * @param {?} schemas
     * @param {?} templateUrl
     * @return {?}
     */_createClass(TemplateParser,[{key:'parse',value:function parse(component,template,directives,pipes,schemas,templateUrl){var/** @type {?} */result=this.tryParse(component,template,directives,pipes,schemas,templateUrl);var/** @type {?} */warnings=result.errors.filter(function(error){return error.level===ParseErrorLevel.WARNING;});var/** @type {?} */errors=result.errors.filter(function(error){return error.level===ParseErrorLevel.FATAL;});if(warnings.length>0){this._console.warn('Template parse warnings:\n'+warnings.join('\n'));}if(errors.length>0){var/** @type {?} */errorString=errors.join('\n');throw syntaxError('Template parse errors:\n'+errorString);}return{template:result.templateAst,pipes:result.usedPipes};}/**
     * @param {?} component
     * @param {?} template
     * @param {?} directives
     * @param {?} pipes
     * @param {?} schemas
     * @param {?} templateUrl
     * @return {?}
     */},{key:'tryParse',value:function tryParse(component,template,directives,pipes,schemas,templateUrl){return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template,templateUrl,true,this.getInterpolationConfig(component))),component,template,directives,pipes,schemas,templateUrl);}/**
     * @param {?} htmlAstWithErrors
     * @param {?} component
     * @param {?} template
     * @param {?} directives
     * @param {?} pipes
     * @param {?} schemas
     * @param {?} templateUrl
     * @return {?}
     */},{key:'tryParseHtml',value:function tryParseHtml(htmlAstWithErrors,component,template,directives,pipes,schemas,templateUrl){var/** @type {?} */result=void 0;var/** @type {?} */errors=htmlAstWithErrors.errors;var/** @type {?} */usedPipes=[];if(htmlAstWithErrors.rootNodes.length>0){var/** @type {?} */uniqDirectives=removeSummaryDuplicates(directives);var/** @type {?} */uniqPipes=removeSummaryDuplicates(pipes);var/** @type {?} */providerViewContext=new ProviderViewContext(component,htmlAstWithErrors.rootNodes[0].sourceSpan);var/** @type {?} */interpolationConfig=void 0;if(component.template&&component.template.interpolation){interpolationConfig={start:component.template.interpolation[0],end:component.template.interpolation[1]};}var/** @type {?} */bindingParser=new BindingParser(this._exprParser,interpolationConfig,this._schemaRegistry,uniqPipes,errors);var/** @type {?} */parseVisitor=new TemplateParseVisitor(this._config,providerViewContext,uniqDirectives,bindingParser,this._schemaRegistry,schemas,errors);result=visitAll(parseVisitor,htmlAstWithErrors.rootNodes,EMPTY_ELEMENT_CONTEXT);errors.push.apply(errors,_toConsumableArray(providerViewContext.errors));usedPipes.push.apply(usedPipes,_toConsumableArray(bindingParser.getUsedPipes()));}else{result=[];}this._assertNoReferenceDuplicationOnTemplate(result,errors);if(errors.length>0){return new TemplateParseResult(result,usedPipes,errors);}if(this.transforms){this.transforms.forEach(function(transform){result=templateVisitAll(transform,result);});}return new TemplateParseResult(result,usedPipes,errors);}/**
     * @param {?} htmlAstWithErrors
     * @param {?=} forced
     * @return {?}
     */},{key:'expandHtml',value:function expandHtml(htmlAstWithErrors){var forced=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var/** @type {?} */errors=htmlAstWithErrors.errors;if(errors.length==0||forced){// Transform ICU messages to angular directives
var/** @type {?} */expandedHtmlAst=expandNodes(htmlAstWithErrors.rootNodes);errors.push.apply(errors,_toConsumableArray(expandedHtmlAst.errors));htmlAstWithErrors=new ParseTreeResult(expandedHtmlAst.nodes,errors);}return htmlAstWithErrors;}/**
     * @param {?} component
     * @return {?}
     */},{key:'getInterpolationConfig',value:function getInterpolationConfig(component){if(component.template){return InterpolationConfig.fromArray(component.template.interpolation);}}/**
     * \@internal
     * @param {?} result
     * @param {?} errors
     * @return {?}
     */},{key:'_assertNoReferenceDuplicationOnTemplate',value:function _assertNoReferenceDuplicationOnTemplate(result,errors){var/** @type {?} */existingReferences=[];result.filter(function(element){return!!element.references;}).forEach(function(element){return element.references.forEach(function(reference){var/** @type {?} */name=reference.name;if(existingReferences.indexOf(name)<0){existingReferences.push(name);}else{var/** @type {?} */error=new TemplateParseError('Reference "#'+name+'" is defined several times',reference.sourceSpan,ParseErrorLevel.FATAL);errors.push(error);}});});}}]);return TemplateParser;}();TemplateParser.decorators=[{type:CompilerInjectable}];/** @nocollapse */TemplateParser.ctorParameters=function(){return[{type:CompilerConfig},{type:Parser},{type:ElementSchemaRegistry},{type:I18NHtmlParser},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_101" /* ɵConsole */]},{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[TEMPLATE_TRANSFORMS]}]}];};var TemplateParseVisitor=function(){/**
     * @param {?} config
     * @param {?} providerViewContext
     * @param {?} directives
     * @param {?} _bindingParser
     * @param {?} _schemaRegistry
     * @param {?} _schemas
     * @param {?} _targetErrors
     */function TemplateParseVisitor(config,providerViewContext,directives,_bindingParser,_schemaRegistry,_schemas,_targetErrors){var _this93=this;_classCallCheck(this,TemplateParseVisitor);this.config=config;this.providerViewContext=providerViewContext;this._bindingParser=_bindingParser;this._schemaRegistry=_schemaRegistry;this._schemas=_schemas;this._targetErrors=_targetErrors;this.selectorMatcher=new SelectorMatcher();this.directivesIndex=new Map();this.ngContentCount=0;// Note: queries start with id 1 so we can use the number in a Bloom filter!
this.contentQueryStartId=providerViewContext.component.viewQueries.length+1;directives.forEach(function(directive,index){var selector=CssSelector.parse(directive.selector);_this93.selectorMatcher.addSelectables(selector,directive);_this93.directivesIndex.set(directive,index);});}/**
     * @param {?} expansion
     * @param {?} context
     * @return {?}
     */_createClass(TemplateParseVisitor,[{key:'visitExpansion',value:function visitExpansion(expansion,context){return null;}/**
     * @param {?} expansionCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(expansionCase,context){return null;}/**
     * @param {?} text
     * @param {?} parent
     * @return {?}
     */},{key:'visitText',value:function visitText(text,parent){var/** @type {?} */ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR);var/** @type {?} */expr=this._bindingParser.parseInterpolation(text.value,text.sourceSpan);return expr?new BoundTextAst(expr,ngContentIndex,text.sourceSpan):new TextAst(text.value,ngContentIndex,text.sourceSpan);}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){return null;}/**
     * @param {?} element
     * @param {?} parent
     * @return {?}
     */},{key:'visitElement',value:function visitElement(element,parent){var _this94=this;var/** @type {?} */queryStartIndex=this.contentQueryStartId;var/** @type {?} */nodeName=element.name;var/** @type {?} */preparsedElement=preparseElement(element);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE){// Skipping <script> for security reasons
// Skipping <style> as we already processed them
// in the StyleCompiler
return null;}if(preparsedElement.type===PreparsedElementType.STYLESHEET&&isStyleUrlResolvable(preparsedElement.hrefAttr)){// Skipping stylesheets with either relative urls or package scheme as we already processed
// them in the StyleCompiler
return null;}var/** @type {?} */matchableAttrs=[];var/** @type {?} */elementOrDirectiveProps=[];var/** @type {?} */elementOrDirectiveRefs=[];var/** @type {?} */elementVars=[];var/** @type {?} */events=[];var/** @type {?} */templateElementOrDirectiveProps=[];var/** @type {?} */templateMatchableAttrs=[];var/** @type {?} */templateElementVars=[];var/** @type {?} */hasInlineTemplates=false;var/** @type {?} */attrs=[];var/** @type {?} */isTemplateElement=isTemplate(element,this.config.enableLegacyTemplate,function(m,span){return _this94._reportError(m,span,ParseErrorLevel.WARNING);});element.attrs.forEach(function(attr){var/** @type {?} */hasBinding=_this94._parseAttr(isTemplateElement,attr,matchableAttrs,elementOrDirectiveProps,events,elementOrDirectiveRefs,elementVars);var/** @type {?} */templateBindingsSource=void 0;var/** @type {?} */prefixToken=void 0;var/** @type {?} */normalizedName=_this94._normalizeAttributeName(attr.name);if(_this94.config.enableLegacyTemplate&&normalizedName==TEMPLATE_ATTR){_this94._reportError('The template attribute is deprecated. Use an ng-template element instead.',attr.sourceSpan,ParseErrorLevel.WARNING);templateBindingsSource=attr.value;}else if(normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)){templateBindingsSource=attr.value;prefixToken=normalizedName.substring(TEMPLATE_ATTR_PREFIX.length)+':';}var/** @type {?} */hasTemplateBinding=isPresent(templateBindingsSource);if(hasTemplateBinding){if(hasInlineTemplates){_this94._reportError('Can\'t have multiple template bindings on one element. Use only one attribute named \'template\' or prefixed with *',attr.sourceSpan);}hasInlineTemplates=true;_this94._bindingParser.parseInlineTemplateBinding(prefixToken,templateBindingsSource,attr.sourceSpan,templateMatchableAttrs,templateElementOrDirectiveProps,templateElementVars);}if(!hasBinding&&!hasTemplateBinding){// don't include the bindings as attributes as well in the AST
attrs.push(_this94.visitAttribute(attr,null));matchableAttrs.push([attr.name,attr.value]);}});var/** @type {?} */elementCssSelector=createElementCssSelector(nodeName,matchableAttrs);var _parseDirectives2=this._parseDirectives(this.selectorMatcher,elementCssSelector),directiveMetas=_parseDirectives2.directives,matchElement=_parseDirectives2.matchElement;var/** @type {?} */references=[];var/** @type {?} */boundDirectivePropNames=new Set();var/** @type {?} */directiveAsts=this._createDirectiveAsts(isTemplateElement,element.name,directiveMetas,elementOrDirectiveProps,elementOrDirectiveRefs,element.sourceSpan,references,boundDirectivePropNames);var/** @type {?} */elementProps=this._createElementPropertyAsts(element.name,elementOrDirectiveProps,boundDirectivePropNames);var/** @type {?} */isViewRoot=parent.isTemplateElement||hasInlineTemplates;var/** @type {?} */providerContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,isViewRoot,directiveAsts,attrs,references,isTemplateElement,queryStartIndex,element.sourceSpan);var/** @type {?} */children=visitAll(preparsedElement.nonBindable?NON_BINDABLE_VISITOR:this,element.children,ElementContext.create(isTemplateElement,directiveAsts,isTemplateElement?parent.providerContext:providerContext));providerContext.afterElement();// Override the actual selector when the `ngProjectAs` attribute is provided
var/** @type {?} */projectionSelector=isPresent(preparsedElement.projectAs)?CssSelector.parse(preparsedElement.projectAs)[0]:elementCssSelector;var/** @type {?} */ngContentIndex=parent.findNgContentIndex(projectionSelector);var/** @type {?} */parsedElement=void 0;if(preparsedElement.type===PreparsedElementType.NG_CONTENT){if(element.children&&!element.children.every(_isEmptyTextNode)){this._reportError('<ng-content> element cannot have content.',element.sourceSpan);}parsedElement=new NgContentAst(this.ngContentCount++,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else if(isTemplateElement){this._assertAllEventsPublishedByDirectives(directiveAsts,events);this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts,elementProps,element.sourceSpan);parsedElement=new EmbeddedTemplateAst(attrs,events,references,elementVars,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else{this._assertElementExists(matchElement,element);this._assertOnlyOneComponent(directiveAsts,element.sourceSpan);var/** @type {?} */_ngContentIndex=hasInlineTemplates?null:parent.findNgContentIndex(projectionSelector);parsedElement=new ElementAst(nodeName,attrs,elementProps,events,references,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:_ngContentIndex,element.sourceSpan,element.endSourceSpan);this._findComponentDirectives(directiveAsts).forEach(function(componentDirectiveAst){return _this94._validateElementAnimationInputOutputs(componentDirectiveAst.hostProperties,componentDirectiveAst.hostEvents,componentDirectiveAst.directive.template);});var/** @type {?} */componentTemplate=providerContext.viewContext.component.template;this._validateElementAnimationInputOutputs(elementProps,events,componentTemplate.toSummary());}if(hasInlineTemplates){var/** @type {?} */templateQueryStartIndex=this.contentQueryStartId;var/** @type {?} */templateSelector=createElementCssSelector(TEMPLATE_ELEMENT,templateMatchableAttrs);var _parseDirectives3=this._parseDirectives(this.selectorMatcher,templateSelector),templateDirectiveMetas=_parseDirectives3.directives;var/** @type {?} */templateBoundDirectivePropNames=new Set();var/** @type {?} */templateDirectiveAsts=this._createDirectiveAsts(true,element.name,templateDirectiveMetas,templateElementOrDirectiveProps,[],element.sourceSpan,[],templateBoundDirectivePropNames);var/** @type {?} */templateElementProps=this._createElementPropertyAsts(element.name,templateElementOrDirectiveProps,templateBoundDirectivePropNames);this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts,templateElementProps,element.sourceSpan);var/** @type {?} */templateProviderContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,parent.isTemplateElement,templateDirectiveAsts,[],[],true,templateQueryStartIndex,element.sourceSpan);templateProviderContext.afterElement();parsedElement=new EmbeddedTemplateAst([],[],[],templateElementVars,templateProviderContext.transformedDirectiveAsts,templateProviderContext.transformProviders,templateProviderContext.transformedHasViewContainer,templateProviderContext.queryMatches,[parsedElement],ngContentIndex,element.sourceSpan);}return parsedElement;}/**
     * @param {?} inputs
     * @param {?} outputs
     * @param {?} template
     * @return {?}
     */},{key:'_validateElementAnimationInputOutputs',value:function _validateElementAnimationInputOutputs(inputs,outputs,template){var _this95=this;if(this.config.useViewEngine)return;var/** @type {?} */triggerLookup=new Set();template.animations.forEach(function(entry){triggerLookup.add(entry);});var/** @type {?} */animationInputs=inputs.filter(function(input){return input.isAnimation;});animationInputs.forEach(function(input){var/** @type {?} */name=input.name;if(!triggerLookup.has(name)){_this95._reportError('Couldn\'t find an animation entry for "'+name+'"',input.sourceSpan);}});outputs.forEach(function(output){if(output.isAnimation){var/** @type {?} */found=animationInputs.find(function(input){return input.name==output.name;});if(!found){_this95._reportError('Unable to listen on (@'+output.name+'.'+output.phase+') because the animation trigger [@'+output.name+'] isn\'t being used on the same element',output.sourceSpan);}}});}/**
     * @param {?} isTemplateElement
     * @param {?} attr
     * @param {?} targetMatchableAttrs
     * @param {?} targetProps
     * @param {?} targetEvents
     * @param {?} targetRefs
     * @param {?} targetVars
     * @return {?}
     */},{key:'_parseAttr',value:function _parseAttr(isTemplateElement,attr,targetMatchableAttrs,targetProps,targetEvents,targetRefs,targetVars){var/** @type {?} */name=this._normalizeAttributeName(attr.name);var/** @type {?} */value=attr.value;var/** @type {?} */srcSpan=attr.sourceSpan;var/** @type {?} */bindParts=name.match(BIND_NAME_REGEXP);var/** @type {?} */hasBinding=false;if(bindParts!==null){hasBinding=true;if(isPresent(bindParts[KW_BIND_IDX])){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[KW_LET_IDX]){if(isTemplateElement){var/** @type {?} */identifier=bindParts[IDENT_KW_IDX];this._parseVariable(identifier,value,srcSpan,targetVars);}else{this._reportError('"let-" is only supported on template elements.',srcSpan);}}else if(bindParts[KW_REF_IDX]){var/** @type {?} */_identifier=bindParts[IDENT_KW_IDX];this._parseReference(_identifier,value,srcSpan,targetRefs);}else if(bindParts[KW_ON_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}else if(bindParts[KW_BINDON_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_KW_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}else if(bindParts[KW_AT_IDX]){this._bindingParser.parseLiteralAttr(name,value,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_BANANA_BOX_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}else if(bindParts[IDENT_PROPERTY_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX],value,false,srcSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_EVENT_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX],value,srcSpan,targetMatchableAttrs,targetEvents);}}else{hasBinding=this._bindingParser.parsePropertyInterpolation(name,value,srcSpan,targetMatchableAttrs,targetProps);}if(!hasBinding){this._bindingParser.parseLiteralAttr(name,value,srcSpan,targetMatchableAttrs,targetProps);}return hasBinding;}/**
     * @param {?} attrName
     * @return {?}
     */},{key:'_normalizeAttributeName',value:function _normalizeAttributeName(attrName){return /^data-/i.test(attrName)?attrName.substring(5):attrName;}/**
     * @param {?} identifier
     * @param {?} value
     * @param {?} sourceSpan
     * @param {?} targetVars
     * @return {?}
     */},{key:'_parseVariable',value:function _parseVariable(identifier,value,sourceSpan,targetVars){if(identifier.indexOf('-')>-1){this._reportError('"-" is not allowed in variable names',sourceSpan);}targetVars.push(new VariableAst(identifier,value,sourceSpan));}/**
     * @param {?} identifier
     * @param {?} value
     * @param {?} sourceSpan
     * @param {?} targetRefs
     * @return {?}
     */},{key:'_parseReference',value:function _parseReference(identifier,value,sourceSpan,targetRefs){if(identifier.indexOf('-')>-1){this._reportError('"-" is not allowed in reference names',sourceSpan);}targetRefs.push(new ElementOrDirectiveRef(identifier,value,sourceSpan));}/**
     * @param {?} name
     * @param {?} expression
     * @param {?} sourceSpan
     * @param {?} targetMatchableAttrs
     * @param {?} targetEvents
     * @return {?}
     */},{key:'_parseAssignmentEvent',value:function _parseAssignmentEvent(name,expression,sourceSpan,targetMatchableAttrs,targetEvents){this._bindingParser.parseEvent(name+'Change',expression+'=$event',sourceSpan,targetMatchableAttrs,targetEvents);}/**
     * @param {?} selectorMatcher
     * @param {?} elementCssSelector
     * @return {?}
     */},{key:'_parseDirectives',value:function _parseDirectives(selectorMatcher,elementCssSelector){var _this96=this;// Need to sort the directives so that we get consistent results throughout,
// as selectorMatcher uses Maps inside.
// Also deduplicate directives as they might match more than one time!
var/** @type {?} */directives=new Array(this.directivesIndex.size);// Whether any directive selector matches on the element name
var/** @type {?} */matchElement=false;selectorMatcher.match(elementCssSelector,function(selector,directive){directives[_this96.directivesIndex.get(directive)]=directive;matchElement=matchElement||selector.hasElementSelector();});return{directives:directives.filter(function(dir){return!!dir;}),matchElement:matchElement};}/**
     * @param {?} isTemplateElement
     * @param {?} elementName
     * @param {?} directives
     * @param {?} props
     * @param {?} elementOrDirectiveRefs
     * @param {?} elementSourceSpan
     * @param {?} targetReferences
     * @param {?} targetBoundDirectivePropNames
     * @return {?}
     */},{key:'_createDirectiveAsts',value:function _createDirectiveAsts(isTemplateElement,elementName,directives,props,elementOrDirectiveRefs,elementSourceSpan,targetReferences,targetBoundDirectivePropNames){var _this97=this;var/** @type {?} */matchedReferences=new Set();var/** @type {?} */component=null;var/** @type {?} */directiveAsts=directives.map(function(directive){var/** @type {?} */sourceSpan=new ParseSourceSpan(elementSourceSpan.start,elementSourceSpan.end,'Directive '+identifierName(directive.type));if(directive.isComponent){component=directive;}var/** @type {?} */directiveProperties=[];var/** @type {?} */hostProperties=_this97._bindingParser.createDirectiveHostPropertyAsts(directive,_this97.config.useViewEngine?elementName:directive.selector,sourceSpan);// Note: We need to check the host properties here as well,
// as we don't know the element name in the DirectiveWrapperCompiler yet.
hostProperties=_this97._checkPropertiesInSchema(elementName,hostProperties);var/** @type {?} */hostEvents=_this97._bindingParser.createDirectiveHostEventAsts(directive,sourceSpan);_this97._createDirectivePropertyAsts(directive.inputs,props,directiveProperties,targetBoundDirectivePropNames);elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length===0&&directive.isComponent||directive.exportAs==elOrDirRef.value){targetReferences.push(new ReferenceAst(elOrDirRef.name,identifierToken(directive.type),elOrDirRef.sourceSpan));matchedReferences.add(elOrDirRef.name);}});var/** @type {?} */contentQueryStartId=_this97.contentQueryStartId;_this97.contentQueryStartId+=directive.queries.length;return new DirectiveAst(directive,directiveProperties,hostProperties,hostEvents,contentQueryStartId,sourceSpan);});elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length>0){if(!matchedReferences.has(elOrDirRef.name)){_this97._reportError('There is no directive with "exportAs" set to "'+elOrDirRef.value+'"',elOrDirRef.sourceSpan);}}else if(!component){var/** @type {?} */refToken=null;if(isTemplateElement){refToken=createIdentifierToken(Identifiers.TemplateRef);}targetReferences.push(new ReferenceAst(elOrDirRef.name,refToken,elOrDirRef.sourceSpan));}});return directiveAsts;}/**
     * @param {?} directiveProperties
     * @param {?} boundProps
     * @param {?} targetBoundDirectiveProps
     * @param {?} targetBoundDirectivePropNames
     * @return {?}
     */},{key:'_createDirectivePropertyAsts',value:function _createDirectivePropertyAsts(directiveProperties,boundProps,targetBoundDirectiveProps,targetBoundDirectivePropNames){if(directiveProperties){var/** @type {?} */boundPropsByName=new Map();boundProps.forEach(function(boundProp){var/** @type {?} */prevValue=boundPropsByName.get(boundProp.name);if(!prevValue||prevValue.isLiteral){// give [a]="b" a higher precedence than a="b" on the same element
boundPropsByName.set(boundProp.name,boundProp);}});Object.keys(directiveProperties).forEach(function(dirProp){var/** @type {?} */elProp=directiveProperties[dirProp];var/** @type {?} */boundProp=boundPropsByName.get(elProp);// Bindings are optional, so this binding only needs to be set up if an expression is given.
if(boundProp){targetBoundDirectivePropNames.add(boundProp.name);if(!isEmptyExpression(boundProp.expression)){targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp,boundProp.name,boundProp.expression,boundProp.sourceSpan));}}});}}/**
     * @param {?} elementName
     * @param {?} props
     * @param {?} boundDirectivePropNames
     * @return {?}
     */},{key:'_createElementPropertyAsts',value:function _createElementPropertyAsts(elementName,props,boundDirectivePropNames){var _this98=this;var/** @type {?} */boundElementProps=[];props.forEach(function(prop){if(!prop.isLiteral&&!boundDirectivePropNames.has(prop.name)){boundElementProps.push(_this98._bindingParser.createElementPropertyAst(elementName,prop));}});return this._checkPropertiesInSchema(elementName,boundElementProps);}/**
     * @param {?} directives
     * @return {?}
     */},{key:'_findComponentDirectives',value:function _findComponentDirectives(directives){return directives.filter(function(directive){return directive.directive.isComponent;});}/**
     * @param {?} directives
     * @return {?}
     */},{key:'_findComponentDirectiveNames',value:function _findComponentDirectiveNames(directives){return this._findComponentDirectives(directives).map(function(directive){return identifierName(directive.directive.type);});}/**
     * @param {?} directives
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_assertOnlyOneComponent',value:function _assertOnlyOneComponent(directives,sourceSpan){var/** @type {?} */componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>1){this._reportError('More than one component matched on this element.\n'+'Make sure that only one component\'s selector can match a given element.\n'+('Conflicting components: '+componentTypeNames.join(',')),sourceSpan);}}/**
     * Make sure that non-angular tags conform to the schemas.
     *
     * Note: An element is considered an angular tag when at least one directive selector matches the
     * tag name.
     *
     * @param {?} matchElement Whether any directive has matched on the tag name
     * @param {?} element the html element
     * @return {?}
     */},{key:'_assertElementExists',value:function _assertElementExists(matchElement,element){var/** @type {?} */elName=element.name.replace(/^:xhtml:/,'');if(!matchElement&&!this._schemaRegistry.hasElement(elName,this._schemas)){var/** @type {?} */errorMsg='\''+elName+'\' is not a known element:\n';errorMsg+='1. If \''+elName+'\' is an Angular component, then verify that it is part of this module.\n';if(elName.indexOf('-')>-1){errorMsg+='2. If \''+elName+'\' is a Web Component then add \'CUSTOM_ELEMENTS_SCHEMA\' to the \'@NgModule.schemas\' of this component to suppress this message.';}else{errorMsg+='2. To allow any element add \'NO_ERRORS_SCHEMA\' to the \'@NgModule.schemas\' of this component.';}this._reportError(errorMsg,element.sourceSpan);}}/**
     * @param {?} directives
     * @param {?} elementProps
     * @param {?} sourceSpan
     * @return {?}
     */},{key:'_assertNoComponentsNorElementBindingsOnTemplate',value:function _assertNoComponentsNorElementBindingsOnTemplate(directives,elementProps,sourceSpan){var _this99=this;var/** @type {?} */componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>0){this._reportError('Components on an embedded template: '+componentTypeNames.join(','),sourceSpan);}elementProps.forEach(function(prop){_this99._reportError('Property binding '+prop.name+' not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the "@NgModule.declarations".',sourceSpan);});}/**
     * @param {?} directives
     * @param {?} events
     * @return {?}
     */},{key:'_assertAllEventsPublishedByDirectives',value:function _assertAllEventsPublishedByDirectives(directives,events){var _this100=this;var/** @type {?} */allDirectiveEvents=new Set();directives.forEach(function(directive){Object.keys(directive.directive.outputs).forEach(function(k){var/** @type {?} */eventName=directive.directive.outputs[k];allDirectiveEvents.add(eventName);});});events.forEach(function(event){if(isPresent(event.target)||!allDirectiveEvents.has(event.name)){_this100._reportError('Event binding '+event.fullName+' not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the "@NgModule.declarations".',event.sourceSpan);}});}/**
     * @param {?} elementName
     * @param {?} boundProps
     * @return {?}
     */},{key:'_checkPropertiesInSchema',value:function _checkPropertiesInSchema(elementName,boundProps){var _this101=this;// Note: We can't filter out empty expressions before this method,
// as we still want to validate them!
return boundProps.filter(function(boundProp){if(boundProp.type===PropertyBindingType.Property&&!_this101._schemaRegistry.hasProperty(elementName,boundProp.name,_this101._schemas)){var/** @type {?} */errorMsg='Can\'t bind to \''+boundProp.name+'\' since it isn\'t a known property of \''+elementName+'\'.';if(elementName.startsWith('ng-')){errorMsg+='\n1. If \''+boundProp.name+'\' is an Angular directive, then add \'CommonModule\' to the \'@NgModule.imports\' of this component.'+'\n2. To allow any property add \'NO_ERRORS_SCHEMA\' to the \'@NgModule.schemas\' of this component.';}else if(elementName.indexOf('-')>-1){errorMsg+='\n1. If \''+elementName+'\' is an Angular component and it has \''+boundProp.name+'\' input, then verify that it is part of this module.'+('\n2. If \''+elementName+'\' is a Web Component then add \'CUSTOM_ELEMENTS_SCHEMA\' to the \'@NgModule.schemas\' of this component to suppress this message.')+'\n3. To allow any property add \'NO_ERRORS_SCHEMA\' to the \'@NgModule.schemas\' of this component.';}_this101._reportError(errorMsg,boundProp.sourceSpan);}return!isEmptyExpression(boundProp.value);});}/**
     * @param {?} message
     * @param {?} sourceSpan
     * @param {?=} level
     * @return {?}
     */},{key:'_reportError',value:function _reportError(message,sourceSpan){var level=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ParseErrorLevel.FATAL;this._targetErrors.push(new ParseError(sourceSpan,message,level));}}]);return TemplateParseVisitor;}();var NonBindableVisitor=function(){function NonBindableVisitor(){_classCallCheck(this,NonBindableVisitor);}_createClass(NonBindableVisitor,[{key:'visitElement',/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */value:function visitElement(ast,parent){var/** @type {?} */preparsedElement=preparseElement(ast);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE||preparsedElement.type===PreparsedElementType.STYLESHEET){// Skipping <script> for security reasons
// Skipping <style> and stylesheets as we already processed them
// in the StyleCompiler
return null;}var/** @type {?} */attrNameAndValues=ast.attrs.map(function(attr){return[attr.name,attr.value];});var/** @type {?} */selector=createElementCssSelector(ast.name,attrNameAndValues);var/** @type {?} */ngContentIndex=parent.findNgContentIndex(selector);var/** @type {?} */children=visitAll(this,ast.children,EMPTY_ELEMENT_CONTEXT);return new ElementAst(ast.name,visitAll(this,ast.attrs),[],[],[],[],[],false,[],children,ngContentIndex,ast.sourceSpan,ast.endSourceSpan);}/**
     * @param {?} comment
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(comment,context){return null;}/**
     * @param {?} attribute
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);}/**
     * @param {?} text
     * @param {?} parent
     * @return {?}
     */},{key:'visitText',value:function visitText(text,parent){var/** @type {?} */ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR);return new TextAst(text.value,ngContentIndex,text.sourceSpan);}/**
     * @param {?} expansion
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(expansion,context){return expansion;}/**
     * @param {?} expansionCase
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(expansionCase,context){return expansionCase;}}]);return NonBindableVisitor;}();var ElementOrDirectiveRef=/**
     * @param {?} name
     * @param {?} value
     * @param {?} sourceSpan
     */function ElementOrDirectiveRef(name,value,sourceSpan){_classCallCheck(this,ElementOrDirectiveRef);this.name=name;this.value=value;this.sourceSpan=sourceSpan;};/**
 * @param {?} classAttrValue
 * @return {?}
 */function splitClasses(classAttrValue){return classAttrValue.trim().split(/\s+/g);}var ElementContext=function(){/**
     * @param {?} isTemplateElement
     * @param {?} _ngContentIndexMatcher
     * @param {?} _wildcardNgContentIndex
     * @param {?} providerContext
     */function ElementContext(isTemplateElement,_ngContentIndexMatcher,_wildcardNgContentIndex,providerContext){_classCallCheck(this,ElementContext);this.isTemplateElement=isTemplateElement;this._ngContentIndexMatcher=_ngContentIndexMatcher;this._wildcardNgContentIndex=_wildcardNgContentIndex;this.providerContext=providerContext;}/**
     * @param {?} isTemplateElement
     * @param {?} directives
     * @param {?} providerContext
     * @return {?}
     */_createClass(ElementContext,[{key:'findNgContentIndex',/**
     * @param {?} selector
     * @return {?}
     */value:function findNgContentIndex(selector){var/** @type {?} */ngContentIndices=[];this._ngContentIndexMatcher.match(selector,function(selector,ngContentIndex){ngContentIndices.push(ngContentIndex);});ngContentIndices.sort();if(isPresent(this._wildcardNgContentIndex)){ngContentIndices.push(this._wildcardNgContentIndex);}return ngContentIndices.length>0?ngContentIndices[0]:null;}}],[{key:'create',value:function create(isTemplateElement,directives,providerContext){var/** @type {?} */matcher=new SelectorMatcher();var/** @type {?} */wildcardNgContentIndex=null;var/** @type {?} */component=directives.find(function(directive){return directive.directive.isComponent;});if(component){var/** @type {?} */ngContentSelectors=component.directive.template.ngContentSelectors;for(var/** @type {?} */i=0;i<ngContentSelectors.length;i++){var/** @type {?} */selector=ngContentSelectors[i];if(selector==='*'){wildcardNgContentIndex=i;}else{matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]),i);}}}return new ElementContext(isTemplateElement,matcher,wildcardNgContentIndex,providerContext);}}]);return ElementContext;}();/**
 * @param {?} elementName
 * @param {?} attributes
 * @return {?}
 */function createElementCssSelector(elementName,attributes){var/** @type {?} */cssSelector=new CssSelector();var/** @type {?} */elNameNoNs=splitNsName(elementName)[1];cssSelector.setElement(elNameNoNs);for(var/** @type {?} */i=0;i<attributes.length;i++){var/** @type {?} */attrName=attributes[i][0];var/** @type {?} */attrNameNoNs=splitNsName(attrName)[1];var/** @type {?} */attrValue=attributes[i][1];cssSelector.addAttribute(attrNameNoNs,attrValue);if(attrName.toLowerCase()==CLASS_ATTR){var/** @type {?} */classes=splitClasses(attrValue);classes.forEach(function(className){return cssSelector.addClassName(className);});}}return cssSelector;}var/** @type {?} */EMPTY_ELEMENT_CONTEXT=new ElementContext(true,new SelectorMatcher(),null,null);var/** @type {?} */NON_BINDABLE_VISITOR=new NonBindableVisitor();/**
 * @param {?} node
 * @return {?}
 */function _isEmptyTextNode(node){return node instanceof Text&&node.value.trim().length==0;}/**
 * @param {?} items
 * @return {?}
 */function removeSummaryDuplicates(items){var/** @type {?} */map=new Map();items.forEach(function(item){if(!map.get(item.type.reference)){map.set(item.type.reference,item);}});return Array.from(map.values());}/**
 * @param {?} ast
 * @return {?}
 */function isEmptyExpression(ast){if(ast instanceof ASTWithSource){ast=ast.ast;}return ast instanceof EmptyExpr;}/**
 * @param {?} el
 * @param {?} enableLegacyTemplate
 * @param {?} reportDeprecation
 * @return {?}
 */function isTemplate(el,enableLegacyTemplate,reportDeprecation){var/** @type {?} */tagNoNs=splitNsName(el.name)[1];// `<ng-template>` is an angular construct and is lower case
if(tagNoNs===NG_TEMPLATE_ELEMENT)return true;// `<template>` is HTML and case insensitive
if(tagNoNs.toLowerCase()===TEMPLATE_ELEMENT){if(enableLegacyTemplate&&tagNoNs.toLowerCase()===TEMPLATE_ELEMENT){reportDeprecation('The <template> element is deprecated. Use <ng-template> instead',el.sourceSpan);return true;}return false;}}/**
 * @abstract
 */var AnimationAst=function(){function AnimationAst(){_classCallCheck(this,AnimationAst);this.startTime=0;this.playTime=0;}/**
     * @abstract
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationAst,[{key:'visit',value:function visit(visitor,context){}}]);return AnimationAst;}();/**
 * @abstract
 */var AnimationStateAst=function(_AnimationAst){_inherits(AnimationStateAst,_AnimationAst);function AnimationStateAst(){_classCallCheck(this,AnimationStateAst);return _possibleConstructorReturn(this,(AnimationStateAst.__proto__||Object.getPrototypeOf(AnimationStateAst)).apply(this,arguments));}_createClass(AnimationStateAst,[{key:'visit',/**
     * @abstract
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */value:function visit(visitor,context){}}]);return AnimationStateAst;}(AnimationAst);var AnimationEntryAst=function(_AnimationAst2){_inherits(AnimationEntryAst,_AnimationAst2);/**
     * @param {?} name
     * @param {?} stateDeclarations
     * @param {?} stateTransitions
     */function AnimationEntryAst(name,stateDeclarations,stateTransitions){_classCallCheck(this,AnimationEntryAst);var _this103=_possibleConstructorReturn(this,(AnimationEntryAst.__proto__||Object.getPrototypeOf(AnimationEntryAst)).call(this));_this103.name=name;_this103.stateDeclarations=stateDeclarations;_this103.stateTransitions=stateTransitions;return _this103;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationEntryAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationEntry(this,context);}}]);return AnimationEntryAst;}(AnimationAst);var AnimationStateDeclarationAst=function(_AnimationStateAst){_inherits(AnimationStateDeclarationAst,_AnimationStateAst);/**
     * @param {?} stateName
     * @param {?} styles
     */function AnimationStateDeclarationAst(stateName,styles){_classCallCheck(this,AnimationStateDeclarationAst);var _this104=_possibleConstructorReturn(this,(AnimationStateDeclarationAst.__proto__||Object.getPrototypeOf(AnimationStateDeclarationAst)).call(this));_this104.stateName=stateName;_this104.styles=styles;return _this104;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationStateDeclarationAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationStateDeclaration(this,context);}}]);return AnimationStateDeclarationAst;}(AnimationStateAst);var AnimationStateTransitionExpression=/**
     * @param {?} fromState
     * @param {?} toState
     */function AnimationStateTransitionExpression(fromState,toState){_classCallCheck(this,AnimationStateTransitionExpression);this.fromState=fromState;this.toState=toState;};var AnimationStateTransitionFnExpression=function(_AnimationStateTransi){_inherits(AnimationStateTransitionFnExpression,_AnimationStateTransi);/**
     * @param {?} fn
     */function AnimationStateTransitionFnExpression(fn){_classCallCheck(this,AnimationStateTransitionFnExpression);var _this105=_possibleConstructorReturn(this,(AnimationStateTransitionFnExpression.__proto__||Object.getPrototypeOf(AnimationStateTransitionFnExpression)).call(this,null,null));_this105.fn=fn;return _this105;}return AnimationStateTransitionFnExpression;}(AnimationStateTransitionExpression);var AnimationStateTransitionAst=function(_AnimationStateAst2){_inherits(AnimationStateTransitionAst,_AnimationStateAst2);/**
     * @param {?} stateChanges
     * @param {?} animation
     */function AnimationStateTransitionAst(stateChanges,animation){_classCallCheck(this,AnimationStateTransitionAst);var _this106=_possibleConstructorReturn(this,(AnimationStateTransitionAst.__proto__||Object.getPrototypeOf(AnimationStateTransitionAst)).call(this));_this106.stateChanges=stateChanges;_this106.animation=animation;return _this106;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationStateTransitionAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationStateTransition(this,context);}}]);return AnimationStateTransitionAst;}(AnimationStateAst);var AnimationStepAst=function(_AnimationAst3){_inherits(AnimationStepAst,_AnimationAst3);/**
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     */function AnimationStepAst(startingStyles,keyframes,duration,delay,easing){_classCallCheck(this,AnimationStepAst);var _this107=_possibleConstructorReturn(this,(AnimationStepAst.__proto__||Object.getPrototypeOf(AnimationStepAst)).call(this));_this107.startingStyles=startingStyles;_this107.keyframes=keyframes;_this107.duration=duration;_this107.delay=delay;_this107.easing=easing;return _this107;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationStepAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationStep(this,context);}}]);return AnimationStepAst;}(AnimationAst);var AnimationStylesAst=function(_AnimationAst4){_inherits(AnimationStylesAst,_AnimationAst4);/**
     * @param {?} styles
     */function AnimationStylesAst(styles){_classCallCheck(this,AnimationStylesAst);var _this108=_possibleConstructorReturn(this,(AnimationStylesAst.__proto__||Object.getPrototypeOf(AnimationStylesAst)).call(this));_this108.styles=styles;return _this108;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationStylesAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationStyles(this,context);}}]);return AnimationStylesAst;}(AnimationAst);var AnimationKeyframeAst=function(_AnimationAst5){_inherits(AnimationKeyframeAst,_AnimationAst5);/**
     * @param {?} offset
     * @param {?} styles
     */function AnimationKeyframeAst(offset,styles){_classCallCheck(this,AnimationKeyframeAst);var _this109=_possibleConstructorReturn(this,(AnimationKeyframeAst.__proto__||Object.getPrototypeOf(AnimationKeyframeAst)).call(this));_this109.offset=offset;_this109.styles=styles;return _this109;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationKeyframeAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationKeyframe(this,context);}}]);return AnimationKeyframeAst;}(AnimationAst);/**
 * @abstract
 */var AnimationWithStepsAst=function(_AnimationAst6){_inherits(AnimationWithStepsAst,_AnimationAst6);/**
     * @param {?} steps
     */function AnimationWithStepsAst(steps){_classCallCheck(this,AnimationWithStepsAst);var _this110=_possibleConstructorReturn(this,(AnimationWithStepsAst.__proto__||Object.getPrototypeOf(AnimationWithStepsAst)).call(this));_this110.steps=steps;return _this110;}return AnimationWithStepsAst;}(AnimationAst);var AnimationGroupAst=function(_AnimationWithStepsAs){_inherits(AnimationGroupAst,_AnimationWithStepsAs);/**
     * @param {?} steps
     */function AnimationGroupAst(steps){_classCallCheck(this,AnimationGroupAst);return _possibleConstructorReturn(this,(AnimationGroupAst.__proto__||Object.getPrototypeOf(AnimationGroupAst)).call(this,steps));}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationGroupAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationGroup(this,context);}}]);return AnimationGroupAst;}(AnimationWithStepsAst);var AnimationSequenceAst=function(_AnimationWithStepsAs2){_inherits(AnimationSequenceAst,_AnimationWithStepsAs2);/**
     * @param {?} steps
     */function AnimationSequenceAst(steps){_classCallCheck(this,AnimationSequenceAst);return _possibleConstructorReturn(this,(AnimationSequenceAst.__proto__||Object.getPrototypeOf(AnimationSequenceAst)).call(this,steps));}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(AnimationSequenceAst,[{key:'visit',value:function visit(visitor,context){return visitor.visitAnimationSequence(this,context);}}]);return AnimationSequenceAst;}(AnimationWithStepsAst);var StylesCollectionEntry=function(){/**
     * @param {?} time
     * @param {?} value
     */function StylesCollectionEntry(time,value){_classCallCheck(this,StylesCollectionEntry);this.time=time;this.value=value;}/**
     * @param {?} time
     * @param {?} value
     * @return {?}
     */_createClass(StylesCollectionEntry,[{key:'matches',value:function matches(time,value){return time==this.time&&value==this.value;}}]);return StylesCollectionEntry;}();var StylesCollection=function(){function StylesCollection(){_classCallCheck(this,StylesCollection);this.styles={};}/**
     * @param {?} property
     * @param {?} time
     * @param {?} value
     * @return {?}
     */_createClass(StylesCollection,[{key:'insertAtTime',value:function insertAtTime(property,time,value){var/** @type {?} */tuple=new StylesCollectionEntry(time,value);var/** @type {?} */entries=this.styles[property];if(!isPresent(entries)){entries=this.styles[property]=[];}// insert this at the right stop in the array
// this way we can keep it sorted
var/** @type {?} */insertionIndex=0;for(var/** @type {?} */i=entries.length-1;i>=0;i--){if(entries[i].time<=time){insertionIndex=i+1;break;}}entries.splice(insertionIndex,0,tuple);}/**
     * @param {?} property
     * @param {?} index
     * @return {?}
     */},{key:'getByIndex',value:function getByIndex(property,index){var/** @type {?} */items=this.styles[property];if(isPresent(items)){return index>=items.length?null:items[index];}return null;}/**
     * @param {?} property
     * @param {?} time
     * @return {?}
     */},{key:'indexOfAtOrBeforeTime',value:function indexOfAtOrBeforeTime(property,time){var/** @type {?} */entries=this.styles[property];if(isPresent(entries)){for(var/** @type {?} */i=entries.length-1;i>=0;i--){if(entries[i].time<=time)return i;}}return null;}}]);return StylesCollection;}();var/** @type {?} */_INITIAL_KEYFRAME=0;var/** @type {?} */_TERMINAL_KEYFRAME=1;var/** @type {?} */_ONE_SECOND=1000;var AnimationParseError=function(_ParseError7){_inherits(AnimationParseError,_ParseError7);/**
     * @param {?} message
     */function AnimationParseError(message){_classCallCheck(this,AnimationParseError);return _possibleConstructorReturn(this,(AnimationParseError.__proto__||Object.getPrototypeOf(AnimationParseError)).call(this,null,message));}/**
     * @return {?}
     */_createClass(AnimationParseError,[{key:'toString',value:function toString(){return''+this.msg;}}]);return AnimationParseError;}(ParseError);var AnimationEntryParseResult=/**
     * @param {?} ast
     * @param {?} errors
     */function AnimationEntryParseResult(ast,errors){_classCallCheck(this,AnimationEntryParseResult);this.ast=ast;this.errors=errors;};var AnimationParser=function(){/**
     * @param {?} _schema
     */function AnimationParser(_schema){_classCallCheck(this,AnimationParser);this._schema=_schema;}/**
     * @param {?} component
     * @return {?}
     */_createClass(AnimationParser,[{key:'parseComponent',value:function parseComponent(component){var _this114=this;var/** @type {?} */errors=[];var/** @type {?} */componentName=identifierName(component.type);var/** @type {?} */animationTriggerNames=new Set();var/** @type {?} */asts=component.template.animations.map(function(entry){var/** @type {?} */result=_this114.parseEntry(entry);var/** @type {?} */ast=result.ast;var/** @type {?} */triggerName=ast.name;if(animationTriggerNames.has(triggerName)){result.errors.push(new AnimationParseError('The animation trigger "'+triggerName+'" has already been registered for the '+componentName+' component'));}else{animationTriggerNames.add(triggerName);}if(result.errors.length>0){var/** @type {?} */errorMessage='- Unable to parse the animation sequence for "'+triggerName+'" on the '+componentName+' component due to the following errors:';result.errors.forEach(function(error){errorMessage+='\n-- '+error.msg;});errors.push(errorMessage);}return ast;});if(errors.length>0){var/** @type {?} */errorString=errors.join('\n');throw new Error('Animation parse errors:\n'+errorString);}return asts;}/**
     * @param {?} entry
     * @return {?}
     */},{key:'parseEntry',value:function parseEntry(entry){var _this115=this;var/** @type {?} */errors=[];var/** @type {?} */stateStyles={};var/** @type {?} */transitions=[];var/** @type {?} */stateDeclarationAsts=[];entry.definitions.forEach(function(def){if(def instanceof CompileAnimationStateDeclarationMetadata){_parseAnimationDeclarationStates(def,_this115._schema,errors).forEach(function(ast){stateDeclarationAsts.push(ast);stateStyles[ast.stateName]=ast.styles;});}else{transitions.push(/** @type {?} */def);}});var/** @type {?} */stateTransitionAsts=transitions.map(function(transDef){return _parseAnimationStateTransition(transDef,stateStyles,_this115._schema,errors);});var/** @type {?} */ast=new AnimationEntryAst(entry.name,stateDeclarationAsts,stateTransitionAsts);return new AnimationEntryParseResult(ast,errors);}}]);return AnimationParser;}();AnimationParser.decorators=[{type:CompilerInjectable}];/** @nocollapse */AnimationParser.ctorParameters=function(){return[{type:ElementSchemaRegistry}];};/**
 * @param {?} stateMetadata
 * @param {?} schema
 * @param {?} errors
 * @return {?}
 */function _parseAnimationDeclarationStates(stateMetadata,schema,errors){var/** @type {?} */normalizedStyles=_normalizeStyleMetadata(stateMetadata.styles,{},schema,errors,false);var/** @type {?} */defStyles=new AnimationStylesAst(normalizedStyles);var/** @type {?} */states=stateMetadata.stateNameExpr.split(/\s*,\s*/);return states.map(function(state){return new AnimationStateDeclarationAst(state,defStyles);});}/**
 * @param {?} transitionStateMetadata
 * @param {?} stateStyles
 * @param {?} schema
 * @param {?} errors
 * @return {?}
 */function _parseAnimationStateTransition(transitionStateMetadata,stateStyles,schema,errors){var/** @type {?} */styles=new StylesCollection();var/** @type {?} */transitionExprs=[];var/** @type {?} */stateChangeExpr=transitionStateMetadata.stateChangeExpr;var/** @type {?} */transitionStates=typeof stateChangeExpr=='string'?stateChangeExpr.split(/\s*,\s*/):[/** @type {?} */stateChangeExpr];transitionStates.forEach(function(expr){return transitionExprs.push.apply(transitionExprs,_toConsumableArray(_parseAnimationTransitionExpr(expr,errors)));});var/** @type {?} */entry=_normalizeAnimationEntry(transitionStateMetadata.steps);var/** @type {?} */animation=_normalizeStyleSteps(entry,stateStyles,schema,errors);var/** @type {?} */animationAst=_parseTransitionAnimation(animation,0,styles,stateStyles,errors);if(errors.length==0){_fillAnimationAstStartingKeyframes(animationAst,styles,errors);}var/** @type {?} */stepsAst=animationAst instanceof AnimationWithStepsAst?animationAst:new AnimationSequenceAst([animationAst]);return new AnimationStateTransitionAst(transitionExprs,stepsAst);}/**
 * @param {?} alias
 * @param {?} errors
 * @return {?}
 */function _parseAnimationAlias(alias,errors){switch(alias){case':enter':return'void => *';case':leave':return'* => void';default:errors.push(new AnimationParseError('the transition alias value "'+alias+'" is not supported'));return'* => *';}}/**
 * @param {?} transitionValue
 * @param {?} errors
 * @return {?}
 */function _parseAnimationTransitionExpr(transitionValue,errors){var/** @type {?} */expressions=[];if(typeof transitionValue=='string'){var/** @type {?} */eventStr=transitionValue;if(eventStr[0]==':'){eventStr=_parseAnimationAlias(eventStr,errors);}var/** @type {?} */match=eventStr.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);if(!isPresent(match)||match.length<4){errors.push(new AnimationParseError('the provided '+eventStr+' is not of a supported format'));return expressions;}var/** @type {?} */fromState=match[1];var/** @type {?} */separator=match[2];var/** @type {?} */toState=match[3];expressions.push(new AnimationStateTransitionExpression(fromState,toState));var/** @type {?} */isFullAnyStateExpr=fromState==__WEBPACK_IMPORTED_MODULE_0__angular_core__["_102" /* ɵANY_STATE */]&&toState==__WEBPACK_IMPORTED_MODULE_0__angular_core__["_102" /* ɵANY_STATE */];if(separator[0]=='<'&&!isFullAnyStateExpr){expressions.push(new AnimationStateTransitionExpression(toState,fromState));}}else{expressions.push(new AnimationStateTransitionFnExpression(/** @type {?} */transitionValue));}return expressions;}/**
 * @param {?} entry
 * @return {?}
 */function _normalizeAnimationEntry(entry){return Array.isArray(entry)?new CompileAnimationSequenceMetadata(entry):entry;}/**
 * @param {?} entry
 * @param {?} stateStyles
 * @param {?} schema
 * @param {?} errors
 * @param {?} permitStateReferences
 * @return {?}
 */function _normalizeStyleMetadata(entry,stateStyles,schema,errors,permitStateReferences){var/** @type {?} */offset=entry.offset;if(offset>1||offset<0){errors.push(new AnimationParseError('Offset values for animations must be between 0 and 1'));}var/** @type {?} */normalizedStyles=[];entry.styles.forEach(function(styleEntry){if(typeof styleEntry==='string'){if(permitStateReferences){normalizedStyles.push.apply(normalizedStyles,_toConsumableArray(_resolveStylesFromState(/** @type {?} */styleEntry,stateStyles,errors)));}else{errors.push(new AnimationParseError('State based animations cannot contain references to other states'));}}else{var/** @type {?} */stylesObj=styleEntry;var/** @type {?} */normalizedStylesObj={};Object.keys(stylesObj).forEach(function(propName){var/** @type {?} */normalizedProp=schema.normalizeAnimationStyleProperty(propName);var/** @type {?} */normalizedOutput=schema.normalizeAnimationStyleValue(normalizedProp,propName,stylesObj[propName]);var/** @type {?} */normalizationError=normalizedOutput['error'];if(normalizationError){errors.push(new AnimationParseError(normalizationError));}normalizedStylesObj[normalizedProp]=normalizedOutput['value'];});normalizedStyles.push(normalizedStylesObj);}});return normalizedStyles;}/**
 * @param {?} entry
 * @param {?} stateStyles
 * @param {?} schema
 * @param {?} errors
 * @return {?}
 */function _normalizeStyleSteps(entry,stateStyles,schema,errors){var/** @type {?} */steps=_normalizeStyleStepEntry(entry,stateStyles,schema,errors);return entry instanceof CompileAnimationGroupMetadata?new CompileAnimationGroupMetadata(steps):new CompileAnimationSequenceMetadata(steps);}/**
 * @param {?} stylesList
 * @param {?} newItem
 * @return {?}
 */function _mergeAnimationStyles(stylesList,newItem){if((typeof newItem==='undefined'?'undefined':_typeof(newItem))==='object'&&newItem!==null&&stylesList.length>0){var/** @type {?} */lastIndex=stylesList.length-1;var/** @type {?} */lastItem=stylesList[lastIndex];if((typeof lastItem==='undefined'?'undefined':_typeof(lastItem))==='object'&&lastItem!==null){stylesList[lastIndex]=StringMapWrapper.merge(/** @type {?} */lastItem,/** @type {?} */newItem);return;}}stylesList.push(newItem);}/**
 * @param {?} entry
 * @param {?} stateStyles
 * @param {?} schema
 * @param {?} errors
 * @return {?}
 */function _normalizeStyleStepEntry(entry,stateStyles,schema,errors){var/** @type {?} */steps=void 0;if(entry instanceof CompileAnimationWithStepsMetadata){steps=entry.steps;}else{return[entry];}var/** @type {?} */newSteps=[];var/** @type {?} */combinedStyles=void 0;steps.forEach(function(step){if(step instanceof CompileAnimationStyleMetadata){// this occurs when a style step is followed by a previous style step
// or when the first style step is run. We want to concatenate all subsequent
// style steps together into a single style step such that we have the correct
// starting keyframe data to pass into the animation player.
if(!isPresent(combinedStyles)){combinedStyles=[];}_normalizeStyleMetadata(/** @type {?} */step,stateStyles,schema,errors,true).forEach(function(entry){_mergeAnimationStyles(combinedStyles,entry);});}else{// it is important that we create a metadata entry of the combined styles
// before we go on an process the animate, sequence or group metadata steps.
// This will ensure that the AST will have the previous styles painted on
// screen before any further animations that use the styles take place.
if(isPresent(combinedStyles)){newSteps.push(new CompileAnimationStyleMetadata(0,combinedStyles));combinedStyles=null;}if(step instanceof CompileAnimationAnimateMetadata){// we do not recurse into CompileAnimationAnimateMetadata since
// those style steps are not going to be squashed
var/** @type {?} */animateStyleValue=step.styles;if(animateStyleValue instanceof CompileAnimationStyleMetadata){animateStyleValue.styles=_normalizeStyleMetadata(animateStyleValue,stateStyles,schema,errors,true);}else if(animateStyleValue instanceof CompileAnimationKeyframesSequenceMetadata){animateStyleValue.steps.forEach(function(step){step.styles=_normalizeStyleMetadata(step,stateStyles,schema,errors,true);});}}else if(step instanceof CompileAnimationWithStepsMetadata){var/** @type {?} */innerSteps=_normalizeStyleStepEntry(step,stateStyles,schema,errors);step=step instanceof CompileAnimationGroupMetadata?new CompileAnimationGroupMetadata(innerSteps):new CompileAnimationSequenceMetadata(innerSteps);}newSteps.push(step);}});// this happens when only styles were animated within the sequence
if(isPresent(combinedStyles)){newSteps.push(new CompileAnimationStyleMetadata(0,combinedStyles));}return newSteps;}/**
 * @param {?} stateName
 * @param {?} stateStyles
 * @param {?} errors
 * @return {?}
 */function _resolveStylesFromState(stateName,stateStyles,errors){var/** @type {?} */styles=[];if(stateName[0]!=':'){errors.push(new AnimationParseError('Animation states via styles must be prefixed with a ":"'));}else{var/** @type {?} */normalizedStateName=stateName.substring(1);var/** @type {?} */value=stateStyles[normalizedStateName];if(!isPresent(value)){errors.push(new AnimationParseError('Unable to apply styles due to missing a state: "'+normalizedStateName+'"'));}else{value.styles.forEach(function(stylesEntry){if((typeof stylesEntry==='undefined'?'undefined':_typeof(stylesEntry))==='object'&&stylesEntry!==null){styles.push(/** @type {?} */stylesEntry);}});}}return styles;}var _AnimationTimings=/**
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     */function _AnimationTimings(duration,delay,easing){_classCallCheck(this,_AnimationTimings);this.duration=duration;this.delay=delay;this.easing=easing;};/**
 * @param {?} keyframeSequence
 * @param {?} currentTime
 * @param {?} collectedStyles
 * @param {?} stateStyles
 * @param {?} errors
 * @return {?}
 */function _parseAnimationKeyframes(keyframeSequence,currentTime,collectedStyles,stateStyles,errors){var/** @type {?} */totalEntries=keyframeSequence.steps.length;var/** @type {?} */totalOffsets=0;keyframeSequence.steps.forEach(function(step){return totalOffsets+=isPresent(step.offset)?1:0;});if(totalOffsets>0&&totalOffsets<totalEntries){errors.push(new AnimationParseError('Not all style() entries contain an offset for the provided keyframe()'));totalOffsets=totalEntries;}var/** @type {?} */limit=totalEntries-1;var/** @type {?} */margin=totalOffsets==0?1/limit:0;var/** @type {?} */rawKeyframes=[];var/** @type {?} */index=0;var/** @type {?} */doSortKeyframes=false;var/** @type {?} */lastOffset=0;keyframeSequence.steps.forEach(function(styleMetadata){var/** @type {?} */offset=styleMetadata.offset;var/** @type {?} */keyframeStyles={};styleMetadata.styles.forEach(function(entry){Object.keys(entry).forEach(function(prop){if(prop!='offset'){keyframeStyles[prop]=entry[prop];}});});if(isPresent(offset)){doSortKeyframes=doSortKeyframes||offset<lastOffset;}else{offset=index==limit?_TERMINAL_KEYFRAME:margin*index;}rawKeyframes.push([offset,keyframeStyles]);lastOffset=offset;index++;});if(doSortKeyframes){rawKeyframes.sort(function(a,b){return a[0]<=b[0]?-1:1;});}var/** @type {?} */firstKeyframe=rawKeyframes[0];if(firstKeyframe[0]!=_INITIAL_KEYFRAME){rawKeyframes.splice(0,0,firstKeyframe=[_INITIAL_KEYFRAME,{}]);}var/** @type {?} */firstKeyframeStyles=firstKeyframe[1];limit=rawKeyframes.length-1;var/** @type {?} */lastKeyframe=rawKeyframes[limit];if(lastKeyframe[0]!=_TERMINAL_KEYFRAME){rawKeyframes.push(lastKeyframe=[_TERMINAL_KEYFRAME,{}]);limit++;}var/** @type {?} */lastKeyframeStyles=lastKeyframe[1];for(var/** @type {?} */i=1;i<=limit;i++){var/** @type {?} */entry=rawKeyframes[i];var/** @type {?} */styles=entry[1];Object.keys(styles).forEach(function(prop){if(!isPresent(firstKeyframeStyles[prop])){firstKeyframeStyles[prop]=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_103" /* ɵFILL_STYLE_FLAG */];}});}var _loop=function _loop(_i5){var/** @type {?} */entry=rawKeyframes[_i5];var/** @type {?} */styles=entry[1];Object.keys(styles).forEach(function(prop){if(!isPresent(lastKeyframeStyles[prop])){lastKeyframeStyles[prop]=styles[prop];}});};for(var/** @type {?} */_i5=limit-1;_i5>=0;_i5--){_loop(_i5);}return rawKeyframes.map(function(entry){return new AnimationKeyframeAst(entry[0],new AnimationStylesAst([entry[1]]));});}/**
 * @param {?} entry
 * @param {?} currentTime
 * @param {?} collectedStyles
 * @param {?} stateStyles
 * @param {?} errors
 * @return {?}
 */function _parseTransitionAnimation(entry,currentTime,collectedStyles,stateStyles,errors){var/** @type {?} */ast=void 0/** TODO #9100 */;var/** @type {?} */playTime=0;var/** @type {?} */startingTime=currentTime;if(entry instanceof CompileAnimationWithStepsMetadata){var/** @type {?} */maxDuration=0;var/** @type {?} */steps=[];var/** @type {?} */isGroup=entry instanceof CompileAnimationGroupMetadata;var/** @type {?} */previousStyles=void 0/** TODO #9100 */;entry.steps.forEach(function(entry){// these will get picked up by the next step...
var/** @type {?} */time=isGroup?startingTime:currentTime;if(entry instanceof CompileAnimationStyleMetadata){entry.styles.forEach(function(stylesEntry){// by this point we know that we only have stringmap values
var/** @type {?} */map=stylesEntry;Object.keys(map).forEach(function(prop){collectedStyles.insertAtTime(prop,time,map[prop]);});});previousStyles=entry.styles;return;}var/** @type {?} */innerAst=_parseTransitionAnimation(entry,time,collectedStyles,stateStyles,errors);if(isPresent(previousStyles)){if(entry instanceof CompileAnimationWithStepsMetadata){var/** @type {?} */startingStyles=new AnimationStylesAst(previousStyles);steps.push(new AnimationStepAst(startingStyles,[],0,0,''));}else{var _innerStep$startingSt;var/** @type {?} */innerStep=innerAst;(_innerStep$startingSt=innerStep.startingStyles.styles).push.apply(_innerStep$startingSt,_toConsumableArray(previousStyles));}previousStyles=null;}var/** @type {?} */astDuration=innerAst.playTime;currentTime+=astDuration;playTime+=astDuration;maxDuration=Math.max(astDuration,maxDuration);steps.push(innerAst);});if(isPresent(previousStyles)){var/** @type {?} */startingStyles=new AnimationStylesAst(previousStyles);steps.push(new AnimationStepAst(startingStyles,[],0,0,''));}if(isGroup){ast=new AnimationGroupAst(steps);playTime=maxDuration;currentTime=startingTime+playTime;}else{ast=new AnimationSequenceAst(steps);}}else if(entry instanceof CompileAnimationAnimateMetadata){var/** @type {?} */timings=_parseTimeExpression(entry.timings,errors);var/** @type {?} */styles=entry.styles;var/** @type {?} */_keyframes=void 0/** TODO #9100 */;if(styles instanceof CompileAnimationKeyframesSequenceMetadata){_keyframes=_parseAnimationKeyframes(styles,currentTime,collectedStyles,stateStyles,errors);}else{var/** @type {?} */styleData=styles;var/** @type {?} */offset=_TERMINAL_KEYFRAME;var/** @type {?} */styleAst=new AnimationStylesAst(/** @type {?} */styleData.styles);var/** @type {?} */keyframe=new AnimationKeyframeAst(offset,styleAst);_keyframes=[keyframe];}ast=new AnimationStepAst(new AnimationStylesAst([]),_keyframes,timings.duration,timings.delay,timings.easing);playTime=timings.duration+timings.delay;currentTime+=playTime;_keyframes.forEach(function(keyframe/** TODO #9100 */){return keyframe.styles.styles.forEach(function(entry/** TODO #9100 */){return Object.keys(entry).forEach(function(prop){collectedStyles.insertAtTime(prop,currentTime,entry[prop]);});});});}else{// if the code reaches this stage then an error
// has already been populated within the _normalizeStyleSteps()
// operation...
ast=new AnimationStepAst(null,[],0,0,'');}ast.playTime=playTime;ast.startTime=startingTime;return ast;}/**
 * @param {?} ast
 * @param {?} collectedStyles
 * @param {?} errors
 * @return {?}
 */function _fillAnimationAstStartingKeyframes(ast,collectedStyles,errors){// steps that only contain style will not be filled
if(ast instanceof AnimationStepAst&&ast.keyframes.length>0){var/** @type {?} */_keyframes2=ast.keyframes;if(_keyframes2.length==1){var/** @type {?} */endKeyframe=_keyframes2[0];var/** @type {?} */startKeyframe=_createStartKeyframeFromEndKeyframe(endKeyframe,ast.startTime,ast.playTime,collectedStyles,errors);ast.keyframes=[startKeyframe,endKeyframe];}}else if(ast instanceof AnimationWithStepsAst){ast.steps.forEach(function(entry){return _fillAnimationAstStartingKeyframes(entry,collectedStyles,errors);});}}/**
 * @param {?} exp
 * @param {?} errors
 * @return {?}
 */function _parseTimeExpression(exp,errors){var/** @type {?} */regex=/^([\.\d]+)(m?s)(?:\s+([\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?/i;var/** @type {?} */duration=void 0;var/** @type {?} */delay=0;var/** @type {?} */easing=null;if(typeof exp==='string'){var/** @type {?} */matches=exp.match(regex);if(matches===null){errors.push(new AnimationParseError('The provided timing value "'+exp+'" is invalid.'));return new _AnimationTimings(0,0,null);}var/** @type {?} */durationMatch=parseFloat(matches[1]);var/** @type {?} */durationUnit=matches[2];if(durationUnit=='s'){durationMatch*=_ONE_SECOND;}duration=Math.floor(durationMatch);var/** @type {?} */delayMatch=matches[3];var/** @type {?} */delayUnit=matches[4];if(isPresent(delayMatch)){var/** @type {?} */delayVal=parseFloat(delayMatch);if(isPresent(delayUnit)&&delayUnit=='s'){delayVal*=_ONE_SECOND;}delay=Math.floor(delayVal);}var/** @type {?} */easingVal=matches[5];if(!isBlank(easingVal)){easing=easingVal;}}else{duration=exp;}return new _AnimationTimings(duration,delay,easing);}/**
 * @param {?} endKeyframe
 * @param {?} startTime
 * @param {?} duration
 * @param {?} collectedStyles
 * @param {?} errors
 * @return {?}
 */function _createStartKeyframeFromEndKeyframe(endKeyframe,startTime,duration,collectedStyles,errors){var/** @type {?} */values={};var/** @type {?} */endTime=startTime+duration;endKeyframe.styles.styles.forEach(function(styleData){Object.keys(styleData).forEach(function(prop){var/** @type {?} */val=styleData[prop];if(prop=='offset')return;var/** @type {?} */resultIndex=collectedStyles.indexOfAtOrBeforeTime(prop,startTime);var/** @type {?} */resultEntry=void 0/** TODO #9100 */,/** @type {?} */nextEntry=void 0/** TODO #9100 */,/** @type {?} */value=void 0/** TODO #9100 */;if(isPresent(resultIndex)){resultEntry=collectedStyles.getByIndex(prop,resultIndex);value=resultEntry.value;nextEntry=collectedStyles.getByIndex(prop,resultIndex+1);}else{// this is a flag that the runtime code uses to pass
// in a value either from the state declaration styles
// or using the AUTO_STYLE value (e.g. getComputedStyle)
value=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_103" /* ɵFILL_STYLE_FLAG */];}if(isPresent(nextEntry)&&!nextEntry.matches(endTime,val)){errors.push(new AnimationParseError('The animated CSS property "'+prop+'" unexpectedly changes between steps "'+resultEntry.time+'ms" and "'+endTime+'ms" at "'+nextEntry.time+'ms"'));}values[prop]=value;});});return new AnimationKeyframeAst(_INITIAL_KEYFRAME,new AnimationStylesAst([values]));}/**
 * An interface for retrieving documents by URL that the compiler uses
 * to load templates.
 */var ResourceLoader=function(){function ResourceLoader(){_classCallCheck(this,ResourceLoader);}_createClass(ResourceLoader,[{key:'get',/**
     * @param {?} url
     * @return {?}
     */value:function get(url){return null;}}]);return ResourceLoader;}();/**
 * Create a {\@link UrlResolver} with no package prefix.
 * @return {?}
 */function createUrlResolverWithoutPackagePrefix(){return new UrlResolver();}/**
 * @return {?}
 */function createOfflineCompileUrlResolver(){return new UrlResolver('.');}/**
 * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.
 */var/** @type {?} */DEFAULT_PACKAGE_URL_PROVIDER={provide:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_104" /* PACKAGE_ROOT_URL */],useValue:'/'};/**
 * Used by the {\@link Compiler} when resolving HTML and CSS template URLs.
 *
 * This class can be overridden by the application developer to create custom behavior.
 *
 * See {\@link Compiler}
 *
 * ## Example
 *
 * {\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}
 *
 * \@security When compiling templates at runtime, you must
 * ensure that the entire template comes from a trusted source.
 * Attacker-controlled data introduced by a template could expose your
 * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).
 */var UrlResolver=function(){/**
     * @param {?=} _packagePrefix
     */function UrlResolver(){var _packagePrefix=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,UrlResolver);this._packagePrefix=_packagePrefix;}/**
     * Resolves the `url` given the `baseUrl`:
     * - when the `url` is null, the `baseUrl` is returned,
     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of
     * `baseUrl` and `url`,
     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is
     * returned as is (ignoring the `baseUrl`)
     * @param {?} baseUrl
     * @param {?} url
     * @return {?}
     */_createClass(UrlResolver,[{key:'resolve',value:function resolve(baseUrl,url){var/** @type {?} */resolvedUrl=url;if(isPresent(baseUrl)&&baseUrl.length>0){resolvedUrl=_resolveUrl(baseUrl,resolvedUrl);}var/** @type {?} */resolvedParts=_split(resolvedUrl);var/** @type {?} */prefix=this._packagePrefix;if(isPresent(prefix)&&isPresent(resolvedParts)&&resolvedParts[_ComponentIndex.Scheme]=='package'){var/** @type {?} */path=resolvedParts[_ComponentIndex.Path];prefix=prefix.replace(/\/+$/,'');path=path.replace(/^\/+/,'');return prefix+'/'+path;}return resolvedUrl;}}]);return UrlResolver;}();UrlResolver.decorators=[{type:CompilerInjectable}];/** @nocollapse */UrlResolver.ctorParameters=function(){return[{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_104" /* PACKAGE_ROOT_URL */]]}]}];};/**
 * Extract the scheme of a URL.
 * @param {?} url
 * @return {?}
 */function getUrlScheme(url){var/** @type {?} */match=_split(url);return match&&match[_ComponentIndex.Scheme]||'';}/**
 * Builds a URI string from already-encoded parts.
 *
 * No encoding is performed.  Any component may be omitted as either null or
 * undefined.
 *
 * @param {?=} opt_scheme The scheme such as 'http'.
 * @param {?=} opt_userInfo The user name before the '\@'.
 * @param {?=} opt_domain The domain such as 'www.google.com', already
 *     URI-encoded.
 * @param {?=} opt_port The port number.
 * @param {?=} opt_path The path, already URI-encoded.  If it is not
 *     empty, it must begin with a slash.
 * @param {?=} opt_queryData The URI-encoded query data.
 * @param {?=} opt_fragment The URI-encoded fragment identifier.
 * @return {?} The fully combined URI.
 */function _buildFromEncodedParts(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_queryData,opt_fragment){var/** @type {?} */out=[];if(isPresent(opt_scheme)){out.push(opt_scheme+':');}if(isPresent(opt_domain)){out.push('//');if(isPresent(opt_userInfo)){out.push(opt_userInfo+'@');}out.push(opt_domain);if(isPresent(opt_port)){out.push(':'+opt_port);}}if(isPresent(opt_path)){out.push(opt_path);}if(isPresent(opt_queryData)){out.push('?'+opt_queryData);}if(isPresent(opt_fragment)){out.push('#'+opt_fragment);}return out.join('');}/**
 * A regular expression for breaking a URI into its component parts.
 *
 * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says
 * As the "first-match-wins" algorithm is identical to the "greedy"
 * disambiguation method used by POSIX regular expressions, it is natural and
 * commonplace to use a regular expression for parsing the potential five
 * components of a URI reference.
 *
 * The following line is the regular expression for breaking-down a
 * well-formed URI reference into its components.
 *
 * <pre>
 * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
 *  12            3  4          5       6  7        8 9
 * </pre>
 *
 * The numbers in the second line above are only to assist readability; they
 * indicate the reference points for each subexpression (i.e., each paired
 * parenthesis). We refer to the value matched for subexpression <n> as $<n>.
 * For example, matching the above expression to
 * <pre>
 *     http://www.ics.uci.edu/pub/ietf/uri/#Related
 * </pre>
 * results in the following subexpression matches:
 * <pre>
 *    $1 = http:
 *    $2 = http
 *    $3 = //www.ics.uci.edu
 *    $4 = www.ics.uci.edu
 *    $5 = /pub/ietf/uri/
 *    $6 = <undefined>
 *    $7 = <undefined>
 *    $8 = #Related
 *    $9 = Related
 * </pre>
 * where <undefined> indicates that the component is not present, as is the
 * case for the query component in the above example. Therefore, we can
 * determine the value of the five components as
 * <pre>
 *    scheme    = $2
 *    authority = $4
 *    path      = $5
 *    query     = $7
 *    fragment  = $9
 * </pre>
 *
 * The regular expression has been modified slightly to expose the
 * userInfo, domain, and port separately from the authority.
 * The modified version yields
 * <pre>
 *    $1 = http              scheme
 *    $2 = <undefined>       userInfo -\
 *    $3 = www.ics.uci.edu   domain     | authority
 *    $4 = <undefined>       port     -/
 *    $5 = /pub/ietf/uri/    path
 *    $6 = <undefined>       query without ?
 *    $7 = Related           fragment without #
 * </pre>
 * @type {!RegExp}
 * @internal
 */var/** @type {?} */_splitRe=new RegExp('^'+'(?:'+'([^:/?#.]+)'+// used by other URL parts such as :,
// ?, /, #, and .
':)?'+'(?://'+'(?:([^/?#]*)@)?'+'([\\w\\d\\-\\u0100-\\uffff.%]*)'+// digits, dashes, dots, percent
// escapes, and unicode characters.
'(?::([0-9]+))?'+')?'+'([^?#]+)?'+'(?:\\?([^#]*))?'+'(?:#(.*))?'+'$');var _ComponentIndex={};_ComponentIndex.Scheme=1;_ComponentIndex.UserInfo=2;_ComponentIndex.Domain=3;_ComponentIndex.Port=4;_ComponentIndex.Path=5;_ComponentIndex.QueryData=6;_ComponentIndex.Fragment=7;_ComponentIndex[_ComponentIndex.Scheme]="Scheme";_ComponentIndex[_ComponentIndex.UserInfo]="UserInfo";_ComponentIndex[_ComponentIndex.Domain]="Domain";_ComponentIndex[_ComponentIndex.Port]="Port";_ComponentIndex[_ComponentIndex.Path]="Path";_ComponentIndex[_ComponentIndex.QueryData]="QueryData";_ComponentIndex[_ComponentIndex.Fragment]="Fragment";/**
 * Splits a URI into its component parts.
 *
 * Each component can be accessed via the component indices; for example:
 * <pre>
 * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];
 * </pre>
 *
 * @param {?} uri The URI string to examine.
 * @return {?} Each component still URI-encoded.
 *     Each component that is present will contain the encoded value, whereas
 *     components that are not present will be undefined or empty, depending
 *     on the browser's regular expression implementation.  Never null, since
 *     arbitrary strings may still look like path names.
 */function _split(uri){return uri.match(_splitRe);}/**
 * Removes dot segments in given path component, as described in
 * RFC 3986, section 5.2.4.
 *
 * @param {?} path A non-empty path component.
 * @return {?} Path component with removed dot segments.
 */function _removeDotSegments(path){if(path=='/')return'/';var/** @type {?} */leadingSlash=path[0]=='/'?'/':'';var/** @type {?} */trailingSlash=path[path.length-1]==='/'?'/':'';var/** @type {?} */segments=path.split('/');var/** @type {?} */out=[];var/** @type {?} */up=0;for(var/** @type {?} */pos=0;pos<segments.length;pos++){var/** @type {?} */segment=segments[pos];switch(segment){case'':case'.':break;case'..':if(out.length>0){out.pop();}else{up++;}break;default:out.push(segment);}}if(leadingSlash==''){while(up-->0){out.unshift('..');}if(out.length===0)out.push('.');}return leadingSlash+out.join('/')+trailingSlash;}/**
 * Takes an array of the parts from split and canonicalizes the path part
 * and then joins all the parts.
 * @param {?} parts
 * @return {?}
 */function _joinAndCanonicalizePath(parts){var/** @type {?} */path=parts[_ComponentIndex.Path];path=isBlank(path)?'':_removeDotSegments(path);parts[_ComponentIndex.Path]=path;return _buildFromEncodedParts(parts[_ComponentIndex.Scheme],parts[_ComponentIndex.UserInfo],parts[_ComponentIndex.Domain],parts[_ComponentIndex.Port],path,parts[_ComponentIndex.QueryData],parts[_ComponentIndex.Fragment]);}/**
 * Resolves a URL.
 * @param {?} base The URL acting as the base URL.
 * @param {?} url
 * @return {?}
 */function _resolveUrl(base,url){var/** @type {?} */parts=_split(encodeURI(url));var/** @type {?} */baseParts=_split(base);if(isPresent(parts[_ComponentIndex.Scheme])){return _joinAndCanonicalizePath(parts);}else{parts[_ComponentIndex.Scheme]=baseParts[_ComponentIndex.Scheme];}for(var/** @type {?} */i=_ComponentIndex.Scheme;i<=_ComponentIndex.Port;i++){if(isBlank(parts[i])){parts[i]=baseParts[i];}}if(parts[_ComponentIndex.Path][0]=='/'){return _joinAndCanonicalizePath(parts);}var/** @type {?} */path=baseParts[_ComponentIndex.Path];if(isBlank(path))path='/';var/** @type {?} */index=path.lastIndexOf('/');path=path.substring(0,index+1)+parts[_ComponentIndex.Path];parts[_ComponentIndex.Path]=path;return _joinAndCanonicalizePath(parts);}var DirectiveNormalizer=function(){/**
     * @param {?} _resourceLoader
     * @param {?} _urlResolver
     * @param {?} _htmlParser
     * @param {?} _config
     */function DirectiveNormalizer(_resourceLoader,_urlResolver,_htmlParser,_config){_classCallCheck(this,DirectiveNormalizer);this._resourceLoader=_resourceLoader;this._urlResolver=_urlResolver;this._htmlParser=_htmlParser;this._config=_config;this._resourceLoaderCache=new Map();}/**
     * @return {?}
     */_createClass(DirectiveNormalizer,[{key:'clearCache',value:function clearCache(){this._resourceLoaderCache.clear();}/**
     * @param {?} normalizedDirective
     * @return {?}
     */},{key:'clearCacheFor',value:function clearCacheFor(normalizedDirective){var _this116=this;if(!normalizedDirective.isComponent){return;}this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);normalizedDirective.template.externalStylesheets.forEach(function(stylesheet){_this116._resourceLoaderCache.delete(stylesheet.moduleUrl);});}/**
     * @param {?} url
     * @return {?}
     */},{key:'_fetch',value:function _fetch(url){var/** @type {?} */result=this._resourceLoaderCache.get(url);if(!result){result=this._resourceLoader.get(url);this._resourceLoaderCache.set(url,result);}return result;}/**
     * @param {?} prenormData
     * @return {?}
     */},{key:'normalizeTemplate',value:function normalizeTemplate(prenormData){var _this117=this;var/** @type {?} */normalizedTemplateSync=null;var/** @type {?} */normalizedTemplateAsync=void 0;if(prenormData.template!=null){if(typeof prenormData.template!=='string'){throw syntaxError('The template specified for component '+stringify(prenormData.componentType)+' is not a string');}normalizedTemplateSync=this.normalizeTemplateSync(prenormData);normalizedTemplateAsync=Promise.resolve(normalizedTemplateSync);}else if(prenormData.templateUrl){if(typeof prenormData.templateUrl!=='string'){throw syntaxError('The templateUrl specified for component '+stringify(prenormData.componentType)+' is not a string');}normalizedTemplateAsync=this.normalizeTemplateAsync(prenormData);}else{throw syntaxError('No template specified for component '+stringify(prenormData.componentType));}if(normalizedTemplateSync&&normalizedTemplateSync.styleUrls.length===0){// sync case
return new SyncAsyncResult(normalizedTemplateSync);}else{// async case
return new SyncAsyncResult(null,normalizedTemplateAsync.then(function(normalizedTemplate){return _this117.normalizeExternalStylesheets(normalizedTemplate);}));}}/**
     * @param {?} prenomData
     * @return {?}
     */},{key:'normalizeTemplateSync',value:function normalizeTemplateSync(prenomData){return this.normalizeLoadedTemplate(prenomData,prenomData.template,prenomData.moduleUrl);}/**
     * @param {?} prenomData
     * @return {?}
     */},{key:'normalizeTemplateAsync',value:function normalizeTemplateAsync(prenomData){var _this118=this;var/** @type {?} */templateUrl=this._urlResolver.resolve(prenomData.moduleUrl,prenomData.templateUrl);return this._fetch(templateUrl).then(function(value){return _this118.normalizeLoadedTemplate(prenomData,value,templateUrl);});}/**
     * @param {?} prenomData
     * @param {?} template
     * @param {?} templateAbsUrl
     * @return {?}
     */},{key:'normalizeLoadedTemplate',value:function normalizeLoadedTemplate(prenomData,template,templateAbsUrl){var/** @type {?} */interpolationConfig=InterpolationConfig.fromArray(prenomData.interpolation);var/** @type {?} */rootNodesAndErrors=this._htmlParser.parse(template,stringify(prenomData.componentType),true,interpolationConfig);if(rootNodesAndErrors.errors.length>0){var/** @type {?} */errorString=rootNodesAndErrors.errors.join('\n');throw syntaxError('Template parse errors:\n'+errorString);}var/** @type {?} */templateMetadataStyles=this.normalizeStylesheet(new CompileStylesheetMetadata({styles:prenomData.styles,styleUrls:prenomData.styleUrls,moduleUrl:prenomData.moduleUrl}));var/** @type {?} */visitor=new TemplatePreparseVisitor();visitAll(visitor,rootNodesAndErrors.rootNodes);var/** @type {?} */templateStyles=this.normalizeStylesheet(new CompileStylesheetMetadata({styles:visitor.styles,styleUrls:visitor.styleUrls,moduleUrl:templateAbsUrl}));var/** @type {?} */encapsulation=prenomData.encapsulation;if(encapsulation==null){encapsulation=this._config.defaultEncapsulation;}var/** @type {?} */styles=templateMetadataStyles.styles.concat(templateStyles.styles);var/** @type {?} */styleUrls=templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);if(encapsulation===__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].Emulated&&styles.length===0&&styleUrls.length===0){encapsulation=__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None;}return new CompileTemplateMetadata({encapsulation:encapsulation,template:template,templateUrl:templateAbsUrl,styles:styles,styleUrls:styleUrls,ngContentSelectors:visitor.ngContentSelectors,animations:prenomData.animations,interpolation:prenomData.interpolation});}/**
     * @param {?} templateMeta
     * @return {?}
     */},{key:'normalizeExternalStylesheets',value:function normalizeExternalStylesheets(templateMeta){return this._loadMissingExternalStylesheets(templateMeta.styleUrls).then(function(externalStylesheets){return new CompileTemplateMetadata({encapsulation:templateMeta.encapsulation,template:templateMeta.template,templateUrl:templateMeta.templateUrl,styles:templateMeta.styles,styleUrls:templateMeta.styleUrls,externalStylesheets:externalStylesheets,ngContentSelectors:templateMeta.ngContentSelectors,animations:templateMeta.animations,interpolation:templateMeta.interpolation});});}/**
     * @param {?} styleUrls
     * @param {?=} loadedStylesheets
     * @return {?}
     */},{key:'_loadMissingExternalStylesheets',value:function _loadMissingExternalStylesheets(styleUrls){var _this119=this;var loadedStylesheets=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Map();return Promise.all(styleUrls.filter(function(styleUrl){return!loadedStylesheets.has(styleUrl);}).map(function(styleUrl){return _this119._fetch(styleUrl).then(function(loadedStyle){var/** @type {?} */stylesheet=_this119.normalizeStylesheet(new CompileStylesheetMetadata({styles:[loadedStyle],moduleUrl:styleUrl}));loadedStylesheets.set(styleUrl,stylesheet);return _this119._loadMissingExternalStylesheets(stylesheet.styleUrls,loadedStylesheets);});})).then(function(_){return Array.from(loadedStylesheets.values());});}/**
     * @param {?} stylesheet
     * @return {?}
     */},{key:'normalizeStylesheet',value:function normalizeStylesheet(stylesheet){var _this120=this;var/** @type {?} */allStyleUrls=stylesheet.styleUrls.filter(isStyleUrlResolvable).map(function(url){return _this120._urlResolver.resolve(stylesheet.moduleUrl,url);});var/** @type {?} */allStyles=stylesheet.styles.map(function(style){var/** @type {?} */styleWithImports=extractStyleUrls(_this120._urlResolver,stylesheet.moduleUrl,style);allStyleUrls.push.apply(allStyleUrls,_toConsumableArray(styleWithImports.styleUrls));return styleWithImports.style;});return new CompileStylesheetMetadata({styles:allStyles,styleUrls:allStyleUrls,moduleUrl:stylesheet.moduleUrl});}}]);return DirectiveNormalizer;}();DirectiveNormalizer.decorators=[{type:CompilerInjectable}];/** @nocollapse */DirectiveNormalizer.ctorParameters=function(){return[{type:ResourceLoader},{type:UrlResolver},{type:HtmlParser},{type:CompilerConfig}];};var TemplatePreparseVisitor=function(){function TemplatePreparseVisitor(){_classCallCheck(this,TemplatePreparseVisitor);this.ngContentSelectors=[];this.styles=[];this.styleUrls=[];this.ngNonBindableStackCount=0;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */_createClass(TemplatePreparseVisitor,[{key:'visitElement',value:function visitElement(ast,context){var/** @type {?} */preparsedElement=preparseElement(ast);switch(preparsedElement.type){case PreparsedElementType.NG_CONTENT:if(this.ngNonBindableStackCount===0){this.ngContentSelectors.push(preparsedElement.selectAttr);}break;case PreparsedElementType.STYLE:var/** @type {?} */textContent='';ast.children.forEach(function(child){if(child instanceof Text){textContent+=child.value;}});this.styles.push(textContent);break;case PreparsedElementType.STYLESHEET:this.styleUrls.push(preparsedElement.hrefAttr);break;default:break;}if(preparsedElement.nonBindable){this.ngNonBindableStackCount++;}visitAll(this,ast.children);if(preparsedElement.nonBindable){this.ngNonBindableStackCount--;}return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansion',value:function visitExpansion(ast,context){visitAll(this,ast.cases);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitExpansionCase',value:function visitExpansionCase(ast,context){visitAll(this,ast.expression);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitComment',value:function visitComment(ast,context){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAttribute',value:function visitAttribute(ast,context){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(ast,context){return null;}}]);return TemplatePreparseVisitor;}();var DirectiveResolver=function(){/**
     * @param {?=} _reflector
     */function DirectiveResolver(){var _reflector=arguments.length>0&&arguments[0]!==undefined?arguments[0]:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */];_classCallCheck(this,DirectiveResolver);this._reflector=_reflector;}/**
     * @param {?} type
     * @return {?}
     */_createClass(DirectiveResolver,[{key:'isDirective',value:function isDirective(type){var/** @type {?} */typeMetadata=this._reflector.annotations(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(type));return typeMetadata&&typeMetadata.some(isDirectiveMetadata);}/**
     * Return {\@link Directive} for a given `Type`.
     * @param {?} type
     * @param {?=} throwIfNotFound
     * @return {?}
     */},{key:'resolve',value:function resolve(type){var throwIfNotFound=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var/** @type {?} */typeMetadata=this._reflector.annotations(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(type));if(typeMetadata){var/** @type {?} */metadata=ListWrapper.findLast(typeMetadata,isDirectiveMetadata);if(metadata){var/** @type {?} */propertyMetadata=this._reflector.propMetadata(type);return this._mergeWithPropertyMetadata(metadata,propertyMetadata,type);}}if(throwIfNotFound){throw new Error('No Directive annotation found on '+stringify(type));}return null;}/**
     * @param {?} dm
     * @param {?} propertyMetadata
     * @param {?} directiveType
     * @return {?}
     */},{key:'_mergeWithPropertyMetadata',value:function _mergeWithPropertyMetadata(dm,propertyMetadata,directiveType){var/** @type {?} */inputs=[];var/** @type {?} */outputs=[];var/** @type {?} */host={};var/** @type {?} */queries={};Object.keys(propertyMetadata).forEach(function(propName){var/** @type {?} */input=ListWrapper.findLast(propertyMetadata[propName],function(a){return a instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */];});if(input){if(input.bindingPropertyName){inputs.push(propName+': '+input.bindingPropertyName);}else{inputs.push(propName);}}var/** @type {?} */output=ListWrapper.findLast(propertyMetadata[propName],function(a){return a instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */];});if(output){if(output.bindingPropertyName){outputs.push(propName+': '+output.bindingPropertyName);}else{outputs.push(propName);}}var/** @type {?} */hostBindings=propertyMetadata[propName].filter(function(a){return a&&a instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */];});hostBindings.forEach(function(hostBinding){if(hostBinding.hostPropertyName){var/** @type {?} */startWith=hostBinding.hostPropertyName[0];if(startWith==='('){throw new Error('@HostBinding can not bind to events. Use @HostListener instead.');}else if(startWith==='['){throw new Error('@HostBinding parameter should be a property name, \'class.<name>\', or \'attr.<name>\'.');}host['['+hostBinding.hostPropertyName+']']=propName;}else{host['['+propName+']']=propName;}});var/** @type {?} */hostListeners=propertyMetadata[propName].filter(function(a){return a&&a instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* HostListener */];});hostListeners.forEach(function(hostListener){var/** @type {?} */args=hostListener.args||[];host['('+hostListener.eventName+')']=propName+'('+args.join(',')+')';});var/** @type {?} */query=ListWrapper.findLast(propertyMetadata[propName],function(a){return a instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["_106" /* Query */];});if(query){queries[propName]=query;}});return this._merge(dm,inputs,outputs,host,queries,directiveType);}/**
     * @param {?} def
     * @return {?}
     */},{key:'_extractPublicName',value:function _extractPublicName(def){return splitAtColon(def,[null,def])[1].trim();}/**
     * @param {?} bindings
     * @return {?}
     */},{key:'_dedupeBindings',value:function _dedupeBindings(bindings){var/** @type {?} */names=new Set();var/** @type {?} */reversedResult=[];// go last to first to allow later entries to overwrite previous entries
for(var/** @type {?} */i=bindings.length-1;i>=0;i--){var/** @type {?} */binding=bindings[i];var/** @type {?} */name=this._extractPublicName(binding);if(!names.has(name)){names.add(name);reversedResult.push(binding);}}return reversedResult.reverse();}/**
     * @param {?} directive
     * @param {?} inputs
     * @param {?} outputs
     * @param {?} host
     * @param {?} queries
     * @param {?} directiveType
     * @return {?}
     */},{key:'_merge',value:function _merge(directive,inputs,outputs,host,queries,directiveType){var/** @type {?} */mergedInputs=this._dedupeBindings(directive.inputs?directive.inputs.concat(inputs):inputs);var/** @type {?} */mergedOutputs=this._dedupeBindings(directive.outputs?directive.outputs.concat(outputs):outputs);var/** @type {?} */mergedHost=directive.host?StringMapWrapper.merge(directive.host,host):host;var/** @type {?} */mergedQueries=directive.queries?StringMapWrapper.merge(directive.queries,queries):queries;if(directive instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */]){return new __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */]({selector:directive.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:directive.exportAs,moduleId:directive.moduleId,queries:mergedQueries,changeDetection:directive.changeDetection,providers:directive.providers,viewProviders:directive.viewProviders,entryComponents:directive.entryComponents,template:directive.template,templateUrl:directive.templateUrl,styles:directive.styles,styleUrls:directive.styleUrls,encapsulation:directive.encapsulation,animations:directive.animations,interpolation:directive.interpolation});}else{return new __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */]({selector:directive.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:directive.exportAs,queries:mergedQueries,providers:directive.providers});}}}]);return DirectiveResolver;}();DirectiveResolver.decorators=[{type:CompilerInjectable}];/** @nocollapse */DirectiveResolver.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_107" /* ɵReflectorReader */]}];};/**
 * @param {?} type
 * @return {?}
 */function isDirectiveMetadata(type){return type instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */];}var TypeModifier={};TypeModifier.Const=0;TypeModifier[TypeModifier.Const]="Const";/**
 * @abstract
 */var Type$1=function(){/**
     * @param {?=} modifiers
     */function Type$1(){var modifiers=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,Type$1);this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}}/**
     * @abstract
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Type$1,[{key:'visitType',value:function visitType(visitor,context){}/**
     * @param {?} modifier
     * @return {?}
     */},{key:'hasModifier',value:function hasModifier(modifier){return this.modifiers.indexOf(modifier)!==-1;}}]);return Type$1;}();var BuiltinTypeName={};BuiltinTypeName.Dynamic=0;BuiltinTypeName.Bool=1;BuiltinTypeName.String=2;BuiltinTypeName.Int=3;BuiltinTypeName.Number=4;BuiltinTypeName.Function=5;BuiltinTypeName.Inferred=6;BuiltinTypeName[BuiltinTypeName.Dynamic]="Dynamic";BuiltinTypeName[BuiltinTypeName.Bool]="Bool";BuiltinTypeName[BuiltinTypeName.String]="String";BuiltinTypeName[BuiltinTypeName.Int]="Int";BuiltinTypeName[BuiltinTypeName.Number]="Number";BuiltinTypeName[BuiltinTypeName.Function]="Function";BuiltinTypeName[BuiltinTypeName.Inferred]="Inferred";var BuiltinType=function(_Type$){_inherits(BuiltinType,_Type$);/**
     * @param {?} name
     * @param {?=} modifiers
     */function BuiltinType(name){var modifiers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,BuiltinType);var _this121=_possibleConstructorReturn(this,(BuiltinType.__proto__||Object.getPrototypeOf(BuiltinType)).call(this,modifiers));_this121.name=name;return _this121;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(BuiltinType,[{key:'visitType',value:function visitType(visitor,context){return visitor.visitBuiltintType(this,context);}}]);return BuiltinType;}(Type$1);var ExpressionType=function(_Type$2){_inherits(ExpressionType,_Type$2);/**
     * @param {?} value
     * @param {?=} modifiers
     */function ExpressionType(value){var modifiers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,ExpressionType);var _this122=_possibleConstructorReturn(this,(ExpressionType.__proto__||Object.getPrototypeOf(ExpressionType)).call(this,modifiers));_this122.value=value;return _this122;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ExpressionType,[{key:'visitType',value:function visitType(visitor,context){return visitor.visitExpressionType(this,context);}}]);return ExpressionType;}(Type$1);var ArrayType=function(_Type$3){_inherits(ArrayType,_Type$3);/**
     * @param {?} of
     * @param {?=} modifiers
     */function ArrayType(of){var modifiers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,ArrayType);var _this123=_possibleConstructorReturn(this,(ArrayType.__proto__||Object.getPrototypeOf(ArrayType)).call(this,modifiers));_this123.of=of;return _this123;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ArrayType,[{key:'visitType',value:function visitType(visitor,context){return visitor.visitArrayType(this,context);}}]);return ArrayType;}(Type$1);var MapType=function(_Type$4){_inherits(MapType,_Type$4);/**
     * @param {?} valueType
     * @param {?=} modifiers
     */function MapType(valueType){var modifiers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,MapType);var _this124=_possibleConstructorReturn(this,(MapType.__proto__||Object.getPrototypeOf(MapType)).call(this,modifiers));_this124.valueType=valueType;return _this124;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(MapType,[{key:'visitType',value:function visitType(visitor,context){return visitor.visitMapType(this,context);}}]);return MapType;}(Type$1);var/** @type {?} */DYNAMIC_TYPE=new BuiltinType(BuiltinTypeName.Dynamic);var/** @type {?} */INFERRED_TYPE=new BuiltinType(BuiltinTypeName.Inferred);var/** @type {?} */BOOL_TYPE=new BuiltinType(BuiltinTypeName.Bool);var/** @type {?} */INT_TYPE=new BuiltinType(BuiltinTypeName.Int);var/** @type {?} */NUMBER_TYPE=new BuiltinType(BuiltinTypeName.Number);var/** @type {?} */STRING_TYPE=new BuiltinType(BuiltinTypeName.String);var/** @type {?} */FUNCTION_TYPE=new BuiltinType(BuiltinTypeName.Function);var BinaryOperator={};BinaryOperator.Equals=0;BinaryOperator.NotEquals=1;BinaryOperator.Identical=2;BinaryOperator.NotIdentical=3;BinaryOperator.Minus=4;BinaryOperator.Plus=5;BinaryOperator.Divide=6;BinaryOperator.Multiply=7;BinaryOperator.Modulo=8;BinaryOperator.And=9;BinaryOperator.Or=10;BinaryOperator.Lower=11;BinaryOperator.LowerEquals=12;BinaryOperator.Bigger=13;BinaryOperator.BiggerEquals=14;BinaryOperator[BinaryOperator.Equals]="Equals";BinaryOperator[BinaryOperator.NotEquals]="NotEquals";BinaryOperator[BinaryOperator.Identical]="Identical";BinaryOperator[BinaryOperator.NotIdentical]="NotIdentical";BinaryOperator[BinaryOperator.Minus]="Minus";BinaryOperator[BinaryOperator.Plus]="Plus";BinaryOperator[BinaryOperator.Divide]="Divide";BinaryOperator[BinaryOperator.Multiply]="Multiply";BinaryOperator[BinaryOperator.Modulo]="Modulo";BinaryOperator[BinaryOperator.And]="And";BinaryOperator[BinaryOperator.Or]="Or";BinaryOperator[BinaryOperator.Lower]="Lower";BinaryOperator[BinaryOperator.LowerEquals]="LowerEquals";BinaryOperator[BinaryOperator.Bigger]="Bigger";BinaryOperator[BinaryOperator.BiggerEquals]="BiggerEquals";/**
 * @abstract
 */var Expression=function(){/**
     * @param {?} type
     * @param {?=} sourceSpan
     */function Expression(type,sourceSpan){_classCallCheck(this,Expression);this.type=type;this.sourceSpan=sourceSpan;}/**
     * @abstract
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Expression,[{key:'visitExpression',value:function visitExpression(visitor,context){}/**
     * @param {?} name
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'prop',value:function prop(name,sourceSpan){return new ReadPropExpr(this,name,null,sourceSpan);}/**
     * @param {?} index
     * @param {?=} type
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'key',value:function key(index){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];return new ReadKeyExpr(this,index,type,sourceSpan);}/**
     * @param {?} name
     * @param {?} params
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'callMethod',value:function callMethod(name,params,sourceSpan){return new InvokeMethodExpr(this,name,params,null,sourceSpan);}/**
     * @param {?} params
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'callFn',value:function callFn(params,sourceSpan){return new InvokeFunctionExpr(this,params,null,sourceSpan);}/**
     * @param {?} params
     * @param {?=} type
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'instantiate',value:function instantiate(params){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];return new InstantiateExpr(this,params,type,sourceSpan);}/**
     * @param {?} trueCase
     * @param {?=} falseCase
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'conditional',value:function conditional(trueCase){var falseCase=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];return new ConditionalExpr(this,trueCase,falseCase,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'equals',value:function equals(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Equals,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'notEquals',value:function notEquals(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.NotEquals,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'identical',value:function identical(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Identical,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'notIdentical',value:function notIdentical(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.NotIdentical,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'minus',value:function minus(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Minus,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'plus',value:function plus(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Plus,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'divide',value:function divide(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Divide,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'multiply',value:function multiply(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Multiply,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'modulo',value:function modulo(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Modulo,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'and',value:function and(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.And,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'or',value:function or(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Or,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'lower',value:function lower(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Lower,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'lowerEquals',value:function lowerEquals(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.LowerEquals,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'bigger',value:function bigger(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.Bigger,this,rhs,null,sourceSpan);}/**
     * @param {?} rhs
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'biggerEquals',value:function biggerEquals(rhs,sourceSpan){return new BinaryOperatorExpr(BinaryOperator.BiggerEquals,this,rhs,null,sourceSpan);}/**
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'isBlank',value:function isBlank(sourceSpan){// Note: We use equals by purpose here to compare to null and undefined in JS.
// We use the typed null to allow strictNullChecks to narrow types.
return this.equals(TYPED_NULL_EXPR,sourceSpan);}/**
     * @param {?} type
     * @param {?=} sourceSpan
     * @return {?}
     */},{key:'cast',value:function cast(type,sourceSpan){return new CastExpr(this,type,sourceSpan);}/**
     * @return {?}
     */},{key:'toStmt',value:function toStmt(){return new ExpressionStatement(this);}}]);return Expression;}();var BuiltinVar={};BuiltinVar.This=0;BuiltinVar.Super=1;BuiltinVar.CatchError=2;BuiltinVar.CatchStack=3;BuiltinVar[BuiltinVar.This]="This";BuiltinVar[BuiltinVar.Super]="Super";BuiltinVar[BuiltinVar.CatchError]="CatchError";BuiltinVar[BuiltinVar.CatchStack]="CatchStack";var ReadVarExpr=function(_Expression){_inherits(ReadVarExpr,_Expression);/**
     * @param {?} name
     * @param {?=} type
     * @param {?=} sourceSpan
     */function ReadVarExpr(name){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];_classCallCheck(this,ReadVarExpr);var _this125=_possibleConstructorReturn(this,(ReadVarExpr.__proto__||Object.getPrototypeOf(ReadVarExpr)).call(this,type,sourceSpan));if(typeof name==='string'){_this125.name=name;_this125.builtin=null;}else{_this125.name=null;_this125.builtin=name;}return _this125;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ReadVarExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitReadVarExpr(this,context);}/**
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(value){return new WriteVarExpr(this.name,value,null,this.sourceSpan);}}]);return ReadVarExpr;}(Expression);var WriteVarExpr=function(_Expression2){_inherits(WriteVarExpr,_Expression2);/**
     * @param {?} name
     * @param {?} value
     * @param {?=} type
     * @param {?=} sourceSpan
     */function WriteVarExpr(name,value){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceSpan=arguments[3];_classCallCheck(this,WriteVarExpr);var _this126=_possibleConstructorReturn(this,(WriteVarExpr.__proto__||Object.getPrototypeOf(WriteVarExpr)).call(this,type||value.type,sourceSpan));_this126.name=name;_this126.value=value;return _this126;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(WriteVarExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitWriteVarExpr(this,context);}/**
     * @param {?=} type
     * @param {?=} modifiers
     * @return {?}
     */},{key:'toDeclStmt',value:function toDeclStmt(){var type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var modifiers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return new DeclareVarStmt(this.name,this.value,type,modifiers,this.sourceSpan);}}]);return WriteVarExpr;}(Expression);var WriteKeyExpr=function(_Expression3){_inherits(WriteKeyExpr,_Expression3);/**
     * @param {?} receiver
     * @param {?} index
     * @param {?} value
     * @param {?=} type
     * @param {?=} sourceSpan
     */function WriteKeyExpr(receiver,index,value){var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var sourceSpan=arguments[4];_classCallCheck(this,WriteKeyExpr);var _this127=_possibleConstructorReturn(this,(WriteKeyExpr.__proto__||Object.getPrototypeOf(WriteKeyExpr)).call(this,type||value.type,sourceSpan));_this127.receiver=receiver;_this127.index=index;_this127.value=value;return _this127;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(WriteKeyExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitWriteKeyExpr(this,context);}}]);return WriteKeyExpr;}(Expression);var WritePropExpr=function(_Expression4){_inherits(WritePropExpr,_Expression4);/**
     * @param {?} receiver
     * @param {?} name
     * @param {?} value
     * @param {?=} type
     * @param {?=} sourceSpan
     */function WritePropExpr(receiver,name,value){var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var sourceSpan=arguments[4];_classCallCheck(this,WritePropExpr);var _this128=_possibleConstructorReturn(this,(WritePropExpr.__proto__||Object.getPrototypeOf(WritePropExpr)).call(this,type||value.type,sourceSpan));_this128.receiver=receiver;_this128.name=name;_this128.value=value;return _this128;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(WritePropExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitWritePropExpr(this,context);}}]);return WritePropExpr;}(Expression);var BuiltinMethod={};BuiltinMethod.ConcatArray=0;BuiltinMethod.SubscribeObservable=1;BuiltinMethod.Bind=2;BuiltinMethod[BuiltinMethod.ConcatArray]="ConcatArray";BuiltinMethod[BuiltinMethod.SubscribeObservable]="SubscribeObservable";BuiltinMethod[BuiltinMethod.Bind]="Bind";var InvokeMethodExpr=function(_Expression5){_inherits(InvokeMethodExpr,_Expression5);/**
     * @param {?} receiver
     * @param {?} method
     * @param {?} args
     * @param {?=} type
     * @param {?=} sourceSpan
     */function InvokeMethodExpr(receiver,method,args){var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var sourceSpan=arguments[4];_classCallCheck(this,InvokeMethodExpr);var _this129=_possibleConstructorReturn(this,(InvokeMethodExpr.__proto__||Object.getPrototypeOf(InvokeMethodExpr)).call(this,type,sourceSpan));_this129.receiver=receiver;_this129.args=args;if(typeof method==='string'){_this129.name=method;_this129.builtin=null;}else{_this129.name=null;_this129.builtin=method;}return _this129;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(InvokeMethodExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitInvokeMethodExpr(this,context);}}]);return InvokeMethodExpr;}(Expression);var InvokeFunctionExpr=function(_Expression6){_inherits(InvokeFunctionExpr,_Expression6);/**
     * @param {?} fn
     * @param {?} args
     * @param {?=} type
     * @param {?=} sourceSpan
     */function InvokeFunctionExpr(fn,args){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceSpan=arguments[3];_classCallCheck(this,InvokeFunctionExpr);var _this130=_possibleConstructorReturn(this,(InvokeFunctionExpr.__proto__||Object.getPrototypeOf(InvokeFunctionExpr)).call(this,type,sourceSpan));_this130.fn=fn;_this130.args=args;return _this130;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(InvokeFunctionExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitInvokeFunctionExpr(this,context);}}]);return InvokeFunctionExpr;}(Expression);var InstantiateExpr=function(_Expression7){_inherits(InstantiateExpr,_Expression7);/**
     * @param {?} classExpr
     * @param {?} args
     * @param {?=} type
     * @param {?=} sourceSpan
     */function InstantiateExpr(classExpr,args,type,sourceSpan){_classCallCheck(this,InstantiateExpr);var _this131=_possibleConstructorReturn(this,(InstantiateExpr.__proto__||Object.getPrototypeOf(InstantiateExpr)).call(this,type,sourceSpan));_this131.classExpr=classExpr;_this131.args=args;return _this131;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(InstantiateExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitInstantiateExpr(this,context);}}]);return InstantiateExpr;}(Expression);var LiteralExpr=function(_Expression8){_inherits(LiteralExpr,_Expression8);/**
     * @param {?} value
     * @param {?=} type
     * @param {?=} sourceSpan
     */function LiteralExpr(value){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];_classCallCheck(this,LiteralExpr);var _this132=_possibleConstructorReturn(this,(LiteralExpr.__proto__||Object.getPrototypeOf(LiteralExpr)).call(this,type,sourceSpan));_this132.value=value;return _this132;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(LiteralExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitLiteralExpr(this,context);}}]);return LiteralExpr;}(Expression);var ExternalExpr=function(_Expression9){_inherits(ExternalExpr,_Expression9);/**
     * @param {?} value
     * @param {?=} type
     * @param {?=} typeParams
     * @param {?=} sourceSpan
     */function ExternalExpr(value){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var typeParams=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceSpan=arguments[3];_classCallCheck(this,ExternalExpr);var _this133=_possibleConstructorReturn(this,(ExternalExpr.__proto__||Object.getPrototypeOf(ExternalExpr)).call(this,type,sourceSpan));_this133.value=value;_this133.typeParams=typeParams;return _this133;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ExternalExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitExternalExpr(this,context);}}]);return ExternalExpr;}(Expression);var ConditionalExpr=function(_Expression10){_inherits(ConditionalExpr,_Expression10);/**
     * @param {?} condition
     * @param {?} trueCase
     * @param {?=} falseCase
     * @param {?=} type
     * @param {?=} sourceSpan
     */function ConditionalExpr(condition,trueCase){var falseCase=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var sourceSpan=arguments[4];_classCallCheck(this,ConditionalExpr);var _this134=_possibleConstructorReturn(this,(ConditionalExpr.__proto__||Object.getPrototypeOf(ConditionalExpr)).call(this,type||trueCase.type,sourceSpan));_this134.condition=condition;_this134.falseCase=falseCase;_this134.trueCase=trueCase;return _this134;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ConditionalExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitConditionalExpr(this,context);}}]);return ConditionalExpr;}(Expression);var NotExpr=function(_Expression11){_inherits(NotExpr,_Expression11);/**
     * @param {?} condition
     * @param {?=} sourceSpan
     */function NotExpr(condition,sourceSpan){_classCallCheck(this,NotExpr);var _this135=_possibleConstructorReturn(this,(NotExpr.__proto__||Object.getPrototypeOf(NotExpr)).call(this,BOOL_TYPE,sourceSpan));_this135.condition=condition;return _this135;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(NotExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitNotExpr(this,context);}}]);return NotExpr;}(Expression);var CastExpr=function(_Expression12){_inherits(CastExpr,_Expression12);/**
     * @param {?} value
     * @param {?} type
     * @param {?=} sourceSpan
     */function CastExpr(value,type,sourceSpan){_classCallCheck(this,CastExpr);var _this136=_possibleConstructorReturn(this,(CastExpr.__proto__||Object.getPrototypeOf(CastExpr)).call(this,type,sourceSpan));_this136.value=value;return _this136;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(CastExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitCastExpr(this,context);}}]);return CastExpr;}(Expression);var FnParam=/**
     * @param {?} name
     * @param {?=} type
     */function FnParam(name){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,FnParam);this.name=name;this.type=type;};var FunctionExpr=function(_Expression13){_inherits(FunctionExpr,_Expression13);/**
     * @param {?} params
     * @param {?} statements
     * @param {?=} type
     * @param {?=} sourceSpan
     */function FunctionExpr(params,statements){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceSpan=arguments[3];_classCallCheck(this,FunctionExpr);var _this137=_possibleConstructorReturn(this,(FunctionExpr.__proto__||Object.getPrototypeOf(FunctionExpr)).call(this,type,sourceSpan));_this137.params=params;_this137.statements=statements;return _this137;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(FunctionExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitFunctionExpr(this,context);}/**
     * @param {?} name
     * @param {?=} modifiers
     * @return {?}
     */},{key:'toDeclStmt',value:function toDeclStmt(name){var modifiers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return new DeclareFunctionStmt(name,this.params,this.statements,this.type,modifiers,this.sourceSpan);}}]);return FunctionExpr;}(Expression);var BinaryOperatorExpr=function(_Expression14){_inherits(BinaryOperatorExpr,_Expression14);/**
     * @param {?} operator
     * @param {?} lhs
     * @param {?} rhs
     * @param {?=} type
     * @param {?=} sourceSpan
     */function BinaryOperatorExpr(operator,lhs,rhs){var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var sourceSpan=arguments[4];_classCallCheck(this,BinaryOperatorExpr);var _this138=_possibleConstructorReturn(this,(BinaryOperatorExpr.__proto__||Object.getPrototypeOf(BinaryOperatorExpr)).call(this,type||lhs.type,sourceSpan));_this138.operator=operator;_this138.rhs=rhs;_this138.lhs=lhs;return _this138;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(BinaryOperatorExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitBinaryOperatorExpr(this,context);}}]);return BinaryOperatorExpr;}(Expression);var ReadPropExpr=function(_Expression15){_inherits(ReadPropExpr,_Expression15);/**
     * @param {?} receiver
     * @param {?} name
     * @param {?=} type
     * @param {?=} sourceSpan
     */function ReadPropExpr(receiver,name){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceSpan=arguments[3];_classCallCheck(this,ReadPropExpr);var _this139=_possibleConstructorReturn(this,(ReadPropExpr.__proto__||Object.getPrototypeOf(ReadPropExpr)).call(this,type,sourceSpan));_this139.receiver=receiver;_this139.name=name;return _this139;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ReadPropExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitReadPropExpr(this,context);}/**
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(value){return new WritePropExpr(this.receiver,this.name,value,null,this.sourceSpan);}}]);return ReadPropExpr;}(Expression);var ReadKeyExpr=function(_Expression16){_inherits(ReadKeyExpr,_Expression16);/**
     * @param {?} receiver
     * @param {?} index
     * @param {?=} type
     * @param {?=} sourceSpan
     */function ReadKeyExpr(receiver,index){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceSpan=arguments[3];_classCallCheck(this,ReadKeyExpr);var _this140=_possibleConstructorReturn(this,(ReadKeyExpr.__proto__||Object.getPrototypeOf(ReadKeyExpr)).call(this,type,sourceSpan));_this140.receiver=receiver;_this140.index=index;return _this140;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ReadKeyExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitReadKeyExpr(this,context);}/**
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(value){return new WriteKeyExpr(this.receiver,this.index,value,null,this.sourceSpan);}}]);return ReadKeyExpr;}(Expression);var LiteralArrayExpr=function(_Expression17){_inherits(LiteralArrayExpr,_Expression17);/**
     * @param {?} entries
     * @param {?=} type
     * @param {?=} sourceSpan
     */function LiteralArrayExpr(entries){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];_classCallCheck(this,LiteralArrayExpr);var _this141=_possibleConstructorReturn(this,(LiteralArrayExpr.__proto__||Object.getPrototypeOf(LiteralArrayExpr)).call(this,type,sourceSpan));_this141.entries=entries;return _this141;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(LiteralArrayExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitLiteralArrayExpr(this,context);}}]);return LiteralArrayExpr;}(Expression);var LiteralMapEntry=/**
     * @param {?} key
     * @param {?} value
     * @param {?=} quoted
     */function LiteralMapEntry(key,value){var quoted=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;_classCallCheck(this,LiteralMapEntry);this.key=key;this.value=value;this.quoted=quoted;};var LiteralMapExpr=function(_Expression18){_inherits(LiteralMapExpr,_Expression18);/**
     * @param {?} entries
     * @param {?=} type
     * @param {?=} sourceSpan
     */function LiteralMapExpr(entries){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];_classCallCheck(this,LiteralMapExpr);var _this142=_possibleConstructorReturn(this,(LiteralMapExpr.__proto__||Object.getPrototypeOf(LiteralMapExpr)).call(this,type,sourceSpan));_this142.entries=entries;_this142.valueType=null;if(type){_this142.valueType=type.valueType;}return _this142;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(LiteralMapExpr,[{key:'visitExpression',value:function visitExpression(visitor,context){return visitor.visitLiteralMapExpr(this,context);}}]);return LiteralMapExpr;}(Expression);var/** @type {?} */THIS_EXPR=new ReadVarExpr(BuiltinVar.This);var/** @type {?} */SUPER_EXPR=new ReadVarExpr(BuiltinVar.Super);var/** @type {?} */CATCH_ERROR_VAR=new ReadVarExpr(BuiltinVar.CatchError);var/** @type {?} */CATCH_STACK_VAR=new ReadVarExpr(BuiltinVar.CatchStack);var/** @type {?} */NULL_EXPR=new LiteralExpr(null,null);var/** @type {?} */TYPED_NULL_EXPR=new LiteralExpr(null,INFERRED_TYPE);var StmtModifier={};StmtModifier.Final=0;StmtModifier.Private=1;StmtModifier[StmtModifier.Final]="Final";StmtModifier[StmtModifier.Private]="Private";/**
 * @abstract
 */var Statement=function(){/**
     * @param {?=} modifiers
     * @param {?=} sourceSpan
     */function Statement(){var modifiers=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var sourceSpan=arguments[1];_classCallCheck(this,Statement);this.modifiers=modifiers;this.sourceSpan=sourceSpan;if(!modifiers){this.modifiers=[];}}/**
     * @abstract
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(Statement,[{key:'visitStatement',value:function visitStatement(visitor,context){}/**
     * @param {?} modifier
     * @return {?}
     */},{key:'hasModifier',value:function hasModifier(modifier){return this.modifiers.indexOf(modifier)!==-1;}}]);return Statement;}();var DeclareVarStmt=function(_Statement){_inherits(DeclareVarStmt,_Statement);/**
     * @param {?} name
     * @param {?} value
     * @param {?=} type
     * @param {?=} modifiers
     * @param {?=} sourceSpan
     */function DeclareVarStmt(name,value){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var modifiers=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var sourceSpan=arguments[4];_classCallCheck(this,DeclareVarStmt);var _this143=_possibleConstructorReturn(this,(DeclareVarStmt.__proto__||Object.getPrototypeOf(DeclareVarStmt)).call(this,modifiers,sourceSpan));_this143.name=name;_this143.value=value;_this143.type=type||value.type;return _this143;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(DeclareVarStmt,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitDeclareVarStmt(this,context);}}]);return DeclareVarStmt;}(Statement);var DeclareFunctionStmt=function(_Statement2){_inherits(DeclareFunctionStmt,_Statement2);/**
     * @param {?} name
     * @param {?} params
     * @param {?} statements
     * @param {?=} type
     * @param {?=} modifiers
     * @param {?=} sourceSpan
     */function DeclareFunctionStmt(name,params,statements){var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var modifiers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;var sourceSpan=arguments[5];_classCallCheck(this,DeclareFunctionStmt);var _this144=_possibleConstructorReturn(this,(DeclareFunctionStmt.__proto__||Object.getPrototypeOf(DeclareFunctionStmt)).call(this,modifiers,sourceSpan));_this144.name=name;_this144.params=params;_this144.statements=statements;_this144.type=type;return _this144;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(DeclareFunctionStmt,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitDeclareFunctionStmt(this,context);}}]);return DeclareFunctionStmt;}(Statement);var ExpressionStatement=function(_Statement3){_inherits(ExpressionStatement,_Statement3);/**
     * @param {?} expr
     * @param {?=} sourceSpan
     */function ExpressionStatement(expr,sourceSpan){_classCallCheck(this,ExpressionStatement);var _this145=_possibleConstructorReturn(this,(ExpressionStatement.__proto__||Object.getPrototypeOf(ExpressionStatement)).call(this,null,sourceSpan));_this145.expr=expr;return _this145;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ExpressionStatement,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitExpressionStmt(this,context);}}]);return ExpressionStatement;}(Statement);var ReturnStatement=function(_Statement4){_inherits(ReturnStatement,_Statement4);/**
     * @param {?} value
     * @param {?=} sourceSpan
     */function ReturnStatement(value,sourceSpan){_classCallCheck(this,ReturnStatement);var _this146=_possibleConstructorReturn(this,(ReturnStatement.__proto__||Object.getPrototypeOf(ReturnStatement)).call(this,null,sourceSpan));_this146.value=value;return _this146;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ReturnStatement,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitReturnStmt(this,context);}}]);return ReturnStatement;}(Statement);var AbstractClassPart=function(){/**
     * @param {?=} type
     * @param {?} modifiers
     */function AbstractClassPart(){var type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var modifiers=arguments[1];_classCallCheck(this,AbstractClassPart);this.type=type;this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}}/**
     * @param {?} modifier
     * @return {?}
     */_createClass(AbstractClassPart,[{key:'hasModifier',value:function hasModifier(modifier){return this.modifiers.indexOf(modifier)!==-1;}}]);return AbstractClassPart;}();var ClassField=function(_AbstractClassPart){_inherits(ClassField,_AbstractClassPart);/**
     * @param {?} name
     * @param {?=} type
     * @param {?=} modifiers
     */function ClassField(name){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var modifiers=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck(this,ClassField);var _this147=_possibleConstructorReturn(this,(ClassField.__proto__||Object.getPrototypeOf(ClassField)).call(this,type,modifiers));_this147.name=name;return _this147;}return ClassField;}(AbstractClassPart);var ClassMethod=function(_AbstractClassPart2){_inherits(ClassMethod,_AbstractClassPart2);/**
     * @param {?} name
     * @param {?} params
     * @param {?} body
     * @param {?=} type
     * @param {?=} modifiers
     */function ClassMethod(name,params,body){var type=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var modifiers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;_classCallCheck(this,ClassMethod);var _this148=_possibleConstructorReturn(this,(ClassMethod.__proto__||Object.getPrototypeOf(ClassMethod)).call(this,type,modifiers));_this148.name=name;_this148.params=params;_this148.body=body;return _this148;}return ClassMethod;}(AbstractClassPart);var ClassGetter=function(_AbstractClassPart3){_inherits(ClassGetter,_AbstractClassPart3);/**
     * @param {?} name
     * @param {?} body
     * @param {?=} type
     * @param {?=} modifiers
     */function ClassGetter(name,body){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var modifiers=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;_classCallCheck(this,ClassGetter);var _this149=_possibleConstructorReturn(this,(ClassGetter.__proto__||Object.getPrototypeOf(ClassGetter)).call(this,type,modifiers));_this149.name=name;_this149.body=body;return _this149;}return ClassGetter;}(AbstractClassPart);var ClassStmt=function(_Statement5){_inherits(ClassStmt,_Statement5);/**
     * @param {?} name
     * @param {?} parent
     * @param {?} fields
     * @param {?} getters
     * @param {?} constructorMethod
     * @param {?} methods
     * @param {?=} modifiers
     * @param {?=} sourceSpan
     */function ClassStmt(name,parent,fields,getters,constructorMethod,methods){var modifiers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:null;var sourceSpan=arguments[7];_classCallCheck(this,ClassStmt);var _this150=_possibleConstructorReturn(this,(ClassStmt.__proto__||Object.getPrototypeOf(ClassStmt)).call(this,modifiers,sourceSpan));_this150.name=name;_this150.parent=parent;_this150.fields=fields;_this150.getters=getters;_this150.constructorMethod=constructorMethod;_this150.methods=methods;return _this150;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ClassStmt,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitDeclareClassStmt(this,context);}}]);return ClassStmt;}(Statement);var IfStmt=function(_Statement6){_inherits(IfStmt,_Statement6);/**
     * @param {?} condition
     * @param {?} trueCase
     * @param {?=} falseCase
     * @param {?=} sourceSpan
     */function IfStmt(condition,trueCase){var falseCase=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var sourceSpan=arguments[3];_classCallCheck(this,IfStmt);var _this151=_possibleConstructorReturn(this,(IfStmt.__proto__||Object.getPrototypeOf(IfStmt)).call(this,null,sourceSpan));_this151.condition=condition;_this151.trueCase=trueCase;_this151.falseCase=falseCase;return _this151;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(IfStmt,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitIfStmt(this,context);}}]);return IfStmt;}(Statement);var TryCatchStmt=function(_Statement7){_inherits(TryCatchStmt,_Statement7);/**
     * @param {?} bodyStmts
     * @param {?} catchStmts
     * @param {?=} sourceSpan
     */function TryCatchStmt(bodyStmts,catchStmts,sourceSpan){_classCallCheck(this,TryCatchStmt);var _this152=_possibleConstructorReturn(this,(TryCatchStmt.__proto__||Object.getPrototypeOf(TryCatchStmt)).call(this,null,sourceSpan));_this152.bodyStmts=bodyStmts;_this152.catchStmts=catchStmts;return _this152;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(TryCatchStmt,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitTryCatchStmt(this,context);}}]);return TryCatchStmt;}(Statement);var ThrowStmt=function(_Statement8){_inherits(ThrowStmt,_Statement8);/**
     * @param {?} error
     * @param {?=} sourceSpan
     */function ThrowStmt(error,sourceSpan){_classCallCheck(this,ThrowStmt);var _this153=_possibleConstructorReturn(this,(ThrowStmt.__proto__||Object.getPrototypeOf(ThrowStmt)).call(this,null,sourceSpan));_this153.error=error;return _this153;}/**
     * @param {?} visitor
     * @param {?} context
     * @return {?}
     */_createClass(ThrowStmt,[{key:'visitStatement',value:function visitStatement(visitor,context){return visitor.visitThrowStmt(this,context);}}]);return ThrowStmt;}(Statement);var ExpressionTransformer=function(){function ExpressionTransformer(){_classCallCheck(this,ExpressionTransformer);}_createClass(ExpressionTransformer,[{key:'visitReadVarExpr',/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */value:function visitReadVarExpr(ast,context){return ast;}/**
     * @param {?} expr
     * @param {?} context
     * @return {?}
     */},{key:'visitWriteVarExpr',value:function visitWriteVarExpr(expr,context){return new WriteVarExpr(expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan);}/**
     * @param {?} expr
     * @param {?} context
     * @return {?}
     */},{key:'visitWriteKeyExpr',value:function visitWriteKeyExpr(expr,context){return new WriteKeyExpr(expr.receiver.visitExpression(this,context),expr.index.visitExpression(this,context),expr.value.visitExpression(this,context),expr.type,expr.sourceSpan);}/**
     * @param {?} expr
     * @param {?} context
     * @return {?}
     */},{key:'visitWritePropExpr',value:function visitWritePropExpr(expr,context){return new WritePropExpr(expr.receiver.visitExpression(this,context),expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInvokeMethodExpr',value:function visitInvokeMethodExpr(ast,context){var/** @type {?} */method=ast.builtin||ast.name;return new InvokeMethodExpr(ast.receiver.visitExpression(this,context),method,this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInvokeFunctionExpr',value:function visitInvokeFunctionExpr(ast,context){return new InvokeFunctionExpr(ast.fn.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInstantiateExpr',value:function visitInstantiateExpr(ast,context){return new InstantiateExpr(ast.classExpr.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralExpr',value:function visitLiteralExpr(ast,context){return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitExternalExpr',value:function visitExternalExpr(ast,context){return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitConditionalExpr',value:function visitConditionalExpr(ast,context){return new ConditionalExpr(ast.condition.visitExpression(this,context),ast.trueCase.visitExpression(this,context),ast.falseCase.visitExpression(this,context),ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitNotExpr',value:function visitNotExpr(ast,context){return new NotExpr(ast.condition.visitExpression(this,context),ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitCastExpr',value:function visitCastExpr(ast,context){return new CastExpr(ast.value.visitExpression(this,context),context,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitFunctionExpr',value:function visitFunctionExpr(ast,context){// Don't descend into nested functions
return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitBinaryOperatorExpr',value:function visitBinaryOperatorExpr(ast,context){return new BinaryOperatorExpr(ast.operator,ast.lhs.visitExpression(this,context),ast.rhs.visitExpression(this,context),ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitReadPropExpr',value:function visitReadPropExpr(ast,context){return new ReadPropExpr(ast.receiver.visitExpression(this,context),ast.name,ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitReadKeyExpr',value:function visitReadKeyExpr(ast,context){return new ReadKeyExpr(ast.receiver.visitExpression(this,context),ast.index.visitExpression(this,context),ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralArrayExpr',value:function visitLiteralArrayExpr(ast,context){return new LiteralArrayExpr(this.visitAllExpressions(ast.entries,context),ast.type,ast.sourceSpan);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralMapExpr',value:function visitLiteralMapExpr(ast,context){var _this154=this;var/** @type {?} */entries=ast.entries.map(function(entry){return new LiteralMapEntry(entry.key,entry.value.visitExpression(_this154,context),entry.quoted);});var/** @type {?} */mapType=new MapType(ast.valueType);return new LiteralMapExpr(entries,mapType,ast.sourceSpan);}/**
     * @param {?} exprs
     * @param {?} context
     * @return {?}
     */},{key:'visitAllExpressions',value:function visitAllExpressions(exprs,context){var _this155=this;return exprs.map(function(expr){return expr.visitExpression(_this155,context);});}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitDeclareVarStmt',value:function visitDeclareVarStmt(stmt,context){return new DeclareVarStmt(stmt.name,stmt.value.visitExpression(this,context),stmt.type,stmt.modifiers,stmt.sourceSpan);}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitDeclareFunctionStmt',value:function visitDeclareFunctionStmt(stmt,context){// Don't descend into nested functions
return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitExpressionStmt',value:function visitExpressionStmt(stmt,context){return new ExpressionStatement(stmt.expr.visitExpression(this,context),stmt.sourceSpan);}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitReturnStmt',value:function visitReturnStmt(stmt,context){return new ReturnStatement(stmt.value.visitExpression(this,context),stmt.sourceSpan);}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitDeclareClassStmt',value:function visitDeclareClassStmt(stmt,context){// Don't descend into nested functions
return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitIfStmt',value:function visitIfStmt(stmt,context){return new IfStmt(stmt.condition.visitExpression(this,context),this.visitAllStatements(stmt.trueCase,context),this.visitAllStatements(stmt.falseCase,context),stmt.sourceSpan);}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitTryCatchStmt',value:function visitTryCatchStmt(stmt,context){return new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts,context),this.visitAllStatements(stmt.catchStmts,context),stmt.sourceSpan);}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitThrowStmt',value:function visitThrowStmt(stmt,context){return new ThrowStmt(stmt.error.visitExpression(this,context),stmt.sourceSpan);}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitCommentStmt',value:function visitCommentStmt(stmt,context){return stmt;}/**
     * @param {?} stmts
     * @param {?} context
     * @return {?}
     */},{key:'visitAllStatements',value:function visitAllStatements(stmts,context){var _this156=this;return stmts.map(function(stmt){return stmt.visitStatement(_this156,context);});}}]);return ExpressionTransformer;}();var RecursiveExpressionVisitor=function(){function RecursiveExpressionVisitor(){_classCallCheck(this,RecursiveExpressionVisitor);}_createClass(RecursiveExpressionVisitor,[{key:'visitReadVarExpr',/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */value:function visitReadVarExpr(ast,context){return ast;}/**
     * @param {?} expr
     * @param {?} context
     * @return {?}
     */},{key:'visitWriteVarExpr',value:function visitWriteVarExpr(expr,context){expr.value.visitExpression(this,context);return expr;}/**
     * @param {?} expr
     * @param {?} context
     * @return {?}
     */},{key:'visitWriteKeyExpr',value:function visitWriteKeyExpr(expr,context){expr.receiver.visitExpression(this,context);expr.index.visitExpression(this,context);expr.value.visitExpression(this,context);return expr;}/**
     * @param {?} expr
     * @param {?} context
     * @return {?}
     */},{key:'visitWritePropExpr',value:function visitWritePropExpr(expr,context){expr.receiver.visitExpression(this,context);expr.value.visitExpression(this,context);return expr;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInvokeMethodExpr',value:function visitInvokeMethodExpr(ast,context){ast.receiver.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInvokeFunctionExpr',value:function visitInvokeFunctionExpr(ast,context){ast.fn.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitInstantiateExpr',value:function visitInstantiateExpr(ast,context){ast.classExpr.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralExpr',value:function visitLiteralExpr(ast,context){return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitExternalExpr',value:function visitExternalExpr(ast,context){return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitConditionalExpr',value:function visitConditionalExpr(ast,context){ast.condition.visitExpression(this,context);ast.trueCase.visitExpression(this,context);ast.falseCase.visitExpression(this,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitNotExpr',value:function visitNotExpr(ast,context){ast.condition.visitExpression(this,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitCastExpr',value:function visitCastExpr(ast,context){ast.value.visitExpression(this,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitFunctionExpr',value:function visitFunctionExpr(ast,context){return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitBinaryOperatorExpr',value:function visitBinaryOperatorExpr(ast,context){ast.lhs.visitExpression(this,context);ast.rhs.visitExpression(this,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitReadPropExpr',value:function visitReadPropExpr(ast,context){ast.receiver.visitExpression(this,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitReadKeyExpr',value:function visitReadKeyExpr(ast,context){ast.receiver.visitExpression(this,context);ast.index.visitExpression(this,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralArrayExpr',value:function visitLiteralArrayExpr(ast,context){this.visitAllExpressions(ast.entries,context);return ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralMapExpr',value:function visitLiteralMapExpr(ast,context){var _this157=this;ast.entries.forEach(function(entry){return entry.value.visitExpression(_this157,context);});return ast;}/**
     * @param {?} exprs
     * @param {?} context
     * @return {?}
     */},{key:'visitAllExpressions',value:function visitAllExpressions(exprs,context){var _this158=this;exprs.forEach(function(expr){return expr.visitExpression(_this158,context);});}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitDeclareVarStmt',value:function visitDeclareVarStmt(stmt,context){stmt.value.visitExpression(this,context);return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitDeclareFunctionStmt',value:function visitDeclareFunctionStmt(stmt,context){// Don't descend into nested functions
return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitExpressionStmt',value:function visitExpressionStmt(stmt,context){stmt.expr.visitExpression(this,context);return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitReturnStmt',value:function visitReturnStmt(stmt,context){stmt.value.visitExpression(this,context);return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitDeclareClassStmt',value:function visitDeclareClassStmt(stmt,context){// Don't descend into nested functions
return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitIfStmt',value:function visitIfStmt(stmt,context){stmt.condition.visitExpression(this,context);this.visitAllStatements(stmt.trueCase,context);this.visitAllStatements(stmt.falseCase,context);return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitTryCatchStmt',value:function visitTryCatchStmt(stmt,context){this.visitAllStatements(stmt.bodyStmts,context);this.visitAllStatements(stmt.catchStmts,context);return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitThrowStmt',value:function visitThrowStmt(stmt,context){stmt.error.visitExpression(this,context);return stmt;}/**
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitCommentStmt',value:function visitCommentStmt(stmt,context){return stmt;}/**
     * @param {?} stmts
     * @param {?} context
     * @return {?}
     */},{key:'visitAllStatements',value:function visitAllStatements(stmts,context){var _this159=this;stmts.forEach(function(stmt){return stmt.visitStatement(_this159,context);});}}]);return RecursiveExpressionVisitor;}();/**
 * @param {?} varName
 * @param {?} newValue
 * @param {?} expression
 * @return {?}
 */function replaceVarInExpression(varName,newValue,expression){var/** @type {?} */transformer=new _ReplaceVariableTransformer(varName,newValue);return expression.visitExpression(transformer,null);}var _ReplaceVariableTransformer=function(_ExpressionTransforme){_inherits(_ReplaceVariableTransformer,_ExpressionTransforme);/**
     * @param {?} _varName
     * @param {?} _newValue
     */function _ReplaceVariableTransformer(_varName,_newValue){_classCallCheck(this,_ReplaceVariableTransformer);var _this160=_possibleConstructorReturn(this,(_ReplaceVariableTransformer.__proto__||Object.getPrototypeOf(_ReplaceVariableTransformer)).call(this));_this160._varName=_varName;_this160._newValue=_newValue;return _this160;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */_createClass(_ReplaceVariableTransformer,[{key:'visitReadVarExpr',value:function visitReadVarExpr(ast,context){return ast.name==this._varName?this._newValue:ast;}}]);return _ReplaceVariableTransformer;}(ExpressionTransformer);/**
 * @param {?} stmts
 * @return {?}
 */function findReadVarNames(stmts){var/** @type {?} */finder=new _VariableFinder();finder.visitAllStatements(stmts,null);return finder.varNames;}var _VariableFinder=function(_RecursiveExpressionV){_inherits(_VariableFinder,_RecursiveExpressionV);function _VariableFinder(){_classCallCheck(this,_VariableFinder);var _this161=_possibleConstructorReturn(this,(_VariableFinder.__proto__||Object.getPrototypeOf(_VariableFinder)).apply(this,arguments));_this161.varNames=new Set();return _this161;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */_createClass(_VariableFinder,[{key:'visitReadVarExpr',value:function visitReadVarExpr(ast,context){this.varNames.add(ast.name);return null;}}]);return _VariableFinder;}(RecursiveExpressionVisitor);/**
 * @param {?} name
 * @param {?=} type
 * @param {?=} sourceSpan
 * @return {?}
 */function variable(name){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];return new ReadVarExpr(name,type,sourceSpan);}/**
 * @param {?} id
 * @param {?=} typeParams
 * @param {?=} sourceSpan
 * @return {?}
 */function importExpr(id){var typeParams=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];return new ExternalExpr(id,null,typeParams,sourceSpan);}/**
 * @param {?} id
 * @param {?=} typeParams
 * @param {?=} typeModifiers
 * @return {?}
 */function importType(id){var typeParams=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var typeModifiers=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return isPresent(id)?expressionType(importExpr(id,typeParams),typeModifiers):null;}/**
 * @param {?} expr
 * @param {?=} typeModifiers
 * @return {?}
 */function expressionType(expr){var typeModifiers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return isPresent(expr)?new ExpressionType(expr,typeModifiers):null;}/**
 * @param {?} values
 * @param {?=} type
 * @param {?=} sourceSpan
 * @return {?}
 */function literalArr(values){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];return new LiteralArrayExpr(values,type,sourceSpan);}/**
 * @param {?} values
 * @param {?=} type
 * @param {?=} quoted
 * @return {?}
 */function literalMap(values){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var quoted=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return new LiteralMapExpr(values.map(function(entry){return new LiteralMapEntry(entry[0],entry[1],quoted);}),type);}/**
 * @param {?} expr
 * @param {?=} sourceSpan
 * @return {?}
 */function not(expr,sourceSpan){return new NotExpr(expr,sourceSpan);}/**
 * @param {?} params
 * @param {?} body
 * @param {?=} type
 * @param {?=} sourceSpan
 * @return {?}
 */function fn(params,body){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceSpan=arguments[3];return new FunctionExpr(params,body,type,sourceSpan);}/**
 * @param {?} value
 * @param {?=} type
 * @param {?=} sourceSpan
 * @return {?}
 */function literal(value){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var sourceSpan=arguments[2];return new LiteralExpr(value,type,sourceSpan);}var CheckBindingField=/**
     * @param {?} expression
     * @param {?} bindingId
     */function CheckBindingField(expression,bindingId){_classCallCheck(this,CheckBindingField);this.expression=expression;this.bindingId=bindingId;};/**
 * @param {?} builder
 * @return {?}
 */function createCheckBindingField(builder){var/** @type {?} */bindingId=''+builder.fields.length;var/** @type {?} */fieldExpr=createBindFieldExpr(bindingId);// private is fine here as no child view will reference the cached value...
builder.fields.push(new ClassField(fieldExpr.name,null,[StmtModifier.Private]));builder.ctorStmts.push(THIS_EXPR.prop(fieldExpr.name).set(literal(undefined)).toStmt());return new CheckBindingField(fieldExpr,bindingId);}/**
 * @param {?} bindingId
 * @return {?}
 */function createBindFieldExpr(bindingId){return THIS_EXPR.prop('_expr_'+bindingId);}/**
 * @param {?} view
 * @return {?}
 */function isFirstViewCheck(view){return not(view.prop('numberOfChecks'));}/**
 * @param {?} token
 * @return {?}
 */function createDiTokenExpression(token){if(isPresent(token.value)){return literal(token.value);}else{return importExpr(token.identifier);}}/**
 * @param {?} values
 * @return {?}
 */function createInlineArray(values){if(values.length===0){return importExpr(createIdentifier(Identifiers.EMPTY_INLINE_ARRAY));}var/** @type {?} */log2=Math.log(values.length)/Math.log(2);var/** @type {?} */index=Math.ceil(log2);var/** @type {?} */identifierSpec=index<Identifiers.inlineArrays.length?Identifiers.inlineArrays[index]:Identifiers.InlineArrayDynamic;var/** @type {?} */identifier=createIdentifier(identifierSpec);return importExpr(identifier).instantiate([/** @type {?} */literal(values.length)].concat(values));}/**
 * @param {?} fn
 * @param {?} argCount
 * @param {?} pureProxyProp
 * @param {?} builder
 * @return {?}
 */function createPureProxy(fn,argCount,pureProxyProp,builder){builder.fields.push(new ClassField(pureProxyProp.name,null));var/** @type {?} */pureProxyId=argCount<Identifiers.pureProxies.length?Identifiers.pureProxies[argCount]:null;if(!pureProxyId){throw new Error('Unsupported number of argument for pure functions: '+argCount);}builder.ctorStmts.push(THIS_EXPR.prop(pureProxyProp.name).set(importExpr(createIdentifier(pureProxyId)).callFn([fn])).toStmt());}/**
 * @param {?} enumType
 * @param {?} enumValue
 * @return {?}
 */function createEnumExpression(enumType,enumValue){var/** @type {?} */enumName=Object.keys(enumType.runtime).find(function(propName){return enumType.runtime[propName]===enumValue;});if(!enumName){throw new Error('Unknown enum value '+enumValue+' in '+enumType.name);}return importExpr(createEnumIdentifier(enumType,enumName));}var/** @type {?} */VAL_UNWRAPPER_VAR=variable('valUnwrapper');var EventHandlerVars=function EventHandlerVars(){_classCallCheck(this,EventHandlerVars);};EventHandlerVars.event=variable('$event');var ConvertActionBindingResult=/**
     * @param {?} stmts
     * @param {?} allowDefault
     */function ConvertActionBindingResult(stmts,allowDefault){_classCallCheck(this,ConvertActionBindingResult);this.stmts=stmts;this.allowDefault=allowDefault;};/**
 * Converts the given expression AST into an executable output AST, assuming the expression is
 * used in an action binding (e.g. an event handler).
 * @param {?} localResolver
 * @param {?} implicitReceiver
 * @param {?} action
 * @param {?} bindingId
 * @return {?}
 */function convertActionBinding(localResolver,implicitReceiver,action,bindingId){if(!localResolver){localResolver=new DefaultLocalResolver();}var/** @type {?} */actionWithoutBuiltins=convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){// Note: no caching for literal arrays in actions.
return function(args){return literalArr(args);};},createLiteralMapConverter:function createLiteralMapConverter(keys){// Note: no caching for literal maps in actions.
return function(args){return literalMap(/** @type {?} */keys.map(function(key,i){return[key,args[i]];}));};},createPipeConverter:function createPipeConverter(name){throw new Error('Illegal State: Actions are not allowed to contain pipes. Pipe: '+name);}},action);var/** @type {?} */visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId);var/** @type {?} */actionStmts=[];flattenStatements(actionWithoutBuiltins.visit(visitor,_Mode.Statement),actionStmts);prependTemporaryDecls(visitor.temporaryCount,bindingId,actionStmts);var/** @type {?} */lastIndex=actionStmts.length-1;var/** @type {?} */preventDefaultVar=null;if(lastIndex>=0){var/** @type {?} */lastStatement=actionStmts[lastIndex];var/** @type {?} */returnExpr=convertStmtIntoExpression(lastStatement);if(returnExpr){// Note: We need to cast the result of the method call to dynamic,
// as it might be a void method!
preventDefaultVar=createPreventDefaultVar(bindingId);actionStmts[lastIndex]=preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false))).toDeclStmt(null,[StmtModifier.Final]);}}return new ConvertActionBindingResult(actionStmts,preventDefaultVar);}/**
 * @param {?} converterFactory
 * @param {?} ast
 * @return {?}
 */function convertPropertyBindingBuiltins(converterFactory,ast){return convertBuiltins(converterFactory,ast);}var ConvertPropertyBindingResult=/**
     * @param {?} stmts
     * @param {?} currValExpr
     */function ConvertPropertyBindingResult(stmts,currValExpr){_classCallCheck(this,ConvertPropertyBindingResult);this.stmts=stmts;this.currValExpr=currValExpr;};/**
 * Converts the given expression AST into an executable output AST, assuming the expression
 * is used in property binding. The expression has to be preprocessed via
 * `convertPropertyBindingBuiltins`.
 * @param {?} localResolver
 * @param {?} implicitReceiver
 * @param {?} expressionWithoutBuiltins
 * @param {?} bindingId
 * @return {?}
 */function convertPropertyBinding(localResolver,implicitReceiver,expressionWithoutBuiltins,bindingId){if(!localResolver){localResolver=new DefaultLocalResolver();}var/** @type {?} */currValExpr=createCurrValueExpr(bindingId);var/** @type {?} */stmts=[];var/** @type {?} */visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId);var/** @type {?} */outputExpr=expressionWithoutBuiltins.visit(visitor,_Mode.Expression);if(visitor.temporaryCount){for(var/** @type {?} */i=0;i<visitor.temporaryCount;i++){stmts.push(temporaryDeclaration(bindingId,i));}}stmts.push(currValExpr.set(outputExpr).toDeclStmt(null,[StmtModifier.Final]));return new ConvertPropertyBindingResult(stmts,currValExpr);}var LegacyConvertPropertyBindingResult=/**
     * @param {?} stmts
     * @param {?} currValExpr
     * @param {?} forceUpdate
     */function LegacyConvertPropertyBindingResult(stmts,currValExpr,forceUpdate){_classCallCheck(this,LegacyConvertPropertyBindingResult);this.stmts=stmts;this.currValExpr=currValExpr;this.forceUpdate=forceUpdate;};/**
 * Converts the given expression AST into an executable output AST, assuming the expression is
 * used in a property binding.
 * @param {?} builder
 * @param {?} nameResolver
 * @param {?} implicitReceiver
 * @param {?} expression
 * @param {?} bindingId
 * @return {?}
 */function legacyConvertPropertyBinding(builder,nameResolver,implicitReceiver,expression,bindingId){if(!nameResolver){nameResolver=new LegacyDefaultNameResolver();}var/** @type {?} */needsValueUnwrapper=false;var/** @type {?} */expressionWithoutBuiltins=convertBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){return function(args){return legacyCreateCachedLiteralArray(builder,args);};},createLiteralMapConverter:function createLiteralMapConverter(keys){return function(args){return legacyCreateCachedLiteralMap(builder,/** @type {?} */keys.map(function(key,i){return[key,args[i]];}));};},createPipeConverter:function createPipeConverter(name){needsValueUnwrapper=true;return function(args){return VAL_UNWRAPPER_VAR.callMethod('unwrap',[nameResolver.callPipe(name,args[0],args.slice(1))]);};}},expression);var _convertPropertyBindi=convertPropertyBinding(nameResolver,implicitReceiver,expressionWithoutBuiltins,bindingId),stmts=_convertPropertyBindi.stmts,currValExpr=_convertPropertyBindi.currValExpr;var/** @type {?} */forceUpdate=null;if(needsValueUnwrapper){var/** @type {?} */initValueUnwrapperStmt=VAL_UNWRAPPER_VAR.callMethod('reset',[]).toStmt();stmts.unshift(initValueUnwrapperStmt);forceUpdate=VAL_UNWRAPPER_VAR.prop('hasWrappedValue');}return new LegacyConvertPropertyBindingResult(stmts,currValExpr,forceUpdate);}/**
 * Creates variables that are shared by multiple calls to `convertActionBinding` /
 * `convertPropertyBinding`
 * @param {?} stmts
 * @return {?}
 */function legacyCreateSharedBindingVariablesIfNeeded(stmts){var/** @type {?} */unwrapperStmts=[];var/** @type {?} */readVars=findReadVarNames(stmts);if(readVars.has(VAL_UNWRAPPER_VAR.name)){unwrapperStmts.push(VAL_UNWRAPPER_VAR.set(importExpr(createIdentifier(Identifiers.ValueUnwrapper)).instantiate([])).toDeclStmt(null,[StmtModifier.Final]));}return unwrapperStmts;}/**
 * @param {?} converterFactory
 * @param {?} ast
 * @return {?}
 */function convertBuiltins(converterFactory,ast){var/** @type {?} */visitor=new _BuiltinAstConverter(converterFactory);return ast.visit(visitor);}/**
 * @param {?} bindingId
 * @param {?} temporaryNumber
 * @return {?}
 */function temporaryName(bindingId,temporaryNumber){return'tmp_'+bindingId+'_'+temporaryNumber;}/**
 * @param {?} bindingId
 * @param {?} temporaryNumber
 * @return {?}
 */function temporaryDeclaration(bindingId,temporaryNumber){return new DeclareVarStmt(temporaryName(bindingId,temporaryNumber),NULL_EXPR);}/**
 * @param {?} temporaryCount
 * @param {?} bindingId
 * @param {?} statements
 * @return {?}
 */function prependTemporaryDecls(temporaryCount,bindingId,statements){for(var/** @type {?} */i=temporaryCount-1;i>=0;i--){statements.unshift(temporaryDeclaration(bindingId,i));}}var _Mode={};_Mode.Statement=0;_Mode.Expression=1;_Mode[_Mode.Statement]="Statement";_Mode[_Mode.Expression]="Expression";/**
 * @param {?} mode
 * @param {?} ast
 * @return {?}
 */function ensureStatementMode(mode,ast){if(mode!==_Mode.Statement){throw new Error('Expected a statement, but saw '+ast);}}/**
 * @param {?} mode
 * @param {?} ast
 * @return {?}
 */function ensureExpressionMode(mode,ast){if(mode!==_Mode.Expression){throw new Error('Expected an expression, but saw '+ast);}}/**
 * @param {?} mode
 * @param {?} expr
 * @return {?}
 */function convertToStatementIfNeeded(mode,expr){if(mode===_Mode.Statement){return expr.toStmt();}else{return expr;}}var _BuiltinAstConverter=function(_AstTransformer){_inherits(_BuiltinAstConverter,_AstTransformer);/**
     * @param {?} _converterFactory
     */function _BuiltinAstConverter(_converterFactory){_classCallCheck(this,_BuiltinAstConverter);var _this162=_possibleConstructorReturn(this,(_BuiltinAstConverter.__proto__||Object.getPrototypeOf(_BuiltinAstConverter)).call(this));_this162._converterFactory=_converterFactory;return _this162;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */_createClass(_BuiltinAstConverter,[{key:'visitPipe',value:function visitPipe(ast,context){var _this163=this;var/** @type {?} */args=[ast.exp].concat(_toConsumableArray(ast.args)).map(function(ast){return ast.visit(_this163,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createPipeConverter(ast.name,args.length));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralArray',value:function visitLiteralArray(ast,context){var _this164=this;var/** @type {?} */args=ast.expressions.map(function(ast){return ast.visit(_this164,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createLiteralArrayConverter(ast.expressions.length));}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitLiteralMap',value:function visitLiteralMap(ast,context){var _this165=this;var/** @type {?} */args=ast.values.map(function(ast){return ast.visit(_this165,context);});return new BuiltinFunctionCall(ast.span,args,this._converterFactory.createLiteralMapConverter(ast.keys));}}]);return _BuiltinAstConverter;}(AstTransformer);var _AstToIrVisitor=function(){/**
     * @param {?} _localResolver
     * @param {?} _implicitReceiver
     * @param {?} bindingId
     */function _AstToIrVisitor(_localResolver,_implicitReceiver,bindingId){_classCallCheck(this,_AstToIrVisitor);this._localResolver=_localResolver;this._implicitReceiver=_implicitReceiver;this.bindingId=bindingId;this._nodeMap=new Map();this._resultMap=new Map();this._currentTemporary=0;this.temporaryCount=0;}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */_createClass(_AstToIrVisitor,[{key:'visitBinary',value:function visitBinary(ast,mode){var/** @type {?} */op=void 0;switch(ast.operation){case'+':op=BinaryOperator.Plus;break;case'-':op=BinaryOperator.Minus;break;case'*':op=BinaryOperator.Multiply;break;case'/':op=BinaryOperator.Divide;break;case'%':op=BinaryOperator.Modulo;break;case'&&':op=BinaryOperator.And;break;case'||':op=BinaryOperator.Or;break;case'==':op=BinaryOperator.Equals;break;case'!=':op=BinaryOperator.NotEquals;break;case'===':op=BinaryOperator.Identical;break;case'!==':op=BinaryOperator.NotIdentical;break;case'<':op=BinaryOperator.Lower;break;case'>':op=BinaryOperator.Bigger;break;case'<=':op=BinaryOperator.LowerEquals;break;case'>=':op=BinaryOperator.BiggerEquals;break;default:throw new Error('Unsupported operation '+ast.operation);}return convertToStatementIfNeeded(mode,new BinaryOperatorExpr(op,this.visit(ast.left,_Mode.Expression),this.visit(ast.right,_Mode.Expression)));}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitChain',value:function visitChain(ast,mode){ensureStatementMode(mode,ast);return this.visitAll(ast.expressions,mode);}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitConditional',value:function visitConditional(ast,mode){var/** @type {?} */value=this.visit(ast.condition,_Mode.Expression);return convertToStatementIfNeeded(mode,value.conditional(this.visit(ast.trueExp,_Mode.Expression),this.visit(ast.falseExp,_Mode.Expression)));}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitPipe',value:function visitPipe(ast,mode){throw new Error('Illegal state: Pipes should have been converted into functions. Pipe: '+ast.name);}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitFunctionCall',value:function visitFunctionCall(ast,mode){var/** @type {?} */convertedArgs=this.visitAll(ast.args,_Mode.Expression);var/** @type {?} */fnResult=void 0;if(ast instanceof BuiltinFunctionCall){fnResult=ast.converter(convertedArgs);}else{fnResult=this.visit(ast.target,_Mode.Expression).callFn(convertedArgs);}return convertToStatementIfNeeded(mode,fnResult);}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitImplicitReceiver',value:function visitImplicitReceiver(ast,mode){ensureExpressionMode(mode,ast);return this._implicitReceiver;}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitInterpolation',value:function visitInterpolation(ast,mode){ensureExpressionMode(mode,ast);var/** @type {?} */args=[literal(ast.expressions.length)];for(var/** @type {?} */i=0;i<ast.strings.length-1;i++){args.push(literal(ast.strings[i]));args.push(this.visit(ast.expressions[i],_Mode.Expression));}args.push(literal(ast.strings[ast.strings.length-1]));return ast.expressions.length<=9?importExpr(createIdentifier(Identifiers.inlineInterpolate)).callFn(args):importExpr(createIdentifier(Identifiers.interpolate)).callFn([args[0],literalArr(args.slice(1))]);}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitKeyedRead',value:function visitKeyedRead(ast,mode){var/** @type {?} */leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{return convertToStatementIfNeeded(mode,this.visit(ast.obj,_Mode.Expression).key(this.visit(ast.key,_Mode.Expression)));}}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitKeyedWrite',value:function visitKeyedWrite(ast,mode){var/** @type {?} */obj=this.visit(ast.obj,_Mode.Expression);var/** @type {?} */key=this.visit(ast.key,_Mode.Expression);var/** @type {?} */value=this.visit(ast.value,_Mode.Expression);return convertToStatementIfNeeded(mode,obj.key(key).set(value));}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitLiteralArray',value:function visitLiteralArray(ast,mode){throw new Error('Illegal State: literal arrays should have been converted into functions');}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitLiteralMap',value:function visitLiteralMap(ast,mode){throw new Error('Illegal State: literal maps should have been converted into functions');}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitLiteralPrimitive',value:function visitLiteralPrimitive(ast,mode){return convertToStatementIfNeeded(mode,literal(ast.value));}/**
     * @param {?} name
     * @return {?}
     */},{key:'_getLocal',value:function _getLocal(name){return this._localResolver.getLocal(name);}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitMethodCall',value:function visitMethodCall(ast,mode){var/** @type {?} */leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var/** @type {?} */args=this.visitAll(ast.args,_Mode.Expression);var/** @type {?} */result=null;var/** @type {?} */receiver=this.visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){var/** @type {?} */varExpr=this._getLocal(ast.name);if(varExpr){result=varExpr.callFn(args);}}if(isBlank(result)){result=receiver.callMethod(ast.name,args);}return convertToStatementIfNeeded(mode,result);}}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitPrefixNot',value:function visitPrefixNot(ast,mode){return convertToStatementIfNeeded(mode,not(this.visit(ast.expression,_Mode.Expression)));}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitPropertyRead',value:function visitPropertyRead(ast,mode){var/** @type {?} */leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var/** @type {?} */result=null;var/** @type {?} */receiver=this.visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){result=this._getLocal(ast.name);}if(isBlank(result)){result=receiver.prop(ast.name);}return convertToStatementIfNeeded(mode,result);}}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitPropertyWrite',value:function visitPropertyWrite(ast,mode){var/** @type {?} */receiver=this.visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){var/** @type {?} */varExpr=this._getLocal(ast.name);if(varExpr){throw new Error('Cannot assign to a reference or variable!');}}return convertToStatementIfNeeded(mode,receiver.prop(ast.name).set(this.visit(ast.value,_Mode.Expression)));}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitSafePropertyRead',value:function visitSafePropertyRead(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitSafeMethodCall',value:function visitSafeMethodCall(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);}/**
     * @param {?} asts
     * @param {?} mode
     * @return {?}
     */},{key:'visitAll',value:function visitAll(asts,mode){var _this166=this;return asts.map(function(ast){return _this166.visit(ast,mode);});}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visitQuote',value:function visitQuote(ast,mode){throw new Error('Quotes are not supported for evaluation!');}/**
     * @param {?} ast
     * @param {?} mode
     * @return {?}
     */},{key:'visit',value:function visit(ast,mode){var/** @type {?} */result=this._resultMap.get(ast);if(result)return result;return(this._nodeMap.get(ast)||ast).visit(this,mode);}/**
     * @param {?} ast
     * @param {?} leftMostSafe
     * @param {?} mode
     * @return {?}
     */},{key:'convertSafeAccess',value:function convertSafeAccess(ast,leftMostSafe,mode){// If the expression contains a safe access node on the left it needs to be converted to
// an expression that guards the access to the member by checking the receiver for blank. As
// execution proceeds from left to right, the left most part of the expression must be guarded
// first but, because member access is left associative, the right side of the expression is at
// the top of the AST. The desired result requires lifting a copy of the the left part of the
// expression up to test it for blank before generating the unguarded version.
// Consider, for example the following expression: a?.b.c?.d.e
// This results in the ast:
//         .
//        / \
//       ?.   e
//      /  \
//     .    d
//    / \
//   ?.  c
//  /  \
// a    b
// The following tree should be generated:
//
//        /---- ? ----\
//       /      |      \
//     a   /--- ? ---\  null
//        /     |     \
//       .      .     null
//      / \    / \
//     .  c   .   e
//    / \    / \
//   a   b  ,   d
//         / \
//        .   c
//       / \
//      a   b
//
// Notice that the first guard condition is the left hand of the left most safe access node
// which comes in as leftMostSafe to this routine.
var/** @type {?} */guardedExpression=this.visit(leftMostSafe.receiver,_Mode.Expression);var/** @type {?} */temporary=void 0;if(this.needsTemporary(leftMostSafe.receiver)){// If the expression has method calls or pipes then we need to save the result into a
// temporary variable to avoid calling stateful or impure code more than once.
temporary=this.allocateTemporary();// Preserve the result in the temporary variable
guardedExpression=temporary.set(guardedExpression);// Ensure all further references to the guarded expression refer to the temporary instead.
this._resultMap.set(leftMostSafe.receiver,temporary);}var/** @type {?} */condition=guardedExpression.isBlank();// Convert the ast to an unguarded access to the receiver's member. The map will substitute
// leftMostNode with its unguarded version in the call to `this.visit()`.
if(leftMostSafe instanceof SafeMethodCall){this._nodeMap.set(leftMostSafe,new MethodCall(leftMostSafe.span,leftMostSafe.receiver,leftMostSafe.name,leftMostSafe.args));}else{this._nodeMap.set(leftMostSafe,new PropertyRead(leftMostSafe.span,leftMostSafe.receiver,leftMostSafe.name));}// Recursively convert the node now without the guarded member access.
var/** @type {?} */access=this.visit(ast,_Mode.Expression);// Remove the mapping. This is not strictly required as the converter only traverses each node
// once but is safer if the conversion is changed to traverse the nodes more than once.
this._nodeMap.delete(leftMostSafe);// If we allcoated a temporary, release it.
if(temporary){this.releaseTemporary(temporary);}// Produce the conditional
return convertToStatementIfNeeded(mode,condition.conditional(literal(null),access));}/**
     * @param {?} ast
     * @return {?}
     */},{key:'leftMostSafeNode',value:function leftMostSafeNode(ast){var _this167=this;var/** @type {?} */visit=function visit(visitor,ast){return(_this167._nodeMap.get(ast)||ast).visit(visitor);};return ast.visit({/**
             * @param {?} ast
             * @return {?}
             */visitBinary:function visitBinary(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitChain:function visitChain(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitConditional:function visitConditional(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitFunctionCall:function visitFunctionCall(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitImplicitReceiver:function visitImplicitReceiver(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitInterpolation:function visitInterpolation(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitKeyedRead:function visitKeyedRead(ast){return visit(this,ast.obj);},/**
             * @param {?} ast
             * @return {?}
             */visitKeyedWrite:function visitKeyedWrite(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitLiteralArray:function visitLiteralArray(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitLiteralMap:function visitLiteralMap(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitLiteralPrimitive:function visitLiteralPrimitive(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitMethodCall:function visitMethodCall(ast){return visit(this,ast.receiver);},/**
             * @param {?} ast
             * @return {?}
             */visitPipe:function visitPipe(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitPrefixNot:function visitPrefixNot(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitPropertyRead:function visitPropertyRead(ast){return visit(this,ast.receiver);},/**
             * @param {?} ast
             * @return {?}
             */visitPropertyWrite:function visitPropertyWrite(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitQuote:function visitQuote(ast){return null;},/**
             * @param {?} ast
             * @return {?}
             */visitSafeMethodCall:function visitSafeMethodCall(ast){return visit(this,ast.receiver)||ast;},/**
             * @param {?} ast
             * @return {?}
             */visitSafePropertyRead:function visitSafePropertyRead(ast){return visit(this,ast.receiver)||ast;}});}/**
     * @param {?} ast
     * @return {?}
     */},{key:'needsTemporary',value:function needsTemporary(ast){var _this168=this;var/** @type {?} */visit=function visit(visitor,ast){return ast&&(_this168._nodeMap.get(ast)||ast).visit(visitor);};var/** @type {?} */visitSome=function visitSome(visitor,ast){return ast.some(function(ast){return visit(visitor,ast);});};return ast.visit({/**
             * @param {?} ast
             * @return {?}
             */visitBinary:function visitBinary(ast){return visit(this,ast.left)||visit(this,ast.right);},/**
             * @param {?} ast
             * @return {?}
             */visitChain:function visitChain(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitConditional:function visitConditional(ast){return visit(this,ast.condition)||visit(this,ast.trueExp)||visit(this,ast.falseExp);},/**
             * @param {?} ast
             * @return {?}
             */visitFunctionCall:function visitFunctionCall(ast){return true;},/**
             * @param {?} ast
             * @return {?}
             */visitImplicitReceiver:function visitImplicitReceiver(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitInterpolation:function visitInterpolation(ast){return visitSome(this,ast.expressions);},/**
             * @param {?} ast
             * @return {?}
             */visitKeyedRead:function visitKeyedRead(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitKeyedWrite:function visitKeyedWrite(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitLiteralArray:function visitLiteralArray(ast){return true;},/**
             * @param {?} ast
             * @return {?}
             */visitLiteralMap:function visitLiteralMap(ast){return true;},/**
             * @param {?} ast
             * @return {?}
             */visitLiteralPrimitive:function visitLiteralPrimitive(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitMethodCall:function visitMethodCall(ast){return true;},/**
             * @param {?} ast
             * @return {?}
             */visitPipe:function visitPipe(ast){return true;},/**
             * @param {?} ast
             * @return {?}
             */visitPrefixNot:function visitPrefixNot(ast){return visit(this,ast.expression);},/**
             * @param {?} ast
             * @return {?}
             */visitPropertyRead:function visitPropertyRead(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitPropertyWrite:function visitPropertyWrite(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitQuote:function visitQuote(ast){return false;},/**
             * @param {?} ast
             * @return {?}
             */visitSafeMethodCall:function visitSafeMethodCall(ast){return true;},/**
             * @param {?} ast
             * @return {?}
             */visitSafePropertyRead:function visitSafePropertyRead(ast){return false;}});}/**
     * @return {?}
     */},{key:'allocateTemporary',value:function allocateTemporary(){var/** @type {?} */tempNumber=this._currentTemporary++;this.temporaryCount=Math.max(this._currentTemporary,this.temporaryCount);return new ReadVarExpr(temporaryName(this.bindingId,tempNumber));}/**
     * @param {?} temporary
     * @return {?}
     */},{key:'releaseTemporary',value:function releaseTemporary(temporary){this._currentTemporary--;if(temporary.name!=temporaryName(this.bindingId,this._currentTemporary)){throw new Error('Temporary '+temporary.name+' released out of order');}}}]);return _AstToIrVisitor;}();/**
 * @param {?} arg
 * @param {?} output
 * @return {?}
 */function flattenStatements(arg,output){if(Array.isArray(arg)){arg.forEach(function(entry){return flattenStatements(entry,output);});}else{output.push(arg);}}/**
 * @param {?} builder
 * @param {?} values
 * @return {?}
 */function legacyCreateCachedLiteralArray(builder,values){if(values.length===0){return importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));}var/** @type {?} */proxyExpr=THIS_EXPR.prop('_arr_'+builder.fields.length);var/** @type {?} */proxyParams=[];var/** @type {?} */proxyReturnEntries=[];for(var/** @type {?} */i=0;i<values.length;i++){var/** @type {?} */paramName='p'+i;proxyParams.push(new FnParam(paramName));proxyReturnEntries.push(variable(paramName));}createPureProxy(fn(proxyParams,[new ReturnStatement(literalArr(proxyReturnEntries))],new ArrayType(DYNAMIC_TYPE)),values.length,proxyExpr,builder);return proxyExpr.callFn(values);}/**
 * @param {?} builder
 * @param {?} entries
 * @return {?}
 */function legacyCreateCachedLiteralMap(builder,entries){if(entries.length===0){return importExpr(createIdentifier(Identifiers.EMPTY_MAP));}var/** @type {?} */proxyExpr=THIS_EXPR.prop('_map_'+builder.fields.length);var/** @type {?} */proxyParams=[];var/** @type {?} */proxyReturnEntries=[];var/** @type {?} */values=[];for(var/** @type {?} */i=0;i<entries.length;i++){var/** @type {?} */paramName='p'+i;proxyParams.push(new FnParam(paramName));proxyReturnEntries.push([entries[i][0],variable(paramName)]);values.push(/** @type {?} */entries[i][1]);}createPureProxy(fn(proxyParams,[new ReturnStatement(literalMap(proxyReturnEntries))],new MapType(DYNAMIC_TYPE)),entries.length,proxyExpr,builder);return proxyExpr.callFn(values);}var DefaultLocalResolver=function(){function DefaultLocalResolver(){_classCallCheck(this,DefaultLocalResolver);}_createClass(DefaultLocalResolver,[{key:'getLocal',/**
     * @param {?} name
     * @return {?}
     */value:function getLocal(name){if(name===EventHandlerVars.event.name){return EventHandlerVars.event;}return null;}}]);return DefaultLocalResolver;}();var LegacyDefaultNameResolver=function(){function LegacyDefaultNameResolver(){_classCallCheck(this,LegacyDefaultNameResolver);}_createClass(LegacyDefaultNameResolver,[{key:'callPipe',/**
     * @param {?} name
     * @param {?} input
     * @param {?} args
     * @return {?}
     */value:function callPipe(name,input,args){return null;}/**
     * @param {?} name
     * @return {?}
     */},{key:'getLocal',value:function getLocal(name){if(name===EventHandlerVars.event.name){return EventHandlerVars.event;}return null;}}]);return LegacyDefaultNameResolver;}();/**
 * @param {?} bindingId
 * @return {?}
 */function createCurrValueExpr(bindingId){return variable('currVal_'+bindingId);// fix syntax highlighting: `
}/**
 * @param {?} bindingId
 * @return {?}
 */function createPreventDefaultVar(bindingId){return variable('pd_'+bindingId);}/**
 * @param {?} stmt
 * @return {?}
 */function convertStmtIntoExpression(stmt){if(stmt instanceof ExpressionStatement){return stmt.expr;}else if(stmt instanceof ReturnStatement){return stmt.value;}return null;}var BuiltinFunctionCall=function(_FunctionCall){_inherits(BuiltinFunctionCall,_FunctionCall);/**
     * @param {?} span
     * @param {?} args
     * @param {?} converter
     */function BuiltinFunctionCall(span,args,converter){_classCallCheck(this,BuiltinFunctionCall);var _this169=_possibleConstructorReturn(this,(BuiltinFunctionCall.__proto__||Object.getPrototypeOf(BuiltinFunctionCall)).call(this,span,null,args));_this169.args=args;_this169.converter=converter;return _this169;}return BuiltinFunctionCall;}(FunctionCall);/**
 * @param {?} view
 * @param {?} renderElement
 * @param {?} boundProp
 * @param {?} oldValue
 * @param {?} evalResult
 * @param {?=} securityContextExpression
 * @return {?}
 */function createCheckRenderBindingStmt(view,renderElement,boundProp,oldValue,evalResult,securityContextExpression){var/** @type {?} */checkStmts=[].concat(_toConsumableArray(evalResult.stmts));var/** @type {?} */securityContext=calcSecurityContext(boundProp,securityContextExpression);switch(boundProp.type){case PropertyBindingType.Property:checkStmts.push(importExpr(createIdentifier(Identifiers.checkRenderProperty)).callFn([view,renderElement,literal(boundProp.name),oldValue,oldValue.set(evalResult.currValExpr),evalResult.forceUpdate||literal(false),securityContext]).toStmt());break;case PropertyBindingType.Attribute:checkStmts.push(importExpr(createIdentifier(Identifiers.checkRenderAttribute)).callFn([view,renderElement,literal(boundProp.name),oldValue,oldValue.set(evalResult.currValExpr),evalResult.forceUpdate||literal(false),securityContext]).toStmt());break;case PropertyBindingType.Class:checkStmts.push(importExpr(createIdentifier(Identifiers.checkRenderClass)).callFn([view,renderElement,literal(boundProp.name),oldValue,oldValue.set(evalResult.currValExpr),evalResult.forceUpdate||literal(false)]).toStmt());break;case PropertyBindingType.Style:checkStmts.push(importExpr(createIdentifier(Identifiers.checkRenderStyle)).callFn([view,renderElement,literal(boundProp.name),literal(boundProp.unit),oldValue,oldValue.set(evalResult.currValExpr),evalResult.forceUpdate||literal(false),securityContext]).toStmt());break;case PropertyBindingType.Animation:throw new Error('Illegal state: Should not come here!');}return checkStmts;}/**
 * @param {?} boundProp
 * @param {?=} securityContextExpression
 * @return {?}
 */function calcSecurityContext(boundProp,securityContextExpression){if(boundProp.securityContext===__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].NONE){return NULL_EXPR;// No sanitization needed.
}if(!boundProp.needsRuntimeSecurityContext){securityContextExpression=createEnumExpression(Identifiers.SecurityContext,boundProp.securityContext);}if(!securityContextExpression){throw new Error('internal error, no SecurityContext given '+boundProp.name);}return securityContextExpression;}/**
 * @param {?} view
 * @param {?} componentView
 * @param {?} boundProp
 * @param {?} boundOutputs
 * @param {?} eventListener
 * @param {?} renderElement
 * @param {?} oldValue
 * @param {?} evalResult
 * @return {?}
 */function createCheckAnimationBindingStmts(view,componentView,boundProp,boundOutputs,eventListener,renderElement,oldValue,evalResult){var/** @type {?} */detachStmts=[];var/** @type {?} */updateStmts=[];var/** @type {?} */animationName=boundProp.name;var/** @type {?} */animationFnExpr=componentView.prop('componentType').prop('animations').key(literal(animationName));// it's important to normalize the void value as `void` explicitly
// so that the styles data can be obtained from the stringmap
var/** @type {?} */emptyStateValue=literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_108" /* ɵEMPTY_STATE */]);var/** @type {?} */animationTransitionVar=variable('animationTransition_'+animationName);updateStmts.push(animationTransitionVar.set(animationFnExpr.callFn([view,renderElement,isFirstViewCheck(view).conditional(emptyStateValue,oldValue),evalResult.currValExpr])).toDeclStmt());updateStmts.push(oldValue.set(evalResult.currValExpr).toStmt());detachStmts.push(animationTransitionVar.set(animationFnExpr.callFn([view,renderElement,evalResult.currValExpr,emptyStateValue])).toDeclStmt());var/** @type {?} */registerStmts=[];var/** @type {?} */animationStartMethodExists=boundOutputs.find(function(event){return event.isAnimation&&event.name==animationName&&event.phase=='start';});if(animationStartMethodExists){registerStmts.push(animationTransitionVar.callMethod('onStart',[eventListener.callMethod(BuiltinMethod.Bind,[view,literal(BoundEventAst.calcFullName(animationName,null,'start'))])]).toStmt());}var/** @type {?} */animationDoneMethodExists=boundOutputs.find(function(event){return event.isAnimation&&event.name==animationName&&event.phase=='done';});if(animationDoneMethodExists){registerStmts.push(animationTransitionVar.callMethod('onDone',[eventListener.callMethod(BuiltinMethod.Bind,[view,literal(BoundEventAst.calcFullName(animationName,null,'done'))])]).toStmt());}updateStmts.push.apply(updateStmts,registerStmts);detachStmts.push.apply(detachStmts,registerStmts);var/** @type {?} */checkUpdateStmts=[].concat(_toConsumableArray(evalResult.stmts),[new IfStmt(importExpr(createIdentifier(Identifiers.checkBinding)).callFn([view,oldValue,evalResult.currValExpr,evalResult.forceUpdate||literal(false)]),updateStmts)]);var/** @type {?} */checkDetachStmts=[].concat(_toConsumableArray(evalResult.stmts),detachStmts);return{checkUpdateStmts:checkUpdateStmts,checkDetachStmts:checkDetachStmts};}/**
 * Create a new class stmts based on the given data.
 * @param {?} config
 * @return {?}
 */function createClassStmt(config){var/** @type {?} */parentArgs=config.parentArgs||[];var/** @type {?} */superCtorStmts=config.parent?[SUPER_EXPR.callFn(parentArgs).toStmt()]:[];var/** @type {?} */builder=concatClassBuilderParts(Array.isArray(config.builders)?config.builders:[config.builders]);var/** @type {?} */ctor=new ClassMethod(null,config.ctorParams||[],superCtorStmts.concat(builder.ctorStmts));return new ClassStmt(config.name,config.parent,builder.fields,builder.getters,ctor,builder.methods,config.modifiers||[],config.sourceSpan);}/**
 * @param {?} builders
 * @return {?}
 */function concatClassBuilderParts(builders){var _ref29,_ref30,_ref31,_ref32;return{fields:(_ref29=[]).concat.apply(_ref29,_toConsumableArray(builders.map(function(builder){return builder.fields||[];}))),methods:(_ref30=[]).concat.apply(_ref30,_toConsumableArray(builders.map(function(builder){return builder.methods||[];}))),getters:(_ref31=[]).concat.apply(_ref31,_toConsumableArray(builders.map(function(builder){return builder.getters||[];}))),ctorStmts:(_ref32=[]).concat.apply(_ref32,_toConsumableArray(builders.map(function(builder){return builder.ctorStmts||[];})))};}var DirectiveWrapperCompileResult=/**
     * @param {?} statements
     * @param {?} dirWrapperClassVar
     */function DirectiveWrapperCompileResult(statements,dirWrapperClassVar){_classCallCheck(this,DirectiveWrapperCompileResult);this.statements=statements;this.dirWrapperClassVar=dirWrapperClassVar;};var/** @type {?} */CONTEXT_FIELD_NAME='context';var/** @type {?} */CHANGES_FIELD_NAME='_changes';var/** @type {?} */CHANGED_FIELD_NAME='_changed';var/** @type {?} */EVENT_HANDLER_FIELD_NAME='_eventHandler';var/** @type {?} */CHANGE_VAR=variable('change');var/** @type {?} */CURR_VALUE_VAR=variable('currValue');var/** @type {?} */FORCE_UPDATE_VAR=variable('forceUpdate');var/** @type {?} */VIEW_VAR=variable('view');var/** @type {?} */COMPONENT_VIEW_VAR=variable('componentView');var/** @type {?} */RENDER_EL_VAR=variable('el');var/** @type {?} */EVENT_NAME_VAR=variable('eventName');var/** @type {?} */RESET_CHANGES_STMT=THIS_EXPR.prop(CHANGES_FIELD_NAME).set(literalMap([])).toStmt();/**
 * We generate directive wrappers to prevent code bloat when a directive is used.
 * A directive wrapper encapsulates
 * the dirty checking for `\@Input`, the handling of `\@HostListener` / `\@HostBinding`
 * and calling the lifecyclehooks `ngOnInit`, `ngOnChanges`, `ngDoCheck`.
 *
 * So far, only `\@Input` and the lifecycle hooks have been implemented.
 */var DirectiveWrapperCompiler=function(){/**
     * @param {?} compilerConfig
     * @param {?} _exprParser
     * @param {?} _schemaRegistry
     * @param {?} _console
     */function DirectiveWrapperCompiler(compilerConfig,_exprParser,_schemaRegistry,_console){_classCallCheck(this,DirectiveWrapperCompiler);this.compilerConfig=compilerConfig;this._exprParser=_exprParser;this._schemaRegistry=_schemaRegistry;this._console=_console;}/**
     * @param {?} dirMeta
     * @return {?}
     */_createClass(DirectiveWrapperCompiler,[{key:'compile',value:function compile(dirMeta){var/** @type {?} */hostParseResult=parseHostBindings(dirMeta,this._exprParser,this._schemaRegistry);reportParseErrors(hostParseResult.errors,this._console);var/** @type {?} */builder=new DirectiveWrapperBuilder(this.compilerConfig,dirMeta);Object.keys(dirMeta.inputs).forEach(function(inputFieldName){addCheckInputMethod(inputFieldName,builder);});addNgDoCheckMethod(builder);addCheckHostMethod(hostParseResult.hostProps,hostParseResult.hostListeners,builder);addHandleEventMethod(hostParseResult.hostListeners,builder);addSubscribeMethod(dirMeta,builder);var/** @type {?} */classStmt=builder.build();return new DirectiveWrapperCompileResult([classStmt],classStmt.name);}}]);return DirectiveWrapperCompiler;}();DirectiveWrapperCompiler.decorators=[{type:CompilerInjectable}];/** @nocollapse */DirectiveWrapperCompiler.ctorParameters=function(){return[{type:CompilerConfig},{type:Parser},{type:ElementSchemaRegistry},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_101" /* ɵConsole */]}];};var DirectiveWrapperBuilder=function(){/**
     * @param {?} compilerConfig
     * @param {?} dirMeta
     */function DirectiveWrapperBuilder(compilerConfig,dirMeta){_classCallCheck(this,DirectiveWrapperBuilder);this.compilerConfig=compilerConfig;this.dirMeta=dirMeta;this.fields=[];this.getters=[];this.methods=[];this.ctorStmts=[];this.detachStmts=[];this.destroyStmts=[];var dirLifecycleHooks=dirMeta.type.lifecycleHooks;this.genChanges=dirLifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnChanges)!==-1||this.compilerConfig.logBindingUpdate;this.ngOnChanges=dirLifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnChanges)!==-1;this.ngOnInit=dirLifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnInit)!==-1;this.ngDoCheck=dirLifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].DoCheck)!==-1;this.ngOnDestroy=dirLifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy)!==-1;if(this.ngOnDestroy){this.destroyStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnDestroy',[]).toStmt());}}/**
     * @return {?}
     */_createClass(DirectiveWrapperBuilder,[{key:'build',value:function build(){var/** @type {?} */dirDepParamNames=[];for(var/** @type {?} */i=0;i<this.dirMeta.type.diDeps.length;i++){dirDepParamNames.push('p'+i);}var/** @type {?} */methods=[new ClassMethod('ngOnDetach',[new FnParam(VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(COMPONENT_VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(RENDER_EL_VAR.name,DYNAMIC_TYPE)],this.detachStmts),new ClassMethod('ngOnDestroy',[],this.destroyStmts)];var/** @type {?} */fields=[new ClassField(EVENT_HANDLER_FIELD_NAME,FUNCTION_TYPE,[StmtModifier.Private]),new ClassField(CONTEXT_FIELD_NAME,importType(this.dirMeta.type)),new ClassField(CHANGED_FIELD_NAME,BOOL_TYPE,[StmtModifier.Private])];var/** @type {?} */ctorStmts=[THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt()];if(this.genChanges){fields.push(new ClassField(CHANGES_FIELD_NAME,new MapType(DYNAMIC_TYPE),[StmtModifier.Private]));ctorStmts.push(RESET_CHANGES_STMT);}ctorStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).set(importExpr(this.dirMeta.type).instantiate(dirDepParamNames.map(function(paramName){return variable(paramName);}))).toStmt());return createClassStmt({name:dirWrapperClassName(this.dirMeta.type.reference),ctorParams:dirDepParamNames.map(function(paramName){return new FnParam(paramName,DYNAMIC_TYPE);}),builders:[{fields:fields,ctorStmts:ctorStmts,methods:methods},this]});}}]);return DirectiveWrapperBuilder;}();/**
 * @param {?} builder
 * @return {?}
 */function addNgDoCheckMethod(builder){var/** @type {?} */changedVar=variable('changed');var/** @type {?} */stmts=[changedVar.set(THIS_EXPR.prop(CHANGED_FIELD_NAME)).toDeclStmt(),THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt()];var/** @type {?} */lifecycleStmts=[];if(builder.genChanges){var/** @type {?} */onChangesStmts=[];if(builder.ngOnChanges){onChangesStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnChanges',[THIS_EXPR.prop(CHANGES_FIELD_NAME)]).toStmt());}if(builder.compilerConfig.logBindingUpdate){onChangesStmts.push(importExpr(createIdentifier(Identifiers.setBindingDebugInfoForChanges)).callFn([VIEW_VAR.prop('renderer'),RENDER_EL_VAR,THIS_EXPR.prop(CHANGES_FIELD_NAME)]).toStmt());}onChangesStmts.push(RESET_CHANGES_STMT);lifecycleStmts.push(new IfStmt(changedVar,onChangesStmts));}if(builder.ngOnInit){lifecycleStmts.push(new IfStmt(isFirstViewCheck(VIEW_VAR),[THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnInit',[]).toStmt()]));}if(builder.ngDoCheck){lifecycleStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngDoCheck',[]).toStmt());}if(lifecycleStmts.length>0){stmts.push(new IfStmt(not(VIEW_VAR.prop('throwOnChange')),lifecycleStmts));}stmts.push(new ReturnStatement(changedVar));builder.methods.push(new ClassMethod('ngDoCheck',[new FnParam(VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(RENDER_EL_VAR.name,DYNAMIC_TYPE)],stmts,BOOL_TYPE));}/**
 * @param {?} input
 * @param {?} builder
 * @return {?}
 */function addCheckInputMethod(input,builder){var/** @type {?} */field=createCheckBindingField(builder);var/** @type {?} */onChangeStatements=[THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(true)).toStmt(),THIS_EXPR.prop(CONTEXT_FIELD_NAME).prop(input).set(CURR_VALUE_VAR).toStmt(),field.expression.set(CURR_VALUE_VAR).toStmt()];var/** @type {?} */methodBody=void 0;if(builder.genChanges){onChangeStatements.push(THIS_EXPR.prop(CHANGES_FIELD_NAME).key(literal(input)).set(CHANGE_VAR).toStmt());methodBody=[CHANGE_VAR.set(importExpr(createIdentifier(Identifiers.checkBindingChange)).callFn([VIEW_VAR,field.expression,CURR_VALUE_VAR,FORCE_UPDATE_VAR])).toDeclStmt(),new IfStmt(CHANGE_VAR,onChangeStatements)];}else{methodBody=[new IfStmt(importExpr(createIdentifier(Identifiers.checkBinding)).callFn([VIEW_VAR,field.expression,CURR_VALUE_VAR,FORCE_UPDATE_VAR]),onChangeStatements)];}builder.methods.push(new ClassMethod('check_'+input,[new FnParam(VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(CURR_VALUE_VAR.name,DYNAMIC_TYPE),new FnParam(FORCE_UPDATE_VAR.name,BOOL_TYPE)],methodBody));}/**
 * @param {?} hostProps
 * @param {?} hostEvents
 * @param {?} builder
 * @return {?}
 */function addCheckHostMethod(hostProps,hostEvents,builder){var/** @type {?} */stmts=[];var/** @type {?} */methodParams=[new FnParam(VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(COMPONENT_VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(RENDER_EL_VAR.name,DYNAMIC_TYPE)];hostProps.forEach(function(hostProp,hostPropIdx){var/** @type {?} */field=createCheckBindingField(builder);var/** @type {?} */evalResult=legacyConvertPropertyBinding(builder,null,THIS_EXPR.prop(CONTEXT_FIELD_NAME),hostProp.value,field.bindingId);if(!evalResult){return;}var/** @type {?} */securityContextExpr=void 0;if(hostProp.needsRuntimeSecurityContext){securityContextExpr=variable('secCtx_'+methodParams.length);methodParams.push(new FnParam(securityContextExpr.name,importType(createIdentifier(Identifiers.SecurityContext))));}if(hostProp.isAnimation){var _builder$detachStmts;var _createCheckAnimation=createCheckAnimationBindingStmts(VIEW_VAR,COMPONENT_VIEW_VAR,hostProp,hostEvents,THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME).or(importExpr(createIdentifier(Identifiers.noop))),RENDER_EL_VAR,field.expression,evalResult),checkUpdateStmts=_createCheckAnimation.checkUpdateStmts,checkDetachStmts=_createCheckAnimation.checkDetachStmts;(_builder$detachStmts=builder.detachStmts).push.apply(_builder$detachStmts,_toConsumableArray(checkDetachStmts));stmts.push.apply(stmts,_toConsumableArray(checkUpdateStmts));}else{stmts.push.apply(stmts,_toConsumableArray(createCheckRenderBindingStmt(VIEW_VAR,RENDER_EL_VAR,hostProp,field.expression,evalResult,securityContextExpr)));}});builder.methods.push(new ClassMethod('checkHost',methodParams,stmts));}/**
 * @param {?} hostListeners
 * @param {?} builder
 * @return {?}
 */function addHandleEventMethod(hostListeners,builder){var/** @type {?} */resultVar=variable('result');var/** @type {?} */actionStmts=[resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE)];hostListeners.forEach(function(hostListener,eventIdx){var/** @type {?} */evalResult=convertActionBinding(null,THIS_EXPR.prop(CONTEXT_FIELD_NAME),hostListener.handler,'sub_'+eventIdx);var/** @type {?} */trueStmts=evalResult.stmts;if(evalResult.allowDefault){trueStmts.push(resultVar.set(evalResult.allowDefault.and(resultVar)).toStmt());}// TODO(tbosch): convert this into a `switch` once our OutputAst supports it.
actionStmts.push(new IfStmt(EVENT_NAME_VAR.equals(literal(hostListener.fullName)),trueStmts));});actionStmts.push(new ReturnStatement(resultVar));builder.methods.push(new ClassMethod('handleEvent',[new FnParam(EVENT_NAME_VAR.name,STRING_TYPE),new FnParam(EventHandlerVars.event.name,DYNAMIC_TYPE)],actionStmts,BOOL_TYPE));}/**
 * @param {?} dirMeta
 * @param {?} builder
 * @return {?}
 */function addSubscribeMethod(dirMeta,builder){var/** @type {?} */methodParams=[new FnParam(VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(EVENT_HANDLER_FIELD_NAME,DYNAMIC_TYPE)];var/** @type {?} */stmts=[THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME).set(variable(EVENT_HANDLER_FIELD_NAME)).toStmt()];Object.keys(dirMeta.outputs).forEach(function(emitterPropName,emitterIdx){var/** @type {?} */eventName=dirMeta.outputs[emitterPropName];var/** @type {?} */paramName='emit'+emitterIdx;methodParams.push(new FnParam(paramName,BOOL_TYPE));var/** @type {?} */subscriptionFieldName='subscription'+emitterIdx;builder.fields.push(new ClassField(subscriptionFieldName,DYNAMIC_TYPE));stmts.push(new IfStmt(variable(paramName),[THIS_EXPR.prop(subscriptionFieldName).set(THIS_EXPR.prop(CONTEXT_FIELD_NAME).prop(emitterPropName).callMethod(BuiltinMethod.SubscribeObservable,[variable(EVENT_HANDLER_FIELD_NAME).callMethod(BuiltinMethod.Bind,[VIEW_VAR,literal(eventName)])])).toStmt()]));builder.destroyStmts.push(THIS_EXPR.prop(subscriptionFieldName).and(THIS_EXPR.prop(subscriptionFieldName).callMethod('unsubscribe',[])).toStmt());});builder.methods.push(new ClassMethod('subscribe',methodParams,stmts));}var ParseResult=/**
     * @param {?} hostProps
     * @param {?} hostListeners
     * @param {?} errors
     */function ParseResult(hostProps,hostListeners,errors){_classCallCheck(this,ParseResult);this.hostProps=hostProps;this.hostListeners=hostListeners;this.errors=errors;};/**
 * @param {?} dirMeta
 * @param {?} exprParser
 * @param {?} schemaRegistry
 * @return {?}
 */function parseHostBindings(dirMeta,exprParser,schemaRegistry){var/** @type {?} */errors=[];var/** @type {?} */parser=new BindingParser(exprParser,DEFAULT_INTERPOLATION_CONFIG,schemaRegistry,[],errors);var/** @type {?} */moduleUrl=identifierModuleUrl(dirMeta.type);var/** @type {?} */sourceFileName=moduleUrl?'in Directive '+identifierName(dirMeta.type)+' in '+moduleUrl:'in Directive '+identifierName(dirMeta.type);var/** @type {?} */sourceFile=new ParseSourceFile('',sourceFileName);var/** @type {?} */sourceSpan=new ParseSourceSpan(new ParseLocation(sourceFile,null,null,null),new ParseLocation(sourceFile,null,null,null));var/** @type {?} */parsedHostProps=parser.createDirectiveHostPropertyAsts(dirMeta.toSummary(),dirMeta.selector,sourceSpan);var/** @type {?} */parsedHostListeners=parser.createDirectiveHostEventAsts(dirMeta.toSummary(),sourceSpan);return new ParseResult(parsedHostProps,parsedHostListeners,errors);}/**
 * @param {?} parseErrors
 * @param {?} console
 * @return {?}
 */function reportParseErrors(parseErrors,console){var/** @type {?} */warnings=parseErrors.filter(function(error){return error.level===ParseErrorLevel.WARNING;});var/** @type {?} */errors=parseErrors.filter(function(error){return error.level===ParseErrorLevel.FATAL;});if(warnings.length>0){this._console.warn('Directive parse warnings:\n'+warnings.join('\n'));}if(errors.length>0){throw new Error('Directive parse errors:\n'+errors.join('\n'));}}var DirectiveWrapperExpressions=function(){function DirectiveWrapperExpressions(){_classCallCheck(this,DirectiveWrapperExpressions);}_createClass(DirectiveWrapperExpressions,null,[{key:'create',/**
     * @param {?} dir
     * @param {?} depsExpr
     * @return {?}
     */value:function create(dir,depsExpr){return importExpr(dir).instantiate(depsExpr,importType(dir));}/**
     * @param {?} dirWrapper
     * @return {?}
     */},{key:'context',value:function context(dirWrapper){return dirWrapper.prop(CONTEXT_FIELD_NAME);}/**
     * @param {?} dirWrapper
     * @param {?} view
     * @param {?} renderElement
     * @return {?}
     */},{key:'ngDoCheck',value:function ngDoCheck(dirWrapper,view,renderElement){return dirWrapper.callMethod('ngDoCheck',[view,renderElement]);}/**
     * @param {?} hostProps
     * @param {?} dirWrapper
     * @param {?} view
     * @param {?} componentView
     * @param {?} renderElement
     * @param {?} runtimeSecurityContexts
     * @return {?}
     */},{key:'checkHost',value:function checkHost(hostProps,dirWrapper,view,componentView,renderElement,runtimeSecurityContexts){if(hostProps.length){return[dirWrapper.callMethod('checkHost',[view,componentView,renderElement].concat(runtimeSecurityContexts)).toStmt()];}else{return[];}}/**
     * @param {?} hostProps
     * @param {?} dirWrapper
     * @param {?} view
     * @param {?} componentView
     * @param {?} renderEl
     * @return {?}
     */},{key:'ngOnDetach',value:function ngOnDetach(hostProps,dirWrapper,view,componentView,renderEl){if(hostProps.some(function(prop){return prop.isAnimation;})){return[dirWrapper.callMethod('ngOnDetach',[view,componentView,renderEl]).toStmt()];}else{return[];}}/**
     * @param {?} dir
     * @param {?} dirWrapper
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(dir,dirWrapper){if(dir.type.lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy)!==-1||Object.keys(dir.outputs).length>0){return[dirWrapper.callMethod('ngOnDestroy',[]).toStmt()];}else{return[];}}/**
     * @param {?} dirMeta
     * @param {?} hostProps
     * @param {?} usedEvents
     * @param {?} dirWrapper
     * @param {?} view
     * @param {?} eventListener
     * @return {?}
     */},{key:'subscribe',value:function subscribe(dirMeta,hostProps,usedEvents,dirWrapper,view,eventListener){var/** @type {?} */needsSubscribe=false;var/** @type {?} */eventFlags=[];Object.keys(dirMeta.outputs).forEach(function(propName){var/** @type {?} */eventName=dirMeta.outputs[propName];var/** @type {?} */eventUsed=usedEvents.indexOf(eventName)>-1;needsSubscribe=needsSubscribe||eventUsed;eventFlags.push(literal(eventUsed));});hostProps.forEach(function(hostProp){if(hostProp.isAnimation&&usedEvents.length>0){needsSubscribe=true;}});if(needsSubscribe){return[dirWrapper.callMethod('subscribe',[view,eventListener].concat(eventFlags)).toStmt()];}else{return[];}}/**
     * @param {?} hostEvents
     * @param {?} dirWrapper
     * @param {?} eventName
     * @param {?} event
     * @return {?}
     */},{key:'handleEvent',value:function handleEvent(hostEvents,dirWrapper,eventName,event){return dirWrapper.callMethod('handleEvent',[eventName,event]);}}]);return DirectiveWrapperExpressions;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var/** @type {?} */STRIP_SRC_FILE_SUFFIXES=/(\.ts|\.d\.ts|\.js|\.jsx|\.tsx)$/;var/** @type {?} */NG_FACTORY=/\.ngfactory\./;/**
 * @param {?} filePath
 * @return {?}
 */function ngfactoryFilePath(filePath){var/** @type {?} */urlWithSuffix=splitTypescriptSuffix(filePath);return urlWithSuffix[0]+'.ngfactory'+urlWithSuffix[1];}/**
 * @param {?} filePath
 * @return {?}
 */function stripNgFactory(filePath){return filePath.replace(NG_FACTORY,'.');}/**
 * @param {?} filePath
 * @return {?}
 */function isNgFactoryFile(filePath){return NG_FACTORY.test(filePath);}/**
 * @param {?} path
 * @return {?}
 */function splitTypescriptSuffix(path){if(path.endsWith('.d.ts')){return[path.slice(0,-5),'.ts'];}var/** @type {?} */lastDot=path.lastIndexOf('.');if(lastDot!==-1){return[path.substring(0,lastDot),path.substring(lastDot)];}return[path,''];}/**
 * @param {?} fileName
 * @return {?}
 */function summaryFileName(fileName){var/** @type {?} */fileNameWithoutSuffix=fileName.replace(STRIP_SRC_FILE_SUFFIXES,'');return fileNameWithoutSuffix+'.ngsummary.json';}/**
 * @param {?} hook
 * @param {?} token
 * @return {?}
 */function hasLifecycleHook(hook,token){return __WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */].hasLifecycleHook(token,getHookName(hook));}/**
 * @param {?} hook
 * @return {?}
 */function getHookName(hook){switch(hook){case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnInit:return'ngOnInit';case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy:return'ngOnDestroy';case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].DoCheck:return'ngDoCheck';case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnChanges:return'ngOnChanges';case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterContentInit:return'ngAfterContentInit';case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterContentChecked:return'ngAfterContentChecked';case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterViewInit:return'ngAfterViewInit';case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterViewChecked:return'ngAfterViewChecked';}}/**
 * @param {?} obj
 * @return {?}
 */function _isNgModuleMetadata(obj){return obj instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */];}/**
 * Resolves types to {\@link NgModule}.
 */var NgModuleResolver=function(){/**
     * @param {?=} _reflector
     */function NgModuleResolver(){var _reflector=arguments.length>0&&arguments[0]!==undefined?arguments[0]:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */];_classCallCheck(this,NgModuleResolver);this._reflector=_reflector;}/**
     * @param {?} type
     * @return {?}
     */_createClass(NgModuleResolver,[{key:'isNgModule',value:function isNgModule(type){return this._reflector.annotations(type).some(_isNgModuleMetadata);}/**
     * @param {?} type
     * @param {?=} throwIfNotFound
     * @return {?}
     */},{key:'resolve',value:function resolve(type){var throwIfNotFound=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var/** @type {?} */ngModuleMeta=ListWrapper.findLast(this._reflector.annotations(type),_isNgModuleMetadata);if(ngModuleMeta){return ngModuleMeta;}else{if(throwIfNotFound){throw new Error('No NgModule metadata found for \''+stringify(type)+'\'.');}return null;}}}]);return NgModuleResolver;}();NgModuleResolver.decorators=[{type:CompilerInjectable}];/** @nocollapse */NgModuleResolver.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_107" /* ɵReflectorReader */]}];};/**
 * @param {?} type
 * @return {?}
 */function _isPipeMetadata(type){return type instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */];}/**
 * Resolve a `Type` for {\@link Pipe}.
 *
 * This interface can be overridden by the application developer to create custom behavior.
 *
 * See {\@link Compiler}
 */var PipeResolver=function(){/**
     * @param {?=} _reflector
     */function PipeResolver(){var _reflector=arguments.length>0&&arguments[0]!==undefined?arguments[0]:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */];_classCallCheck(this,PipeResolver);this._reflector=_reflector;}/**
     * @param {?} type
     * @return {?}
     */_createClass(PipeResolver,[{key:'isPipe',value:function isPipe(type){var/** @type {?} */typeMetadata=this._reflector.annotations(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(type));return typeMetadata&&typeMetadata.some(_isPipeMetadata);}/**
     * Return {\@link Pipe} for a given `Type`.
     * @param {?} type
     * @param {?=} throwIfNotFound
     * @return {?}
     */},{key:'resolve',value:function resolve(type){var throwIfNotFound=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var/** @type {?} */metas=this._reflector.annotations(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(type));if(metas){var/** @type {?} */annotation=ListWrapper.findLast(metas,_isPipeMetadata);if(annotation){return annotation;}}if(throwIfNotFound){throw new Error('No Pipe decorator found on '+stringify(type));}return null;}}]);return PipeResolver;}();PipeResolver.decorators=[{type:CompilerInjectable}];/** @nocollapse */PipeResolver.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_107" /* ɵReflectorReader */]}];};var SummaryResolver=function(){function SummaryResolver(){_classCallCheck(this,SummaryResolver);}_createClass(SummaryResolver,[{key:'isLibraryFile',/**
     * @param {?} fileName
     * @return {?}
     */value:function isLibraryFile(fileName){return false;}},{key:'getLibraryFileName',/**
     * @param {?} fileName
     * @return {?}
     */value:function getLibraryFileName(fileName){return null;}/**
     * @param {?} reference
     * @return {?}
     */},{key:'resolveSummary',value:function resolveSummary(reference){return null;}},{key:'getSymbolsOf',/**
     * @param {?} filePath
     * @return {?}
     */value:function getSymbolsOf(filePath){return[];}/**
     * @param {?} reference
     * @return {?}
     */},{key:'getImportAs',value:function getImportAs(reference){return reference;}}]);return SummaryResolver;}();SummaryResolver.decorators=[{type:CompilerInjectable}];/** @nocollapse */SummaryResolver.ctorParameters=function(){return[];};var/** @type {?} */ERROR_COLLECTOR_TOKEN=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('ErrorCollector');var CompileMetadataResolver=function(){/**
     * @param {?} _config
     * @param {?} _ngModuleResolver
     * @param {?} _directiveResolver
     * @param {?} _pipeResolver
     * @param {?} _summaryResolver
     * @param {?} _schemaRegistry
     * @param {?} _directiveNormalizer
     * @param {?} _staticSymbolCache
     * @param {?=} _reflector
     * @param {?=} _errorCollector
     */function CompileMetadataResolver(_config,_ngModuleResolver,_directiveResolver,_pipeResolver,_summaryResolver,_schemaRegistry,_directiveNormalizer,_staticSymbolCache){var _reflector=arguments.length>8&&arguments[8]!==undefined?arguments[8]:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */];var _errorCollector=arguments[9];_classCallCheck(this,CompileMetadataResolver);this._config=_config;this._ngModuleResolver=_ngModuleResolver;this._directiveResolver=_directiveResolver;this._pipeResolver=_pipeResolver;this._summaryResolver=_summaryResolver;this._schemaRegistry=_schemaRegistry;this._directiveNormalizer=_directiveNormalizer;this._staticSymbolCache=_staticSymbolCache;this._reflector=_reflector;this._errorCollector=_errorCollector;this._nonNormalizedDirectiveCache=new Map();this._directiveCache=new Map();this._summaryCache=new Map();this._pipeCache=new Map();this._ngModuleCache=new Map();this._ngModuleOfTypes=new Map();}/**
     * @param {?} type
     * @return {?}
     */_createClass(CompileMetadataResolver,[{key:'clearCacheFor',value:function clearCacheFor(type){var/** @type {?} */dirMeta=this._directiveCache.get(type);this._directiveCache.delete(type);this._nonNormalizedDirectiveCache.delete(type);this._summaryCache.delete(type);this._pipeCache.delete(type);this._ngModuleOfTypes.delete(type);// Clear all of the NgModule as they contain transitive information!
this._ngModuleCache.clear();if(dirMeta){this._directiveNormalizer.clearCacheFor(dirMeta);}}/**
     * @return {?}
     */},{key:'clearCache',value:function clearCache(){this._directiveCache.clear();this._nonNormalizedDirectiveCache.clear();this._summaryCache.clear();this._pipeCache.clear();this._ngModuleCache.clear();this._ngModuleOfTypes.clear();this._directiveNormalizer.clearCache();}/**
     * @param {?} baseType
     * @param {?} name
     * @return {?}
     */},{key:'_createProxyClass',value:function _createProxyClass(baseType,name){var/** @type {?} */delegate=null;var/** @type {?} */proxyClass=function proxyClass(){if(!delegate){throw new Error('Illegal state: Class '+name+' for type '+stringify(baseType)+' is not compiled yet!');}return delegate.apply(this,arguments);};proxyClass.setDelegate=function(d){delegate=d;proxyClass.prototype=d.prototype;};// Make stringify work correctly
proxyClass.overriddenName=name;return proxyClass;}/**
     * @param {?} dirType
     * @param {?} name
     * @return {?}
     */},{key:'getGeneratedClass',value:function getGeneratedClass(dirType,name){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),name);}else{return this._createProxyClass(dirType,name);}}/**
     * @param {?} dirType
     * @return {?}
     */},{key:'getDirectiveWrapperClass',value:function getDirectiveWrapperClass(dirType){if(!this._config.useViewEngine){return this.getGeneratedClass(dirType,dirWrapperClassName(dirType));}return null;}/**
     * @param {?} dirType
     * @return {?}
     */},{key:'getComponentViewClass',value:function getComponentViewClass(dirType){return this.getGeneratedClass(dirType,viewClassName(dirType,0));}/**
     * @param {?} dirType
     * @return {?}
     */},{key:'getHostComponentViewClass',value:function getHostComponentViewClass(dirType){return this.getGeneratedClass(dirType,hostViewClassName(dirType));}/**
     * @param {?} dirType
     * @return {?}
     */},{key:'getHostComponentType',value:function getHostComponentType(dirType){var/** @type {?} */name=identifierName({reference:dirType})+'_Host';if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(dirType.filePath,name);}else{var/** @type {?} */HostClass=function HostClass(){};HostClass.overriddenName=name;return HostClass;}}/**
     * @param {?} dirType
     * @return {?}
     */},{key:'getRendererType',value:function getRendererType(dirType){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),rendererTypeName(dirType));}else{// returning an object as proxy,
// that we fill later during runtime compilation.
return{};}}/**
     * @param {?} selector
     * @param {?} dirType
     * @return {?}
     */},{key:'getComponentFactory',value:function getComponentFactory(selector,dirType){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),componentFactoryName(dirType));}else{var/** @type {?} */hostView=this.getHostComponentViewClass(dirType);if(this._config.useViewEngine){return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_99" /* ɵcreateComponentFactory */])(selector,dirType,/** @type {?} */hostView);}else{return new __WEBPACK_IMPORTED_MODULE_0__angular_core__["_25" /* ComponentFactory */](selector,/** @type {?} */hostView,dirType);}}}/**
     * @param {?} type
     * @param {?} kind
     * @return {?}
     */},{key:'_loadSummary',value:function _loadSummary(type,kind){var/** @type {?} */typeSummary=this._summaryCache.get(type);if(!typeSummary){var/** @type {?} */summary=this._summaryResolver.resolveSummary(type);typeSummary=summary?summary.type:null;this._summaryCache.set(type,typeSummary);}return typeSummary&&typeSummary.summaryKind===kind?typeSummary:null;}/**
     * @param {?} directiveType
     * @param {?} isSync
     * @return {?}
     */},{key:'_loadDirectiveMetadata',value:function _loadDirectiveMetadata(directiveType,isSync){var _this170=this;if(this._directiveCache.has(directiveType)){return;}directiveType=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(directiveType);var _getNonNormalizedDire=this.getNonNormalizedDirectiveMetadata(directiveType),annotation=_getNonNormalizedDire.annotation,metadata=_getNonNormalizedDire.metadata;var/** @type {?} */createDirectiveMetadata=function createDirectiveMetadata(templateMetadata){var/** @type {?} */normalizedDirMeta=new CompileDirectiveMetadata({type:metadata.type,isComponent:metadata.isComponent,selector:metadata.selector,exportAs:metadata.exportAs,changeDetection:metadata.changeDetection,inputs:metadata.inputs,outputs:metadata.outputs,hostListeners:metadata.hostListeners,hostProperties:metadata.hostProperties,hostAttributes:metadata.hostAttributes,providers:metadata.providers,viewProviders:metadata.viewProviders,queries:metadata.queries,viewQueries:metadata.viewQueries,entryComponents:metadata.entryComponents,wrapperType:metadata.wrapperType,componentViewType:metadata.componentViewType,rendererType:metadata.rendererType,componentFactory:metadata.componentFactory,template:templateMetadata});_this170._directiveCache.set(directiveType,normalizedDirMeta);_this170._summaryCache.set(directiveType,normalizedDirMeta.toSummary());return normalizedDirMeta;};if(metadata.isComponent){var/** @type {?} */templateMeta=this._directiveNormalizer.normalizeTemplate({componentType:directiveType,moduleUrl:componentModuleUrl(this._reflector,directiveType,annotation),encapsulation:metadata.template.encapsulation,template:metadata.template.template,templateUrl:metadata.template.templateUrl,styles:metadata.template.styles,styleUrls:metadata.template.styleUrls,animations:metadata.template.animations,interpolation:metadata.template.interpolation});if(templateMeta.syncResult){createDirectiveMetadata(templateMeta.syncResult);return null;}else{if(isSync){this._reportError(componentStillLoadingError(directiveType),directiveType);return null;}return templateMeta.asyncResult.then(createDirectiveMetadata);}}else{// directive
createDirectiveMetadata(null);return null;}}/**
     * @param {?} directiveType
     * @return {?}
     */},{key:'getNonNormalizedDirectiveMetadata',value:function getNonNormalizedDirectiveMetadata(directiveType){var _this171=this;directiveType=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(directiveType);if(!directiveType){return null;}var/** @type {?} */cacheEntry=this._nonNormalizedDirectiveCache.get(directiveType);if(cacheEntry){return cacheEntry;}var/** @type {?} */dirMeta=this._directiveResolver.resolve(directiveType,false);if(!dirMeta){return null;}var/** @type {?} */nonNormalizedTemplateMetadata=void 0;if(dirMeta instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */]){// component
assertArrayOfStrings('styles',dirMeta.styles);assertArrayOfStrings('styleUrls',dirMeta.styleUrls);assertInterpolationSymbols('interpolation',dirMeta.interpolation);var/** @type {?} */animations=dirMeta.animations;nonNormalizedTemplateMetadata=new CompileTemplateMetadata({encapsulation:dirMeta.encapsulation,template:dirMeta.template,templateUrl:dirMeta.templateUrl,styles:dirMeta.styles,styleUrls:dirMeta.styleUrls,animations:animations,interpolation:dirMeta.interpolation});}var/** @type {?} */changeDetectionStrategy=null;var/** @type {?} */viewProviders=[];var/** @type {?} */entryComponentMetadata=[];var/** @type {?} */selector=dirMeta.selector;if(dirMeta instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */]){// Component
changeDetectionStrategy=dirMeta.changeDetection;if(dirMeta.viewProviders){viewProviders=this._getProvidersMetadata(dirMeta.viewProviders,entryComponentMetadata,'viewProviders for "'+stringifyType(directiveType)+'"',[],directiveType);}if(dirMeta.entryComponents){entryComponentMetadata=flattenAndDedupeArray(dirMeta.entryComponents).map(function(type){return _this171._getEntryComponentMetadata(type);}).concat(entryComponentMetadata);}if(!selector){selector=this._schemaRegistry.getDefaultComponentElementName();}}else{// Directive
if(!selector){this._reportError(syntaxError('Directive '+stringifyType(directiveType)+' has no selector, please add it!'),directiveType);selector='error';}}var/** @type {?} */providers=[];if(dirMeta.providers!=null){providers=this._getProvidersMetadata(dirMeta.providers,entryComponentMetadata,'providers for "'+stringifyType(directiveType)+'"',[],directiveType);}var/** @type {?} */queries=[];var/** @type {?} */viewQueries=[];if(dirMeta.queries!=null){queries=this._getQueriesMetadata(dirMeta.queries,false,directiveType);viewQueries=this._getQueriesMetadata(dirMeta.queries,true,directiveType);}var/** @type {?} */metadata=CompileDirectiveMetadata.create({selector:selector,exportAs:dirMeta.exportAs,isComponent:!!nonNormalizedTemplateMetadata,type:this._getTypeMetadata(directiveType),template:nonNormalizedTemplateMetadata,changeDetection:changeDetectionStrategy,inputs:dirMeta.inputs,outputs:dirMeta.outputs,host:dirMeta.host,providers:providers,viewProviders:viewProviders,queries:queries,viewQueries:viewQueries,entryComponents:entryComponentMetadata,wrapperType:this.getDirectiveWrapperClass(directiveType),componentViewType:nonNormalizedTemplateMetadata?this.getComponentViewClass(directiveType):undefined,rendererType:nonNormalizedTemplateMetadata?this.getRendererType(directiveType):undefined,componentFactory:nonNormalizedTemplateMetadata?this.getComponentFactory(selector,directiveType):undefined});cacheEntry={metadata:metadata,annotation:dirMeta};this._nonNormalizedDirectiveCache.set(directiveType,cacheEntry);return cacheEntry;}/**
     * Gets the metadata for the given directive.
     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
     * @param {?} directiveType
     * @return {?}
     */},{key:'getDirectiveMetadata',value:function getDirectiveMetadata(directiveType){var/** @type {?} */dirMeta=this._directiveCache.get(directiveType);if(!dirMeta){this._reportError(syntaxError('Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive '+stringifyType(directiveType)+'.'),directiveType);}return dirMeta;}/**
     * @param {?} dirType
     * @return {?}
     */},{key:'getDirectiveSummary',value:function getDirectiveSummary(dirType){var/** @type {?} */dirSummary=this._loadSummary(dirType,CompileSummaryKind.Directive);if(!dirSummary){this._reportError(syntaxError('Illegal state: Could not load the summary for directive '+stringifyType(dirType)+'.'),dirType);}return dirSummary;}/**
     * @param {?} type
     * @return {?}
     */},{key:'isDirective',value:function isDirective(type){return this._directiveResolver.isDirective(type);}/**
     * @param {?} type
     * @return {?}
     */},{key:'isPipe',value:function isPipe(type){return this._pipeResolver.isPipe(type);}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'getNgModuleSummary',value:function getNgModuleSummary(moduleType){var/** @type {?} */moduleSummary=this._loadSummary(moduleType,CompileSummaryKind.NgModule);if(!moduleSummary){var/** @type {?} */moduleMeta=this.getNgModuleMetadata(moduleType,false);moduleSummary=moduleMeta?moduleMeta.toSummary():null;if(moduleSummary){this._summaryCache.set(moduleType,moduleSummary);}}return moduleSummary;}/**
     * Loads the declared directives and pipes of an NgModule.
     * @param {?} moduleType
     * @param {?} isSync
     * @param {?=} throwIfNotFound
     * @return {?}
     */},{key:'loadNgModuleDirectiveAndPipeMetadata',value:function loadNgModuleDirectiveAndPipeMetadata(moduleType,isSync){var _this172=this;var throwIfNotFound=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var/** @type {?} */ngModule=this.getNgModuleMetadata(moduleType,throwIfNotFound);var/** @type {?} */loading=[];if(ngModule){ngModule.declaredDirectives.forEach(function(id){var/** @type {?} */promise=_this172._loadDirectiveMetadata(id.reference,isSync);if(promise){loading.push(promise);}});ngModule.declaredPipes.forEach(function(id){return _this172._loadPipeMetadata(id.reference);});}return Promise.all(loading);}/**
     * @param {?} moduleType
     * @param {?=} throwIfNotFound
     * @return {?}
     */},{key:'getNgModuleMetadata',value:function getNgModuleMetadata(moduleType){var _this173=this;var throwIfNotFound=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;moduleType=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(moduleType);var/** @type {?} */compileMeta=this._ngModuleCache.get(moduleType);if(compileMeta){return compileMeta;}var/** @type {?} */meta=this._ngModuleResolver.resolve(moduleType,throwIfNotFound);if(!meta){return null;}var/** @type {?} */declaredDirectives=[];var/** @type {?} */exportedNonModuleIdentifiers=[];var/** @type {?} */declaredPipes=[];var/** @type {?} */importedModules=[];var/** @type {?} */exportedModules=[];var/** @type {?} */providers=[];var/** @type {?} */entryComponents=[];var/** @type {?} */bootstrapComponents=[];var/** @type {?} */schemas=[];if(meta.imports){flattenAndDedupeArray(meta.imports).forEach(function(importedType){var/** @type {?} */importedModuleType=void 0;if(isValidType(importedType)){importedModuleType=importedType;}else if(importedType&&importedType.ngModule){var/** @type {?} */moduleWithProviders=importedType;importedModuleType=moduleWithProviders.ngModule;if(moduleWithProviders.providers){providers.push.apply(providers,_toConsumableArray(_this173._getProvidersMetadata(moduleWithProviders.providers,entryComponents,'provider for the NgModule \''+stringifyType(importedModuleType)+'\'',[],importedType)));}}if(importedModuleType){var/** @type {?} */importedModuleSummary=_this173.getNgModuleSummary(importedModuleType);if(!importedModuleSummary){_this173._reportError(syntaxError('Unexpected '+_this173._getTypeDescriptor(importedType)+' \''+stringifyType(importedType)+'\' imported by the module \''+stringifyType(moduleType)+'\''),moduleType);return;}importedModules.push(importedModuleSummary);}else{_this173._reportError(syntaxError('Unexpected value \''+stringifyType(importedType)+'\' imported by the module \''+stringifyType(moduleType)+'\''),moduleType);return;}});}if(meta.exports){flattenAndDedupeArray(meta.exports).forEach(function(exportedType){if(!isValidType(exportedType)){_this173._reportError(syntaxError('Unexpected value \''+stringifyType(exportedType)+'\' exported by the module \''+stringifyType(moduleType)+'\''),moduleType);return;}var/** @type {?} */exportedModuleSummary=_this173.getNgModuleSummary(exportedType);if(exportedModuleSummary){exportedModules.push(exportedModuleSummary);}else{exportedNonModuleIdentifiers.push(_this173._getIdentifierMetadata(exportedType));}});}// Note: This will be modified later, so we rely on
// getting a new instance every time!
var/** @type {?} */transitiveModule=this._getTransitiveNgModuleMetadata(importedModules,exportedModules);if(meta.declarations){flattenAndDedupeArray(meta.declarations).forEach(function(declaredType){if(!isValidType(declaredType)){_this173._reportError(syntaxError('Unexpected value \''+stringifyType(declaredType)+'\' declared by the module \''+stringifyType(moduleType)+'\''),moduleType);return;}var/** @type {?} */declaredIdentifier=_this173._getIdentifierMetadata(declaredType);if(_this173._directiveResolver.isDirective(declaredType)){transitiveModule.addDirective(declaredIdentifier);declaredDirectives.push(declaredIdentifier);_this173._addTypeToModule(declaredType,moduleType);}else if(_this173._pipeResolver.isPipe(declaredType)){transitiveModule.addPipe(declaredIdentifier);transitiveModule.pipes.push(declaredIdentifier);declaredPipes.push(declaredIdentifier);_this173._addTypeToModule(declaredType,moduleType);}else{_this173._reportError(syntaxError('Unexpected '+_this173._getTypeDescriptor(declaredType)+' \''+stringifyType(declaredType)+'\' declared by the module \''+stringifyType(moduleType)+'\''),moduleType);return;}});}var/** @type {?} */exportedDirectives=[];var/** @type {?} */exportedPipes=[];exportedNonModuleIdentifiers.forEach(function(exportedId){if(transitiveModule.directivesSet.has(exportedId.reference)){exportedDirectives.push(exportedId);transitiveModule.addExportedDirective(exportedId);}else if(transitiveModule.pipesSet.has(exportedId.reference)){exportedPipes.push(exportedId);transitiveModule.addExportedPipe(exportedId);}else{_this173._reportError(syntaxError('Can\'t export '+_this173._getTypeDescriptor(exportedId.reference)+' '+stringifyType(exportedId.reference)+' from '+stringifyType(moduleType)+' as it was neither declared nor imported!'),moduleType);}});// The providers of the module have to go last
// so that they overwrite any other provider we already added.
if(meta.providers){providers.push.apply(providers,_toConsumableArray(this._getProvidersMetadata(meta.providers,entryComponents,'provider for the NgModule \''+stringifyType(moduleType)+'\'',[],moduleType)));}if(meta.entryComponents){entryComponents.push.apply(entryComponents,_toConsumableArray(flattenAndDedupeArray(meta.entryComponents).map(function(type){return _this173._getEntryComponentMetadata(type);})));}if(meta.bootstrap){flattenAndDedupeArray(meta.bootstrap).forEach(function(type){if(!isValidType(type)){_this173._reportError(syntaxError('Unexpected value \''+stringifyType(type)+'\' used in the bootstrap property of module \''+stringifyType(moduleType)+'\''),moduleType);return;}bootstrapComponents.push(_this173._getIdentifierMetadata(type));});}entryComponents.push.apply(entryComponents,_toConsumableArray(bootstrapComponents.map(function(type){return _this173._getEntryComponentMetadata(type.reference);})));if(meta.schemas){schemas.push.apply(schemas,_toConsumableArray(flattenAndDedupeArray(meta.schemas)));}compileMeta=new CompileNgModuleMetadata({type:this._getTypeMetadata(moduleType),providers:providers,entryComponents:entryComponents,bootstrapComponents:bootstrapComponents,schemas:schemas,declaredDirectives:declaredDirectives,exportedDirectives:exportedDirectives,declaredPipes:declaredPipes,exportedPipes:exportedPipes,importedModules:importedModules,exportedModules:exportedModules,transitiveModule:transitiveModule,id:meta.id});entryComponents.forEach(function(id){return transitiveModule.addEntryComponent(id);});providers.forEach(function(provider){return transitiveModule.addProvider(provider,compileMeta.type);});transitiveModule.addModule(compileMeta.type);this._ngModuleCache.set(moduleType,compileMeta);return compileMeta;}/**
     * @param {?} type
     * @return {?}
     */},{key:'_getTypeDescriptor',value:function _getTypeDescriptor(type){if(this._directiveResolver.isDirective(type)){return'directive';}if(this._pipeResolver.isPipe(type)){return'pipe';}if(this._ngModuleResolver.isNgModule(type)){return'module';}if(type.provide){return'provider';}return'value';}/**
     * @param {?} type
     * @param {?} moduleType
     * @return {?}
     */},{key:'_addTypeToModule',value:function _addTypeToModule(type,moduleType){var/** @type {?} */oldModule=this._ngModuleOfTypes.get(type);if(oldModule&&oldModule!==moduleType){this._reportError(syntaxError('Type '+stringifyType(type)+' is part of the declarations of 2 modules: '+stringifyType(oldModule)+' and '+stringifyType(moduleType)+'! '+('Please consider moving '+stringifyType(type)+' to a higher module that imports '+stringifyType(oldModule)+' and '+stringifyType(moduleType)+'. ')+('You can also create a new NgModule that exports and includes '+stringifyType(type)+' then import that NgModule in '+stringifyType(oldModule)+' and '+stringifyType(moduleType)+'.')),moduleType);}this._ngModuleOfTypes.set(type,moduleType);}/**
     * @param {?} importedModules
     * @param {?} exportedModules
     * @return {?}
     */},{key:'_getTransitiveNgModuleMetadata',value:function _getTransitiveNgModuleMetadata(importedModules,exportedModules){// collect `providers` / `entryComponents` from all imported and all exported modules
var/** @type {?} */result=new TransitiveCompileNgModuleMetadata();var/** @type {?} */modulesByToken=new Map();importedModules.concat(exportedModules).forEach(function(modSummary){modSummary.modules.forEach(function(mod){return result.addModule(mod);});modSummary.entryComponents.forEach(function(comp){return result.addEntryComponent(comp);});var/** @type {?} */addedTokens=new Set();modSummary.providers.forEach(function(entry){var/** @type {?} */tokenRef=tokenReference(entry.provider.token);var/** @type {?} */prevModules=modulesByToken.get(tokenRef);if(!prevModules){prevModules=new Set();modulesByToken.set(tokenRef,prevModules);}var/** @type {?} */moduleRef=entry.module.reference;// Note: the providers of one module may still contain multiple providers
// per token (e.g. for multi providers), and we need to preserve these.
if(addedTokens.has(tokenRef)||!prevModules.has(moduleRef)){prevModules.add(moduleRef);addedTokens.add(tokenRef);result.addProvider(entry.provider,entry.module);}});});exportedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addExportedDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addExportedPipe(id);});});importedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addPipe(id);});});return result;}/**
     * @param {?} type
     * @return {?}
     */},{key:'_getIdentifierMetadata',value:function _getIdentifierMetadata(type){type=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(type);return{reference:type};}/**
     * @param {?} type
     * @return {?}
     */},{key:'isInjectable',value:function isInjectable(type){var/** @type {?} */annotations=this._reflector.annotations(type);// Note: We need an exact check here as @Component / @Directive / ... inherit
// from @CompilerInjectable!
return annotations.some(function(ann){return ann.constructor===__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */];});}/**
     * @param {?} type
     * @return {?}
     */},{key:'getInjectableSummary',value:function getInjectableSummary(type){return{summaryKind:CompileSummaryKind.Injectable,type:this._getTypeMetadata(type)};}/**
     * @param {?} type
     * @param {?=} dependencies
     * @return {?}
     */},{key:'_getInjectableMetadata',value:function _getInjectableMetadata(type){var dependencies=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */typeSummary=this._loadSummary(type,CompileSummaryKind.Injectable);if(typeSummary){return typeSummary.type;}return this._getTypeMetadata(type,dependencies);}/**
     * @param {?} type
     * @param {?=} dependencies
     * @return {?}
     */},{key:'_getTypeMetadata',value:function _getTypeMetadata(type){var dependencies=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */identifier=this._getIdentifierMetadata(type);return{reference:identifier.reference,diDeps:this._getDependenciesMetadata(identifier.reference,dependencies),lifecycleHooks:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_110" /* ɵLIFECYCLE_HOOKS_VALUES */].filter(function(hook){return hasLifecycleHook(hook,identifier.reference);})};}/**
     * @param {?} factory
     * @param {?=} dependencies
     * @return {?}
     */},{key:'_getFactoryMetadata',value:function _getFactoryMetadata(factory){var dependencies=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;factory=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(factory);return{reference:factory,diDeps:this._getDependenciesMetadata(factory,dependencies)};}/**
     * Gets the metadata for the given pipe.
     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
     * @param {?} pipeType
     * @return {?}
     */},{key:'getPipeMetadata',value:function getPipeMetadata(pipeType){var/** @type {?} */pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){this._reportError(syntaxError('Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe '+stringifyType(pipeType)+'.'),pipeType);}return pipeMeta;}/**
     * @param {?} pipeType
     * @return {?}
     */},{key:'getPipeSummary',value:function getPipeSummary(pipeType){var/** @type {?} */pipeSummary=this._loadSummary(pipeType,CompileSummaryKind.Pipe);if(!pipeSummary){this._reportError(syntaxError('Illegal state: Could not load the summary for pipe '+stringifyType(pipeType)+'.'),pipeType);}return pipeSummary;}/**
     * @param {?} pipeType
     * @return {?}
     */},{key:'getOrLoadPipeMetadata',value:function getOrLoadPipeMetadata(pipeType){var/** @type {?} */pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){pipeMeta=this._loadPipeMetadata(pipeType);}return pipeMeta;}/**
     * @param {?} pipeType
     * @return {?}
     */},{key:'_loadPipeMetadata',value:function _loadPipeMetadata(pipeType){pipeType=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(pipeType);var/** @type {?} */pipeAnnotation=this._pipeResolver.resolve(pipeType);var/** @type {?} */pipeMeta=new CompilePipeMetadata({type:this._getTypeMetadata(pipeType),name:pipeAnnotation.name,pure:pipeAnnotation.pure});this._pipeCache.set(pipeType,pipeMeta);this._summaryCache.set(pipeType,pipeMeta.toSummary());return pipeMeta;}/**
     * @param {?} typeOrFunc
     * @param {?} dependencies
     * @return {?}
     */},{key:'_getDependenciesMetadata',value:function _getDependenciesMetadata(typeOrFunc,dependencies){var _this174=this;var/** @type {?} */hasUnknownDeps=false;var/** @type {?} */params=dependencies||this._reflector.parameters(typeOrFunc)||[];var/** @type {?} */dependenciesMetadata=params.map(function(param){var/** @type {?} */isAttribute=false;var/** @type {?} */isHost=false;var/** @type {?} */isSelf=false;var/** @type {?} */isSkipSelf=false;var/** @type {?} */isOptional=false;var/** @type {?} */token=null;if(Array.isArray(param)){param.forEach(function(paramEntry){if(paramEntry instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]){isHost=true;}else if(paramEntry instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]){isSelf=true;}else if(paramEntry instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */]){isSkipSelf=true;}else if(paramEntry instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]){isOptional=true;}else if(paramEntry instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */]){isAttribute=true;token=paramEntry.attributeName;}else if(paramEntry instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */]){token=paramEntry.token;}else if(paramEntry instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]){token=paramEntry;}else if(isValidType(paramEntry)&&token==null){token=paramEntry;}});}else{token=param;}if(token==null){hasUnknownDeps=true;return null;}return{isAttribute:isAttribute,isHost:isHost,isSelf:isSelf,isSkipSelf:isSkipSelf,isOptional:isOptional,token:_this174._getTokenMetadata(token)};});if(hasUnknownDeps){var/** @type {?} */depsTokens=dependenciesMetadata.map(function(dep){return dep?stringifyType(dep.token):'?';}).join(', ');this._reportError(syntaxError('Can\'t resolve all parameters for '+stringifyType(typeOrFunc)+': ('+depsTokens+').'),typeOrFunc);}return dependenciesMetadata;}/**
     * @param {?} token
     * @return {?}
     */},{key:'_getTokenMetadata',value:function _getTokenMetadata(token){token=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(token);var/** @type {?} */compileToken=void 0;if(typeof token==='string'){compileToken={value:token};}else{compileToken={identifier:{reference:token}};}return compileToken;}/**
     * @param {?} providers
     * @param {?} targetEntryComponents
     * @param {?=} debugInfo
     * @param {?=} compileProviders
     * @param {?=} type
     * @return {?}
     */},{key:'_getProvidersMetadata',value:function _getProvidersMetadata(providers,targetEntryComponents,debugInfo){var _this175=this;var compileProviders=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];var type=arguments[4];providers.forEach(function(provider,providerIdx){if(Array.isArray(provider)){_this175._getProvidersMetadata(provider,targetEntryComponents,debugInfo,compileProviders);}else{provider=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(provider);var/** @type {?} */providerMeta=void 0;if(provider&&(typeof provider==='undefined'?'undefined':_typeof(provider))==='object'&&provider.hasOwnProperty('provide')){_this175._validateProvider(provider);providerMeta=new ProviderMeta(provider.provide,provider);}else if(isValidType(provider)){providerMeta=new ProviderMeta(provider,{useClass:provider});}else if(provider===void 0){_this175._reportError(syntaxError('Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using \'barrel\' index.ts files.'));}else{var/** @type {?} */providersInfo=providers.reduce(function(soFar,seenProvider,seenProviderIdx){if(seenProviderIdx<providerIdx){soFar.push(''+stringifyType(seenProvider));}else if(seenProviderIdx==providerIdx){soFar.push('?'+stringifyType(seenProvider)+'?');}else if(seenProviderIdx==providerIdx+1){soFar.push('...');}return soFar;},[]).join(', ');_this175._reportError(syntaxError('Invalid '+(debugInfo?debugInfo:'provider')+' - only instances of Provider and Type are allowed, got: ['+providersInfo+']'),type);}if(providerMeta.token===resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)){targetEntryComponents.push.apply(targetEntryComponents,_toConsumableArray(_this175._getEntryComponentsFromProvider(providerMeta,type)));}else{compileProviders.push(_this175.getProviderMetadata(providerMeta));}}});return compileProviders;}/**
     * @param {?} provider
     * @return {?}
     */},{key:'_validateProvider',value:function _validateProvider(provider){if(provider.hasOwnProperty('useClass')&&provider.useClass==null){this._reportError(syntaxError('Invalid provider for '+stringifyType(provider.provide)+'. useClass cannot be '+provider.useClass+'.\n           Usually it happens when:\n           1. There\'s a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.'));}}/**
     * @param {?} provider
     * @param {?=} type
     * @return {?}
     */},{key:'_getEntryComponentsFromProvider',value:function _getEntryComponentsFromProvider(provider,type){var _this176=this;var/** @type {?} */components=[];var/** @type {?} */collectedIdentifiers=[];if(provider.useFactory||provider.useExisting||provider.useClass){this._reportError(syntaxError('The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!'),type);return[];}if(!provider.multi){this._reportError(syntaxError('The ANALYZE_FOR_ENTRY_COMPONENTS token only supports \'multi = true\'!'),type);return[];}extractIdentifiers(provider.useValue,collectedIdentifiers);collectedIdentifiers.forEach(function(identifier){var/** @type {?} */entry=_this176._getEntryComponentMetadata(identifier.reference,false);if(entry){components.push(entry);}});return components;}/**
     * @param {?} dirType
     * @param {?=} throwIfNotFound
     * @return {?}
     */},{key:'_getEntryComponentMetadata',value:function _getEntryComponentMetadata(dirType){var throwIfNotFound=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var/** @type {?} */dirMeta=this.getNonNormalizedDirectiveMetadata(dirType);if(dirMeta&&dirMeta.metadata.isComponent){return{componentType:dirType,componentFactory:dirMeta.metadata.componentFactory};}else{var/** @type {?} */dirSummary=this._loadSummary(dirType,CompileSummaryKind.Directive);if(dirSummary&&dirSummary.isComponent){return{componentType:dirType,componentFactory:dirSummary.componentFactory};}}if(throwIfNotFound){throw syntaxError(dirType.name+' cannot be used as an entry component.');}}/**
     * @param {?} provider
     * @return {?}
     */},{key:'getProviderMetadata',value:function getProviderMetadata(provider){var/** @type {?} */compileDeps=void 0;var/** @type {?} */compileTypeMetadata=null;var/** @type {?} */compileFactoryMetadata=null;var/** @type {?} */token=this._getTokenMetadata(provider.token);if(provider.useClass){compileTypeMetadata=this._getInjectableMetadata(provider.useClass,provider.dependencies);compileDeps=compileTypeMetadata.diDeps;if(provider.token===provider.useClass){// use the compileTypeMetadata as it contains information about lifecycleHooks...
token={identifier:compileTypeMetadata};}}else if(provider.useFactory){compileFactoryMetadata=this._getFactoryMetadata(provider.useFactory,provider.dependencies);compileDeps=compileFactoryMetadata.diDeps;}return{token:token,useClass:compileTypeMetadata,useValue:provider.useValue,useFactory:compileFactoryMetadata,useExisting:provider.useExisting?this._getTokenMetadata(provider.useExisting):null,deps:compileDeps,multi:provider.multi};}/**
     * @param {?} queries
     * @param {?} isViewQuery
     * @param {?} directiveType
     * @return {?}
     */},{key:'_getQueriesMetadata',value:function _getQueriesMetadata(queries,isViewQuery,directiveType){var _this177=this;var/** @type {?} */res=[];Object.keys(queries).forEach(function(propertyName){var/** @type {?} */query=queries[propertyName];if(query.isViewQuery===isViewQuery){res.push(_this177._getQueryMetadata(query,propertyName,directiveType));}});return res;}/**
     * @param {?} selector
     * @return {?}
     */},{key:'_queryVarBindings',value:function _queryVarBindings(selector){return selector.split(/\s*,\s*/);}/**
     * @param {?} q
     * @param {?} propertyName
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'_getQueryMetadata',value:function _getQueryMetadata(q,propertyName,typeOrFunc){var _this178=this;var/** @type {?} */selectors=void 0;if(typeof q.selector==='string'){selectors=this._queryVarBindings(q.selector).map(function(varName){return _this178._getTokenMetadata(varName);});}else{if(!q.selector){this._reportError(syntaxError('Can\'t construct a query for the property "'+propertyName+'" of "'+stringifyType(typeOrFunc)+'" since the query selector wasn\'t defined.'),typeOrFunc);}selectors=[this._getTokenMetadata(q.selector)];}return{selectors:selectors,first:q.first,descendants:q.descendants,propertyName:propertyName,read:q.read?this._getTokenMetadata(q.read):null};}/**
     * @param {?} error
     * @param {?=} type
     * @param {?=} otherType
     * @return {?}
     */},{key:'_reportError',value:function _reportError(error,type,otherType){if(this._errorCollector){this._errorCollector(error,type);if(otherType){this._errorCollector(error,otherType);}}else{throw error;}}}]);return CompileMetadataResolver;}();CompileMetadataResolver.decorators=[{type:CompilerInjectable}];/** @nocollapse */CompileMetadataResolver.ctorParameters=function(){return[{type:CompilerConfig},{type:NgModuleResolver},{type:DirectiveResolver},{type:PipeResolver},{type:SummaryResolver},{type:ElementSchemaRegistry},{type:DirectiveNormalizer},{type:StaticSymbolCache,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]}]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_107" /* ɵReflectorReader */]},{type:undefined,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]},{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[ERROR_COLLECTOR_TOKEN]}]}];};/**
 * @param {?} tree
 * @param {?=} out
 * @return {?}
 */function flattenArray(tree){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(tree){for(var/** @type {?} */i=0;i<tree.length;i++){var/** @type {?} */item=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_105" /* resolveForwardRef */])(tree[i]);if(Array.isArray(item)){flattenArray(item,out);}else{out.push(item);}}}return out;}/**
 * @param {?} array
 * @return {?}
 */function dedupeArray(array){if(array){return Array.from(new Set(array));}return[];}/**
 * @param {?} tree
 * @return {?}
 */function flattenAndDedupeArray(tree){return dedupeArray(flattenArray(tree));}/**
 * @param {?} value
 * @return {?}
 */function isValidType(value){return value instanceof StaticSymbol||value instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["_111" /* Type */];}/**
 * @param {?} reflector
 * @param {?} type
 * @param {?} cmpMetadata
 * @return {?}
 */function componentModuleUrl(reflector,type,cmpMetadata){if(type instanceof StaticSymbol){return type.filePath;}var/** @type {?} */moduleId=cmpMetadata.moduleId;if(typeof moduleId==='string'){var/** @type {?} */scheme=getUrlScheme(moduleId);return scheme?moduleId:'package:'+moduleId+MODULE_SUFFIX;}else if(moduleId!==null&&moduleId!==void 0){throw syntaxError('moduleId should be a string in "'+stringifyType(type)+'". See https://goo.gl/wIDDiL for more information.\n'+'If you\'re using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.');}return reflector.importUri(type);}/**
 * @param {?} value
 * @param {?} targetIdentifiers
 * @return {?}
 */function extractIdentifiers(value,targetIdentifiers){visitValue(value,new _CompileValueConverter(),targetIdentifiers);}var _CompileValueConverter=function(_ValueTransformer){_inherits(_CompileValueConverter,_ValueTransformer);function _CompileValueConverter(){_classCallCheck(this,_CompileValueConverter);return _possibleConstructorReturn(this,(_CompileValueConverter.__proto__||Object.getPrototypeOf(_CompileValueConverter)).apply(this,arguments));}_createClass(_CompileValueConverter,[{key:'visitOther',/**
     * @param {?} value
     * @param {?} targetIdentifiers
     * @return {?}
     */value:function visitOther(value,targetIdentifiers){targetIdentifiers.push({reference:value});}}]);return _CompileValueConverter;}(ValueTransformer);/**
 * @param {?} type
 * @return {?}
 */function stringifyType(type){if(type instanceof StaticSymbol){return type.name+' in '+type.filePath;}else{return stringify(type);}}/**
 * Indicates that a component is still being loaded in a synchronous compile.
 * @param {?} compType
 * @return {?}
 */function componentStillLoadingError(compType){debugger;var/** @type {?} */error=Error('Can\'t compile synchronously as '+stringify(compType)+' is still being loaded!');error[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_112" /* ɵERROR_COMPONENT_TYPE */]]=compType;return error;}var/** @type {?} */QUOTED_KEYS='$quoted$';/**
 * @param {?} value
 * @param {?=} type
 * @return {?}
 */function convertValueToOutputAst(value){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return visitValue(value,new _ValueOutputAstTransformer(),type);}var _ValueOutputAstTransformer=function(){function _ValueOutputAstTransformer(){_classCallCheck(this,_ValueOutputAstTransformer);}_createClass(_ValueOutputAstTransformer,[{key:'visitArray',/**
     * @param {?} arr
     * @param {?} type
     * @return {?}
     */value:function visitArray(arr,type){var _this180=this;return literalArr(arr.map(function(value){return visitValue(value,_this180,null);}),type);}/**
     * @param {?} map
     * @param {?} type
     * @return {?}
     */},{key:'visitStringMap',value:function visitStringMap(map,type){var _this181=this;var/** @type {?} */entries=[];var/** @type {?} */quotedSet=new Set(map&&map[QUOTED_KEYS]);Object.keys(map).forEach(function(key){entries.push(new LiteralMapEntry(key,visitValue(map[key],_this181,null),quotedSet.has(key)));});return new LiteralMapExpr(entries,type);}/**
     * @param {?} value
     * @param {?} type
     * @return {?}
     */},{key:'visitPrimitive',value:function visitPrimitive(value,type){return literal(value,type);}/**
     * @param {?} value
     * @param {?} type
     * @return {?}
     */},{key:'visitOther',value:function visitOther(value,type){if(value instanceof Expression){return value;}else{return importExpr({reference:value});}}}]);return _ValueOutputAstTransformer;}();/**
 * This is currently not read, but will probably be used in the future.
 * We keep it as we already pass it through all the rigth places...
 */var ComponentFactoryDependency=/**
     * @param {?} compType
     */function ComponentFactoryDependency(compType){_classCallCheck(this,ComponentFactoryDependency);this.compType=compType;};var NgModuleCompileResult=/**
     * @param {?} statements
     * @param {?} ngModuleFactoryVar
     * @param {?} dependencies
     */function NgModuleCompileResult(statements,ngModuleFactoryVar,dependencies){_classCallCheck(this,NgModuleCompileResult);this.statements=statements;this.ngModuleFactoryVar=ngModuleFactoryVar;this.dependencies=dependencies;};var NgModuleCompiler=function(){function NgModuleCompiler(){_classCallCheck(this,NgModuleCompiler);}_createClass(NgModuleCompiler,[{key:'compile',/**
     * @param {?} ngModuleMeta
     * @param {?} extraProviders
     * @return {?}
     */value:function compile(ngModuleMeta,extraProviders){var/** @type {?} */moduleUrl=identifierModuleUrl(ngModuleMeta.type);var/** @type {?} */sourceFileName=isPresent(moduleUrl)?'in NgModule '+identifierName(ngModuleMeta.type)+' in '+moduleUrl:'in NgModule '+identifierName(ngModuleMeta.type);var/** @type {?} */sourceFile=new ParseSourceFile('',sourceFileName);var/** @type {?} */sourceSpan=new ParseSourceSpan(new ParseLocation(sourceFile,null,null,null),new ParseLocation(sourceFile,null,null,null));var/** @type {?} */deps=[];var/** @type {?} */bootstrapComponentFactories=[];var/** @type {?} */entryComponentFactories=ngModuleMeta.transitiveModule.entryComponents.map(function(entryComponent){if(ngModuleMeta.bootstrapComponents.some(function(id){return id.reference===entryComponent.componentType;})){bootstrapComponentFactories.push({reference:entryComponent.componentFactory});}deps.push(new ComponentFactoryDependency(entryComponent.componentType));return{reference:entryComponent.componentFactory};});var/** @type {?} */builder=new _InjectorBuilder(ngModuleMeta,entryComponentFactories,bootstrapComponentFactories,sourceSpan);var/** @type {?} */providerParser=new NgModuleProviderAnalyzer(ngModuleMeta,extraProviders,sourceSpan);providerParser.parse().forEach(function(provider){return builder.addProvider(provider);});var/** @type {?} */injectorClass=builder.build();var/** @type {?} */ngModuleFactoryVar=identifierName(ngModuleMeta.type)+'NgFactory';var/** @type {?} */ngModuleFactoryStmt=variable(ngModuleFactoryVar).set(importExpr(createIdentifier(Identifiers.NgModuleFactory)).instantiate([variable(injectorClass.name),importExpr(ngModuleMeta.type)],importType(createIdentifier(Identifiers.NgModuleFactory),[importType(ngModuleMeta.type)],[TypeModifier.Const]))).toDeclStmt(null,[StmtModifier.Final]);var/** @type {?} */stmts=[injectorClass,ngModuleFactoryStmt];if(ngModuleMeta.id){var/** @type {?} */registerFactoryStmt=importExpr(createIdentifier(Identifiers.RegisterModuleFactoryFn)).callFn([literal(ngModuleMeta.id),variable(ngModuleFactoryVar)]).toStmt();stmts.push(registerFactoryStmt);}return new NgModuleCompileResult(stmts,ngModuleFactoryVar,deps);}}]);return NgModuleCompiler;}();NgModuleCompiler.decorators=[{type:CompilerInjectable}];/** @nocollapse */NgModuleCompiler.ctorParameters=function(){return[];};var _InjectorBuilder=function(){/**
     * @param {?} _ngModuleMeta
     * @param {?} _entryComponentFactories
     * @param {?} _bootstrapComponentFactories
     * @param {?} _sourceSpan
     */function _InjectorBuilder(_ngModuleMeta,_entryComponentFactories,_bootstrapComponentFactories,_sourceSpan){_classCallCheck(this,_InjectorBuilder);this._ngModuleMeta=_ngModuleMeta;this._entryComponentFactories=_entryComponentFactories;this._bootstrapComponentFactories=_bootstrapComponentFactories;this._sourceSpan=_sourceSpan;this.fields=[];this.getters=[];this.methods=[];this.ctorStmts=[];this._tokens=[];this._instances=new Map();this._createStmts=[];this._destroyStmts=[];}/**
     * @param {?} resolvedProvider
     * @return {?}
     */_createClass(_InjectorBuilder,[{key:'addProvider',value:function addProvider(resolvedProvider){var _this182=this;var/** @type {?} */providerValueExpressions=resolvedProvider.providers.map(function(provider){return _this182._getProviderValue(provider);});var/** @type {?} */propName='_'+tokenName(resolvedProvider.token)+'_'+this._instances.size;var/** @type {?} */instance=this._createProviderProperty(propName,resolvedProvider,providerValueExpressions,resolvedProvider.multiProvider,resolvedProvider.eager);if(resolvedProvider.lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy)!==-1){this._destroyStmts.push(instance.callMethod('ngOnDestroy',[]).toStmt());}this._tokens.push(resolvedProvider.token);this._instances.set(tokenReference(resolvedProvider.token),instance);}/**
     * @return {?}
     */},{key:'build',value:function build(){var _this183=this;var/** @type {?} */getMethodStmts=this._tokens.map(function(token){var/** @type {?} */providerExpr=_this183._instances.get(tokenReference(token));return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(token)),[new ReturnStatement(providerExpr)]);});var/** @type {?} */methods=[new ClassMethod('createInternal',[],this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))),importType(this._ngModuleMeta.type)),new ClassMethod('getInternal',[new FnParam(InjectMethodVars.token.name,DYNAMIC_TYPE),new FnParam(InjectMethodVars.notFoundResult.name,DYNAMIC_TYPE)],getMethodStmts.concat([new ReturnStatement(InjectMethodVars.notFoundResult)]),DYNAMIC_TYPE),new ClassMethod('destroyInternal',[],this._destroyStmts)];var/** @type {?} */parentArgs=[variable(InjectorProps.parent.name),literalArr(this._entryComponentFactories.map(function(componentFactory){return importExpr(componentFactory);})),literalArr(this._bootstrapComponentFactories.map(function(componentFactory){return importExpr(componentFactory);}))];var/** @type {?} */injClassName=identifierName(this._ngModuleMeta.type)+'Injector';return createClassStmt({name:injClassName,ctorParams:[new FnParam(InjectorProps.parent.name,importType(createIdentifier(Identifiers.Injector)))],parent:importExpr(createIdentifier(Identifiers.NgModuleInjector),[importType(this._ngModuleMeta.type)]),parentArgs:parentArgs,builders:[{methods:methods},this]});}/**
     * @param {?} provider
     * @return {?}
     */},{key:'_getProviderValue',value:function _getProviderValue(provider){var _this184=this;var/** @type {?} */result=void 0;if(isPresent(provider.useExisting)){result=this._getDependency({token:provider.useExisting});}else if(isPresent(provider.useFactory)){var/** @type {?} */deps=provider.deps||provider.useFactory.diDeps;var/** @type {?} */depsExpr=deps.map(function(dep){return _this184._getDependency(dep);});result=importExpr(provider.useFactory).callFn(depsExpr);}else if(isPresent(provider.useClass)){var/** @type {?} */_deps3=provider.deps||provider.useClass.diDeps;var/** @type {?} */_depsExpr=_deps3.map(function(dep){return _this184._getDependency(dep);});result=importExpr(provider.useClass).instantiate(_depsExpr,importType(provider.useClass));}else{result=convertValueToOutputAst(provider.useValue);}return result;}/**
     * @param {?} propName
     * @param {?} provider
     * @param {?} providerValueExpressions
     * @param {?} isMulti
     * @param {?} isEager
     * @return {?}
     */},{key:'_createProviderProperty',value:function _createProviderProperty(propName,provider,providerValueExpressions,isMulti,isEager){var/** @type {?} */resolvedProviderValueExpr=void 0;var/** @type {?} */type=void 0;if(isMulti){resolvedProviderValueExpr=literalArr(providerValueExpressions);type=new ArrayType(DYNAMIC_TYPE);}else{resolvedProviderValueExpr=providerValueExpressions[0];type=providerValueExpressions[0].type;}if(!type){type=DYNAMIC_TYPE;}if(isEager){this.fields.push(new ClassField(propName,type));this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());}else{var/** @type {?} */internalField='_'+propName;this.fields.push(new ClassField(internalField,type));// Note: Equals is important for JS so that it also checks the undefined case!
var/** @type {?} */getterStmts=[new IfStmt(THIS_EXPR.prop(internalField).isBlank(),[THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),new ReturnStatement(THIS_EXPR.prop(internalField))];this.getters.push(new ClassGetter(propName,getterStmts,type));}return THIS_EXPR.prop(propName);}/**
     * @param {?} dep
     * @return {?}
     */},{key:'_getDependency',value:function _getDependency(dep){var/** @type {?} */result=null;if(dep.isValue){result=literal(dep.value);}if(!dep.isSkipSelf){if(dep.token&&(tokenReference(dep.token)===resolveIdentifier(Identifiers.Injector)||tokenReference(dep.token)===resolveIdentifier(Identifiers.ComponentFactoryResolver))){result=THIS_EXPR;}if(!result){result=this._instances.get(tokenReference(dep.token));}}if(!result){var/** @type {?} */args=[createDiTokenExpression(dep.token)];if(dep.isOptional){args.push(NULL_EXPR);}result=InjectorProps.parent.callMethod('get',args);}return result;}}]);return _InjectorBuilder;}();var InjectorProps=function InjectorProps(){_classCallCheck(this,InjectorProps);};InjectorProps.parent=THIS_EXPR.prop('parent');var InjectMethodVars=function InjectMethodVars(){_classCallCheck(this,InjectMethodVars);};InjectMethodVars.token=variable('token');InjectMethodVars.notFoundResult=variable('notFoundResult');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit
var/** @type {?} */VERSION$1=3;var/** @type {?} */JS_B64_PREFIX='# sourceMappingURL=data:application/json;base64,';var SourceMapGenerator=function(){/**
     * @param {?=} file
     */function SourceMapGenerator(){var file=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,SourceMapGenerator);this.file=file;this.sourcesContent=new Map();this.lines=[];this.lastCol0=0;this.hasMappings=false;}/**
     * @param {?} url
     * @param {?=} content
     * @return {?}
     */_createClass(SourceMapGenerator,[{key:'addSource',value:function addSource(url){var content=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!this.sourcesContent.has(url)){this.sourcesContent.set(url,content);}return this;}/**
     * @return {?}
     */},{key:'addLine',value:function addLine(){this.lines.push([]);this.lastCol0=0;return this;}/**
     * @param {?} col0
     * @param {?=} sourceUrl
     * @param {?=} sourceLine0
     * @param {?=} sourceCol0
     * @return {?}
     */},{key:'addMapping',value:function addMapping(col0,sourceUrl,sourceLine0,sourceCol0){if(!this.currentLine){throw new Error('A line must be added before mappings can be added');}if(sourceUrl!=null&&!this.sourcesContent.has(sourceUrl)){throw new Error('Unknown source file "'+sourceUrl+'"');}if(col0==null){throw new Error('The column in the generated code must be provided');}if(col0<this.lastCol0){throw new Error('Mapping should be added in output order');}if(sourceUrl&&(sourceLine0==null||sourceCol0==null)){throw new Error('The source location must be provided when a source url is provided');}this.hasMappings=true;this.lastCol0=col0;this.currentLine.push({col0:col0,sourceUrl:sourceUrl,sourceLine0:sourceLine0,sourceCol0:sourceCol0});return this;}/**
     * @return {?}
     */},{key:'toJSON',/**
     * @return {?}
     */value:function toJSON(){var _this185=this;if(!this.hasMappings){return null;}var/** @type {?} */sourcesIndex=new Map();var/** @type {?} */sources=[];var/** @type {?} */sourcesContent=[];Array.from(this.sourcesContent.keys()).forEach(function(url,i){sourcesIndex.set(url,i);sources.push(url);sourcesContent.push(_this185.sourcesContent.get(url)||null);});var/** @type {?} */mappings='';var/** @type {?} */lastCol0=0;var/** @type {?} */lastSourceIndex=0;var/** @type {?} */lastSourceLine0=0;var/** @type {?} */lastSourceCol0=0;this.lines.forEach(function(segments){lastCol0=0;mappings+=segments.map(function(segment){// zero-based starting column of the line in the generated code
var/** @type {?} */segAsStr=toBase64VLQ(segment.col0-lastCol0);lastCol0=segment.col0;if(segment.sourceUrl!=null){// zero-based index into the “sources” list
segAsStr+=toBase64VLQ(sourcesIndex.get(segment.sourceUrl)-lastSourceIndex);lastSourceIndex=sourcesIndex.get(segment.sourceUrl);// the zero-based starting line in the original source
segAsStr+=toBase64VLQ(segment.sourceLine0-lastSourceLine0);lastSourceLine0=segment.sourceLine0;// the zero-based starting column in the original source
segAsStr+=toBase64VLQ(segment.sourceCol0-lastSourceCol0);lastSourceCol0=segment.sourceCol0;}return segAsStr;}).join(',');mappings+=';';});mappings=mappings.slice(0,-1);return{'file':this.file||'','version':VERSION$1,'sourceRoot':'','sources':sources,'sourcesContent':sourcesContent,'mappings':mappings};}/**
     * @return {?}
     */},{key:'toJsComment',value:function toJsComment(){return this.hasMappings?'//'+JS_B64_PREFIX+toBase64String(JSON.stringify(this,null,0)):'';}},{key:'currentLine',get:function get(){return this.lines.slice(-1)[0];}}]);return SourceMapGenerator;}();/**
 * @param {?} value
 * @return {?}
 */function toBase64String(value){var/** @type {?} */b64='';for(var/** @type {?} */i=0;i<value.length;){var/** @type {?} */i1=value.charCodeAt(i++);var/** @type {?} */i2=value.charCodeAt(i++);var/** @type {?} */i3=value.charCodeAt(i++);b64+=toBase64Digit(i1>>2);b64+=toBase64Digit((i1&3)<<4|(isNaN(i2)?0:i2>>4));b64+=isNaN(i2)?'=':toBase64Digit((i2&15)<<2|i3>>6);b64+=isNaN(i2)||isNaN(i3)?'=':toBase64Digit(i3&63);}return b64;}/**
 * @param {?} value
 * @return {?}
 */function toBase64VLQ(value){value=value<0?(-value<<1)+1:value<<1;var/** @type {?} */out='';do{var/** @type {?} */digit=value&31;value=value>>5;if(value>0){digit=digit|32;}out+=toBase64Digit(digit);}while(value>0);return out;}var/** @type {?} */B64_DIGITS='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';/**
 * @param {?} value
 * @return {?}
 */function toBase64Digit(value){if(value<0||value>=64){throw new Error('Can only encode value in the range [0, 63]');}return B64_DIGITS[value];}var/** @type {?} */_SINGLE_QUOTE_ESCAPE_STRING_RE=/'|\\|\n|\r|\$/g;var/** @type {?} */_LEGAL_IDENTIFIER_RE=/^[$A-Z_][0-9A-Z_$]*$/i;var/** @type {?} */_INDENT_WITH='  ';var/** @type {?} */CATCH_ERROR_VAR$1=variable('error');var/** @type {?} */CATCH_STACK_VAR$1=variable('stack');var _EmittedLine=/**
     * @param {?} indent
     */function _EmittedLine(indent){_classCallCheck(this,_EmittedLine);this.indent=indent;this.parts=[];this.srcSpans=[];};var EmitterVisitorContext=function(){/**
     * @param {?} _exportedVars
     * @param {?} _indent
     */function EmitterVisitorContext(_exportedVars,_indent){_classCallCheck(this,EmitterVisitorContext);this._exportedVars=_exportedVars;this._indent=_indent;this._classes=[];this._lines=[new _EmittedLine(_indent)];}/**
     * @param {?} exportedVars
     * @return {?}
     */_createClass(EmitterVisitorContext,[{key:'isExportedVar',/**
     * @param {?} varName
     * @return {?}
     */value:function isExportedVar(varName){return this._exportedVars.indexOf(varName)!==-1;}/**
     * @param {?=} from
     * @param {?=} lastPart
     * @return {?}
     */},{key:'println',value:function println(from){var lastPart=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';this.print(from,lastPart,true);}/**
     * @return {?}
     */},{key:'lineIsEmpty',value:function lineIsEmpty(){return this._currentLine.parts.length===0;}/**
     * @param {?} from
     * @param {?} part
     * @param {?=} newLine
     * @return {?}
     */},{key:'print',value:function print(from,part){var newLine=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(part.length>0){this._currentLine.parts.push(part);this._currentLine.srcSpans.push(from&&from.sourceSpan||null);}if(newLine){this._lines.push(new _EmittedLine(this._indent));}}/**
     * @return {?}
     */},{key:'removeEmptyLastLine',value:function removeEmptyLastLine(){if(this.lineIsEmpty()){this._lines.pop();}}/**
     * @return {?}
     */},{key:'incIndent',value:function incIndent(){this._indent++;this._currentLine.indent=this._indent;}/**
     * @return {?}
     */},{key:'decIndent',value:function decIndent(){this._indent--;this._currentLine.indent=this._indent;}/**
     * @param {?} clazz
     * @return {?}
     */},{key:'pushClass',value:function pushClass(clazz){this._classes.push(clazz);}/**
     * @return {?}
     */},{key:'popClass',value:function popClass(){return this._classes.pop();}/**
     * @return {?}
     */},{key:'toSource',/**
     * @return {?}
     */value:function toSource(){return this.sourceLines.map(function(l){return l.parts.length>0?_createIndent(l.indent)+l.parts.join(''):'';}).join('\n');}/**
     * @param {?=} file
     * @param {?=} startsAtLine
     * @return {?}
     */},{key:'toSourceMapGenerator',value:function toSourceMapGenerator(){var file=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var startsAtLine=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var/** @type {?} */map=new SourceMapGenerator(file);for(var/** @type {?} */i=0;i<startsAtLine;i++){map.addLine();}this.sourceLines.forEach(function(line){map.addLine();var/** @type {?} */spans=line.srcSpans;var/** @type {?} */parts=line.parts;var/** @type {?} */col0=line.indent*_INDENT_WITH.length;var/** @type {?} */spanIdx=0;// skip leading parts without source spans
while(spanIdx<spans.length&&!spans[spanIdx]){col0+=parts[spanIdx].length;spanIdx++;}while(spanIdx<spans.length){var/** @type {?} */span=spans[spanIdx];var/** @type {?} */source=span.start.file;var/** @type {?} */sourceLine=span.start.line;var/** @type {?} */sourceCol=span.start.col;map.addSource(source.url,source.content).addMapping(col0,source.url,sourceLine,sourceCol);col0+=parts[spanIdx].length;spanIdx++;// assign parts without span or the same span to the previous segment
while(spanIdx<spans.length&&(span===spans[spanIdx]||!spans[spanIdx])){col0+=parts[spanIdx].length;spanIdx++;}}});return map;}/**
     * @return {?}
     */},{key:'_currentLine',/**
     * @return {?}
     */get:function get(){return this._lines[this._lines.length-1];}},{key:'currentClass',get:function get(){return this._classes.length>0?this._classes[this._classes.length-1]:null;}},{key:'sourceLines',get:function get(){if(this._lines.length&&this._lines[this._lines.length-1].parts.length===0){return this._lines.slice(0,-1);}return this._lines;}}],[{key:'createRoot',value:function createRoot(exportedVars){return new EmitterVisitorContext(exportedVars,0);}}]);return EmitterVisitorContext;}();/**
 * @abstract
 */var AbstractEmitterVisitor=function(){/**
     * @param {?} _escapeDollarInStrings
     */function AbstractEmitterVisitor(_escapeDollarInStrings){_classCallCheck(this,AbstractEmitterVisitor);this._escapeDollarInStrings=_escapeDollarInStrings;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */_createClass(AbstractEmitterVisitor,[{key:'visitExpressionStmt',value:function visitExpressionStmt(stmt,ctx){stmt.expr.visitExpression(this,ctx);ctx.println(stmt,';');return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReturnStmt',value:function visitReturnStmt(stmt,ctx){ctx.print(stmt,'return ');stmt.value.visitExpression(this,ctx);ctx.println(stmt,';');return null;}/**
     * @abstract
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitCastExpr',value:function visitCastExpr(ast,context){}/**
     * @abstract
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareClassStmt',value:function visitDeclareClassStmt(stmt,ctx){}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitIfStmt',value:function visitIfStmt(stmt,ctx){ctx.print(stmt,'if (');stmt.condition.visitExpression(this,ctx);ctx.print(stmt,') {');var/** @type {?} */hasElseCase=isPresent(stmt.falseCase)&&stmt.falseCase.length>0;if(stmt.trueCase.length<=1&&!hasElseCase){ctx.print(stmt,' ');this.visitAllStatements(stmt.trueCase,ctx);ctx.removeEmptyLastLine();ctx.print(stmt,' ');}else{ctx.println();ctx.incIndent();this.visitAllStatements(stmt.trueCase,ctx);ctx.decIndent();if(hasElseCase){ctx.println(stmt,'} else {');ctx.incIndent();this.visitAllStatements(stmt.falseCase,ctx);ctx.decIndent();}}ctx.println(stmt,'}');return null;}/**
     * @abstract
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitTryCatchStmt',value:function visitTryCatchStmt(stmt,ctx){}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitThrowStmt',value:function visitThrowStmt(stmt,ctx){ctx.print(stmt,'throw ');stmt.error.visitExpression(this,ctx);ctx.println(stmt,';');return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitCommentStmt',value:function visitCommentStmt(stmt,ctx){var/** @type {?} */lines=stmt.comment.split('\n');lines.forEach(function(line){ctx.println(stmt,'// '+line);});return null;}/**
     * @abstract
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareVarStmt',value:function visitDeclareVarStmt(stmt,ctx){}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitWriteVarExpr',value:function visitWriteVarExpr(expr,ctx){var/** @type {?} */lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}ctx.print(expr,expr.name+' = ');expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitWriteKeyExpr',value:function visitWriteKeyExpr(expr,ctx){var/** @type {?} */lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,'[');expr.index.visitExpression(this,ctx);ctx.print(expr,'] = ');expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitWritePropExpr',value:function visitWritePropExpr(expr,ctx){var/** @type {?} */lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,'.'+expr.name+' = ');expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInvokeMethodExpr',value:function visitInvokeMethodExpr(expr,ctx){expr.receiver.visitExpression(this,ctx);var/** @type {?} */name=expr.name;if(isPresent(expr.builtin)){name=this.getBuiltinMethodName(expr.builtin);if(isBlank(name)){// some builtins just mean to skip the call.
return null;}}ctx.print(expr,'.'+name+'(');this.visitAllExpressions(expr.args,ctx,',');ctx.print(expr,')');return null;}/**
     * @abstract
     * @param {?} method
     * @return {?}
     */},{key:'getBuiltinMethodName',value:function getBuiltinMethodName(method){}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInvokeFunctionExpr',value:function visitInvokeFunctionExpr(expr,ctx){expr.fn.visitExpression(this,ctx);ctx.print(expr,'(');this.visitAllExpressions(expr.args,ctx,',');ctx.print(expr,')');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReadVarExpr',value:function visitReadVarExpr(ast,ctx){var/** @type {?} */varName=ast.name;if(isPresent(ast.builtin)){switch(ast.builtin){case BuiltinVar.Super:varName='super';break;case BuiltinVar.This:varName='this';break;case BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$1.name;break;case BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$1.name;break;default:throw new Error('Unknown builtin variable '+ast.builtin);}}ctx.print(ast,varName);return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInstantiateExpr',value:function visitInstantiateExpr(ast,ctx){ctx.print(ast,'new ');ast.classExpr.visitExpression(this,ctx);ctx.print(ast,'(');this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,')');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralExpr',value:function visitLiteralExpr(ast,ctx){var/** @type {?} */value=ast.value;if(typeof value==='string'){ctx.print(ast,escapeIdentifier(value,this._escapeDollarInStrings));}else{ctx.print(ast,''+value);}return null;}/**
     * @abstract
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitExternalExpr',value:function visitExternalExpr(ast,ctx){}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitConditionalExpr',value:function visitConditionalExpr(ast,ctx){ctx.print(ast,'(');ast.condition.visitExpression(this,ctx);ctx.print(ast,'? ');ast.trueCase.visitExpression(this,ctx);ctx.print(ast,': ');ast.falseCase.visitExpression(this,ctx);ctx.print(ast,')');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitNotExpr',value:function visitNotExpr(ast,ctx){ctx.print(ast,'!');ast.condition.visitExpression(this,ctx);return null;}/**
     * @abstract
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitFunctionExpr',value:function visitFunctionExpr(ast,ctx){}/**
     * @abstract
     * @param {?} stmt
     * @param {?} context
     * @return {?}
     */},{key:'visitDeclareFunctionStmt',value:function visitDeclareFunctionStmt(stmt,context){}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitBinaryOperatorExpr',value:function visitBinaryOperatorExpr(ast,ctx){var/** @type {?} */opStr=void 0;switch(ast.operator){case BinaryOperator.Equals:opStr='==';break;case BinaryOperator.Identical:opStr='===';break;case BinaryOperator.NotEquals:opStr='!=';break;case BinaryOperator.NotIdentical:opStr='!==';break;case BinaryOperator.And:opStr='&&';break;case BinaryOperator.Or:opStr='||';break;case BinaryOperator.Plus:opStr='+';break;case BinaryOperator.Minus:opStr='-';break;case BinaryOperator.Divide:opStr='/';break;case BinaryOperator.Multiply:opStr='*';break;case BinaryOperator.Modulo:opStr='%';break;case BinaryOperator.Lower:opStr='<';break;case BinaryOperator.LowerEquals:opStr='<=';break;case BinaryOperator.Bigger:opStr='>';break;case BinaryOperator.BiggerEquals:opStr='>=';break;default:throw new Error('Unknown operator '+ast.operator);}ctx.print(ast,'(');ast.lhs.visitExpression(this,ctx);ctx.print(ast,' '+opStr+' ');ast.rhs.visitExpression(this,ctx);ctx.print(ast,')');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReadPropExpr',value:function visitReadPropExpr(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,'.');ctx.print(ast,ast.name);return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReadKeyExpr',value:function visitReadKeyExpr(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,'[');ast.index.visitExpression(this,ctx);ctx.print(ast,']');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralArrayExpr',value:function visitLiteralArrayExpr(ast,ctx){var/** @type {?} */useNewLine=ast.entries.length>1;ctx.print(ast,'[',useNewLine);ctx.incIndent();this.visitAllExpressions(ast.entries,ctx,',',useNewLine);ctx.decIndent();ctx.print(ast,']',useNewLine);return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralMapExpr',value:function visitLiteralMapExpr(ast,ctx){var _this186=this;var/** @type {?} */useNewLine=ast.entries.length>1;ctx.print(ast,'{',useNewLine);ctx.incIndent();this.visitAllObjects(function(entry){ctx.print(ast,escapeIdentifier(entry.key,_this186._escapeDollarInStrings,entry.quoted)+': ');entry.value.visitExpression(_this186,ctx);},ast.entries,ctx,',',useNewLine);ctx.decIndent();ctx.print(ast,'}',useNewLine);return null;}/**
     * @param {?} expressions
     * @param {?} ctx
     * @param {?} separator
     * @param {?=} newLine
     * @return {?}
     */},{key:'visitAllExpressions',value:function visitAllExpressions(expressions,ctx,separator){var _this187=this;var newLine=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;this.visitAllObjects(function(expr){return expr.visitExpression(_this187,ctx);},expressions,ctx,separator,newLine);}/**
     * @param {?} handler
     * @param {?} expressions
     * @param {?} ctx
     * @param {?} separator
     * @param {?=} newLine
     * @return {?}
     */},{key:'visitAllObjects',value:function visitAllObjects(handler,expressions,ctx,separator){var newLine=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;for(var/** @type {?} */i=0;i<expressions.length;i++){if(i>0){ctx.print(null,separator,newLine);}handler(expressions[i]);}if(newLine){ctx.println();}}/**
     * @param {?} statements
     * @param {?} ctx
     * @return {?}
     */},{key:'visitAllStatements',value:function visitAllStatements(statements,ctx){var _this188=this;statements.forEach(function(stmt){return stmt.visitStatement(_this188,ctx);});}}]);return AbstractEmitterVisitor;}();/**
 * @param {?} input
 * @param {?} escapeDollar
 * @param {?=} alwaysQuote
 * @return {?}
 */function escapeIdentifier(input,escapeDollar){var alwaysQuote=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(isBlank(input)){return null;}var/** @type {?} */body=input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE,function(){if((arguments.length<=0?undefined:arguments[0])=='$'){return escapeDollar?'\\$':'$';}else if((arguments.length<=0?undefined:arguments[0])=='\n'){return'\\n';}else if((arguments.length<=0?undefined:arguments[0])=='\r'){return'\\r';}else{return'\\'+(arguments.length<=0?undefined:arguments[0]);}});var/** @type {?} */requiresQuotes=alwaysQuote||!_LEGAL_IDENTIFIER_RE.test(body);return requiresQuotes?'\''+body+'\'':body;}/**
 * @param {?} count
 * @return {?}
 */function _createIndent(count){var/** @type {?} */res='';for(var/** @type {?} */i=0;i<count;i++){res+=_INDENT_WITH;}return res;}var/** @type {?} */_debugFilePath='/debug/lib';/**
 * @param {?} ast
 * @return {?}
 */function debugOutputAstAsTypeScript(ast){var/** @type {?} */converter=new _TsEmitterVisitor(_debugFilePath,{/**
         * @param {?} filePath
         * @param {?} containingFilePath
         * @return {?}
         */fileNameToModuleName:function fileNameToModuleName(filePath,containingFilePath){return filePath;},/**
         * @param {?} symbol
         * @return {?}
         */getImportAs:function getImportAs(symbol){return null;},getTypeArity:function getTypeArity(symbol){return null;}});var/** @type {?} */ctx=EmitterVisitorContext.createRoot([]);var/** @type {?} */asts=Array.isArray(ast)?ast:[ast];asts.forEach(function(ast){if(ast instanceof Statement){ast.visitStatement(converter,ctx);}else if(ast instanceof Expression){ast.visitExpression(converter,ctx);}else if(ast instanceof Type$1){ast.visitType(converter,ctx);}else{throw new Error('Don\'t know how to print debug info for '+ast);}});return ctx.toSource();}var TypeScriptEmitter=function(){/**
     * @param {?} _importResolver
     */function TypeScriptEmitter(_importResolver){_classCallCheck(this,TypeScriptEmitter);this._importResolver=_importResolver;}/**
     * @param {?} genFilePath
     * @param {?} stmts
     * @param {?} exportedVars
     * @return {?}
     */_createClass(TypeScriptEmitter,[{key:'emitStatements',value:function emitStatements(genFilePath,stmts,exportedVars){var _this189=this;var/** @type {?} */converter=new _TsEmitterVisitor(genFilePath,this._importResolver);var/** @type {?} */ctx=EmitterVisitorContext.createRoot(exportedVars);converter.visitAllStatements(stmts,ctx);var/** @type {?} */srcParts=[];converter.reexports.forEach(function(reexports,exportedFilePath){var/** @type {?} */reexportsCode=reexports.map(function(reexport){return reexport.name+' as '+reexport.as;}).join(',');srcParts.push('export {'+reexportsCode+'} from \''+_this189._importResolver.fileNameToModuleName(exportedFilePath,genFilePath)+'\';');});converter.importsWithPrefixes.forEach(function(prefix,importedFilePath){// Note: can't write the real word for import as it screws up system.js auto detection...
srcParts.push('imp'+('ort * as '+prefix+' from \''+_this189._importResolver.fileNameToModuleName(importedFilePath,genFilePath)+'\';'));});srcParts.push(ctx.toSource());var/** @type {?} */prefixLines=converter.reexports.size+converter.importsWithPrefixes.size;var/** @type {?} */sm=ctx.toSourceMapGenerator(null,prefixLines).toJsComment();if(sm){srcParts.push(sm);}return srcParts.join('\n');}}]);return TypeScriptEmitter;}();var _TsEmitterVisitor=function(_AbstractEmitterVisit){_inherits(_TsEmitterVisitor,_AbstractEmitterVisit);/**
     * @param {?} _genFilePath
     * @param {?} _importResolver
     */function _TsEmitterVisitor(_genFilePath,_importResolver){_classCallCheck(this,_TsEmitterVisitor);var _this190=_possibleConstructorReturn(this,(_TsEmitterVisitor.__proto__||Object.getPrototypeOf(_TsEmitterVisitor)).call(this,false));_this190._genFilePath=_genFilePath;_this190._importResolver=_importResolver;_this190.typeExpression=0;_this190.importsWithPrefixes=new Map();_this190.reexports=new Map();return _this190;}/**
     * @param {?} t
     * @param {?} ctx
     * @param {?=} defaultType
     * @return {?}
     */_createClass(_TsEmitterVisitor,[{key:'visitType',value:function visitType(t,ctx){var defaultType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'any';if(isPresent(t)){this.typeExpression++;t.visitType(this,ctx);this.typeExpression--;}else{ctx.print(null,defaultType);}}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralExpr',value:function visitLiteralExpr(ast,ctx){var/** @type {?} */value=ast.value;if(isBlank(value)&&ast.type!=INFERRED_TYPE){ctx.print(ast,'('+value+' as any)');return null;}return _get(_TsEmitterVisitor.prototype.__proto__||Object.getPrototypeOf(_TsEmitterVisitor.prototype),'visitLiteralExpr',this).call(this,ast,ctx);}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralArrayExpr',value:function visitLiteralArrayExpr(ast,ctx){if(ast.entries.length===0){ctx.print(ast,'(');}var/** @type {?} */result=_get(_TsEmitterVisitor.prototype.__proto__||Object.getPrototypeOf(_TsEmitterVisitor.prototype),'visitLiteralArrayExpr',this).call(this,ast,ctx);if(ast.entries.length===0){ctx.print(ast,' as any[])');}return result;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitExternalExpr',value:function visitExternalExpr(ast,ctx){this._visitIdentifier(ast.value,ast.typeParams,ctx);return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareVarStmt',value:function visitDeclareVarStmt(stmt,ctx){if(ctx.isExportedVar(stmt.name)&&stmt.value instanceof ExternalExpr&&!stmt.type){// check for a reexport
var _resolveStaticSymbol2=this._resolveStaticSymbol(stmt.value.value),name=_resolveStaticSymbol2.name,filePath=_resolveStaticSymbol2.filePath,members=_resolveStaticSymbol2.members;if(members.length===0&&filePath!==this._genFilePath){var/** @type {?} */reexports=this.reexports.get(filePath);if(!reexports){reexports=[];this.reexports.set(filePath,reexports);}reexports.push({name:name,as:stmt.name});return null;}}if(ctx.isExportedVar(stmt.name)){ctx.print(stmt,'export ');}if(stmt.hasModifier(StmtModifier.Final)){ctx.print(stmt,'const');}else{ctx.print(stmt,'var');}ctx.print(stmt,' '+stmt.name);this._printColonType(stmt.type,ctx);ctx.print(stmt,' = ');stmt.value.visitExpression(this,ctx);ctx.println(stmt,';');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitCastExpr',value:function visitCastExpr(ast,ctx){ctx.print(ast,'(<');ast.type.visitType(this,ctx);ctx.print(ast,'>');ast.value.visitExpression(this,ctx);ctx.print(ast,')');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInstantiateExpr',value:function visitInstantiateExpr(ast,ctx){ctx.print(ast,'new ');this.typeExpression++;ast.classExpr.visitExpression(this,ctx);this.typeExpression--;ctx.print(ast,'(');this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,')');return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareClassStmt',value:function visitDeclareClassStmt(stmt,ctx){var _this191=this;ctx.pushClass(stmt);if(ctx.isExportedVar(stmt.name)){ctx.print(stmt,'export ');}ctx.print(stmt,'class '+stmt.name);if(isPresent(stmt.parent)){ctx.print(stmt,' extends ');this.typeExpression++;stmt.parent.visitExpression(this,ctx);this.typeExpression--;}ctx.println(stmt,' {');ctx.incIndent();stmt.fields.forEach(function(field){return _this191._visitClassField(field,ctx);});if(isPresent(stmt.constructorMethod)){this._visitClassConstructor(stmt,ctx);}stmt.getters.forEach(function(getter){return _this191._visitClassGetter(getter,ctx);});stmt.methods.forEach(function(method){return _this191._visitClassMethod(method,ctx);});ctx.decIndent();ctx.println(stmt,'}');ctx.popClass();return null;}/**
     * @param {?} field
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitClassField',value:function _visitClassField(field,ctx){if(field.hasModifier(StmtModifier.Private)){// comment out as a workaround for #10967
ctx.print(null,'/*private*/ ');}ctx.print(null,field.name);this._printColonType(field.type,ctx);ctx.println(null,';');}/**
     * @param {?} getter
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitClassGetter',value:function _visitClassGetter(getter,ctx){if(getter.hasModifier(StmtModifier.Private)){ctx.print(null,'private ');}ctx.print(null,'get '+getter.name+'()');this._printColonType(getter.type,ctx);ctx.println(null,' {');ctx.incIndent();this.visitAllStatements(getter.body,ctx);ctx.decIndent();ctx.println(null,'}');}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitClassConstructor',value:function _visitClassConstructor(stmt,ctx){ctx.print(stmt,'constructor(');this._visitParams(stmt.constructorMethod.params,ctx);ctx.println(stmt,') {');ctx.incIndent();this.visitAllStatements(stmt.constructorMethod.body,ctx);ctx.decIndent();ctx.println(stmt,'}');}/**
     * @param {?} method
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitClassMethod',value:function _visitClassMethod(method,ctx){if(method.hasModifier(StmtModifier.Private)){ctx.print(null,'private ');}ctx.print(null,method.name+'(');this._visitParams(method.params,ctx);ctx.print(null,')');this._printColonType(method.type,ctx,'void');ctx.println(null,' {');ctx.incIndent();this.visitAllStatements(method.body,ctx);ctx.decIndent();ctx.println(null,'}');}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitFunctionExpr',value:function visitFunctionExpr(ast,ctx){ctx.print(ast,'(');this._visitParams(ast.params,ctx);ctx.print(ast,')');this._printColonType(ast.type,ctx,'void');ctx.println(ast,' => {');ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,'}');return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareFunctionStmt',value:function visitDeclareFunctionStmt(stmt,ctx){if(ctx.isExportedVar(stmt.name)){ctx.print(stmt,'export ');}ctx.print(stmt,'function '+stmt.name+'(');this._visitParams(stmt.params,ctx);ctx.print(stmt,')');this._printColonType(stmt.type,ctx,'void');ctx.println(stmt,' {');ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,'}');return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitTryCatchStmt',value:function visitTryCatchStmt(stmt,ctx){ctx.println(stmt,'try {');ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,'} catch ('+CATCH_ERROR_VAR$1.name+') {');ctx.incIndent();var/** @type {?} */catchStmts=[/** @type {?} */CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null,[StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,'}');return null;}/**
     * @param {?} type
     * @param {?} ctx
     * @return {?}
     */},{key:'visitBuiltintType',value:function visitBuiltintType(type,ctx){var/** @type {?} */typeStr=void 0;switch(type.name){case BuiltinTypeName.Bool:typeStr='boolean';break;case BuiltinTypeName.Dynamic:typeStr='any';break;case BuiltinTypeName.Function:typeStr='Function';break;case BuiltinTypeName.Number:typeStr='number';break;case BuiltinTypeName.Int:typeStr='number';break;case BuiltinTypeName.String:typeStr='string';break;default:throw new Error('Unsupported builtin type '+type.name);}ctx.print(null,typeStr);return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitExpressionType',value:function visitExpressionType(ast,ctx){ast.value.visitExpression(this,ctx);return null;}/**
     * @param {?} type
     * @param {?} ctx
     * @return {?}
     */},{key:'visitArrayType',value:function visitArrayType(type,ctx){this.visitType(type.of,ctx);ctx.print(null,'[]');return null;}/**
     * @param {?} type
     * @param {?} ctx
     * @return {?}
     */},{key:'visitMapType',value:function visitMapType(type,ctx){ctx.print(null,'{[key: string]:');this.visitType(type.valueType,ctx);ctx.print(null,'}');return null;}/**
     * @param {?} method
     * @return {?}
     */},{key:'getBuiltinMethodName',value:function getBuiltinMethodName(method){var/** @type {?} */name=void 0;switch(method){case BuiltinMethod.ConcatArray:name='concat';break;case BuiltinMethod.SubscribeObservable:name='subscribe';break;case BuiltinMethod.Bind:name='bind';break;default:throw new Error('Unknown builtin method: '+method);}return name;}/**
     * @param {?} params
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitParams',value:function _visitParams(params,ctx){var _this192=this;this.visitAllObjects(function(param){ctx.print(null,param.name);_this192._printColonType(param.type,ctx);},params,ctx,',');}/**
     * @param {?} value
     * @return {?}
     */},{key:'_resolveStaticSymbol',value:function _resolveStaticSymbol(value){var/** @type {?} */reference=value.reference;if(!(reference instanceof StaticSymbol)){throw new Error('Internal error: unknown identifier '+JSON.stringify(value));}var/** @type {?} */arity=this._importResolver.getTypeArity(reference)||undefined;var/** @type {?} */importReference=this._importResolver.getImportAs(reference)||reference;return{name:importReference.name,filePath:importReference.filePath,members:importReference.members,arity:arity};}/**
     * @param {?} value
     * @param {?} typeParams
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitIdentifier',value:function _visitIdentifier(value,typeParams,ctx){var _this193=this;var _resolveStaticSymbol3=this._resolveStaticSymbol(value),name=_resolveStaticSymbol3.name,filePath=_resolveStaticSymbol3.filePath,members=_resolveStaticSymbol3.members,arity=_resolveStaticSymbol3.arity;if(filePath!=this._genFilePath){var/** @type {?} */prefix=this.importsWithPrefixes.get(filePath);if(isBlank(prefix)){prefix='import'+this.importsWithPrefixes.size;this.importsWithPrefixes.set(filePath,prefix);}ctx.print(null,prefix+'.');}if(members.length){ctx.print(null,name);ctx.print(null,'.');ctx.print(null,members.join('.'));}else{ctx.print(null,name);}if(this.typeExpression>0){// If we are in a type expression that refers to a generic type then supply
// the required type parameters. If there were not enough type parameters
// supplied, supply any as the type. Outside a type expression the reference
// should not supply type parameters and be treated as a simple value reference
// to the constructor function itself.
var/** @type {?} */suppliedParameters=typeParams&&typeParams.length||0;var/** @type {?} */additionalParameters=(arity||0)-suppliedParameters;if(suppliedParameters>0||additionalParameters>0){ctx.print(null,'<');if(suppliedParameters>0){this.visitAllObjects(function(type){return type.visitType(_this193,ctx);},typeParams,ctx,',');}if(additionalParameters>0){for(var/** @type {?} */i=0;i<additionalParameters;i++){if(i>0||suppliedParameters>0)ctx.print(null,',');ctx.print(null,'any');}}ctx.print(null,'>');}}}/**
     * @param {?} type
     * @param {?} ctx
     * @param {?=} defaultType
     * @return {?}
     */},{key:'_printColonType',value:function _printColonType(type,ctx,defaultType){if(type!==INFERRED_TYPE){ctx.print(null,':');this.visitType(type,ctx,defaultType);}}}]);return _TsEmitterVisitor;}(AbstractEmitterVisitor);// =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!
//                               Reach out to mprobst for details.
//
// =================================================================================================
/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */var/** @type {?} */SECURITY_SCHEMA={};/**
 * @param {?} ctx
 * @param {?} specs
 * @return {?}
 */function registerContext(ctx,specs){var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=specs[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var spec=_step4.value;SECURITY_SCHEMA[spec.toLowerCase()]=ctx;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}}// Case is insignificant below, all element and attribute names are lower-cased for lookup.
registerContext(__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].HTML,['iframe|srcdoc','*|innerHTML','*|outerHTML']);registerContext(__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].STYLE,['*|style']);// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.
registerContext(__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].URL,['*|formAction','area|href','area|ping','audio|src','a|href','a|ping','blockquote|cite','body|background','del|cite','form|action','img|src','img|srcset','input|src','ins|cite','q|cite','source|src','source|srcset','track|src','video|poster','video|src']);registerContext(__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].RESOURCE_URL,['applet|code','applet|codebase','base|href','embed|src','frame|src','head|profile','html|manifest','iframe|src','link|href','media|src','object|codebase','object|data','script|src']);var/** @type {?} */BOOLEAN='boolean';var/** @type {?} */NUMBER='number';var/** @type {?} */STRING='string';var/** @type {?} */OBJECT='object';/**
 * This array represents the DOM schema. It encodes inheritance, properties, and events.
 *
 * ## Overview
 *
 * Each line represents one kind of element. The `element_inheritance` and properties are joined
 * using `element_inheritance|properties` syntax.
 *
 * ## Element Inheritance
 *
 * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.
 * Here the individual elements are separated by `,` (commas). Every element in the list
 * has identical properties.
 *
 * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is
 * specified then `""` (blank) element is assumed.
 *
 * NOTE: The blank element inherits from root `[Element]` element, the super element of all
 * elements.
 *
 * NOTE an element prefix such as `:svg:` has no special meaning to the schema.
 *
 * ## Properties
 *
 * Each element has a set of properties separated by `,` (commas). Each property can be prefixed
 * by a special character designating its type:
 *
 * - (no prefix): property is a string.
 * - `*`: property represents an event.
 * - `!`: property is a boolean.
 * - `#`: property is a number.
 * - `%`: property is an object.
 *
 * ## Query
 *
 * The class creates an internal squas representation which allows to easily answer the query of
 * if a given property exist on a given element.
 *
 * NOTE: We don't yet support querying for types or events.
 * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,
 *       see dom_element_schema_registry_spec.ts
 */// =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!
//
// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in
// dom_security_schema.ts. Reach out to mprobst & rjamet for details.
//
// =================================================================================================
var/** @type {?} */SCHEMA=['[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop','[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate','abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate','media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',':svg:graphics^:svg:|',':svg:animation^:svg:|*begin,*end,*repeat',':svg:geometry^:svg:|',':svg:componentTransferFunction^:svg:|',':svg:gradient^:svg:|',':svg:textContent^:svg:graphics|',':svg:textPositioning^:svg:textContent|','a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username','area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username','audio^media|','br^[HTMLElement]|clear','base^[HTMLElement]|href,target','body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink','button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value','canvas^[HTMLElement]|#height,#width','content^[HTMLElement]|select','dl^[HTMLElement]|!compact','datalist^[HTMLElement]|','details^[HTMLElement]|!open','dialog^[HTMLElement]|!open,returnValue','dir^[HTMLElement]|!compact','div^[HTMLElement]|align','embed^[HTMLElement]|align,height,name,src,type,width','fieldset^[HTMLElement]|!disabled,name','font^[HTMLElement]|color,face,size','form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target','frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src','frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows','hr^[HTMLElement]|align,color,!noShade,size,width','head^[HTMLElement]|','h1,h2,h3,h4,h5,h6^[HTMLElement]|align','html^[HTMLElement]|version','iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width','img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width','input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width','keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name','li^[HTMLElement]|type,#value','label^[HTMLElement]|htmlFor','legend^[HTMLElement]|align','link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type','map^[HTMLElement]|name','marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width','menu^[HTMLElement]|!compact','meta^[HTMLElement]|content,httpEquiv,name,scheme','meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value','ins,del^[HTMLElement]|cite,dateTime','ol^[HTMLElement]|!compact,!reversed,#start,type','object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width','optgroup^[HTMLElement]|!disabled,label','option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value','output^[HTMLElement]|defaultValue,%htmlFor,name,value','p^[HTMLElement]|align','param^[HTMLElement]|name,type,value,valueType','picture^[HTMLElement]|','pre^[HTMLElement]|#width','progress^[HTMLElement]|#max,#value','q,blockquote,cite^[HTMLElement]|','script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type','select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value','shadow^[HTMLElement]|','source^[HTMLElement]|media,sizes,src,srcset,type','span^[HTMLElement]|','style^[HTMLElement]|!disabled,media,type','caption^[HTMLElement]|align','th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width','col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width','table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width','tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign','tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign','template^[HTMLElement]|','textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap','title^[HTMLElement]|text','track^[HTMLElement]|!default,kind,label,src,srclang','ul^[HTMLElement]|!compact,type','unknown^[HTMLElement]|','video^media|#height,poster,#width',':svg:a^:svg:graphics|',':svg:animate^:svg:animation|',':svg:animateMotion^:svg:animation|',':svg:animateTransform^:svg:animation|',':svg:circle^:svg:geometry|',':svg:clipPath^:svg:graphics|',':svg:cursor^:svg:|',':svg:defs^:svg:graphics|',':svg:desc^:svg:|',':svg:discard^:svg:|',':svg:ellipse^:svg:geometry|',':svg:feBlend^:svg:|',':svg:feColorMatrix^:svg:|',':svg:feComponentTransfer^:svg:|',':svg:feComposite^:svg:|',':svg:feConvolveMatrix^:svg:|',':svg:feDiffuseLighting^:svg:|',':svg:feDisplacementMap^:svg:|',':svg:feDistantLight^:svg:|',':svg:feDropShadow^:svg:|',':svg:feFlood^:svg:|',':svg:feFuncA^:svg:componentTransferFunction|',':svg:feFuncB^:svg:componentTransferFunction|',':svg:feFuncG^:svg:componentTransferFunction|',':svg:feFuncR^:svg:componentTransferFunction|',':svg:feGaussianBlur^:svg:|',':svg:feImage^:svg:|',':svg:feMerge^:svg:|',':svg:feMergeNode^:svg:|',':svg:feMorphology^:svg:|',':svg:feOffset^:svg:|',':svg:fePointLight^:svg:|',':svg:feSpecularLighting^:svg:|',':svg:feSpotLight^:svg:|',':svg:feTile^:svg:|',':svg:feTurbulence^:svg:|',':svg:filter^:svg:|',':svg:foreignObject^:svg:graphics|',':svg:g^:svg:graphics|',':svg:image^:svg:graphics|',':svg:line^:svg:geometry|',':svg:linearGradient^:svg:gradient|',':svg:mpath^:svg:|',':svg:marker^:svg:|',':svg:mask^:svg:|',':svg:metadata^:svg:|',':svg:path^:svg:geometry|',':svg:pattern^:svg:|',':svg:polygon^:svg:geometry|',':svg:polyline^:svg:geometry|',':svg:radialGradient^:svg:gradient|',':svg:rect^:svg:geometry|',':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',':svg:script^:svg:|type',':svg:set^:svg:animation|',':svg:stop^:svg:|',':svg:style^:svg:|!disabled,media,title,type',':svg:switch^:svg:graphics|',':svg:symbol^:svg:|',':svg:tspan^:svg:textPositioning|',':svg:text^:svg:textPositioning|',':svg:textPath^:svg:textContent|',':svg:title^:svg:|',':svg:use^:svg:graphics|',':svg:view^:svg:|#zoomAndPan','data^[HTMLElement]|value','menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default','summary^[HTMLElement]|','time^[HTMLElement]|dateTime'];var/** @type {?} */_ATTR_TO_PROP={'class':'className','for':'htmlFor','formaction':'formAction','innerHtml':'innerHTML','readonly':'readOnly','tabindex':'tabIndex'};var DomElementSchemaRegistry=function(_ElementSchemaRegistr){_inherits(DomElementSchemaRegistry,_ElementSchemaRegistr);function DomElementSchemaRegistry(){_classCallCheck(this,DomElementSchemaRegistry);var _this194=_possibleConstructorReturn(this,(DomElementSchemaRegistry.__proto__||Object.getPrototypeOf(DomElementSchemaRegistry)).call(this));_this194._schema={};SCHEMA.forEach(function(encodedType){var type={};var _encodedType$split=encodedType.split('|'),_encodedType$split2=_slicedToArray(_encodedType$split,2),strType=_encodedType$split2[0],strProperties=_encodedType$split2[1];var properties=strProperties.split(',');var _strType$split=strType.split('^'),_strType$split2=_slicedToArray(_strType$split,2),typeNames=_strType$split2[0],superName=_strType$split2[1];typeNames.split(',').forEach(function(tag){return _this194._schema[tag.toLowerCase()]=type;});var superType=superName&&_this194._schema[superName.toLowerCase()];if(superType){Object.keys(superType).forEach(function(prop){type[prop]=superType[prop];});}properties.forEach(function(property){if(property.length>0){switch(property[0]){case'*':// We don't yet support events.
// If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events
// will
// almost certainly introduce bad XSS vulnerabilities.
// type[property.substring(1)] = EVENT;
break;case'!':type[property.substring(1)]=BOOLEAN;break;case'#':type[property.substring(1)]=NUMBER;break;case'%':type[property.substring(1)]=OBJECT;break;default:type[property]=STRING;}}});});return _this194;}/**
     * @param {?} tagName
     * @param {?} propName
     * @param {?} schemaMetas
     * @return {?}
     */_createClass(DomElementSchemaRegistry,[{key:'hasProperty',value:function hasProperty(tagName,propName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_113" /* NO_ERRORS_SCHEMA */].name;})){return true;}if(tagName.indexOf('-')>-1){if(tagName==='ng-container'||tagName==='ng-content'){return false;}if(schemaMetas.some(function(schema){return schema.name===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_114" /* CUSTOM_ELEMENTS_SCHEMA */].name;})){// Can't tell now as we don't know which properties a custom element will get
// once it is instantiated
return true;}}var/** @type {?} */elementProperties=this._schema[tagName.toLowerCase()]||this._schema['unknown'];return!!elementProperties[propName];}/**
     * @param {?} tagName
     * @param {?} schemaMetas
     * @return {?}
     */},{key:'hasElement',value:function hasElement(tagName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_113" /* NO_ERRORS_SCHEMA */].name;})){return true;}if(tagName.indexOf('-')>-1){if(tagName==='ng-container'||tagName==='ng-content'){return true;}if(schemaMetas.some(function(schema){return schema.name===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_114" /* CUSTOM_ELEMENTS_SCHEMA */].name;})){// Allow any custom elements
return true;}}return!!this._schema[tagName.toLowerCase()];}/**
     * securityContext returns the security context for the given property on the given DOM tag.
     *
     * Tag and property name are statically known and cannot change at runtime, i.e. it is not
     * possible to bind a value into a changing attribute or tag name.
     *
     * The filtering is white list based. All attributes in the schema above are assumed to have the
     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known
     * attack vectors are assigned their appropriate context.
     * @param {?} tagName
     * @param {?} propName
     * @param {?} isAttribute
     * @return {?}
     */},{key:'securityContext',value:function securityContext(tagName,propName,isAttribute){if(isAttribute){// NB: For security purposes, use the mapped property name, not the attribute name.
propName=this.getMappedPropName(propName);}// Make sure comparisons are case insensitive, so that case differences between attribute and
// property names do not have a security impact.
tagName=tagName.toLowerCase();propName=propName.toLowerCase();var/** @type {?} */ctx=SECURITY_SCHEMA[tagName+'|'+propName];if(ctx){return ctx;}ctx=SECURITY_SCHEMA['*|'+propName];return ctx?ctx:__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].NONE;}/**
     * @param {?} propName
     * @return {?}
     */},{key:'getMappedPropName',value:function getMappedPropName(propName){return _ATTR_TO_PROP[propName]||propName;}/**
     * @return {?}
     */},{key:'getDefaultComponentElementName',value:function getDefaultComponentElementName(){return'ng-component';}/**
     * @param {?} name
     * @return {?}
     */},{key:'validateProperty',value:function validateProperty(name){if(name.toLowerCase().startsWith('on')){var/** @type {?} */msg='Binding to event property \''+name+'\' is disallowed for security reasons, '+('please use ('+name.slice(2)+')=...')+('\nIf \''+name+'\' is a directive input, make sure the directive is imported by the')+' current module.';return{error:true,msg:msg};}else{return{error:false};}}/**
     * @param {?} name
     * @return {?}
     */},{key:'validateAttribute',value:function validateAttribute(name){if(name.toLowerCase().startsWith('on')){var/** @type {?} */msg='Binding to event attribute \''+name+'\' is disallowed for security reasons, '+('please use ('+name.slice(2)+')=...');return{error:true,msg:msg};}else{return{error:false};}}/**
     * @return {?}
     */},{key:'allKnownElementNames',value:function allKnownElementNames(){return Object.keys(this._schema);}/**
     * @param {?} propName
     * @return {?}
     */},{key:'normalizeAnimationStyleProperty',value:function normalizeAnimationStyleProperty(propName){return dashCaseToCamelCase(propName);}/**
     * @param {?} camelCaseProp
     * @param {?} userProvidedProp
     * @param {?} val
     * @return {?}
     */},{key:'normalizeAnimationStyleValue',value:function normalizeAnimationStyleValue(camelCaseProp,userProvidedProp,val){var/** @type {?} */unit='';var/** @type {?} */strVal=val.toString().trim();var/** @type {?} */errorMsg=null;if(_isPixelDimensionStyle(camelCaseProp)&&val!==0&&val!=='0'){if(typeof val==='number'){unit='px';}else{var/** @type {?} */valAndSuffixMatch=val.match(/^[+-]?[\d\.]+([a-z]*)$/);if(valAndSuffixMatch&&valAndSuffixMatch[1].length==0){errorMsg='Please provide a CSS unit value for '+userProvidedProp+':'+val;}}}return{error:errorMsg,value:strVal+unit};}}]);return DomElementSchemaRegistry;}(ElementSchemaRegistry);DomElementSchemaRegistry.decorators=[{type:CompilerInjectable}];/** @nocollapse */DomElementSchemaRegistry.ctorParameters=function(){return[];};/**
 * @param {?} prop
 * @return {?}
 */function _isPixelDimensionStyle(prop){switch(prop){case'width':case'height':case'minWidth':case'minHeight':case'maxWidth':case'maxHeight':case'left':case'top':case'bottom':case'right':case'fontSize':case'outlineWidth':case'outlineOffset':case'paddingTop':case'paddingLeft':case'paddingBottom':case'paddingRight':case'marginTop':case'marginLeft':case'marginBottom':case'marginRight':case'borderRadius':case'borderWidth':case'borderTopWidth':case'borderLeftWidth':case'borderRightWidth':case'borderBottomWidth':case'textIndent':return true;default:return false;}}var ShadowCss=function(){function ShadowCss(){_classCallCheck(this,ShadowCss);this.strictStyling=true;}/**
     * @param {?} cssText
     * @param {?} selector
     * @param {?=} hostSelector
     * @return {?}
     */_createClass(ShadowCss,[{key:'shimCssText',value:function shimCssText(cssText,selector){var hostSelector=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';var/** @type {?} */sourceMappingUrl=extractSourceMappingUrl(cssText);cssText=stripComments(cssText);cssText=this._insertDirectives(cssText);return this._scopeCssText(cssText,selector,hostSelector)+sourceMappingUrl;}/**
     * @param {?} cssText
     * @return {?}
     */},{key:'_insertDirectives',value:function _insertDirectives(cssText){cssText=this._insertPolyfillDirectivesInCssText(cssText);return this._insertPolyfillRulesInCssText(cssText);}/**
     * @param {?} cssText
     * @return {?}
     */},{key:'_insertPolyfillDirectivesInCssText',value:function _insertPolyfillDirectivesInCssText(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentNextSelectorRe,function(){return(arguments.length<=2?undefined:arguments[2])+'{';});}/**
     * @param {?} cssText
     * @return {?}
     */},{key:'_insertPolyfillRulesInCssText',value:function _insertPolyfillRulesInCssText(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentRuleRe,function(){for(var _len2=arguments.length,m=Array(_len2),_key2=0;_key2<_len2;_key2++){m[_key2]=arguments[_key2];}var/** @type {?} */rule=m[0].replace(m[1],'').replace(m[2],'');return m[4]+rule;});}/**
     * @param {?} cssText
     * @param {?} scopeSelector
     * @param {?} hostSelector
     * @return {?}
     */},{key:'_scopeCssText',value:function _scopeCssText(cssText,scopeSelector,hostSelector){var/** @type {?} */unscopedRules=this._extractUnscopedRulesFromCssText(cssText);// replace :host and :host-context -shadowcsshost and -shadowcsshost respectively
cssText=this._insertPolyfillHostInCssText(cssText);cssText=this._convertColonHost(cssText);cssText=this._convertColonHostContext(cssText);cssText=this._convertShadowDOMSelectors(cssText);if(scopeSelector){cssText=this._scopeSelectors(cssText,scopeSelector,hostSelector);}cssText=cssText+'\n'+unscopedRules;return cssText.trim();}/**
     * @param {?} cssText
     * @return {?}
     */},{key:'_extractUnscopedRulesFromCssText',value:function _extractUnscopedRulesFromCssText(cssText){// Difference with webcomponents.js: does not handle comments
var/** @type {?} */r='';var/** @type {?} */m=void 0;_cssContentUnscopedRuleRe.lastIndex=0;while((m=_cssContentUnscopedRuleRe.exec(cssText))!==null){var/** @type {?} */rule=m[0].replace(m[2],'').replace(m[1],m[4]);r+=rule+'\n\n';}return r;}/**
     * @param {?} cssText
     * @return {?}
     */},{key:'_convertColonHost',value:function _convertColonHost(cssText){return this._convertColonRule(cssText,_cssColonHostRe,this._colonHostPartReplacer);}/**
     * @param {?} cssText
     * @return {?}
     */},{key:'_convertColonHostContext',value:function _convertColonHostContext(cssText){return this._convertColonRule(cssText,_cssColonHostContextRe,this._colonHostContextPartReplacer);}/**
     * @param {?} cssText
     * @param {?} regExp
     * @param {?} partReplacer
     * @return {?}
     */},{key:'_convertColonRule',value:function _convertColonRule(cssText,regExp,partReplacer){// m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule
return cssText.replace(regExp,function(){for(var _len3=arguments.length,m=Array(_len3),_key3=0;_key3<_len3;_key3++){m[_key3]=arguments[_key3];}if(m[2]){var/** @type {?} */parts=m[2].split(',');var/** @type {?} */r=[];for(var/** @type {?} */i=0;i<parts.length;i++){var/** @type {?} */p=parts[i].trim();if(!p)break;r.push(partReplacer(_polyfillHostNoCombinator,p,m[3]));}return r.join(',');}else{return _polyfillHostNoCombinator+m[3];}});}/**
     * @param {?} host
     * @param {?} part
     * @param {?} suffix
     * @return {?}
     */},{key:'_colonHostContextPartReplacer',value:function _colonHostContextPartReplacer(host,part,suffix){if(part.indexOf(_polyfillHost)>-1){return this._colonHostPartReplacer(host,part,suffix);}else{return host+part+suffix+', '+part+' '+host+suffix;}}/**
     * @param {?} host
     * @param {?} part
     * @param {?} suffix
     * @return {?}
     */},{key:'_colonHostPartReplacer',value:function _colonHostPartReplacer(host,part,suffix){return host+part.replace(_polyfillHost,'')+suffix;}/**
     * @param {?} cssText
     * @return {?}
     */},{key:'_convertShadowDOMSelectors',value:function _convertShadowDOMSelectors(cssText){return _shadowDOMSelectorsRe.reduce(function(result,pattern){return result.replace(pattern,' ');},cssText);}/**
     * @param {?} cssText
     * @param {?} scopeSelector
     * @param {?} hostSelector
     * @return {?}
     */},{key:'_scopeSelectors',value:function _scopeSelectors(cssText,scopeSelector,hostSelector){var _this195=this;return processRules(cssText,function(rule){var/** @type {?} */selector=rule.selector;var/** @type {?} */content=rule.content;if(rule.selector[0]!='@'){selector=_this195._scopeSelector(rule.selector,scopeSelector,hostSelector,_this195.strictStyling);}else if(rule.selector.startsWith('@media')||rule.selector.startsWith('@supports')||rule.selector.startsWith('@page')||rule.selector.startsWith('@document')){content=_this195._scopeSelectors(rule.content,scopeSelector,hostSelector);}return new CssRule(selector,content);});}/**
     * @param {?} selector
     * @param {?} scopeSelector
     * @param {?} hostSelector
     * @param {?} strict
     * @return {?}
     */},{key:'_scopeSelector',value:function _scopeSelector(selector,scopeSelector,hostSelector,strict){var _this196=this;return selector.split(',').map(function(part){return part.trim().split(_shadowDeepSelectors);}).map(function(deepParts){var _deepParts=_toArray(deepParts),shallowPart=_deepParts[0],otherParts=_deepParts.slice(1);var/** @type {?} */applyScope=function applyScope(shallowPart){if(_this196._selectorNeedsScoping(shallowPart,scopeSelector)){return strict?_this196._applyStrictSelectorScope(shallowPart,scopeSelector,hostSelector):_this196._applySelectorScope(shallowPart,scopeSelector,hostSelector);}else{return shallowPart;}};return[applyScope(shallowPart)].concat(_toConsumableArray(otherParts)).join(' ');}).join(', ');}/**
     * @param {?} selector
     * @param {?} scopeSelector
     * @return {?}
     */},{key:'_selectorNeedsScoping',value:function _selectorNeedsScoping(selector,scopeSelector){var/** @type {?} */re=this._makeScopeMatcher(scopeSelector);return!re.test(selector);}/**
     * @param {?} scopeSelector
     * @return {?}
     */},{key:'_makeScopeMatcher',value:function _makeScopeMatcher(scopeSelector){var/** @type {?} */lre=/\[/g;var/** @type {?} */rre=/\]/g;scopeSelector=scopeSelector.replace(lre,'\\[').replace(rre,'\\]');return new RegExp('^('+scopeSelector+')'+_selectorReSuffix,'m');}/**
     * @param {?} selector
     * @param {?} scopeSelector
     * @param {?} hostSelector
     * @return {?}
     */},{key:'_applySelectorScope',value:function _applySelectorScope(selector,scopeSelector,hostSelector){// Difference from webcomponents.js: scopeSelector could not be an array
return this._applySimpleSelectorScope(selector,scopeSelector,hostSelector);}/**
     * @param {?} selector
     * @param {?} scopeSelector
     * @param {?} hostSelector
     * @return {?}
     */},{key:'_applySimpleSelectorScope',value:function _applySimpleSelectorScope(selector,scopeSelector,hostSelector){// In Android browser, the lastIndex is not reset when the regex is used in String.replace()
_polyfillHostRe.lastIndex=0;if(_polyfillHostRe.test(selector)){var/** @type {?} */replaceBy=this.strictStyling?'['+hostSelector+']':scopeSelector;return selector.replace(_polyfillHostNoCombinatorRe,function(hnc,selector){return selector.replace(/([^:]*)(:*)(.*)/,function(_,before,colon,after){return before+replaceBy+colon+after;});}).replace(_polyfillHostRe,replaceBy+' ');}return scopeSelector+' '+selector;}/**
     * @param {?} selector
     * @param {?} scopeSelector
     * @param {?} hostSelector
     * @return {?}
     */},{key:'_applyStrictSelectorScope',value:function _applyStrictSelectorScope(selector,scopeSelector,hostSelector){var _this197=this;var/** @type {?} */isRe=/\[is=([^\]]*)\]/g;scopeSelector=scopeSelector.replace(isRe,function(_){return arguments.length<=1?undefined:arguments[1];});var/** @type {?} */attrName='['+scopeSelector+']';var/** @type {?} */_scopeSelectorPart=function _scopeSelectorPart(p){var/** @type {?} */scopedP=p.trim();if(!scopedP){return'';}if(p.indexOf(_polyfillHostNoCombinator)>-1){scopedP=_this197._applySimpleSelectorScope(p,scopeSelector,hostSelector);}else{// remove :host since it should be unnecessary
var/** @type {?} */t=p.replace(_polyfillHostRe,'');if(t.length>0){var/** @type {?} */matches=t.match(/([^:]*)(:*)(.*)/);if(matches){scopedP=matches[1]+attrName+matches[2]+matches[3];}}}return scopedP;};var/** @type {?} */safeContent=new SafeSelector(selector);selector=safeContent.content();var/** @type {?} */scopedSelector='';var/** @type {?} */startIndex=0;var/** @type {?} */res=void 0;var/** @type {?} */sep=/( |>|\+|~(?!=))\s*/g;var/** @type {?} */scopeAfter=selector.indexOf(_polyfillHostNoCombinator);while((res=sep.exec(selector))!==null){var/** @type {?} */separator=res[1];var/** @type {?} */part=selector.slice(startIndex,res.index).trim();// if a selector appears before :host-context it should not be shimmed as it
// matches on ancestor elements and not on elements in the host's shadow
var/** @type {?} */scopedPart=startIndex>=scopeAfter?_scopeSelectorPart(part):part;scopedSelector+=scopedPart+' '+separator+' ';startIndex=sep.lastIndex;}scopedSelector+=_scopeSelectorPart(selector.substring(startIndex));// replace the placeholders with their original values
return safeContent.restore(scopedSelector);}/**
     * @param {?} selector
     * @return {?}
     */},{key:'_insertPolyfillHostInCssText',value:function _insertPolyfillHostInCssText(selector){return selector.replace(_colonHostContextRe,_polyfillHostContext).replace(_colonHostRe,_polyfillHost);}}]);return ShadowCss;}();var SafeSelector=function(){/**
     * @param {?} selector
     */function SafeSelector(selector){var _this198=this;_classCallCheck(this,SafeSelector);this.placeholders=[];this.index=0;// Replaces attribute selectors with placeholders.
// The WS in [attr="va lue"] would otherwise be interpreted as a selector separator.
selector=selector.replace(/(\[[^\]]*\])/g,function(_,keep){var replaceBy='__ph-'+_this198.index+'__';_this198.placeholders.push(keep);_this198.index++;return replaceBy;});// Replaces the expression in `:nth-child(2n + 1)` with a placeholder.
// WS and "+" would otherwise be interpreted as selector separators.
this._content=selector.replace(/(:nth-[-\w]+)(\([^)]+\))/g,function(_,pseudo,exp){var replaceBy='__ph-'+_this198.index+'__';_this198.placeholders.push(exp);_this198.index++;return pseudo+replaceBy;});}_createClass(SafeSelector,[{key:'restore',/**
     * @param {?} content
     * @return {?}
     */value:function restore(content){var _this199=this;return content.replace(/__ph-(\d+)__/g,function(ph,index){return _this199.placeholders[+index];});}/**
     * @return {?}
     */},{key:'content',value:function content(){return this._content;}}]);return SafeSelector;}();var/** @type {?} */_cssContentNextSelectorRe=/polyfill-next-selector[^}]*content:[\s]*?(['"])(.*?)\1[;\s]*}([^{]*?){/gim;var/** @type {?} */_cssContentRuleRe=/(polyfill-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var/** @type {?} */_cssContentUnscopedRuleRe=/(polyfill-unscoped-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var/** @type {?} */_polyfillHost='-shadowcsshost';// note: :host-context pre-processed to -shadowcsshostcontext.
var/** @type {?} */_polyfillHostContext='-shadowcsscontext';var/** @type {?} */_parenSuffix=')(?:\\(('+'(?:\\([^)(]*\\)|[^)(]*)+?'+')\\))?([^,{]*)';var/** @type {?} */_cssColonHostRe=new RegExp('('+_polyfillHost+_parenSuffix,'gim');var/** @type {?} */_cssColonHostContextRe=new RegExp('('+_polyfillHostContext+_parenSuffix,'gim');var/** @type {?} */_polyfillHostNoCombinator=_polyfillHost+'-no-combinator';var/** @type {?} */_polyfillHostNoCombinatorRe=/-shadowcsshost-no-combinator([^\s]*)/;var/** @type {?} */_shadowDOMSelectorsRe=[/::shadow/g,/::content/g,// Deprecated selectors
/\/shadow-deep\//g,/\/shadow\//g];var/** @type {?} */_shadowDeepSelectors=/(?:>>>)|(?:\/deep\/)/g;var/** @type {?} */_selectorReSuffix='([>\\s~+\[.,{:][\\s\\S]*)?$';var/** @type {?} */_polyfillHostRe=/-shadowcsshost/gim;var/** @type {?} */_colonHostRe=/:host/gim;var/** @type {?} */_colonHostContextRe=/:host-context/gim;var/** @type {?} */_commentRe=/\/\*\s*[\s\S]*?\*\//g;/**
 * @param {?} input
 * @return {?}
 */function stripComments(input){return input.replace(_commentRe,'');}// all comments except inline source mapping
var/** @type {?} */_sourceMappingUrlRe=/\/\*\s*#\s*sourceMappingURL=[\s\S]+?\*\//;/**
 * @param {?} input
 * @return {?}
 */function extractSourceMappingUrl(input){var/** @type {?} */matcher=input.match(_sourceMappingUrlRe);return matcher?matcher[0]:'';}var/** @type {?} */_ruleRe=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g;var/** @type {?} */_curlyRe=/([{}])/g;var/** @type {?} */OPEN_CURLY='{';var/** @type {?} */CLOSE_CURLY='}';var/** @type {?} */BLOCK_PLACEHOLDER='%BLOCK%';var CssRule=/**
     * @param {?} selector
     * @param {?} content
     */function CssRule(selector,content){_classCallCheck(this,CssRule);this.selector=selector;this.content=content;};/**
 * @param {?} input
 * @param {?} ruleCallback
 * @return {?}
 */function processRules(input,ruleCallback){var/** @type {?} */inputWithEscapedBlocks=escapeBlocks(input);var/** @type {?} */nextBlockIndex=0;return inputWithEscapedBlocks.escapedString.replace(_ruleRe,function(){var/** @type {?} */selector=arguments.length<=2?undefined:arguments[2];var/** @type {?} */content='';var/** @type {?} */suffix=arguments.length<=4?undefined:arguments[4];var/** @type {?} */contentPrefix='';if(suffix&&suffix.startsWith('{'+BLOCK_PLACEHOLDER)){content=inputWithEscapedBlocks.blocks[nextBlockIndex++];suffix=suffix.substring(BLOCK_PLACEHOLDER.length+1);contentPrefix='{';}var/** @type {?} */rule=ruleCallback(new CssRule(selector,content));return''+(arguments.length<=1?undefined:arguments[1])+rule.selector+(arguments.length<=3?undefined:arguments[3])+contentPrefix+rule.content+suffix;});}var StringWithEscapedBlocks=/**
     * @param {?} escapedString
     * @param {?} blocks
     */function StringWithEscapedBlocks(escapedString,blocks){_classCallCheck(this,StringWithEscapedBlocks);this.escapedString=escapedString;this.blocks=blocks;};/**
 * @param {?} input
 * @return {?}
 */function escapeBlocks(input){var/** @type {?} */inputParts=input.split(_curlyRe);var/** @type {?} */resultParts=[];var/** @type {?} */escapedBlocks=[];var/** @type {?} */bracketCount=0;var/** @type {?} */currentBlockParts=[];for(var/** @type {?} */partIndex=0;partIndex<inputParts.length;partIndex++){var/** @type {?} */part=inputParts[partIndex];if(part==CLOSE_CURLY){bracketCount--;}if(bracketCount>0){currentBlockParts.push(part);}else{if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);currentBlockParts=[];}resultParts.push(part);}if(part==OPEN_CURLY){bracketCount++;}}if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);}return new StringWithEscapedBlocks(resultParts.join(''),escapedBlocks);}var/** @type {?} */COMPONENT_VARIABLE='%COMP%';var/** @type {?} */HOST_ATTR='_nghost-'+COMPONENT_VARIABLE;var/** @type {?} */CONTENT_ATTR='_ngcontent-'+COMPONENT_VARIABLE;var StylesCompileDependency=/**
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} isShimmed
     * @param {?} valuePlaceholder
     */function StylesCompileDependency(name,moduleUrl,isShimmed,valuePlaceholder){_classCallCheck(this,StylesCompileDependency);this.name=name;this.moduleUrl=moduleUrl;this.isShimmed=isShimmed;this.valuePlaceholder=valuePlaceholder;};var StylesCompileResult=/**
     * @param {?} componentStylesheet
     * @param {?} externalStylesheets
     */function StylesCompileResult(componentStylesheet,externalStylesheets){_classCallCheck(this,StylesCompileResult);this.componentStylesheet=componentStylesheet;this.externalStylesheets=externalStylesheets;};var CompiledStylesheet=/**
     * @param {?} statements
     * @param {?} stylesVar
     * @param {?} dependencies
     * @param {?} isShimmed
     * @param {?} meta
     */function CompiledStylesheet(statements,stylesVar,dependencies,isShimmed,meta){_classCallCheck(this,CompiledStylesheet);this.statements=statements;this.stylesVar=stylesVar;this.dependencies=dependencies;this.isShimmed=isShimmed;this.meta=meta;};var StyleCompiler=function(){/**
     * @param {?} _urlResolver
     */function StyleCompiler(_urlResolver){_classCallCheck(this,StyleCompiler);this._urlResolver=_urlResolver;this._shadowCss=new ShadowCss();}/**
     * @param {?} comp
     * @return {?}
     */_createClass(StyleCompiler,[{key:'compileComponent',value:function compileComponent(comp){var _this200=this;var/** @type {?} */externalStylesheets=[];var/** @type {?} */componentStylesheet=this._compileStyles(comp,new CompileStylesheetMetadata({styles:comp.template.styles,styleUrls:comp.template.styleUrls,moduleUrl:identifierModuleUrl(comp.type)}),true);comp.template.externalStylesheets.forEach(function(stylesheetMeta){var/** @type {?} */compiledStylesheet=_this200._compileStyles(comp,stylesheetMeta,false);externalStylesheets.push(compiledStylesheet);});return new StylesCompileResult(componentStylesheet,externalStylesheets);}/**
     * @param {?} comp
     * @param {?} stylesheet
     * @param {?} isComponentStylesheet
     * @return {?}
     */},{key:'_compileStyles',value:function _compileStyles(comp,stylesheet,isComponentStylesheet){var _this201=this;var/** @type {?} */shim=comp.template.encapsulation===__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].Emulated;var/** @type {?} */styleExpressions=stylesheet.styles.map(function(plainStyle){return literal(_this201._shimIfNeeded(plainStyle,shim));});var/** @type {?} */dependencies=[];for(var/** @type {?} */i=0;i<stylesheet.styleUrls.length;i++){var/** @type {?} */identifier={reference:null};dependencies.push(new StylesCompileDependency(getStylesVarName(null),stylesheet.styleUrls[i],shim,identifier));styleExpressions.push(new ExternalExpr(identifier));}// styles variable contains plain strings and arrays of other styles arrays (recursive),
// so we set its type to dynamic.
var/** @type {?} */stylesVar=getStylesVarName(isComponentStylesheet?comp:null);var/** @type {?} */stmt=variable(stylesVar).set(literalArr(styleExpressions,new ArrayType(DYNAMIC_TYPE,[TypeModifier.Const]))).toDeclStmt(null,[StmtModifier.Final]);return new CompiledStylesheet([stmt],stylesVar,dependencies,shim,stylesheet);}/**
     * @param {?} style
     * @param {?} shim
     * @return {?}
     */},{key:'_shimIfNeeded',value:function _shimIfNeeded(style,shim){return shim?this._shadowCss.shimCssText(style,CONTENT_ATTR,HOST_ATTR):style;}}]);return StyleCompiler;}();StyleCompiler.decorators=[{type:CompilerInjectable}];/** @nocollapse */StyleCompiler.ctorParameters=function(){return[{type:UrlResolver}];};/**
 * @param {?} component
 * @return {?}
 */function getStylesVarName(component){var/** @type {?} */result='styles';if(component){result+='_'+identifierName(component.type);}return result;}var _DebugState=/**
     * @param {?} nodeIndex
     * @param {?} sourceAst
     */function _DebugState(nodeIndex,sourceAst){_classCallCheck(this,_DebugState);this.nodeIndex=nodeIndex;this.sourceAst=sourceAst;};var/** @type {?} */NULL_DEBUG_STATE=new _DebugState(null,null);var CompileMethod=function(){/**
     * @param {?} _view
     */function CompileMethod(_view){_classCallCheck(this,CompileMethod);this._view=_view;this._newState=NULL_DEBUG_STATE;this._currState=NULL_DEBUG_STATE;this._bodyStatements=[];this._debugEnabled=this._view.genConfig.genDebugInfo;}/**
     * @return {?}
     */_createClass(CompileMethod,[{key:'_updateDebugContextIfNeeded',value:function _updateDebugContextIfNeeded(){if(this._newState.nodeIndex!==this._currState.nodeIndex||this._newState.sourceAst!==this._currState.sourceAst){var/** @type {?} */expr=this._updateDebugContext(this._newState);if(expr){this._bodyStatements.push(expr.toStmt());}}}/**
     * @param {?} newState
     * @return {?}
     */},{key:'_updateDebugContext',value:function _updateDebugContext(newState){this._currState=this._newState=newState;if(this._debugEnabled){var/** @type {?} */sourceLocation=newState.sourceAst?newState.sourceAst.sourceSpan.start:null;return THIS_EXPR.callMethod('debug',[literal(newState.nodeIndex),sourceLocation?literal(sourceLocation.line):NULL_EXPR,sourceLocation?literal(sourceLocation.col):NULL_EXPR]);}else{return null;}}/**
     * @param {?} nodeIndex
     * @param {?} templateAst
     * @return {?}
     */},{key:'resetDebugInfoExpr',value:function resetDebugInfoExpr(nodeIndex,templateAst){var/** @type {?} */res=this._updateDebugContext(new _DebugState(nodeIndex,templateAst));return res||NULL_EXPR;}/**
     * @param {?} nodeIndex
     * @param {?} templateAst
     * @return {?}
     */},{key:'resetDebugInfo',value:function resetDebugInfo(nodeIndex,templateAst){this._newState=new _DebugState(nodeIndex,templateAst);}/**
     * @param {...?} stmts
     * @return {?}
     */},{key:'push',value:function push(){for(var _len4=arguments.length,stmts=Array(_len4),_key4=0;_key4<_len4;_key4++){stmts[_key4]=arguments[_key4];}this.addStmts(stmts);}/**
     * @param {?} stmt
     * @return {?}
     */},{key:'addStmt',value:function addStmt(stmt){this._updateDebugContextIfNeeded();this._bodyStatements.push(stmt);}/**
     * @param {?} stmts
     * @return {?}
     */},{key:'addStmts',value:function addStmts(stmts){var _bodyStatements;this._updateDebugContextIfNeeded();(_bodyStatements=this._bodyStatements).push.apply(_bodyStatements,_toConsumableArray(stmts));}/**
     * @return {?}
     */},{key:'finish',value:function finish(){return this._bodyStatements;}/**
     * @return {?}
     */},{key:'isEmpty',value:function isEmpty(){return this._bodyStatements.length===0;}}]);return CompileMethod;}();/**
 * @param {?} property
 * @param {?} callingView
 * @param {?} definedView
 * @return {?}
 */function getPropertyInView(property,callingView,definedView){if(callingView===definedView){return property;}else{var/** @type {?} */viewProp=THIS_EXPR;var/** @type {?} */currView=callingView;while(currView!==definedView&&currView.declarationElement.view){currView=currView.declarationElement.view;viewProp=viewProp.prop('parentView');}if(currView!==definedView){throw new Error('Internal error: Could not calculate a property in a parent view: '+property);}return property.visitExpression(new _ReplaceViewTransformer(viewProp,definedView),null);}}var _ReplaceViewTransformer=function(_ExpressionTransforme2){_inherits(_ReplaceViewTransformer,_ExpressionTransforme2);/**
     * @param {?} _viewExpr
     * @param {?} _view
     */function _ReplaceViewTransformer(_viewExpr,_view){_classCallCheck(this,_ReplaceViewTransformer);var _this202=_possibleConstructorReturn(this,(_ReplaceViewTransformer.__proto__||Object.getPrototypeOf(_ReplaceViewTransformer)).call(this));_this202._viewExpr=_viewExpr;_this202._view=_view;return _this202;}/**
     * @param {?} expr
     * @return {?}
     */_createClass(_ReplaceViewTransformer,[{key:'_isThis',value:function _isThis(expr){return expr instanceof ReadVarExpr&&expr.builtin===BuiltinVar.This;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitReadVarExpr',value:function visitReadVarExpr(ast,context){return this._isThis(ast)?this._viewExpr:ast;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitReadPropExpr',value:function visitReadPropExpr(ast,context){if(this._isThis(ast.receiver)){// Note: Don't cast for members of the AppView base class...
if(this._view.fields.some(function(field){return field.name==ast.name;})||this._view.getters.some(function(field){return field.name==ast.name;})){return this._viewExpr.cast(this._view.classType).prop(ast.name);}}return _get(_ReplaceViewTransformer.prototype.__proto__||Object.getPrototypeOf(_ReplaceViewTransformer.prototype),'visitReadPropExpr',this).call(this,ast,context);}}]);return _ReplaceViewTransformer;}(ExpressionTransformer);/**
 * @param {?} view
 * @param {?} token
 * @param {?} optional
 * @return {?}
 */function injectFromViewParentInjector(view,token,optional){var/** @type {?} */viewExpr=void 0;if(view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].HOST){viewExpr=THIS_EXPR;}else{viewExpr=THIS_EXPR.prop('parentView');}var/** @type {?} */args=[createDiTokenExpression(token),THIS_EXPR.prop('parentIndex')];if(optional){args.push(NULL_EXPR);}return viewExpr.callMethod('injectorGet',args);}/**
 * @param {?} elementIndex
 * @return {?}
 */function getHandleEventMethodName(elementIndex){return'handleEvent_'+elementIndex;}var ViewQueryValues=/**
     * @param {?} view
     * @param {?} values
     */function ViewQueryValues(view,values){_classCallCheck(this,ViewQueryValues);this.view=view;this.values=values;};var CompileQuery=function(){/**
     * @param {?} meta
     * @param {?} queryList
     * @param {?} ownerDirectiveExpression
     * @param {?} view
     */function CompileQuery(meta,queryList,ownerDirectiveExpression,view){_classCallCheck(this,CompileQuery);this.meta=meta;this.queryList=queryList;this.ownerDirectiveExpression=ownerDirectiveExpression;this.view=view;this._values=new ViewQueryValues(view,[]);}/**
     * @param {?} value
     * @param {?} view
     * @return {?}
     */_createClass(CompileQuery,[{key:'addValue',value:function addValue(value,view){var/** @type {?} */currentView=view;var/** @type {?} */elPath=[];while(currentView&&currentView!==this.view){var/** @type {?} */parentEl=currentView.declarationElement;elPath.unshift(parentEl);currentView=parentEl.view;}var/** @type {?} */queryListForDirtyExpr=getPropertyInView(this.queryList,view,this.view);var/** @type {?} */viewValues=this._values;elPath.forEach(function(el){var/** @type {?} */last=viewValues.values.length>0?viewValues.values[viewValues.values.length-1]:null;if(last instanceof ViewQueryValues&&last.view===el.embeddedView){viewValues=last;}else{var/** @type {?} */newViewValues=new ViewQueryValues(el.embeddedView,[]);viewValues.values.push(newViewValues);viewValues=newViewValues;}});viewValues.values.push(value);if(elPath.length>0){view.dirtyParentQueriesMethod.addStmt(queryListForDirtyExpr.callMethod('setDirty',[]).toStmt());}}/**
     * @return {?}
     */},{key:'_isStatic',value:function _isStatic(){return!this._values.values.some(function(value){return value instanceof ViewQueryValues;});}/**
     * @param {?} targetStaticMethod
     * @param {?} targetDynamicMethod
     * @return {?}
     */},{key:'generateStatements',value:function generateStatements(targetStaticMethod,targetDynamicMethod){var/** @type {?} */values=createQueryValues(this._values);var/** @type {?} */updateStmts=[this.queryList.callMethod('reset',[literalArr(values)]).toStmt()];if(this.ownerDirectiveExpression){var/** @type {?} */valueExpr=this.meta.first?this.queryList.prop('first'):this.queryList;updateStmts.push(this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());}if(!this.meta.first){updateStmts.push(this.queryList.callMethod('notifyOnChanges',[]).toStmt());}if(this.meta.first&&this._isStatic()){// for queries that don't change and the user asked for a single element,
// set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...
// we don't do this for QueryLists for now as this would break the timing when
// we call QueryList listeners...
targetStaticMethod.addStmts(updateStmts);}else{targetDynamicMethod.addStmt(new IfStmt(this.queryList.prop('dirty'),updateStmts));}}}]);return CompileQuery;}();/**
 * @param {?} viewValues
 * @return {?}
 */function createQueryValues(viewValues){return ListWrapper.flatten(viewValues.values.map(function(entry){if(entry instanceof ViewQueryValues){return mapNestedViews(entry.view.declarationElement.viewContainer,entry.view,createQueryValues(entry));}else{return entry;}}));}/**
 * @param {?} viewContainer
 * @param {?} view
 * @param {?} expressions
 * @return {?}
 */function mapNestedViews(viewContainer,view,expressions){var/** @type {?} */adjustedExpressions=expressions.map(function(expr){return replaceVarInExpression(THIS_EXPR.name,variable('nestedView'),expr);});return viewContainer.callMethod('mapNestedViews',[variable(view.className),fn([new FnParam('nestedView',view.classType)],[new ReturnStatement(literalArr(adjustedExpressions))],DYNAMIC_TYPE)]);}/**
 * @param {?} propertyName
 * @param {?} compileView
 * @return {?}
 */function createQueryList(propertyName,compileView){compileView.fields.push(new ClassField(propertyName,importType(createIdentifier(Identifiers.QueryList),[DYNAMIC_TYPE])));var/** @type {?} */expr=THIS_EXPR.prop(propertyName);compileView.createMethod.addStmt(THIS_EXPR.prop(propertyName).set(importExpr(createIdentifier(Identifiers.QueryList),[DYNAMIC_TYPE]).instantiate([])).toStmt());return expr;}/**
 * @param {?} map
 * @param {?} query
 * @return {?}
 */function addQueryToTokenMap(map,query){query.meta.selectors.forEach(function(selector){var/** @type {?} */entry=map.get(tokenReference(selector));if(!entry){entry=[];map.set(tokenReference(selector),entry);}entry.push(query);});}var ViewTypeEnum=function(){function ViewTypeEnum(){_classCallCheck(this,ViewTypeEnum);}_createClass(ViewTypeEnum,null,[{key:'fromValue',/**
     * @param {?} value
     * @return {?}
     */value:function fromValue(value){return createEnumExpression(Identifiers.ViewType,value);}}]);return ViewTypeEnum;}();var ViewEncapsulationEnum=function(){function ViewEncapsulationEnum(){_classCallCheck(this,ViewEncapsulationEnum);}_createClass(ViewEncapsulationEnum,null,[{key:'fromValue',/**
     * @param {?} value
     * @return {?}
     */value:function fromValue(value){return createEnumExpression(Identifiers.ViewEncapsulation,value);}}]);return ViewEncapsulationEnum;}();var ChangeDetectorStatusEnum=function(){function ChangeDetectorStatusEnum(){_classCallCheck(this,ChangeDetectorStatusEnum);}_createClass(ChangeDetectorStatusEnum,null,[{key:'fromValue',/**
     * @param {?} value
     * @return {?}
     */value:function fromValue(value){return createEnumExpression(Identifiers.ChangeDetectorStatus,value);}}]);return ChangeDetectorStatusEnum;}();var ViewConstructorVars=function ViewConstructorVars(){_classCallCheck(this,ViewConstructorVars);};ViewConstructorVars.viewUtils=variable('viewUtils');ViewConstructorVars.parentView=variable('parentView');ViewConstructorVars.parentIndex=variable('parentIndex');ViewConstructorVars.parentElement=variable('parentElement');var ViewProperties=function ViewProperties(){_classCallCheck(this,ViewProperties);};ViewProperties.renderer=THIS_EXPR.prop('renderer');ViewProperties.viewUtils=THIS_EXPR.prop('viewUtils');ViewProperties.throwOnChange=THIS_EXPR.prop('throwOnChange');var InjectMethodVars$1=function InjectMethodVars$1(){_classCallCheck(this,InjectMethodVars$1);};InjectMethodVars$1.token=variable('token');InjectMethodVars$1.requestNodeIndex=variable('requestNodeIndex');InjectMethodVars$1.notFoundResult=variable('notFoundResult');/**
 * This is currently not read, but will probably be used in the future.
 * We keep it as we already pass it through all the right places...
 */var ComponentViewDependency=/**
     * @param {?} compType
     */function ComponentViewDependency(compType){_classCallCheck(this,ComponentViewDependency);this.compType=compType;};/**
 * This is currently not read, but will probably be used in the future.
 * We keep it as we already pass it through all the right places...
 */var ComponentFactoryDependency$1=/**
     * @param {?} compType
     */function ComponentFactoryDependency$1(compType){_classCallCheck(this,ComponentFactoryDependency$1);this.compType=compType;};/**
 * This is currently not read, but will probably be used in the future.
 * We keep it as we already pass it through all the right places...
 */var DirectiveWrapperDependency=/**
     * @param {?} dirType
     */function DirectiveWrapperDependency(dirType){_classCallCheck(this,DirectiveWrapperDependency);this.dirType=dirType;};var CompileNode=function(){/**
     * @param {?} parent
     * @param {?} view
     * @param {?} nodeIndex
     * @param {?} renderNode
     * @param {?} sourceAst
     */function CompileNode(parent,view,nodeIndex,renderNode,sourceAst){_classCallCheck(this,CompileNode);this.parent=parent;this.view=view;this.nodeIndex=nodeIndex;this.renderNode=renderNode;this.sourceAst=sourceAst;}/**
     * @return {?}
     */_createClass(CompileNode,[{key:'isNull',value:function isNull(){return!this.renderNode;}/**
     * @return {?}
     */},{key:'isRootElement',value:function isRootElement(){return this.view!=this.parent.view;}}]);return CompileNode;}();var CompileElement=function(_CompileNode){_inherits(CompileElement,_CompileNode);/**
     * @param {?} parent
     * @param {?} view
     * @param {?} nodeIndex
     * @param {?} renderNode
     * @param {?} sourceAst
     * @param {?} component
     * @param {?} _directives
     * @param {?} _resolvedProvidersArray
     * @param {?} hasViewContainer
     * @param {?} hasEmbeddedView
     * @param {?} references
     */function CompileElement(parent,view,nodeIndex,renderNode,sourceAst,component,_directives,_resolvedProvidersArray,hasViewContainer,hasEmbeddedView,references){_classCallCheck(this,CompileElement);var _this203=_possibleConstructorReturn(this,(CompileElement.__proto__||Object.getPrototypeOf(CompileElement)).call(this,parent,view,nodeIndex,renderNode,sourceAst));_this203.component=component;_this203._directives=_directives;_this203._resolvedProvidersArray=_resolvedProvidersArray;_this203.hasViewContainer=hasViewContainer;_this203.hasEmbeddedView=hasEmbeddedView;_this203.compViewExpr=null;_this203.instances=new Map();_this203.directiveWrapperInstance=new Map();_this203._queryCount=0;_this203._queries=new Map();_this203.contentNodesByNgContentIndex=null;_this203.referenceTokens={};references.forEach(function(ref){return _this203.referenceTokens[ref.name]=ref.value;});_this203.elementRef=importExpr(createIdentifier(Identifiers.ElementRef)).instantiate([_this203.renderNode]);_this203.instances.set(resolveIdentifier(Identifiers.ElementRef),_this203.elementRef);_this203.instances.set(resolveIdentifier(Identifiers.Injector),THIS_EXPR.callMethod('injector',[literal(_this203.nodeIndex)]));_this203.instances.set(resolveIdentifier(Identifiers.Renderer),THIS_EXPR.prop('renderer'));if(_this203.hasViewContainer||_this203.hasEmbeddedView){_this203._createViewContainer();}if(_this203.component){_this203._createComponentFactoryResolver();}return _this203;}/**
     * @return {?}
     */_createClass(CompileElement,[{key:'_createViewContainer',/**
     * @return {?}
     */value:function _createViewContainer(){var/** @type {?} */fieldName='_vc_'+this.nodeIndex;var/** @type {?} */parentNodeIndex=this.isRootElement()?null:this.parent.nodeIndex;// private is fine here as no child view will reference a ViewContainer
this.view.fields.push(new ClassField(fieldName,importType(createIdentifier(Identifiers.ViewContainer)),[StmtModifier.Private]));var/** @type {?} */statement=THIS_EXPR.prop(fieldName).set(importExpr(createIdentifier(Identifiers.ViewContainer)).instantiate([literal(this.nodeIndex),literal(parentNodeIndex),THIS_EXPR,this.renderNode])).toStmt();this.view.createMethod.addStmt(statement);this.viewContainer=THIS_EXPR.prop(fieldName);this.instances.set(resolveIdentifier(Identifiers.ViewContainer),this.viewContainer);this.view.viewContainers.push(this.viewContainer);}/**
     * @return {?}
     */},{key:'_createComponentFactoryResolver',value:function _createComponentFactoryResolver(){var _this204=this;var/** @type {?} */entryComponents=this.component.entryComponents.map(function(entryComponent){_this204.view.targetDependencies.push(new ComponentFactoryDependency$1(entryComponent.componentType));return{reference:entryComponent.componentFactory};});if(!entryComponents||entryComponents.length===0){return;}var/** @type {?} */createComponentFactoryResolverExpr=importExpr(createIdentifier(Identifiers.CodegenComponentFactoryResolver)).instantiate([literalArr(entryComponents.map(function(entryComponent){return importExpr(entryComponent);})),injectFromViewParentInjector(this.view,createIdentifierToken(Identifiers.ComponentFactoryResolver),false)]);var/** @type {?} */provider={token:createIdentifierToken(Identifiers.ComponentFactoryResolver),useValue:createComponentFactoryResolverExpr};// Add ComponentFactoryResolver as first provider as it does not have deps on other providers
// ProviderAstType.PrivateService as only the component and its view can see it,
// but nobody else
this._resolvedProvidersArray.unshift(new ProviderAst(provider.token,false,true,[provider],ProviderAstType.PrivateService,[],this.sourceAst.sourceSpan));}/**
     * @param {?} compViewExpr
     * @return {?}
     */},{key:'setComponentView',value:function setComponentView(compViewExpr){this.compViewExpr=compViewExpr;this.contentNodesByNgContentIndex=new Array(this.component.template.ngContentSelectors.length);for(var/** @type {?} */i=0;i<this.contentNodesByNgContentIndex.length;i++){this.contentNodesByNgContentIndex[i]=[];}}/**
     * @param {?} embeddedView
     * @return {?}
     */},{key:'setEmbeddedView',value:function setEmbeddedView(embeddedView){this.embeddedView=embeddedView;if(isPresent(embeddedView)){var/** @type {?} */createTemplateRefExpr=importExpr(createIdentifier(Identifiers.TemplateRef_)).instantiate([THIS_EXPR,literal(this.nodeIndex),this.renderNode]);var/** @type {?} */provider={token:createIdentifierToken(Identifiers.TemplateRef),useValue:createTemplateRefExpr};// Add TemplateRef as first provider as it does not have deps on other providers
this._resolvedProvidersArray.unshift(new ProviderAst(provider.token,false,true,[provider],ProviderAstType.Builtin,[],this.sourceAst.sourceSpan));}}/**
     * @return {?}
     */},{key:'beforeChildren',value:function beforeChildren(){var _this205=this;if(this.hasViewContainer){this.instances.set(resolveIdentifier(Identifiers.ViewContainerRef),this.viewContainer.prop('vcRef'));}this._resolvedProviders=new Map();this._resolvedProvidersArray.forEach(function(provider){return _this205._resolvedProviders.set(tokenReference(provider.token),provider);});// create all the provider instances, some in the view constructor,
// some as getters. We rely on the fact that they are already sorted topologically.
Array.from(this._resolvedProviders.values()).forEach(function(resolvedProvider){var/** @type {?} */isDirectiveWrapper=resolvedProvider.providerType===ProviderAstType.Component||resolvedProvider.providerType===ProviderAstType.Directive;var/** @type {?} */providerValueExpressions=resolvedProvider.providers.map(function(provider){if(provider.useExisting){return _this205._getDependency(resolvedProvider.providerType,{token:provider.useExisting});}else if(provider.useFactory){var/** @type {?} */deps=provider.deps||provider.useFactory.diDeps;var/** @type {?} */depsExpr=deps.map(function(dep){return _this205._getDependency(resolvedProvider.providerType,dep);});return importExpr(provider.useFactory).callFn(depsExpr);}else if(provider.useClass){var/** @type {?} */_deps4=provider.deps||provider.useClass.diDeps;var/** @type {?} */_depsExpr2=_deps4.map(function(dep){return _this205._getDependency(resolvedProvider.providerType,dep);});if(isDirectiveWrapper){var/** @type {?} */dirMeta=_this205._directives.find(function(dir){return dir.type.reference===provider.useClass.reference;});_this205.view.targetDependencies.push(new DirectiveWrapperDependency(dirMeta.type.reference));return DirectiveWrapperExpressions.create({reference:dirMeta.wrapperType},_depsExpr2);}else{return importExpr(provider.useClass).instantiate(_depsExpr2,importType(provider.useClass));}}else{return convertValueToOutputAst(provider.useValue);}});var/** @type {?} */propName='_'+tokenName(resolvedProvider.token)+'_'+_this205.nodeIndex+'_'+_this205.instances.size;var/** @type {?} */instance=createProviderProperty(propName,providerValueExpressions,resolvedProvider.multiProvider,resolvedProvider.eager,_this205);if(isDirectiveWrapper){_this205.directiveWrapperInstance.set(tokenReference(resolvedProvider.token),instance);_this205.instances.set(tokenReference(resolvedProvider.token),DirectiveWrapperExpressions.context(instance));}else{_this205.instances.set(tokenReference(resolvedProvider.token),instance);}});var _loop2=function _loop2(i){var/** @type {?} */directive=_this205._directives[i];var/** @type {?} */directiveInstance=_this205.instances.get(tokenReference(identifierToken(directive.type)));directive.queries.forEach(function(queryMeta){_this205._addQuery(queryMeta,directiveInstance);});};for(var/** @type {?} */i=0;i<this._directives.length;i++){_loop2(i);}Object.keys(this.referenceTokens).forEach(function(varName){var/** @type {?} */token=_this205.referenceTokens[varName];var/** @type {?} */varValue=void 0;if(token){varValue=_this205.instances.get(tokenReference(token));}else{varValue=_this205.renderNode;}_this205.view.locals.set(varName,varValue);});}/**
     * @param {?} childNodeCount
     * @return {?}
     */},{key:'afterChildren',value:function afterChildren(childNodeCount){var _this206=this;Array.from(this._resolvedProviders.values()).forEach(function(resolvedProvider){// Note: afterChildren is called after recursing into children.
// This is good so that an injector match in an element that is closer to a requesting element
// matches first.
var/** @type {?} */providerExpr=_this206.instances.get(tokenReference(resolvedProvider.token));// Note: view providers are only visible on the injector of that element.
// This is not fully correct as the rules during codegen don't allow a directive
// to get hold of a view provdier on the same element. We still do this semantic
// as it simplifies our model to having only one runtime injector per element.
var/** @type {?} */providerChildNodeCount=resolvedProvider.providerType===ProviderAstType.PrivateService?0:childNodeCount;_this206.view.injectorGetMethod.addStmt(createInjectInternalCondition(_this206.nodeIndex,providerChildNodeCount,resolvedProvider,providerExpr));});}/**
     * @return {?}
     */},{key:'finish',value:function finish(){var _this207=this;Array.from(this._queries.values()).forEach(function(queries){return queries.forEach(function(q){return q.generateStatements(_this207.view.createMethod,_this207.view.updateContentQueriesMethod);});});}/**
     * @param {?} ngContentIndex
     * @param {?} nodeExpr
     * @return {?}
     */},{key:'addContentNode',value:function addContentNode(ngContentIndex,nodeExpr){this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);}/**
     * @return {?}
     */},{key:'getComponent',value:function getComponent(){return isPresent(this.component)?this.instances.get(tokenReference(identifierToken(this.component.type))):null;}/**
     * @return {?}
     */},{key:'getProviderTokens',value:function getProviderTokens(){return Array.from(this._resolvedProviders.values()).map(function(provider){return provider.token;});}/**
     * @param {?} token
     * @return {?}
     */},{key:'getQueriesFor',value:function getQueriesFor(token){var/** @type {?} */result=[];var/** @type {?} */currentEl=this;var/** @type {?} */distance=0;var/** @type {?} */queries=void 0;while(!currentEl.isNull()){queries=currentEl._queries.get(tokenReference(token));if(isPresent(queries)){result.push.apply(result,_toConsumableArray(queries.filter(function(query){return query.meta.descendants||distance<=1;})));}if(currentEl._directives.length>0){distance++;}currentEl=currentEl.parent;}queries=this.view.componentView.viewQueries.get(tokenReference(token));if(isPresent(queries)){result.push.apply(result,_toConsumableArray(queries));}return result;}/**
     * @param {?} queryMeta
     * @param {?} directiveInstance
     * @return {?}
     */},{key:'_addQuery',value:function _addQuery(queryMeta,directiveInstance){var/** @type {?} */propName='_query_'+tokenName(queryMeta.selectors[0])+'_'+this.nodeIndex+'_'+this._queryCount++;var/** @type {?} */queryList=createQueryList(propName,this.view);var/** @type {?} */query=new CompileQuery(queryMeta,queryList,directiveInstance,this.view);addQueryToTokenMap(this._queries,query);return query;}/**
     * @param {?} requestingProviderType
     * @param {?} dep
     * @return {?}
     */},{key:'_getLocalDependency',value:function _getLocalDependency(requestingProviderType,dep){var/** @type {?} */result=null;if(isPresent(dep.token)){// access builtins with special visibility
if(!result){if(tokenReference(dep.token)===resolveIdentifier(Identifiers.ChangeDetectorRef)){if(requestingProviderType===ProviderAstType.Component){return this.compViewExpr.prop('ref');}else{return getPropertyInView(THIS_EXPR.prop('ref'),this.view,this.view.componentView);}}}// access regular providers on the element
if(!result){var/** @type {?} */resolvedProvider=this._resolvedProviders.get(tokenReference(dep.token));// don't allow directives / public services to access private services.
// only components and private services can access private services.
if(resolvedProvider&&(requestingProviderType===ProviderAstType.Directive||requestingProviderType===ProviderAstType.PublicService)&&resolvedProvider.providerType===ProviderAstType.PrivateService){return null;}result=this.instances.get(tokenReference(dep.token));}}return result;}/**
     * @param {?} requestingProviderType
     * @param {?} dep
     * @return {?}
     */},{key:'_getDependency',value:function _getDependency(requestingProviderType,dep){var/** @type {?} */currElement=this;var/** @type {?} */result=null;if(dep.isValue){result=literal(dep.value);}if(!result&&!dep.isSkipSelf){result=this._getLocalDependency(requestingProviderType,dep);}// check parent elements
while(!result&&!currElement.parent.isNull()){currElement=currElement.parent;result=currElement._getLocalDependency(ProviderAstType.PublicService,{token:dep.token});}if(!result){result=injectFromViewParentInjector(this.view,dep.token,dep.isOptional);}if(!result){result=NULL_EXPR;}return getPropertyInView(result,this.view,currElement.view);}}],[{key:'createNull',value:function createNull(){return new CompileElement(null,null,null,null,null,null,[],[],false,false,[]);}}]);return CompileElement;}(CompileNode);/**
 * @param {?} nodeIndex
 * @param {?} childNodeCount
 * @param {?} provider
 * @param {?} providerExpr
 * @return {?}
 */function createInjectInternalCondition(nodeIndex,childNodeCount,provider,providerExpr){var/** @type {?} */indexCondition=void 0;if(childNodeCount>0){indexCondition=literal(nodeIndex).lowerEquals(InjectMethodVars$1.requestNodeIndex).and(InjectMethodVars$1.requestNodeIndex.lowerEquals(literal(nodeIndex+childNodeCount)));}else{indexCondition=literal(nodeIndex).identical(InjectMethodVars$1.requestNodeIndex);}return new IfStmt(InjectMethodVars$1.token.identical(createDiTokenExpression(provider.token)).and(indexCondition),[new ReturnStatement(providerExpr)]);}/**
 * @param {?} propName
 * @param {?} providerValueExpressions
 * @param {?} isMulti
 * @param {?} isEager
 * @param {?} compileElement
 * @return {?}
 */function createProviderProperty(propName,providerValueExpressions,isMulti,isEager,compileElement){var/** @type {?} */view=compileElement.view;var/** @type {?} */resolvedProviderValueExpr=void 0;var/** @type {?} */type=void 0;if(isMulti){resolvedProviderValueExpr=literalArr(providerValueExpressions);type=new ArrayType(DYNAMIC_TYPE);}else{resolvedProviderValueExpr=providerValueExpressions[0];type=providerValueExpressions[0].type;}if(!type){type=DYNAMIC_TYPE;}if(isEager){view.fields.push(new ClassField(propName,type));view.createMethod.addStmt(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());}else{var/** @type {?} */internalField='_'+propName;view.fields.push(new ClassField(internalField,type));var/** @type {?} */getter=new CompileMethod(view);getter.resetDebugInfo(compileElement.nodeIndex,compileElement.sourceAst);// Note: Equals is important for JS so that it also checks the undefined case!
getter.addStmt(new IfStmt(THIS_EXPR.prop(internalField).isBlank(),[THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]));getter.addStmt(new ReturnStatement(THIS_EXPR.prop(internalField)));view.getters.push(new ClassGetter(propName,getter.finish(),type));}return THIS_EXPR.prop(propName);}var CompilePipe=function(){/**
     * @param {?} view
     * @param {?} meta
     */function CompilePipe(view,meta){var _this208=this;_classCallCheck(this,CompilePipe);this.view=view;this.meta=meta;this._purePipeProxyCount=0;this.instance=THIS_EXPR.prop('_pipe_'+meta.name+'_'+view.pipeCount++);var deps=this.meta.type.diDeps.map(function(diDep){if(tokenReference(diDep.token)===resolveIdentifier(Identifiers.ChangeDetectorRef)){return getPropertyInView(THIS_EXPR.prop('ref'),_this208.view,_this208.view.componentView);}return injectFromViewParentInjector(view,diDep.token,false);});this.view.fields.push(new ClassField(this.instance.name,importType(this.meta.type)));this.view.createMethod.resetDebugInfo(null,null);this.view.createMethod.addStmt(THIS_EXPR.prop(this.instance.name).set(importExpr(this.meta.type).instantiate(deps)).toStmt());}/**
     * @param {?} view
     * @param {?} name
     * @param {?} args
     * @return {?}
     */_createClass(CompilePipe,[{key:'_call',/**
     * @param {?} callingView
     * @param {?} args
     * @return {?}
     */value:function _call(callingView,args){if(this.meta.pure){// PurePipeProxies live on the view that called them.
var/** @type {?} */purePipeProxyInstance=THIS_EXPR.prop(this.instance.name+'_'+this._purePipeProxyCount++);var/** @type {?} */pipeInstanceSeenFromPureProxy=getPropertyInView(this.instance,callingView,this.view);createPureProxy(pipeInstanceSeenFromPureProxy.prop('transform').callMethod(BuiltinMethod.Bind,[pipeInstanceSeenFromPureProxy]),args.length,purePipeProxyInstance,{fields:callingView.fields,ctorStmts:callingView.createMethod});return importExpr(createIdentifier(Identifiers.castByValue)).callFn([purePipeProxyInstance,pipeInstanceSeenFromPureProxy.prop('transform')]).callFn(args);}else{return getPropertyInView(this.instance,callingView,this.view).callMethod('transform',args);}}},{key:'pure',/**
     * @return {?}
     */get:function get(){return this.meta.pure;}}],[{key:'call',value:function call(view,name,args){var/** @type {?} */compView=view.componentView;var/** @type {?} */meta=_findPipeMeta(compView,name);var/** @type {?} */pipe=void 0;if(meta.pure){// pure pipes live on the component view
pipe=compView.purePipes.get(name);if(!pipe){pipe=new CompilePipe(compView,meta);compView.purePipes.set(name,pipe);compView.pipes.push(pipe);}}else{// Non pure pipes live on the view that called it
pipe=new CompilePipe(view,meta);view.pipes.push(pipe);}return pipe._call(view,args);}}]);return CompilePipe;}();/**
 * @param {?} view
 * @param {?} name
 * @return {?}
 */function _findPipeMeta(view,name){var/** @type {?} */pipeMeta=null;for(var/** @type {?} */i=view.pipeMetas.length-1;i>=0;i--){var/** @type {?} */localPipeMeta=view.pipeMetas[i];if(localPipeMeta.name==name){pipeMeta=localPipeMeta;break;}}if(!pipeMeta){throw new Error('Illegal state: Could not find pipe '+name+' although the parser should have detected this error!');}return pipeMeta;}var CompileViewRootNodeType={};CompileViewRootNodeType.Node=0;CompileViewRootNodeType.ViewContainer=1;CompileViewRootNodeType.NgContent=2;CompileViewRootNodeType[CompileViewRootNodeType.Node]="Node";CompileViewRootNodeType[CompileViewRootNodeType.ViewContainer]="ViewContainer";CompileViewRootNodeType[CompileViewRootNodeType.NgContent]="NgContent";var CompileViewRootNode=/**
     * @param {?} type
     * @param {?} expr
     * @param {?=} ngContentIndex
     */function CompileViewRootNode(type,expr,ngContentIndex){_classCallCheck(this,CompileViewRootNode);this.type=type;this.expr=expr;this.ngContentIndex=ngContentIndex;};var CompileView=function(){/**
     * @param {?} component
     * @param {?} genConfig
     * @param {?} pipeMetas
     * @param {?} styles
     * @param {?} animations
     * @param {?} viewIndex
     * @param {?} declarationElement
     * @param {?} templateVariableBindings
     * @param {?} targetDependencies
     */function CompileView(component,genConfig,pipeMetas,styles,animations,viewIndex,declarationElement,templateVariableBindings,targetDependencies){var _this209=this;_classCallCheck(this,CompileView);this.component=component;this.genConfig=genConfig;this.pipeMetas=pipeMetas;this.styles=styles;this.animations=animations;this.viewIndex=viewIndex;this.declarationElement=declarationElement;this.templateVariableBindings=templateVariableBindings;this.targetDependencies=targetDependencies;this.viewChildren=[];this.nodes=[];this.rootNodes=[];this.lastRenderNode=NULL_EXPR;this.viewContainers=[];this.methods=[];this.ctorStmts=[];this.fields=[];this.getters=[];this.disposables=[];this.purePipes=new Map();this.pipes=[];this.locals=new Map();this.literalArrayCount=0;this.literalMapCount=0;this.pipeCount=0;this.createMethod=new CompileMethod(this);this.animationBindingsMethod=new CompileMethod(this);this.injectorGetMethod=new CompileMethod(this);this.updateContentQueriesMethod=new CompileMethod(this);this.dirtyParentQueriesMethod=new CompileMethod(this);this.updateViewQueriesMethod=new CompileMethod(this);this.detectChangesInInputsMethod=new CompileMethod(this);this.detectChangesRenderPropertiesMethod=new CompileMethod(this);this.afterContentLifecycleCallbacksMethod=new CompileMethod(this);this.afterViewLifecycleCallbacksMethod=new CompileMethod(this);this.destroyMethod=new CompileMethod(this);this.detachMethod=new CompileMethod(this);this.viewType=getViewType(component,viewIndex);this.className=viewClassName(component.type.reference,viewIndex);this.rendererTypeName=rendererTypeName(component.type.reference);this.classType=expressionType(variable(this.className));this.classExpr=variable(this.className);if(this.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT||this.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].HOST){this.componentView=this;}else{this.componentView=this.declarationElement.view.componentView;}this.componentContext=getPropertyInView(THIS_EXPR.prop('context'),this,this.componentView);var viewQueries=new Map();if(this.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT){var _directiveInstance=THIS_EXPR.prop('context');this.component.viewQueries.forEach(function(queryMeta,queryIndex){var propName='_viewQuery_'+tokenName(queryMeta.selectors[0])+'_'+queryIndex;var queryList=createQueryList(propName,_this209);var query=new CompileQuery(queryMeta,queryList,_directiveInstance,_this209);addQueryToTokenMap(viewQueries,query);});}this.viewQueries=viewQueries;templateVariableBindings.forEach(function(entry){_this209.locals.set(entry[1],THIS_EXPR.prop('context').prop(entry[0]));});if(!this.declarationElement.isNull()){this.declarationElement.setEmbeddedView(this);}}/**
     * @param {?} name
     * @param {?} input
     * @param {?} args
     * @return {?}
     */_createClass(CompileView,[{key:'callPipe',value:function callPipe(name,input,args){return CompilePipe.call(this,name,[input].concat(args));}/**
     * @param {?} name
     * @return {?}
     */},{key:'getLocal',value:function getLocal(name){if(name==EventHandlerVars.event.name){return EventHandlerVars.event;}var/** @type {?} */currView=this;var/** @type {?} */result=currView.locals.get(name);while(!result&&isPresent(currView.declarationElement.view)){currView=currView.declarationElement.view;result=currView.locals.get(name);}if(isPresent(result)){return getPropertyInView(result,this,currView);}else{return null;}}/**
     * @return {?}
     */},{key:'finish',value:function finish(){var _this210=this;Array.from(this.viewQueries.values()).forEach(function(queries){return queries.forEach(function(q){return q.generateStatements(_this210.createMethod,_this210.updateViewQueriesMethod);});});}}]);return CompileView;}();/**
 * @param {?} component
 * @param {?} embeddedTemplateIndex
 * @return {?}
 */function getViewType(component,embeddedTemplateIndex){if(embeddedTemplateIndex>0){return __WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].EMBEDDED;}if(component.isHost){return __WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].HOST;}return __WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT;}/**
 * @param {?} boundEvents
 * @param {?} directives
 * @param {?} compileElement
 * @param {?} bindToRenderer
 * @return {?}
 */function bindOutputs(boundEvents,directives,compileElement,bindToRenderer){var/** @type {?} */usedEvents=collectEvents(boundEvents,directives);if(!usedEvents.size){return false;}if(bindToRenderer){subscribeToRenderEvents(usedEvents,compileElement);}subscribeToDirectiveEvents(usedEvents,directives,compileElement);generateHandleEventMethod(boundEvents,directives,compileElement);return true;}/**
 * @param {?} boundEvents
 * @param {?} directives
 * @return {?}
 */function collectEvents(boundEvents,directives){var/** @type {?} */usedEvents=new Map();boundEvents.forEach(function(event){usedEvents.set(event.fullName,event);});directives.forEach(function(dirAst){dirAst.hostEvents.forEach(function(event){usedEvents.set(event.fullName,event);});});return usedEvents;}/**
 * @param {?} usedEvents
 * @param {?} compileElement
 * @return {?}
 */function subscribeToRenderEvents(usedEvents,compileElement){var/** @type {?} */eventAndTargetExprs=[];usedEvents.forEach(function(event){if(!event.phase){eventAndTargetExprs.push(literal(event.name),literal(event.target));}});if(eventAndTargetExprs.length){var/** @type {?} */disposableVar=variable('disposable_'+compileElement.view.disposables.length);compileElement.view.disposables.push(disposableVar);compileElement.view.createMethod.addStmt(disposableVar.set(importExpr(createIdentifier(Identifiers.subscribeToRenderElement)).callFn([THIS_EXPR,compileElement.renderNode,createInlineArray(eventAndTargetExprs),handleEventExpr(compileElement)])).toDeclStmt(FUNCTION_TYPE,[StmtModifier.Private]));}}/**
 * @param {?} usedEvents
 * @param {?} directives
 * @param {?} compileElement
 * @return {?}
 */function subscribeToDirectiveEvents(usedEvents,directives,compileElement){var/** @type {?} */usedEventNames=Array.from(usedEvents.keys());directives.forEach(function(dirAst){var/** @type {?} */dirWrapper=compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);compileElement.view.createMethod.addStmts(DirectiveWrapperExpressions.subscribe(dirAst.directive,dirAst.hostProperties,usedEventNames,dirWrapper,THIS_EXPR,handleEventExpr(compileElement)));});}/**
 * @param {?} boundEvents
 * @param {?} directives
 * @param {?} compileElement
 * @return {?}
 */function generateHandleEventMethod(boundEvents,directives,compileElement){var/** @type {?} */hasComponentHostListener=directives.some(function(dirAst){return dirAst.hostEvents.some(function(event){return dirAst.directive.isComponent;});});var/** @type {?} */markPathToRootStart=hasComponentHostListener?compileElement.compViewExpr:THIS_EXPR;var/** @type {?} */handleEventStmts=new CompileMethod(compileElement.view);handleEventStmts.resetDebugInfo(compileElement.nodeIndex,compileElement.sourceAst);handleEventStmts.push(markPathToRootStart.callMethod('markPathToRootAsCheckOnce',[]).toStmt());var/** @type {?} */eventNameVar=variable('eventName');var/** @type {?} */resultVar=variable('result');handleEventStmts.push(resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE));directives.forEach(function(dirAst,dirIdx){var/** @type {?} */dirWrapper=compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);if(dirAst.hostEvents.length>0){handleEventStmts.push(resultVar.set(DirectiveWrapperExpressions.handleEvent(dirAst.hostEvents,dirWrapper,eventNameVar,EventHandlerVars.event).and(resultVar)).toStmt());}});boundEvents.forEach(function(renderEvent,renderEventIdx){var/** @type {?} */evalResult=convertActionBinding(compileElement.view,compileElement.view.componentContext,renderEvent.handler,'sub_'+renderEventIdx);var/** @type {?} */trueStmts=evalResult.stmts;if(evalResult.allowDefault){trueStmts.push(resultVar.set(evalResult.allowDefault.and(resultVar)).toStmt());}// TODO(tbosch): convert this into a `switch` once our OutputAst supports it.
handleEventStmts.push(new IfStmt(eventNameVar.equals(literal(renderEvent.fullName)),trueStmts));});handleEventStmts.push(new ReturnStatement(resultVar));compileElement.view.methods.push(new ClassMethod(getHandleEventMethodName(compileElement.nodeIndex),[new FnParam(eventNameVar.name,STRING_TYPE),new FnParam(EventHandlerVars.event.name,DYNAMIC_TYPE)],handleEventStmts.finish(),BOOL_TYPE));}/**
 * @param {?} compileElement
 * @return {?}
 */function handleEventExpr(compileElement){var/** @type {?} */handleEventMethodName=getHandleEventMethodName(compileElement.nodeIndex);return THIS_EXPR.callMethod('eventHandler',[THIS_EXPR.prop(handleEventMethodName)]);}/**
 * @param {?} directiveMeta
 * @param {?} directiveInstance
 * @param {?} compileElement
 * @return {?}
 */function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta,directiveInstance,compileElement){var/** @type {?} */view=compileElement.view;var/** @type {?} */lifecycleHooks=directiveMeta.type.lifecycleHooks;var/** @type {?} */afterContentLifecycleCallbacksMethod=view.afterContentLifecycleCallbacksMethod;afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex,compileElement.sourceAst);if(lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterContentInit)!==-1){afterContentLifecycleCallbacksMethod.addStmt(new IfStmt(isFirstViewCheck(THIS_EXPR),[directiveInstance.callMethod('ngAfterContentInit',[]).toStmt()]));}if(lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterContentChecked)!==-1){afterContentLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterContentChecked',[]).toStmt());}}/**
 * @param {?} directiveMeta
 * @param {?} directiveInstance
 * @param {?} compileElement
 * @return {?}
 */function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta,directiveInstance,compileElement){var/** @type {?} */view=compileElement.view;var/** @type {?} */lifecycleHooks=directiveMeta.type.lifecycleHooks;var/** @type {?} */afterViewLifecycleCallbacksMethod=view.afterViewLifecycleCallbacksMethod;afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex,compileElement.sourceAst);if(lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterViewInit)!==-1){afterViewLifecycleCallbacksMethod.addStmt(new IfStmt(isFirstViewCheck(THIS_EXPR),[directiveInstance.callMethod('ngAfterViewInit',[]).toStmt()]));}if(lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterViewChecked)!==-1){afterViewLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterViewChecked',[]).toStmt());}}/**
 * @param {?} dir
 * @param {?} directiveWrapperIntance
 * @param {?} compileElement
 * @return {?}
 */function bindDirectiveWrapperLifecycleCallbacks(dir,directiveWrapperIntance,compileElement){compileElement.view.destroyMethod.addStmts(DirectiveWrapperExpressions.ngOnDestroy(dir.directive,directiveWrapperIntance));compileElement.view.detachMethod.addStmts(DirectiveWrapperExpressions.ngOnDetach(dir.hostProperties,directiveWrapperIntance,THIS_EXPR,compileElement.compViewExpr||THIS_EXPR,compileElement.renderNode));}/**
 * @param {?} provider
 * @param {?} providerInstance
 * @param {?} compileElement
 * @return {?}
 */function bindInjectableDestroyLifecycleCallbacks(provider,providerInstance,compileElement){var/** @type {?} */onDestroyMethod=compileElement.view.destroyMethod;onDestroyMethod.resetDebugInfo(compileElement.nodeIndex,compileElement.sourceAst);if(provider.providerType!==ProviderAstType.Directive&&provider.providerType!==ProviderAstType.Component&&provider.lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy)!==-1){onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy',[]).toStmt());}}/**
 * @param {?} pipeMeta
 * @param {?} pipeInstance
 * @param {?} view
 * @return {?}
 */function bindPipeDestroyLifecycleCallbacks(pipeMeta,pipeInstance,view){var/** @type {?} */onDestroyMethod=view.destroyMethod;if(pipeMeta.type.lifecycleHooks.indexOf(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy)!==-1){onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy',[]).toStmt());}}/**
 * @param {?} boundText
 * @param {?} compileNode
 * @param {?} view
 * @return {?}
 */function bindRenderText(boundText,compileNode,view){var/** @type {?} */valueField=createCheckBindingField(view);var/** @type {?} */evalResult=legacyConvertPropertyBinding(view,view,view.componentContext,boundText.value,valueField.bindingId);if(!evalResult){return null;}view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex,boundText);view.detectChangesRenderPropertiesMethod.addStmts(evalResult.stmts);view.detectChangesRenderPropertiesMethod.addStmt(importExpr(createIdentifier(Identifiers.checkRenderText)).callFn([THIS_EXPR,compileNode.renderNode,valueField.expression,valueField.expression.set(evalResult.currValExpr),evalResult.forceUpdate||literal(false)]).toStmt());}/**
 * @param {?} boundProps
 * @param {?} boundOutputs
 * @param {?} hasEvents
 * @param {?} compileElement
 * @return {?}
 */function bindRenderInputs(boundProps,boundOutputs,hasEvents,compileElement){var/** @type {?} */view=compileElement.view;var/** @type {?} */renderNode=compileElement.renderNode;boundProps.forEach(function(boundProp){var/** @type {?} */bindingField=createCheckBindingField(view);view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex,boundProp);var/** @type {?} */evalResult=legacyConvertPropertyBinding(view,view,compileElement.view.componentContext,boundProp.value,bindingField.bindingId);if(!evalResult){return;}var/** @type {?} */compileMethod=view.detectChangesRenderPropertiesMethod;switch(boundProp.type){case PropertyBindingType.Property:case PropertyBindingType.Attribute:case PropertyBindingType.Class:case PropertyBindingType.Style:compileMethod.addStmts(createCheckRenderBindingStmt(THIS_EXPR,renderNode,boundProp,bindingField.expression,evalResult));break;case PropertyBindingType.Animation:compileMethod=view.animationBindingsMethod;var _createCheckAnimation2=createCheckAnimationBindingStmts(THIS_EXPR,THIS_EXPR,boundProp,boundOutputs,(hasEvents?THIS_EXPR.prop(getHandleEventMethodName(compileElement.nodeIndex)):importExpr(createIdentifier(Identifiers.noop))).callMethod(BuiltinMethod.Bind,[THIS_EXPR]),compileElement.renderNode,bindingField.expression,evalResult),checkUpdateStmts=_createCheckAnimation2.checkUpdateStmts,checkDetachStmts=_createCheckAnimation2.checkDetachStmts;view.detachMethod.addStmts(checkDetachStmts);compileMethod.addStmts(checkUpdateStmts);break;}});}/**
 * @param {?} directiveAst
 * @param {?} directiveWrapperInstance
 * @param {?} compileElement
 * @param {?} elementName
 * @param {?} schemaRegistry
 * @return {?}
 */function bindDirectiveHostProps(directiveAst,directiveWrapperInstance,compileElement,elementName,schemaRegistry){// We need to provide the SecurityContext for properties that could need sanitization.
var/** @type {?} */runtimeSecurityCtxExprs=directiveAst.hostProperties.filter(function(boundProp){return boundProp.needsRuntimeSecurityContext;}).map(function(boundProp){var/** @type {?} */ctx=void 0;switch(boundProp.type){case PropertyBindingType.Property:ctx=schemaRegistry.securityContext(elementName,boundProp.name,false);break;case PropertyBindingType.Attribute:ctx=schemaRegistry.securityContext(elementName,boundProp.name,true);break;default:throw new Error('Illegal state: Only property / attribute bindings can have an unknown security context! Binding '+boundProp.name);}return createEnumExpression(Identifiers.SecurityContext,ctx);});compileElement.view.detectChangesRenderPropertiesMethod.addStmts(DirectiveWrapperExpressions.checkHost(directiveAst.hostProperties,directiveWrapperInstance,THIS_EXPR,compileElement.compViewExpr||THIS_EXPR,compileElement.renderNode,runtimeSecurityCtxExprs));}/**
 * @param {?} directiveAst
 * @param {?} directiveWrapperInstance
 * @param {?} dirIndex
 * @param {?} compileElement
 * @return {?}
 */function bindDirectiveInputs(directiveAst,directiveWrapperInstance,dirIndex,compileElement){var/** @type {?} */view=compileElement.view;var/** @type {?} */detectChangesInInputsMethod=view.detectChangesInInputsMethod;detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex,compileElement.sourceAst);directiveAst.inputs.forEach(function(input,inputIdx){// Note: We can't use `fields.length` here, as we are not adding a field!
var/** @type {?} */bindingId=compileElement.nodeIndex+'_'+dirIndex+'_'+inputIdx;detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex,input);var/** @type {?} */evalResult=legacyConvertPropertyBinding(view,view,view.componentContext,input.value,bindingId);if(!evalResult){return;}detectChangesInInputsMethod.addStmts(evalResult.stmts);detectChangesInInputsMethod.addStmt(directiveWrapperInstance.callMethod('check_'+input.directiveName,[THIS_EXPR,evalResult.currValExpr,evalResult.forceUpdate||literal(false)]).toStmt());});var/** @type {?} */isOnPushComp=directiveAst.directive.isComponent&&!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_115" /* ɵisDefaultChangeDetectionStrategy */])(directiveAst.directive.changeDetection);var/** @type {?} */directiveDetectChangesExpr=DirectiveWrapperExpressions.ngDoCheck(directiveWrapperInstance,THIS_EXPR,compileElement.renderNode);var/** @type {?} */directiveDetectChangesStmt=isOnPushComp?new IfStmt(directiveDetectChangesExpr,[compileElement.compViewExpr.callMethod('markAsCheckOnce',[]).toStmt()]):directiveDetectChangesExpr.toStmt();detectChangesInInputsMethod.addStmt(directiveDetectChangesStmt);}/**
 * @param {?} ce
 * @return {?}
 */function bindQueryValues(ce){var/** @type {?} */queriesWithReads=[];ce.getProviderTokens().forEach(function(token){var/** @type {?} */queriesForProvider=ce.getQueriesFor(token);queriesWithReads.push.apply(queriesWithReads,_toConsumableArray(queriesForProvider.map(function(query){return new _QueryWithRead(query,token);})));});Object.keys(ce.referenceTokens).forEach(function(varName){var/** @type {?} */varToken={value:varName};queriesWithReads.push.apply(queriesWithReads,_toConsumableArray(ce.getQueriesFor(varToken).map(function(query){return new _QueryWithRead(query,varToken);})));});queriesWithReads.forEach(function(queryWithRead){var/** @type {?} */value=void 0;if(queryWithRead.read.identifier){// query for an identifier
value=ce.instances.get(tokenReference(queryWithRead.read));}else{// query for a reference
var/** @type {?} */token=ce.referenceTokens[queryWithRead.read.value];if(token){value=ce.instances.get(tokenReference(token));}else{value=ce.elementRef;}}if(value){queryWithRead.query.addValue(value,ce.view);}});}var _QueryWithRead=/**
     * @param {?} query
     * @param {?} match
     */function _QueryWithRead(query,match){_classCallCheck(this,_QueryWithRead);this.query=query;this.read=query.meta.read||match;};/**
 * @param {?} view
 * @param {?} parsedTemplate
 * @param {?} schemaRegistry
 * @return {?}
 */function bindView(view,parsedTemplate,schemaRegistry){var/** @type {?} */visitor=new ViewBinderVisitor(view,schemaRegistry);templateVisitAll(visitor,parsedTemplate);view.pipes.forEach(function(pipe){bindPipeDestroyLifecycleCallbacks(pipe.meta,pipe.instance,pipe.view);});}var ViewBinderVisitor=function(){/**
     * @param {?} view
     * @param {?} _schemaRegistry
     */function ViewBinderVisitor(view,_schemaRegistry){_classCallCheck(this,ViewBinderVisitor);this.view=view;this._schemaRegistry=_schemaRegistry;this._nodeIndex=0;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */_createClass(ViewBinderVisitor,[{key:'visitBoundText',value:function visitBoundText(ast,parent){var/** @type {?} */node=this.view.nodes[this._nodeIndex++];bindRenderText(ast,node,this.view);return null;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitText',value:function visitText(ast,parent){this._nodeIndex++;return null;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitNgContent',value:function visitNgContent(ast,parent){return null;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitElement',value:function visitElement(ast,parent){var _this211=this;var/** @type {?} */compileElement=this.view.nodes[this._nodeIndex++];bindQueryValues(compileElement);var/** @type {?} */hasEvents=bindOutputs(ast.outputs,ast.directives,compileElement,true);bindRenderInputs(ast.inputs,ast.outputs,hasEvents,compileElement);ast.directives.forEach(function(directiveAst,dirIndex){var/** @type {?} */directiveWrapperInstance=compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);bindDirectiveInputs(directiveAst,directiveWrapperInstance,dirIndex,compileElement);bindDirectiveHostProps(directiveAst,directiveWrapperInstance,compileElement,ast.name,_this211._schemaRegistry);});templateVisitAll(this,ast.children,compileElement);// afterContent and afterView lifecycles need to be called bottom up
// so that children are notified before parents
ast.directives.forEach(function(directiveAst){var/** @type {?} */directiveInstance=compileElement.instances.get(directiveAst.directive.type.reference);var/** @type {?} */directiveWrapperInstance=compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive,directiveInstance,compileElement);bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive,directiveInstance,compileElement);bindDirectiveWrapperLifecycleCallbacks(directiveAst,directiveWrapperInstance,compileElement);});ast.providers.forEach(function(providerAst){var/** @type {?} */providerInstance=compileElement.instances.get(tokenReference(providerAst.token));bindInjectableDestroyLifecycleCallbacks(providerAst,providerInstance,compileElement);});return null;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitEmbeddedTemplate',value:function visitEmbeddedTemplate(ast,parent){var/** @type {?} */compileElement=this.view.nodes[this._nodeIndex++];bindQueryValues(compileElement);bindOutputs(ast.outputs,ast.directives,compileElement,false);ast.directives.forEach(function(directiveAst,dirIndex){var/** @type {?} */directiveInstance=compileElement.instances.get(directiveAst.directive.type.reference);var/** @type {?} */directiveWrapperInstance=compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);bindDirectiveInputs(directiveAst,directiveWrapperInstance,dirIndex,compileElement);bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive,directiveInstance,compileElement);bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive,directiveInstance,compileElement);bindDirectiveWrapperLifecycleCallbacks(directiveAst,directiveWrapperInstance,compileElement);});ast.providers.forEach(function(providerAst){var/** @type {?} */providerInstance=compileElement.instances.get(tokenReference(providerAst.token));bindInjectableDestroyLifecycleCallbacks(providerAst,providerInstance,compileElement);});bindView(compileElement.embeddedView,ast.children,this._schemaRegistry);return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitAttr',value:function visitAttr(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDirective',value:function visitDirective(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} eventTargetAndNames
     * @return {?}
     */},{key:'visitEvent',value:function visitEvent(ast,eventTargetAndNames){return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReference',value:function visitReference(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitVariable',value:function visitVariable(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitDirectiveProperty',value:function visitDirectiveProperty(ast,context){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitElementProperty',value:function visitElementProperty(ast,context){return null;}}]);return ViewBinderVisitor;}();var/** @type {?} */IMPLICIT_TEMPLATE_VAR='\$implicit';var/** @type {?} */CLASS_ATTR$1='class';var/** @type {?} */STYLE_ATTR='style';var/** @type {?} */NG_CONTAINER_TAG='ng-container';var/** @type {?} */parentRenderNodeVar=variable('parentRenderNode');var/** @type {?} */rootSelectorVar=variable('rootSelector');/**
 * @param {?} view
 * @param {?} template
 * @param {?} targetDependencies
 * @return {?}
 */function buildView(view,template,targetDependencies){var/** @type {?} */builderVisitor=new ViewBuilderVisitor(view,targetDependencies);var/** @type {?} */parentEl=view.declarationElement.isNull()?view.declarationElement:view.declarationElement.parent;templateVisitAll(builderVisitor,template,parentEl);if(view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].EMBEDDED||view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].HOST){view.lastRenderNode=builderVisitor.getOrCreateLastRenderNode();}return builderVisitor.nestedViewCount;}/**
 * @param {?} view
 * @param {?} targetStatements
 * @return {?}
 */function finishView(view,targetStatements){view.nodes.forEach(function(node){if(node instanceof CompileElement){node.finish();if(node.hasEmbeddedView){finishView(node.embeddedView,targetStatements);}}});view.finish();createViewTopLevelStmts(view,targetStatements);}var ViewBuilderVisitor=function(){/**
     * @param {?} view
     * @param {?} targetDependencies
     */function ViewBuilderVisitor(view,targetDependencies){_classCallCheck(this,ViewBuilderVisitor);this.view=view;this.targetDependencies=targetDependencies;this.nestedViewCount=0;}/**
     * @param {?} parent
     * @return {?}
     */_createClass(ViewBuilderVisitor,[{key:'_isRootNode',value:function _isRootNode(parent){return parent.view!==this.view;}/**
     * @param {?} node
     * @return {?}
     */},{key:'_addRootNodeAndProject',value:function _addRootNodeAndProject(node){var/** @type {?} */projectedNode=_getOuterContainerOrSelf(node);var/** @type {?} */parent=projectedNode.parent;var/** @type {?} */ngContentIndex=projectedNode.sourceAst.ngContentIndex;var/** @type {?} */viewContainer=node instanceof CompileElement&&node.hasViewContainer?node.viewContainer:null;if(this._isRootNode(parent)){if(this.view.viewType!==__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT){this.view.rootNodes.push(new CompileViewRootNode(viewContainer?CompileViewRootNodeType.ViewContainer:CompileViewRootNodeType.Node,viewContainer||node.renderNode));}}else if(isPresent(parent.component)&&isPresent(ngContentIndex)){parent.addContentNode(ngContentIndex,new CompileViewRootNode(viewContainer?CompileViewRootNodeType.ViewContainer:CompileViewRootNodeType.Node,viewContainer||node.renderNode));}}/**
     * @param {?} parent
     * @return {?}
     */},{key:'_getParentRenderNode',value:function _getParentRenderNode(parent){parent=_getOuterContainerParentOrSelf(parent);if(this._isRootNode(parent)){if(this.view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT){return parentRenderNodeVar;}else{// root node of an embedded/host view
return NULL_EXPR;}}else{return isPresent(parent.component)&&parent.component.template.encapsulation!==__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].Native?NULL_EXPR:parent.renderNode;}}/**
     * @return {?}
     */},{key:'getOrCreateLastRenderNode',value:function getOrCreateLastRenderNode(){var/** @type {?} */view=this.view;if(view.rootNodes.length===0||view.rootNodes[view.rootNodes.length-1].type!==CompileViewRootNodeType.Node){var/** @type {?} */fieldName='_el_'+view.nodes.length;view.fields.push(new ClassField(fieldName,importType(view.genConfig.renderTypes.renderElement)));view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(ViewProperties.renderer.callMethod('createTemplateAnchor',[NULL_EXPR,NULL_EXPR])).toStmt());view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.Node,THIS_EXPR.prop(fieldName)));}return view.rootNodes[view.rootNodes.length-1].expr;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitBoundText',value:function visitBoundText(ast,parent){return this._visitText(ast,'',parent);}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitText',value:function visitText(ast,parent){return this._visitText(ast,ast.value,parent);}/**
     * @param {?} ast
     * @param {?} value
     * @param {?} parent
     * @return {?}
     */},{key:'_visitText',value:function _visitText(ast,value,parent){var/** @type {?} */fieldName='_text_'+this.view.nodes.length;this.view.fields.push(new ClassField(fieldName,importType(this.view.genConfig.renderTypes.renderText)));var/** @type {?} */renderNode=THIS_EXPR.prop(fieldName);var/** @type {?} */compileNode=new CompileNode(parent,this.view,this.view.nodes.length,renderNode,ast);var/** @type {?} */createRenderNode=THIS_EXPR.prop(fieldName).set(ViewProperties.renderer.callMethod('createText',[this._getParentRenderNode(parent),literal(value),this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length,ast)])).toStmt();this.view.nodes.push(compileNode);this.view.createMethod.addStmt(createRenderNode);this._addRootNodeAndProject(compileNode);return renderNode;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitNgContent',value:function visitNgContent(ast,parent){// the projected nodes originate from a different view, so we don't
// have debug information for them...
this.view.createMethod.resetDebugInfo(null,ast);var/** @type {?} */parentRenderNode=this._getParentRenderNode(parent);if(parentRenderNode!==NULL_EXPR){this.view.createMethod.addStmt(THIS_EXPR.callMethod('projectNodes',[parentRenderNode,literal(ast.index)]).toStmt());}else if(this._isRootNode(parent)){if(this.view.viewType!==__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT){// store root nodes only for embedded/host views
this.view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.NgContent,null,ast.index));}}else{if(isPresent(parent.component)&&isPresent(ast.ngContentIndex)){parent.addContentNode(ast.ngContentIndex,new CompileViewRootNode(CompileViewRootNodeType.NgContent,null,ast.index));}}return null;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitElement',value:function visitElement(ast,parent){var/** @type {?} */nodeIndex=this.view.nodes.length;var/** @type {?} */createRenderNodeExpr=void 0;var/** @type {?} */debugContextExpr=this.view.createMethod.resetDebugInfoExpr(nodeIndex,ast);var/** @type {?} */directives=ast.directives.map(function(directiveAst){return directiveAst.directive;});var/** @type {?} */component=directives.find(function(directive){return directive.isComponent;});if(ast.name===NG_CONTAINER_TAG){createRenderNodeExpr=ViewProperties.renderer.callMethod('createTemplateAnchor',[this._getParentRenderNode(parent),debugContextExpr]);}else{var/** @type {?} */htmlAttrs=_readHtmlAttrs(ast.attrs);var/** @type {?} */attrNameAndValues=createInlineArray(_mergeHtmlAndDirectiveAttrs(htmlAttrs,directives).map(function(v){return literal(v);}));if(nodeIndex===0&&this.view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].HOST){createRenderNodeExpr=importExpr(createIdentifier(Identifiers.selectOrCreateRenderHostElement)).callFn([ViewProperties.renderer,literal(ast.name),attrNameAndValues,rootSelectorVar,debugContextExpr]);}else{createRenderNodeExpr=importExpr(createIdentifier(Identifiers.createRenderElement)).callFn([ViewProperties.renderer,this._getParentRenderNode(parent),literal(ast.name),attrNameAndValues,debugContextExpr]);}}var/** @type {?} */fieldName='_el_'+nodeIndex;this.view.fields.push(new ClassField(fieldName,importType(this.view.genConfig.renderTypes.renderElement)));this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());var/** @type {?} */renderNode=THIS_EXPR.prop(fieldName);var/** @type {?} */compileElement=new CompileElement(parent,this.view,nodeIndex,renderNode,ast,component,directives,ast.providers,ast.hasViewContainer,false,ast.references);this.view.nodes.push(compileElement);var/** @type {?} */compViewExpr=null;if(isPresent(component)){this.targetDependencies.push(new ComponentViewDependency(component.type.reference));compViewExpr=THIS_EXPR.prop('compView_'+nodeIndex);// fix highlighting: `
this.view.fields.push(new ClassField(compViewExpr.name,importType(createIdentifier(Identifiers.AppView),[importType(component.type)])));this.view.viewChildren.push(compViewExpr);compileElement.setComponentView(compViewExpr);this.view.createMethod.addStmt(compViewExpr.set(importExpr({reference:component.componentViewType}).instantiate([ViewProperties.viewUtils,THIS_EXPR,literal(nodeIndex),renderNode])).toStmt());}compileElement.beforeChildren();this._addRootNodeAndProject(compileElement);templateVisitAll(this,ast.children,compileElement);compileElement.afterChildren(this.view.nodes.length-nodeIndex-1);if(isPresent(compViewExpr)){this.view.createMethod.addStmt(compViewExpr.callMethod('create',[compileElement.getComponent()]).toStmt());}return null;}/**
     * @param {?} ast
     * @param {?} parent
     * @return {?}
     */},{key:'visitEmbeddedTemplate',value:function visitEmbeddedTemplate(ast,parent){var/** @type {?} */nodeIndex=this.view.nodes.length;var/** @type {?} */fieldName='_anchor_'+nodeIndex;this.view.fields.push(new ClassField(fieldName,importType(this.view.genConfig.renderTypes.renderComment)));this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(ViewProperties.renderer.callMethod('createTemplateAnchor',[this._getParentRenderNode(parent),this.view.createMethod.resetDebugInfoExpr(nodeIndex,ast)])).toStmt());var/** @type {?} */renderNode=THIS_EXPR.prop(fieldName);var/** @type {?} */templateVariableBindings=ast.variables.map(function(varAst){return[varAst.value.length>0?varAst.value:IMPLICIT_TEMPLATE_VAR,varAst.name];});var/** @type {?} */directives=ast.directives.map(function(directiveAst){return directiveAst.directive;});var/** @type {?} */compileElement=new CompileElement(parent,this.view,nodeIndex,renderNode,ast,null,directives,ast.providers,ast.hasViewContainer,true,ast.references);this.view.nodes.push(compileElement);this.nestedViewCount++;var/** @type {?} */embeddedView=new CompileView(this.view.component,this.view.genConfig,this.view.pipeMetas,NULL_EXPR,this.view.animations,this.view.viewIndex+this.nestedViewCount,compileElement,templateVariableBindings,this.targetDependencies);this.nestedViewCount+=buildView(embeddedView,ast.children,this.targetDependencies);compileElement.beforeChildren();this._addRootNodeAndProject(compileElement);compileElement.afterChildren(0);return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitAttr',value:function visitAttr(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDirective',value:function visitDirective(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} eventTargetAndNames
     * @return {?}
     */},{key:'visitEvent',value:function visitEvent(ast,eventTargetAndNames){return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReference',value:function visitReference(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitVariable',value:function visitVariable(ast,ctx){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitDirectiveProperty',value:function visitDirectiveProperty(ast,context){return null;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitElementProperty',value:function visitElementProperty(ast,context){return null;}}]);return ViewBuilderVisitor;}();/**
 * Walks up the nodes while the direct parent is a container.
 *
 * Returns the outer container or the node itself when it is not a direct child of a container.
 *
 * \@internal
 * @param {?} node
 * @return {?}
 */function _getOuterContainerOrSelf(node){var/** @type {?} */view=node.view;while(_isNgContainer(node.parent,view)){node=node.parent;}return node;}/**
 * Walks up the nodes while they are container and returns the first parent which is not.
 *
 * Returns the parent of the outer container or the node itself when it is not a container.
 *
 * \@internal
 * @param {?} el
 * @return {?}
 */function _getOuterContainerParentOrSelf(el){var/** @type {?} */view=el.view;while(_isNgContainer(el,view)){el=el.parent;}return el;}/**
 * @param {?} node
 * @param {?} view
 * @return {?}
 */function _isNgContainer(node,view){return!node.isNull()&&node.sourceAst.name===NG_CONTAINER_TAG&&node.view===view;}/**
 * @param {?} declaredHtmlAttrs
 * @param {?} directives
 * @return {?}
 */function _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs,directives){var/** @type {?} */mapResult={};Object.keys(declaredHtmlAttrs).forEach(function(key){mapResult[key]=declaredHtmlAttrs[key];});directives.forEach(function(directiveMeta){Object.keys(directiveMeta.hostAttributes).forEach(function(name){var/** @type {?} */value=directiveMeta.hostAttributes[name];var/** @type {?} */prevValue=mapResult[name];mapResult[name]=isPresent(prevValue)?mergeAttributeValue(name,prevValue,value):value;});});var/** @type {?} */arrResult=[];// Note: We need to sort to get a defined output order
// for tests and for caching generated artifacts...
Object.keys(mapResult).sort().forEach(function(attrName){arrResult.push(attrName,mapResult[attrName]);});return arrResult;}/**
 * @param {?} attrs
 * @return {?}
 */function _readHtmlAttrs(attrs){var/** @type {?} */htmlAttrs={};attrs.forEach(function(ast){htmlAttrs[ast.name]=ast.value;});return htmlAttrs;}/**
 * @param {?} attrName
 * @param {?} attrValue1
 * @param {?} attrValue2
 * @return {?}
 */function mergeAttributeValue(attrName,attrValue1,attrValue2){if(attrName==CLASS_ATTR$1||attrName==STYLE_ATTR){return attrValue1+' '+attrValue2;}else{return attrValue2;}}/**
 * @param {?} view
 * @param {?} targetStatements
 * @return {?}
 */function createViewTopLevelStmts(view,targetStatements){var/** @type {?} */nodeDebugInfosVar=NULL_EXPR;if(view.genConfig.genDebugInfo){nodeDebugInfosVar=variable('nodeDebugInfos_'+identifierName(view.component.type)+view.viewIndex);// fix
// highlighting:
// `
targetStatements.push(nodeDebugInfosVar.set(literalArr(view.nodes.map(createStaticNodeDebugInfo),new ArrayType(importType(createIdentifier(Identifiers.StaticNodeDebugInfo)),[TypeModifier.Const]))).toDeclStmt(null,[StmtModifier.Final]));}var/** @type {?} */renderCompTypeVar=variable(view.rendererTypeName);// fix highlighting: `
if(view.viewIndex===0){var/** @type {?} */templateUrlInfo=void 0;if(view.component.template.templateUrl==identifierModuleUrl(view.component.type)){templateUrlInfo=identifierModuleUrl(view.component.type)+' class '+identifierName(view.component.type)+' - inline template';}else{templateUrlInfo=view.component.template.templateUrl;}targetStatements.push(renderCompTypeVar.set(importExpr(createIdentifier(Identifiers.createRenderComponentType)).callFn([view.genConfig.genDebugInfo?literal(templateUrlInfo):literal(''),literal(view.component.template.ngContentSelectors.length),ViewEncapsulationEnum.fromValue(view.component.template.encapsulation),view.styles,literalMap(view.animations.map(function(entry){return[entry.name,entry.fnExp];}),null,true)])).toDeclStmt(importType(createIdentifier(Identifiers.RenderComponentType))));}var/** @type {?} */viewClass=createViewClass(view,renderCompTypeVar,nodeDebugInfosVar);targetStatements.push(viewClass);}/**
 * @param {?} node
 * @return {?}
 */function createStaticNodeDebugInfo(node){var/** @type {?} */compileElement=node instanceof CompileElement?node:null;var/** @type {?} */providerTokens=[];var/** @type {?} */componentToken=NULL_EXPR;var/** @type {?} */varTokenEntries=[];if(isPresent(compileElement)){providerTokens=compileElement.getProviderTokens().map(function(token){return createDiTokenExpression(token);});if(isPresent(compileElement.component)){componentToken=createDiTokenExpression(identifierToken(compileElement.component.type));}Object.keys(compileElement.referenceTokens).forEach(function(varName){var/** @type {?} */token=compileElement.referenceTokens[varName];varTokenEntries.push([varName,isPresent(token)?createDiTokenExpression(token):NULL_EXPR]);});}return importExpr(createIdentifier(Identifiers.StaticNodeDebugInfo)).instantiate([literalArr(providerTokens,new ArrayType(DYNAMIC_TYPE,[TypeModifier.Const])),componentToken,literalMap(varTokenEntries,new MapType(DYNAMIC_TYPE,[TypeModifier.Const]))],importType(createIdentifier(Identifiers.StaticNodeDebugInfo),null,[TypeModifier.Const]));}/**
 * @param {?} view
 * @param {?} renderCompTypeVar
 * @param {?} nodeDebugInfosVar
 * @return {?}
 */function createViewClass(view,renderCompTypeVar,nodeDebugInfosVar){var/** @type {?} */viewConstructorArgs=[new FnParam(ViewConstructorVars.viewUtils.name,importType(createIdentifier(Identifiers.ViewUtils))),new FnParam(ViewConstructorVars.parentView.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(ViewConstructorVars.parentIndex.name,NUMBER_TYPE),new FnParam(ViewConstructorVars.parentElement.name,DYNAMIC_TYPE)];var/** @type {?} */superConstructorArgs=[variable(view.className),renderCompTypeVar,ViewTypeEnum.fromValue(view.viewType),ViewConstructorVars.viewUtils,ViewConstructorVars.parentView,ViewConstructorVars.parentIndex,ViewConstructorVars.parentElement,ChangeDetectorStatusEnum.fromValue(getChangeDetectionMode(view))];if(view.genConfig.genDebugInfo){superConstructorArgs.push(nodeDebugInfosVar);}if(view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].EMBEDDED){viewConstructorArgs.push(new FnParam('declaredViewContainer',importType(createIdentifier(Identifiers.ViewContainer))));superConstructorArgs.push(variable('declaredViewContainer'));}var/** @type {?} */viewMethods=[new ClassMethod('createInternal',[new FnParam(rootSelectorVar.name,STRING_TYPE)],generateCreateMethod(view),importType(createIdentifier(Identifiers.ComponentRef),[DYNAMIC_TYPE])),new ClassMethod('injectorGetInternal',[new FnParam(InjectMethodVars$1.token.name,DYNAMIC_TYPE),// Note: Can't use o.INT_TYPE here as the method in AppView uses number
new FnParam(InjectMethodVars$1.requestNodeIndex.name,NUMBER_TYPE),new FnParam(InjectMethodVars$1.notFoundResult.name,DYNAMIC_TYPE)],addReturnValuefNotEmpty(view.injectorGetMethod.finish(),InjectMethodVars$1.notFoundResult),DYNAMIC_TYPE),new ClassMethod('detectChangesInternal',[],generateDetectChangesMethod(view)),new ClassMethod('dirtyParentQueriesInternal',[],view.dirtyParentQueriesMethod.finish()),new ClassMethod('destroyInternal',[],generateDestroyMethod(view)),new ClassMethod('detachInternal',[],view.detachMethod.finish()),generateVisitRootNodesMethod(view),generateVisitProjectableNodesMethod(view),generateCreateEmbeddedViewsMethod(view)].filter(function(method){return method.body.length>0;});var/** @type {?} */superClass=view.genConfig.genDebugInfo?Identifiers.DebugAppView:Identifiers.AppView;var/** @type {?} */viewClass=createClassStmt({name:view.className,parent:importExpr(createIdentifier(superClass),[getContextType(view)]),parentArgs:superConstructorArgs,ctorParams:viewConstructorArgs,builders:[{methods:viewMethods},view]});return viewClass;}/**
 * @param {?} view
 * @return {?}
 */function generateDestroyMethod(view){var/** @type {?} */stmts=[];view.viewContainers.forEach(function(viewContainer){stmts.push(viewContainer.callMethod('destroyNestedViews',[]).toStmt());});view.viewChildren.forEach(function(viewChild){stmts.push(viewChild.callMethod('destroy',[]).toStmt());});stmts.push.apply(stmts,_toConsumableArray(view.destroyMethod.finish()));return stmts;}/**
 * @param {?} view
 * @return {?}
 */function generateCreateMethod(view){var/** @type {?} */parentRenderNodeExpr=NULL_EXPR;var/** @type {?} */parentRenderNodeStmts=[];if(view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT){parentRenderNodeExpr=ViewProperties.renderer.callMethod('createViewRoot',[THIS_EXPR.prop('parentElement')]);parentRenderNodeStmts=[parentRenderNodeVar.set(parentRenderNodeExpr).toDeclStmt(importType(view.genConfig.renderTypes.renderNode),[StmtModifier.Final])];}var/** @type {?} */resultExpr=void 0;if(view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].HOST){var/** @type {?} */hostEl=view.nodes[0];resultExpr=importExpr(createIdentifier(Identifiers.ComponentRef_),[DYNAMIC_TYPE]).instantiate([literal(hostEl.nodeIndex),THIS_EXPR,hostEl.renderNode,hostEl.getComponent()]);}else{resultExpr=NULL_EXPR;}var/** @type {?} */allNodesExpr=ViewProperties.renderer.cast(DYNAMIC_TYPE).prop('directRenderer').conditional(NULL_EXPR,literalArr(view.nodes.map(function(node){return node.renderNode;})));return parentRenderNodeStmts.concat(view.createMethod.finish(),[THIS_EXPR.callMethod('init',[view.lastRenderNode,allNodesExpr,view.disposables.length?literalArr(view.disposables):NULL_EXPR]).toStmt(),new ReturnStatement(resultExpr)]);}/**
 * @param {?} view
 * @return {?}
 */function generateDetectChangesMethod(view){var/** @type {?} */stmts=[];if(view.animationBindingsMethod.isEmpty()&&view.detectChangesInInputsMethod.isEmpty()&&view.updateContentQueriesMethod.isEmpty()&&view.afterContentLifecycleCallbacksMethod.isEmpty()&&view.detectChangesRenderPropertiesMethod.isEmpty()&&view.updateViewQueriesMethod.isEmpty()&&view.afterViewLifecycleCallbacksMethod.isEmpty()&&view.viewContainers.length===0&&view.viewChildren.length===0){return stmts;}stmts.push.apply(stmts,_toConsumableArray(view.animationBindingsMethod.finish()));stmts.push.apply(stmts,_toConsumableArray(view.detectChangesInInputsMethod.finish()));view.viewContainers.forEach(function(viewContainer){stmts.push(viewContainer.callMethod('detectChangesInNestedViews',[ViewProperties.throwOnChange]).toStmt());});var/** @type {?} */afterContentStmts=view.updateContentQueriesMethod.finish().concat(view.afterContentLifecycleCallbacksMethod.finish());if(afterContentStmts.length>0){stmts.push(new IfStmt(not(ViewProperties.throwOnChange),afterContentStmts));}stmts.push.apply(stmts,_toConsumableArray(view.detectChangesRenderPropertiesMethod.finish()));view.viewChildren.forEach(function(viewChild){stmts.push(viewChild.callMethod('internalDetectChanges',[ViewProperties.throwOnChange]).toStmt());});var/** @type {?} */afterViewStmts=view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());if(afterViewStmts.length>0){stmts.push(new IfStmt(not(ViewProperties.throwOnChange),afterViewStmts));}var/** @type {?} */varStmts=legacyCreateSharedBindingVariablesIfNeeded(stmts);return varStmts.concat(stmts);}/**
 * @param {?} statements
 * @param {?} value
 * @return {?}
 */function addReturnValuefNotEmpty(statements,value){if(statements.length>0){return statements.concat([new ReturnStatement(value)]);}else{return statements;}}/**
 * @param {?} view
 * @return {?}
 */function getContextType(view){if(view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT){return importType(view.component.type);}return DYNAMIC_TYPE;}/**
 * @param {?} view
 * @return {?}
 */function getChangeDetectionMode(view){var/** @type {?} */mode=void 0;if(view.viewType===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_32" /* ɵViewType */].COMPONENT){mode=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_115" /* ɵisDefaultChangeDetectionStrategy */])(view.component.changeDetection)?__WEBPACK_IMPORTED_MODULE_0__angular_core__["_36" /* ɵChangeDetectorStatus */].CheckAlways:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_36" /* ɵChangeDetectorStatus */].CheckOnce;}else{mode=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_36" /* ɵChangeDetectorStatus */].CheckAlways;}return mode;}/**
 * @param {?} view
 * @return {?}
 */function generateVisitRootNodesMethod(view){var/** @type {?} */cbVar=variable('cb');var/** @type {?} */ctxVar=variable('ctx');var/** @type {?} */stmts=generateVisitNodesStmts(view.rootNodes,cbVar,ctxVar);return new ClassMethod('visitRootNodesInternal',[new FnParam(cbVar.name,DYNAMIC_TYPE),new FnParam(ctxVar.name,DYNAMIC_TYPE)],stmts);}/**
 * @param {?} view
 * @return {?}
 */function generateVisitProjectableNodesMethod(view){var/** @type {?} */nodeIndexVar=variable('nodeIndex');var/** @type {?} */ngContentIndexVar=variable('ngContentIndex');var/** @type {?} */cbVar=variable('cb');var/** @type {?} */ctxVar=variable('ctx');var/** @type {?} */stmts=[];view.nodes.forEach(function(node){if(node instanceof CompileElement&&node.component){node.contentNodesByNgContentIndex.forEach(function(projectedNodes,ngContentIndex){stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex)).and(ngContentIndexVar.equals(literal(ngContentIndex))),generateVisitNodesStmts(projectedNodes,cbVar,ctxVar)));});}});return new ClassMethod('visitProjectableNodesInternal',[new FnParam(nodeIndexVar.name,NUMBER_TYPE),new FnParam(ngContentIndexVar.name,NUMBER_TYPE),new FnParam(cbVar.name,DYNAMIC_TYPE),new FnParam(ctxVar.name,DYNAMIC_TYPE)],stmts);}/**
 * @param {?} nodes
 * @param {?} cb
 * @param {?} ctx
 * @return {?}
 */function generateVisitNodesStmts(nodes,cb,ctx){var/** @type {?} */stmts=[];nodes.forEach(function(node){switch(node.type){case CompileViewRootNodeType.Node:stmts.push(cb.callFn([node.expr,ctx]).toStmt());break;case CompileViewRootNodeType.ViewContainer:stmts.push(cb.callFn([node.expr.prop('nativeElement'),ctx]).toStmt());stmts.push(node.expr.callMethod('visitNestedViewRootNodes',[cb,ctx]).toStmt());break;case CompileViewRootNodeType.NgContent:stmts.push(THIS_EXPR.callMethod('visitProjectedNodes',[literal(node.ngContentIndex),cb,ctx]).toStmt());break;}});return stmts;}/**
 * @param {?} view
 * @return {?}
 */function generateCreateEmbeddedViewsMethod(view){var/** @type {?} */nodeIndexVar=variable('nodeIndex');var/** @type {?} */stmts=[];view.nodes.forEach(function(node){if(node instanceof CompileElement){if(node.embeddedView){stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex)),[new ReturnStatement(node.embeddedView.classExpr.instantiate([ViewProperties.viewUtils,THIS_EXPR,literal(node.nodeIndex),node.renderNode,node.viewContainer]))]));}}});if(stmts.length>0){stmts.push(new ReturnStatement(NULL_EXPR));}return new ClassMethod('createEmbeddedViewInternal',[new FnParam(nodeIndexVar.name,NUMBER_TYPE)],stmts,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE]));}var ViewCompileResult=/**
     * @param {?} statements
     * @param {?} viewClassVar
     * @param {?} rendererTypeVar
     * @param {?} dependencies
     */function ViewCompileResult(statements,viewClassVar,rendererTypeVar,dependencies){_classCallCheck(this,ViewCompileResult);this.statements=statements;this.viewClassVar=viewClassVar;this.rendererTypeVar=rendererTypeVar;this.dependencies=dependencies;};var ViewCompiler=function(){/**
     * @param {?} _genConfig
     * @param {?} _schemaRegistry
     */function ViewCompiler(_genConfig,_schemaRegistry){_classCallCheck(this,ViewCompiler);this._genConfig=_genConfig;this._schemaRegistry=_schemaRegistry;}/**
     * @param {?} component
     * @param {?} template
     * @param {?} styles
     * @param {?} pipes
     * @param {?} compiledAnimations
     * @return {?}
     */_createClass(ViewCompiler,[{key:'compileComponent',value:function compileComponent(component,template,styles,pipes,compiledAnimations){var/** @type {?} */dependencies=[];var/** @type {?} */view=new CompileView(component,this._genConfig,pipes,styles,compiledAnimations,0,CompileElement.createNull(),[],dependencies);var/** @type {?} */statements=[];buildView(view,template,dependencies);// Need to separate binding from creation to be able to refer to
// variables that have been declared after usage.
bindView(view,template,this._schemaRegistry);finishView(view,statements);return new ViewCompileResult(statements,view.classExpr.name,view.rendererTypeName,dependencies);}}]);return ViewCompiler;}();ViewCompiler.decorators=[{type:CompilerInjectable}];/** @nocollapse */ViewCompiler.ctorParameters=function(){return[{type:CompilerConfig},{type:ElementSchemaRegistry}];};var/** @type {?} */CLASS_ATTR$2='class';var/** @type {?} */STYLE_ATTR$1='style';var/** @type {?} */IMPLICIT_TEMPLATE_VAR$1='\$implicit';var/** @type {?} */NG_CONTAINER_TAG$1='ng-container';var ViewCompilerNext=function(_ViewCompiler){_inherits(ViewCompilerNext,_ViewCompiler);/**
     * @param {?} _genConfigNext
     * @param {?} _schemaRegistryNext
     */function ViewCompilerNext(_genConfigNext,_schemaRegistryNext){_classCallCheck(this,ViewCompilerNext);var _this212=_possibleConstructorReturn(this,(ViewCompilerNext.__proto__||Object.getPrototypeOf(ViewCompilerNext)).call(this,_genConfigNext,_schemaRegistryNext));_this212._genConfigNext=_genConfigNext;_this212._schemaRegistryNext=_schemaRegistryNext;return _this212;}/**
     * @param {?} component
     * @param {?} template
     * @param {?} styles
     * @param {?} usedPipes
     * @param {?} compiledAnimations
     * @return {?}
     */_createClass(ViewCompilerNext,[{key:'compileComponent',value:function compileComponent(component,template,styles,usedPipes,compiledAnimations){var/** @type {?} */embeddedViewCount=0;var/** @type {?} */staticQueryIds=findStaticQueryIds(template);var/** @type {?} */statements=[];var/** @type {?} */renderComponentVar=variable(rendererTypeName(component.type.reference));statements.push(renderComponentVar.set(importExpr(createIdentifier(Identifiers.createRendererTypeV2)).callFn([new LiteralMapExpr([new LiteralMapEntry('encapsulation',literal(component.template.encapsulation)),new LiteralMapEntry('styles',styles),new LiteralMapEntry('data',literalMap([['animation',convertValueToOutputAst(component.template.animations)]]))])])).toDeclStmt(importType(createIdentifier(Identifiers.RendererTypeV2)),[StmtModifier.Final]));var/** @type {?} */viewBuilderFactory=function viewBuilderFactory(parent){var/** @type {?} */embeddedViewIndex=embeddedViewCount++;return new ViewBuilder(parent,component,embeddedViewIndex,usedPipes,staticQueryIds,viewBuilderFactory);};var/** @type {?} */visitor=viewBuilderFactory(null);visitor.visitAll([],template);statements.push.apply(statements,_toConsumableArray(visitor.build()));return new ViewCompileResult(statements,visitor.viewName,renderComponentVar.name,[]);}}]);return ViewCompilerNext;}(ViewCompiler);ViewCompilerNext.decorators=[{type:CompilerInjectable}];/** @nocollapse */ViewCompilerNext.ctorParameters=function(){return[{type:CompilerConfig},{type:ElementSchemaRegistry}];};var/** @type {?} */VIEW_VAR$1=variable('view');var/** @type {?} */CHECK_VAR=variable('check');var/** @type {?} */COMP_VAR=variable('comp');var/** @type {?} */NODE_INDEX_VAR=variable('nodeIndex');var/** @type {?} */EVENT_NAME_VAR$1=variable('eventName');var/** @type {?} */ALLOW_DEFAULT_VAR=variable('allowDefault');var ViewBuilder=function(){/**
     * @param {?} parent
     * @param {?} component
     * @param {?} embeddedViewIndex
     * @param {?} usedPipes
     * @param {?} staticQueryIds
     * @param {?} viewBuilderFactory
     */function ViewBuilder(parent,component,embeddedViewIndex,usedPipes,staticQueryIds,viewBuilderFactory){_classCallCheck(this,ViewBuilder);this.parent=parent;this.component=component;this.embeddedViewIndex=embeddedViewIndex;this.usedPipes=usedPipes;this.staticQueryIds=staticQueryIds;this.viewBuilderFactory=viewBuilderFactory;this.nodeDefs=[];this.purePipeNodeIndices=Object.create(null);this.refNodeIndices=Object.create(null);this.variables=[];this.children=[];this.updateDirectivesExpressions=[];this.updateRendererExpressions=[];// TODO(tbosch): The old view compiler used to use an `any` type
// for the context in any embedded view. We keep this behaivor for now
// to be able to introduce the new view compiler without too many errors.
this.compType=this.embeddedViewIndex>0?DYNAMIC_TYPE:importType(this.component.type);}/**
     * @return {?}
     */_createClass(ViewBuilder,[{key:'visitAll',/**
     * @param {?} variables
     * @param {?} astNodes
     * @return {?}
     */value:function visitAll(variables,astNodes){var _this213=this;this.variables=variables;// create the pipes for the pure pipes immediately, so that we know their indices.
if(!this.parent){this.usedPipes.forEach(function(pipe){if(pipe.pure){_this213.purePipeNodeIndices[pipe.name]=_this213._createPipe(pipe);}});}if(!this.parent){var/** @type {?} */queryIds=staticViewQueryIds(this.staticQueryIds);this.component.viewQueries.forEach(function(query,queryIndex){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var/** @type {?} */queryId=queryIndex+1;var/** @type {?} */bindingType=query.first?__WEBPACK_IMPORTED_MODULE_0__angular_core__["_116" /* ɵQueryBindingType */].First:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_116" /* ɵQueryBindingType */].All;var/** @type {?} */flags=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].HasViewQuery;if(queryIds.staticQueryIds.has(queryId)){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].HasStaticQuery;}else{flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].HasDynamicQuery;}_this213.nodeDefs.push(function(){return importExpr(createIdentifier(Identifiers.queryDef)).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType))])]);});});}templateVisitAll(this,astNodes);if(astNodes.length===0||this.parent&&needsAdditionalRootNode(astNodes[astNodes.length-1])){// if the view is empty, or an embedded view has a view container as last root nde,
// create an additional root node.
this.nodeDefs.push(function(){return importExpr(createIdentifier(Identifiers.anchorDef)).callFn([literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].None),NULL_EXPR,NULL_EXPR,literal(0)]);});}}/**
     * @param {?=} targetStatements
     * @return {?}
     */},{key:'build',value:function build(){var targetStatements=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];this.children.forEach(function(child){return child.build(targetStatements);});var/** @type {?} */updateDirectivesFn=this._createUpdateFn(this.updateDirectivesExpressions);var/** @type {?} */updateRendererFn=this._createUpdateFn(this.updateRendererExpressions);var/** @type {?} */viewFlags=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_118" /* ɵViewFlags */].None;if(!this.parent&&this.component.changeDetection===__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush){viewFlags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_118" /* ɵViewFlags */].OnPush;}var/** @type {?} */viewFactory=new DeclareFunctionStmt(this.viewName,[],[new ReturnStatement(importExpr(createIdentifier(Identifiers.viewDef)).callFn([literal(viewFlags),literalArr(this.nodeDefs.map(function(nd){return nd();})),updateDirectivesFn,updateRendererFn]))],importType(createIdentifier(Identifiers.ViewDefinition)));targetStatements.push(viewFactory);return targetStatements;}/**
     * @param {?} expressions
     * @return {?}
     */},{key:'_createUpdateFn',value:function _createUpdateFn(expressions){var _this214=this;var/** @type {?} */updateStmts=[];var/** @type {?} */updateBindingCount=0;expressions.forEach(function(_ref33){var expressions=_ref33.expressions,nodeIndex=_ref33.nodeIndex;var/** @type {?} */exprs=expressions.map(function(_ref34){var context=_ref34.context,value=_ref34.value;var/** @type {?} */bindingId=''+updateBindingCount++;var/** @type {?} */nameResolver=context===COMP_VAR?_this214:null;var _convertPropertyBindi2=convertPropertyBinding(nameResolver,context,value,bindingId),stmts=_convertPropertyBindi2.stmts,currValExpr=_convertPropertyBindi2.currValExpr;updateStmts.push.apply(updateStmts,_toConsumableArray(stmts));return currValExpr;});updateStmts.push(callCheckStmt(nodeIndex,exprs).toStmt());});var/** @type {?} */updateFn=void 0;if(updateStmts.length>0){var/** @type {?} */preStmts=[];if(!this.component.isHost){preStmts.push(COMP_VAR.set(VIEW_VAR$1.prop('component')).toDeclStmt(this.compType));}updateFn=fn([new FnParam(CHECK_VAR.name,INFERRED_TYPE),new FnParam(VIEW_VAR$1.name,INFERRED_TYPE)],[].concat(preStmts,updateStmts),INFERRED_TYPE);}else{updateFn=NULL_EXPR;}return updateFn;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitNgContent',value:function visitNgContent(ast,context){// ngContentDef(ngContentIndex: number, index: number): NodeDef;
this.nodeDefs.push(function(){return importExpr(createIdentifier(Identifiers.ngContentDef)).callFn([literal(ast.ngContentIndex),literal(ast.index)]);});}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitText',value:function visitText(ast,context){// textDef(ngContentIndex: number, constants: string[]): NodeDef;
this.nodeDefs.push(function(){return importExpr(createIdentifier(Identifiers.textDef)).callFn([literal(ast.ngContentIndex),literalArr([literal(ast.value)])]);});}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitBoundText',value:function visitBoundText(ast,context){var/** @type {?} */nodeIndex=this.nodeDefs.length;// reserve the space in the nodeDefs array
this.nodeDefs.push(null);var/** @type {?} */astWithSource=ast.value;var/** @type {?} */inter=astWithSource.ast;this._addUpdateExpressions(nodeIndex,inter.expressions.map(function(expr){return{context:COMP_VAR,value:expr};}),this.updateRendererExpressions);// textDef(ngContentIndex: number, constants: string[]): NodeDef;
this.nodeDefs[nodeIndex]=function(){return importExpr(createIdentifier(Identifiers.textDef)).callFn([literal(ast.ngContentIndex),literalArr(inter.strings.map(function(s){return literal(s);}))]);};}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitEmbeddedTemplate',value:function visitEmbeddedTemplate(ast,context){var _this215=this;var/** @type {?} */nodeIndex=this.nodeDefs.length;// reserve the space in the nodeDefs array
this.nodeDefs.push(null);var _visitElementOrTempla=this._visitElementOrTemplate(nodeIndex,ast),flags=_visitElementOrTempla.flags,queryMatchesExpr=_visitElementOrTempla.queryMatchesExpr,hostEvents=_visitElementOrTempla.hostEvents;var/** @type {?} */childVisitor=this.viewBuilderFactory(this);this.children.push(childVisitor);childVisitor.visitAll(ast.variables,ast.children);var/** @type {?} */childCount=this.nodeDefs.length-nodeIndex-1;// anchorDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,
//   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:
//   ViewDefinitionFactory): NodeDef;
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.anchorDef)).callFn([literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),_this215._createElementHandleEventFn(nodeIndex,hostEvents),variable(childVisitor.viewName)]);};this.nodeDefs[nodeIndex]=nodeDef;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitElement',value:function visitElement(ast,context){var _this216=this;var/** @type {?} */nodeIndex=this.nodeDefs.length;// reserve the space in the nodeDefs array so we can add children
this.nodeDefs.push(null);var/** @type {?} */elName=ast.name;if(ast.name===NG_CONTAINER_TAG$1){// Using a null element name creates an anchor.
elName=null;}var _visitElementOrTempla2=this._visitElementOrTemplate(nodeIndex,ast),flags=_visitElementOrTempla2.flags,usedEvents=_visitElementOrTempla2.usedEvents,queryMatchesExpr=_visitElementOrTempla2.queryMatchesExpr,hostBindings=_visitElementOrTempla2.hostBindings,hostEvents=_visitElementOrTempla2.hostEvents;var/** @type {?} */inputDefs=[];var/** @type {?} */outputDefs=[];if(elName){ast.inputs.forEach(function(inputAst){return hostBindings.push({context:COMP_VAR,value:inputAst.value});});if(hostBindings.length){this._addUpdateExpressions(nodeIndex,hostBindings,this.updateRendererExpressions);}// Note: inputDefs have to be in the same order as hostBindings:
// - first the entries from the directives, then the ones from the element.
ast.directives.forEach(function(dirAst,dirIndex){return inputDefs.push.apply(inputDefs,_toConsumableArray(elementBindingDefs(dirAst.hostProperties,dirAst)));});inputDefs.push.apply(inputDefs,_toConsumableArray(elementBindingDefs(ast.inputs,null)));outputDefs=usedEvents.map(function(_ref35){var _ref36=_slicedToArray(_ref35,2),target=_ref36[0],eventName=_ref36[1];return literalArr([literal(target),literal(eventName)]);});}templateVisitAll(this,ast.children);var/** @type {?} */childCount=this.nodeDefs.length-nodeIndex-1;var/** @type {?} */compAst=ast.directives.find(function(dirAst){return dirAst.directive.isComponent;});var/** @type {?} */compRendererType=NULL_EXPR;var/** @type {?} */compView=NULL_EXPR;if(compAst){compView=importExpr({reference:compAst.directive.componentViewType});compRendererType=importExpr({reference:compAst.directive.rendererType});}// elementDef(
//   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],
//   ngContentIndex: number, childCount: number, namespaceAndName: string,
//   fixedAttrs: [string, string][] = [],
//   bindings?:
//       ([BindingType.ElementClass, string] | [BindingType.ElementStyle, string, string] |
//        [BindingType.ElementAttribute | BindingType.ElementProperty |
//        BindingType.DirectiveHostProperty, string, SecurityContext])[],
//   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],
//   handleEvent?: ElementHandleEventFn,
//   componentView?: () => ViewDefinition, componentRendererType?: RendererTypeV2): NodeDef;
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.elementDef)).callFn([literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),literal(elName),elName?fixedAttrsDef(ast):NULL_EXPR,inputDefs.length?literalArr(inputDefs):NULL_EXPR,outputDefs.length?literalArr(outputDefs):NULL_EXPR,_this216._createElementHandleEventFn(nodeIndex,hostEvents),compView,compRendererType]);};this.nodeDefs[nodeIndex]=nodeDef;}/**
     * @param {?} nodeIndex
     * @param {?} ast
     * @return {?}
     */},{key:'_visitElementOrTemplate',value:function _visitElementOrTemplate(nodeIndex,ast){var _this217=this;var/** @type {?} */flags=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].None;if(ast.hasViewContainer){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].HasEmbeddedViews;}var/** @type {?} */usedEvents=new Map();ast.outputs.forEach(function(event){var _elementEventNameAndT=elementEventNameAndTarget(event,null),name=_elementEventNameAndT.name,target=_elementEventNameAndT.target;usedEvents.set(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_119" /* ɵelementEventFullName */])(target,name),[target,name]);});ast.directives.forEach(function(dirAst){dirAst.hostEvents.forEach(function(event){var _elementEventNameAndT2=elementEventNameAndTarget(event,dirAst),name=_elementEventNameAndT2.name,target=_elementEventNameAndT2.target;usedEvents.set(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_119" /* ɵelementEventFullName */])(target,name),[target,name]);});});var/** @type {?} */hostBindings=[];var/** @type {?} */hostEvents=[];var/** @type {?} */componentFactoryResolverProvider=createComponentFactoryResolver(ast.directives);if(componentFactoryResolverProvider){this._visitProvider(componentFactoryResolverProvider,ast.queryMatches);}ast.providers.forEach(function(providerAst,providerIndex){var/** @type {?} */dirAst=void 0;var/** @type {?} */dirIndex=void 0;ast.directives.forEach(function(localDirAst,i){if(localDirAst.directive.type.reference===tokenReference(providerAst.token)){dirAst=localDirAst;dirIndex=i;}});if(dirAst){var _visitDirective2=_this217._visitDirective(providerAst,dirAst,dirIndex,nodeIndex,ast.references,ast.queryMatches,usedEvents,_this217.staticQueryIds.get(/** @type {?} */ast)),dirHostBindings=_visitDirective2.hostBindings,dirHostEvents=_visitDirective2.hostEvents;hostBindings.push.apply(hostBindings,_toConsumableArray(dirHostBindings));hostEvents.push.apply(hostEvents,_toConsumableArray(dirHostEvents));}else{_this217._visitProvider(providerAst,ast.queryMatches);}});var/** @type {?} */queryMatchExprs=[];ast.queryMatches.forEach(function(match){var/** @type {?} */valueType=void 0;if(tokenReference(match.value)===resolveIdentifier(Identifiers.ElementRef)){valueType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_120" /* ɵQueryValueType */].ElementRef;}else if(tokenReference(match.value)===resolveIdentifier(Identifiers.ViewContainerRef)){valueType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_120" /* ɵQueryValueType */].ViewContainerRef;}else if(tokenReference(match.value)===resolveIdentifier(Identifiers.TemplateRef)){valueType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_120" /* ɵQueryValueType */].TemplateRef;}if(valueType!=null){queryMatchExprs.push(literalArr([literal(match.queryId),literal(valueType)]));}});ast.references.forEach(function(ref){var/** @type {?} */valueType=void 0;if(!ref.value){valueType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_120" /* ɵQueryValueType */].RenderElement;}else if(tokenReference(ref.value)===resolveIdentifier(Identifiers.TemplateRef)){valueType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_120" /* ɵQueryValueType */].TemplateRef;}if(valueType!=null){_this217.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(valueType)]));}});ast.outputs.forEach(function(outputAst){hostEvents.push({context:COMP_VAR,eventAst:outputAst,dirAst:null});});return{flags:flags,usedEvents:Array.from(usedEvents.values()),queryMatchesExpr:queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,hostBindings:hostBindings,hostEvents:hostEvents};}/**
     * @param {?} providerAst
     * @param {?} dirAst
     * @param {?} directiveIndex
     * @param {?} elementNodeIndex
     * @param {?} refs
     * @param {?} queryMatches
     * @param {?} usedEvents
     * @param {?} queryIds
     * @return {?}
     */},{key:'_visitDirective',value:function _visitDirective(providerAst,dirAst,directiveIndex,elementNodeIndex,refs,queryMatches,usedEvents,queryIds){var _this218=this;var/** @type {?} */nodeIndex=this.nodeDefs.length;// reserve the space in the nodeDefs array so we can add children
this.nodeDefs.push(null);dirAst.directive.queries.forEach(function(query,queryIndex){var/** @type {?} */flags=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].HasContentQuery;var/** @type {?} */queryId=dirAst.contentQueryStartId+queryIndex;// Note: We only make queries static that query for a single item.
// This is because of backwards compatibility with the old view compiler...
if(queryIds.staticQueryIds.has(queryId)&&query.first){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].HasStaticQuery;}else{flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].HasDynamicQuery;}var/** @type {?} */bindingType=query.first?__WEBPACK_IMPORTED_MODULE_0__angular_core__["_116" /* ɵQueryBindingType */].First:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_116" /* ɵQueryBindingType */].All;_this218.nodeDefs.push(function(){return importExpr(createIdentifier(Identifiers.queryDef)).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType))])]);});});// Note: the operation below might also create new nodeDefs,
// but we don't want them to be a child of a directive,
// as they might be a provider/pipe on their own.
// I.e. we only allow queries as children of directives nodes.
var/** @type {?} */childCount=this.nodeDefs.length-nodeIndex-1;var _visitProviderOrDirec=this._visitProviderOrDirective(providerAst,queryMatches),flags=_visitProviderOrDirec.flags,queryMatchExprs=_visitProviderOrDirec.queryMatchExprs,providerExpr=_visitProviderOrDirec.providerExpr,providerType=_visitProviderOrDirec.providerType,depsExpr=_visitProviderOrDirec.depsExpr;refs.forEach(function(ref){if(ref.value&&tokenReference(ref.value)===tokenReference(providerAst.token)){_this218.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_120" /* ɵQueryValueType */].Provider)]));}});if(dirAst.directive.isComponent){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].IsComponent;}var/** @type {?} */inputDefs=dirAst.inputs.map(function(inputAst,inputIndex){var/** @type {?} */mapValue=literalArr([literal(inputIndex),literal(inputAst.directiveName)]);// Note: it's important to not quote the key so that we can capture renames by minifiers!
return new LiteralMapEntry(inputAst.directiveName,mapValue,false);});var/** @type {?} */outputDefs=[];var/** @type {?} */dirMeta=dirAst.directive;Object.keys(dirMeta.outputs).forEach(function(propName){var/** @type {?} */eventName=dirMeta.outputs[propName];if(usedEvents.has(eventName)){// Note: it's important to not quote the key so that we can capture renames by minifiers!
outputDefs.push(new LiteralMapEntry(propName,literal(eventName),false));}});if(dirAst.inputs.length||(flags&(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].DoCheck|__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].OnInit))>0){this._addUpdateExpressions(nodeIndex,dirAst.inputs.map(function(input){return{context:COMP_VAR,value:input.value};}),this.updateDirectivesExpressions);}var/** @type {?} */dirContextExpr=importExpr(createIdentifier(Identifiers.nodeValue)).callFn([VIEW_VAR$1,literal(nodeIndex)]);var/** @type {?} */hostBindings=dirAst.hostProperties.map(function(hostBindingAst){return{value:hostBindingAst.value.ast,context:dirContextExpr};});var/** @type {?} */hostEvents=dirAst.hostEvents.map(function(hostEventAst){return{context:dirContextExpr,eventAst:hostEventAst,dirAst:dirAst};});// directiveDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:
//   any,
//   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},
//   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.directiveDef)).callFn([literal(flags),queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,literal(childCount),providerExpr,depsExpr,inputDefs.length?new LiteralMapExpr(inputDefs):NULL_EXPR,outputDefs.length?new LiteralMapExpr(outputDefs):NULL_EXPR]);};this.nodeDefs[nodeIndex]=nodeDef;return{hostBindings:hostBindings,hostEvents:hostEvents};}/**
     * @param {?} providerAst
     * @param {?} queryMatches
     * @return {?}
     */},{key:'_visitProvider',value:function _visitProvider(providerAst,queryMatches){var/** @type {?} */nodeIndex=this.nodeDefs.length;// reserve the space in the nodeDefs array so we can add children
this.nodeDefs.push(null);var _visitProviderOrDirec2=this._visitProviderOrDirective(providerAst,queryMatches),flags=_visitProviderOrDirec2.flags,queryMatchExprs=_visitProviderOrDirec2.queryMatchExprs,providerExpr=_visitProviderOrDirec2.providerExpr,providerType=_visitProviderOrDirec2.providerType,depsExpr=_visitProviderOrDirec2.depsExpr;// providerDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], type: ProviderType, token:
//   any,
//   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.providerDef)).callFn([literal(flags),queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,literal(providerType),tokenExpr(providerAst.token),providerExpr,depsExpr]);};this.nodeDefs[nodeIndex]=nodeDef;}/**
     * @param {?} providerAst
     * @param {?} queryMatches
     * @return {?}
     */},{key:'_visitProviderOrDirective',value:function _visitProviderOrDirective(providerAst,queryMatches){var/** @type {?} */flags=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].None;if(!providerAst.eager){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].LazyProvider;}if(providerAst.providerType===ProviderAstType.PrivateService){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].PrivateProvider;}providerAst.lifecycleHooks.forEach(function(lifecycleHook){// for regular providers, we only support ngOnDestroy
if(lifecycleHook===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy||providerAst.providerType===ProviderAstType.Directive||providerAst.providerType===ProviderAstType.Component){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var/** @type {?} */queryMatchExprs=[];queryMatches.forEach(function(match){if(tokenReference(match.value)===tokenReference(providerAst.token)){queryMatchExprs.push(literalArr([literal(match.queryId),literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_120" /* ɵQueryValueType */].Provider)]));}});var _providerDef=providerDef(providerAst),providerExpr=_providerDef.providerExpr,providerType=_providerDef.providerType,depsExpr=_providerDef.depsExpr;return{flags:flags,queryMatchExprs:queryMatchExprs,providerExpr:providerExpr,providerType:providerType,depsExpr:depsExpr};}/**
     * @param {?} name
     * @return {?}
     */},{key:'getLocal',value:function getLocal(name){if(name==EventHandlerVars.event.name){return EventHandlerVars.event;}var/** @type {?} */currViewExpr=VIEW_VAR$1;for(var/** @type {?} */currBuilder=this;currBuilder;currBuilder=currBuilder.parent,currViewExpr=currViewExpr.prop('parent')){// check references
var/** @type {?} */refNodeIndex=currBuilder.refNodeIndices[name];if(refNodeIndex!=null){return importExpr(createIdentifier(Identifiers.nodeValue)).callFn([currViewExpr,literal(refNodeIndex)]);}// check variables
var/** @type {?} */varAst=currBuilder.variables.find(function(varAst){return varAst.name===name;});if(varAst){var/** @type {?} */varValue=varAst.value||IMPLICIT_TEMPLATE_VAR$1;return currViewExpr.prop('context').prop(varValue);}}return null;}/**
     * @param {?} argCount
     * @return {?}
     */},{key:'createLiteralArrayConverter',value:function createLiteralArrayConverter(argCount){if(argCount===0){var/** @type {?} */valueExpr=importExpr(createIdentifier(Identifiers.EMPTY_ARRAY));return function(){return valueExpr;};}var/** @type {?} */nodeIndex=this.nodeDefs.length;// pureArrayDef(argCount: number): NodeDef;
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.pureArrayDef)).callFn([literal(argCount)]);};this.nodeDefs.push(nodeDef);return function(args){return callCheckStmt(nodeIndex,args);};}/**
     * @param {?} keys
     * @return {?}
     */},{key:'createLiteralMapConverter',value:function createLiteralMapConverter(keys){if(keys.length===0){var/** @type {?} */valueExpr=importExpr(createIdentifier(Identifiers.EMPTY_MAP));return function(){return valueExpr;};}var/** @type {?} */nodeIndex=this.nodeDefs.length;// function pureObjectDef(propertyNames: string[]): NodeDef
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.pureObjectDef)).callFn([literalArr(keys.map(function(key){return literal(key);}))]);};this.nodeDefs.push(nodeDef);return function(args){return callCheckStmt(nodeIndex,args);};}/**
     * @param {?} name
     * @param {?} argCount
     * @return {?}
     */},{key:'createPipeConverter',value:function createPipeConverter(name,argCount){var/** @type {?} */pipe=this._findPipe(name);if(pipe.pure){var/** @type {?} */nodeIndex=this.nodeDefs.length;// function purePipeDef(argCount: number): NodeDef;
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.purePipeDef)).callFn([literal(argCount)]);};this.nodeDefs.push(nodeDef);// find underlying pipe in the component view
var/** @type {?} */compViewExpr=VIEW_VAR$1;var/** @type {?} */compBuilder=this;while(compBuilder.parent){compBuilder=compBuilder.parent;compViewExpr=compViewExpr.prop('parent');}var/** @type {?} */pipeNodeIndex=compBuilder.purePipeNodeIndices[name];var/** @type {?} */pipeValueExpr=importExpr(createIdentifier(Identifiers.nodeValue)).callFn([compViewExpr,literal(pipeNodeIndex)]);return function(args){return callUnwrapValue(callCheckStmt(nodeIndex,[pipeValueExpr].concat(args)));};}else{var/** @type {?} */_nodeIndex=this._createPipe(pipe);var/** @type {?} */nodeValueExpr=importExpr(createIdentifier(Identifiers.nodeValue)).callFn([VIEW_VAR$1,literal(_nodeIndex)]);return function(args){return callUnwrapValue(nodeValueExpr.callMethod('transform',args));};}}/**
     * @param {?} name
     * @return {?}
     */},{key:'_findPipe',value:function _findPipe(name){return this.usedPipes.find(function(pipeSummary){return pipeSummary.name===name;});}/**
     * @param {?} pipe
     * @return {?}
     */},{key:'_createPipe',value:function _createPipe(pipe){var/** @type {?} */nodeIndex=this.nodeDefs.length;var/** @type {?} */flags=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].None;pipe.type.lifecycleHooks.forEach(function(lifecycleHook){// for pipes, we only support ngOnDestroy
if(lifecycleHook===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var/** @type {?} */depExprs=pipe.type.diDeps.map(depDef);// function pipeDef(
//   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef
var/** @type {?} */nodeDef=function nodeDef(){return importExpr(createIdentifier(Identifiers.pipeDef)).callFn([literal(flags),importExpr(pipe.type),literalArr(depExprs)]);};this.nodeDefs.push(nodeDef);return nodeIndex;}/**
     * @param {?} nodeIndex
     * @param {?} expressions
     * @param {?} target
     * @return {?}
     */},{key:'_addUpdateExpressions',value:function _addUpdateExpressions(nodeIndex,expressions,target){var _this219=this;var/** @type {?} */transformedExpressions=expressions.map(function(_ref37){var context=_ref37.context,value=_ref37.value;if(value instanceof ASTWithSource){value=value.ast;}return{context:context,value:convertPropertyBindingBuiltins(_this219,value)};});target.push({nodeIndex:nodeIndex,expressions:transformedExpressions});}/**
     * @param {?} nodeIndex
     * @param {?} handlers
     * @return {?}
     */},{key:'_createElementHandleEventFn',value:function _createElementHandleEventFn(nodeIndex,handlers){var _this220=this;var/** @type {?} */handleEventStmts=[];var/** @type {?} */handleEventBindingCount=0;handlers.forEach(function(_ref38){var context=_ref38.context,eventAst=_ref38.eventAst,dirAst=_ref38.dirAst;var/** @type {?} */bindingId=''+handleEventBindingCount++;var/** @type {?} */nameResolver=context===COMP_VAR?_this220:null;var/** @type {?} */expression=eventAst.handler instanceof ASTWithSource?eventAst.handler.ast:eventAst.handler;var _convertActionBinding=convertActionBinding(nameResolver,context,expression,bindingId),stmts=_convertActionBinding.stmts,allowDefault=_convertActionBinding.allowDefault;var/** @type {?} */trueStmts=stmts;if(allowDefault){trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());}var _elementEventNameAndT3=elementEventNameAndTarget(eventAst,dirAst),eventTarget=_elementEventNameAndT3.target,eventName=_elementEventNameAndT3.name;var/** @type {?} */fullEventName=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_119" /* ɵelementEventFullName */])(eventTarget,eventName);handleEventStmts.push(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR$1),trueStmts));});var/** @type {?} */handleEventFn=void 0;if(handleEventStmts.length>0){var/** @type {?} */preStmts=[ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];if(!this.component.isHost){preStmts.push(COMP_VAR.set(VIEW_VAR$1.prop('component')).toDeclStmt(this.compType));}handleEventFn=fn([new FnParam(VIEW_VAR$1.name,INFERRED_TYPE),new FnParam(EVENT_NAME_VAR$1.name,INFERRED_TYPE),new FnParam(EventHandlerVars.event.name,INFERRED_TYPE)],[].concat(preStmts,handleEventStmts,[new ReturnStatement(ALLOW_DEFAULT_VAR)]),INFERRED_TYPE);}else{handleEventFn=NULL_EXPR;}return handleEventFn;}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitDirective',value:function visitDirective(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitDirectiveProperty',value:function visitDirectiveProperty(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitReference',value:function visitReference(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitVariable',value:function visitVariable(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitEvent',value:function visitEvent(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitElementProperty',value:function visitElementProperty(ast,context){}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAttr',value:function visitAttr(ast,context){}},{key:'viewName',get:function get(){return viewClassName(this.component.type.reference,this.embeddedViewIndex);}}]);return ViewBuilder;}();/**
 * @param {?} providerAst
 * @return {?}
 */function providerDef(providerAst){return providerAst.multiProvider?multiProviderDef(providerAst.providers):singleProviderDef(providerAst.providers[0]);}/**
 * @param {?} providers
 * @return {?}
 */function multiProviderDef(providers){var/** @type {?} */allDepDefs=[];var/** @type {?} */allParams=[];var/** @type {?} */exprs=providers.map(function(provider,providerIndex){var/** @type {?} */expr=void 0;if(provider.useClass){var/** @type {?} */depExprs=convertDeps(providerIndex,provider.deps||provider.useClass.diDeps);expr=importExpr(provider.useClass).instantiate(depExprs);}else if(provider.useFactory){var/** @type {?} */_depExprs=convertDeps(providerIndex,provider.deps||provider.useFactory.diDeps);expr=importExpr(provider.useFactory).callFn(_depExprs);}else if(provider.useExisting){var/** @type {?} */_depExprs2=convertDeps(providerIndex,[{token:provider.useExisting}]);expr=_depExprs2[0];}else{expr=convertValueToOutputAst(provider.useValue);}return expr;});var/** @type {?} */providerExpr=fn(allParams,[new ReturnStatement(literalArr(exprs))],INFERRED_TYPE);return{providerExpr:providerExpr,providerType:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_121" /* ɵProviderType */].Factory,depsExpr:literalArr(allDepDefs)};/**
     * @param {?} providerIndex
     * @param {?} deps
     * @return {?}
     */function convertDeps(providerIndex,deps){return deps.map(function(dep,depIndex){var/** @type {?} */paramName='p'+providerIndex+'_'+depIndex;allParams.push(new FnParam(paramName,DYNAMIC_TYPE));allDepDefs.push(depDef(dep));return variable(paramName);});}}/**
 * @param {?} providerMeta
 * @return {?}
 */function singleProviderDef(providerMeta){var/** @type {?} */providerExpr=void 0;var/** @type {?} */providerType=void 0;var/** @type {?} */deps=void 0;if(providerMeta.useClass){providerExpr=importExpr(providerMeta.useClass);providerType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_121" /* ɵProviderType */].Class;deps=providerMeta.deps||providerMeta.useClass.diDeps;}else if(providerMeta.useFactory){providerExpr=importExpr(providerMeta.useFactory);providerType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_121" /* ɵProviderType */].Factory;deps=providerMeta.deps||providerMeta.useFactory.diDeps;}else if(providerMeta.useExisting){providerExpr=NULL_EXPR;providerType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_121" /* ɵProviderType */].UseExisting;deps=[{token:providerMeta.useExisting}];}else{providerExpr=convertValueToOutputAst(providerMeta.useValue);providerType=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_121" /* ɵProviderType */].Value;deps=[];}var/** @type {?} */depsExpr=literalArr(deps.map(function(dep){return depDef(dep);}));return{providerExpr:providerExpr,providerType:providerType,depsExpr:depsExpr};}/**
 * @param {?} tokenMeta
 * @return {?}
 */function tokenExpr(tokenMeta){return tokenMeta.identifier?importExpr(tokenMeta.identifier):literal(tokenMeta.value);}/**
 * @param {?} dep
 * @return {?}
 */function depDef(dep){// Note: the following fields have already been normalized out by provider_analyzer:
// - isAttribute, isSelf, isHost
var/** @type {?} */expr=dep.isValue?convertValueToOutputAst(dep.value):tokenExpr(dep.token);var/** @type {?} */flags=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_122" /* ɵDepFlags */].None;if(dep.isSkipSelf){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_122" /* ɵDepFlags */].SkipSelf;}if(dep.isOptional){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_122" /* ɵDepFlags */].Optional;}if(dep.isValue){flags|=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_122" /* ɵDepFlags */].Value;}return flags===__WEBPACK_IMPORTED_MODULE_0__angular_core__["_122" /* ɵDepFlags */].None?expr:literalArr([literal(flags),expr]);}/**
 * @param {?} ast
 * @return {?}
 */function needsAdditionalRootNode(ast){if(ast instanceof EmbeddedTemplateAst){return ast.hasViewContainer;}if(ast instanceof ElementAst){if(ast.name===NG_CONTAINER_TAG$1&&ast.children.length){return needsAdditionalRootNode(ast.children[ast.children.length-1]);}return ast.hasViewContainer;}return ast instanceof NgContentAst;}/**
 * @param {?} lifecycleHook
 * @return {?}
 */function lifecycleHookToNodeFlag(lifecycleHook){var/** @type {?} */nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].None;switch(lifecycleHook){case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterContentChecked:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].AfterContentChecked;break;case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterContentInit:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].AfterContentInit;break;case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterViewChecked:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].AfterViewChecked;break;case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].AfterViewInit:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].AfterViewInit;break;case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].DoCheck:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].DoCheck;break;case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnChanges:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].OnChanges;break;case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnDestroy:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].OnDestroy;break;case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_109" /* ɵLifecycleHooks */].OnInit:nodeFlag=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_117" /* ɵNodeFlags */].OnInit;break;}return nodeFlag;}/**
 * @param {?} inputAsts
 * @param {?} dirAst
 * @return {?}
 */function elementBindingDefs(inputAsts,dirAst){return inputAsts.map(function(inputAst){switch(inputAst.type){case PropertyBindingType.Attribute:return literalArr([literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_123" /* ɵBindingType */].ElementAttribute),literal(inputAst.name),literal(inputAst.securityContext)]);case PropertyBindingType.Property:return literalArr([literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_123" /* ɵBindingType */].ElementProperty),literal(inputAst.name),literal(inputAst.securityContext)]);case PropertyBindingType.Animation:var/** @type {?} */bindingType=dirAst&&dirAst.directive.isComponent?__WEBPACK_IMPORTED_MODULE_0__angular_core__["_123" /* ɵBindingType */].ComponentHostProperty:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_123" /* ɵBindingType */].ElementProperty;return literalArr([literal(bindingType),literal('@'+inputAst.name),literal(inputAst.securityContext)]);case PropertyBindingType.Class:return literalArr([literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_123" /* ɵBindingType */].ElementClass),literal(inputAst.name)]);case PropertyBindingType.Style:return literalArr([literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_123" /* ɵBindingType */].ElementStyle),literal(inputAst.name),literal(inputAst.unit)]);}});}/**
 * @param {?} elementAst
 * @return {?}
 */function fixedAttrsDef(elementAst){var/** @type {?} */mapResult=Object.create(null);elementAst.attrs.forEach(function(attrAst){mapResult[attrAst.name]=attrAst.value;});elementAst.directives.forEach(function(dirAst){Object.keys(dirAst.directive.hostAttributes).forEach(function(name){var/** @type {?} */value=dirAst.directive.hostAttributes[name];var/** @type {?} */prevValue=mapResult[name];mapResult[name]=prevValue!=null?mergeAttributeValue$1(name,prevValue,value):value;});});var/** @type {?} */mapEntries=[];// Note: We need to sort to get a defined output order
// for tests and for caching generated artifacts...
return literalArr(Object.keys(mapResult).sort().map(function(attrName){return literalArr([literal(attrName),literal(mapResult[attrName])]);}));}/**
 * @param {?} attrName
 * @param {?} attrValue1
 * @param {?} attrValue2
 * @return {?}
 */function mergeAttributeValue$1(attrName,attrValue1,attrValue2){if(attrName==CLASS_ATTR$2||attrName==STYLE_ATTR$1){return attrValue1+' '+attrValue2;}else{return attrValue2;}}/**
 * @param {?} nodeIndex
 * @param {?} exprs
 * @return {?}
 */function callCheckStmt(nodeIndex,exprs){if(exprs.length>10){return CHECK_VAR.callFn([VIEW_VAR$1,literal(nodeIndex),literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_124" /* ɵArgumentType */].Dynamic),literalArr(exprs)]);}else{return CHECK_VAR.callFn([VIEW_VAR$1,literal(nodeIndex),literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_124" /* ɵArgumentType */].Inline)].concat(_toConsumableArray(exprs)));}}/**
 * @param {?} expr
 * @return {?}
 */function callUnwrapValue(expr){return importExpr(createIdentifier(Identifiers.unwrapValue)).callFn([expr]);}/**
 * @param {?} nodes
 * @param {?=} result
 * @return {?}
 */function findStaticQueryIds(nodes){var result=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Map();nodes.forEach(function(node){var/** @type {?} */staticQueryIds=new Set();var/** @type {?} */dynamicQueryIds=new Set();var/** @type {?} */queryMatches=void 0;if(node instanceof ElementAst){findStaticQueryIds(node.children,result);node.children.forEach(function(child){var/** @type {?} */childData=result.get(child);childData.staticQueryIds.forEach(function(queryId){return staticQueryIds.add(queryId);});childData.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});queryMatches=node.queryMatches;}else if(node instanceof EmbeddedTemplateAst){findStaticQueryIds(node.children,result);node.children.forEach(function(child){var/** @type {?} */childData=result.get(child);childData.staticQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});childData.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});queryMatches=node.queryMatches;}if(queryMatches){queryMatches.forEach(function(match){return staticQueryIds.add(match.queryId);});}dynamicQueryIds.forEach(function(queryId){return staticQueryIds.delete(queryId);});result.set(node,{staticQueryIds:staticQueryIds,dynamicQueryIds:dynamicQueryIds});});return result;}/**
 * @param {?} nodeStaticQueryIds
 * @return {?}
 */function staticViewQueryIds(nodeStaticQueryIds){var/** @type {?} */staticQueryIds=new Set();var/** @type {?} */dynamicQueryIds=new Set();Array.from(nodeStaticQueryIds.values()).forEach(function(entry){entry.staticQueryIds.forEach(function(queryId){return staticQueryIds.add(queryId);});entry.dynamicQueryIds.forEach(function(queryId){return dynamicQueryIds.add(queryId);});});dynamicQueryIds.forEach(function(queryId){return staticQueryIds.delete(queryId);});return{staticQueryIds:staticQueryIds,dynamicQueryIds:dynamicQueryIds};}/**
 * @param {?} directives
 * @return {?}
 */function createComponentFactoryResolver(directives){var/** @type {?} */componentDirMeta=directives.find(function(dirAst){return dirAst.directive.isComponent;});if(componentDirMeta&&componentDirMeta.directive.entryComponents.length){var/** @type {?} */entryComponentFactories=componentDirMeta.directive.entryComponents.map(function(entryComponent){return importExpr({reference:entryComponent.componentFactory});});var/** @type {?} */cfrExpr=importExpr(createIdentifier(Identifiers.CodegenComponentFactoryResolver)).instantiate([literalArr(entryComponentFactories)]);var/** @type {?} */token=createIdentifierToken(Identifiers.ComponentFactoryResolver);var/** @type {?} */classMeta={diDeps:[{isValue:true,value:literalArr(entryComponentFactories)},{token:token,isSkipSelf:true,isOptional:true}],lifecycleHooks:[],reference:resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)};return new ProviderAst(token,false,true,[{token:token,multi:false,useClass:classMeta}],ProviderAstType.PrivateService,[],componentDirMeta.sourceSpan);}return null;}/**
 * @param {?} eventAst
 * @param {?} dirAst
 * @return {?}
 */function elementEventNameAndTarget(eventAst,dirAst){if(eventAst.isAnimation){return{name:'@'+eventAst.name+'.'+eventAst.phase,target:dirAst&&dirAst.directive.isComponent?'component':null};}else{return eventAst;}}var AnimationEntryCompileResult=/**
     * @param {?} name
     * @param {?} statements
     * @param {?} fnExp
     */function AnimationEntryCompileResult(name,statements,fnExp){_classCallCheck(this,AnimationEntryCompileResult);this.name=name;this.statements=statements;this.fnExp=fnExp;};var AnimationCompiler=function(){function AnimationCompiler(){_classCallCheck(this,AnimationCompiler);}_createClass(AnimationCompiler,[{key:'compile',/**
     * @param {?} factoryNamePrefix
     * @param {?} parsedAnimations
     * @return {?}
     */value:function compile(factoryNamePrefix,parsedAnimations){return parsedAnimations.map(function(entry){var/** @type {?} */factoryName=factoryNamePrefix+'_'+entry.name;var/** @type {?} */visitor=new _AnimationBuilder(entry.name,factoryName);return visitor.build(entry);});}}]);return AnimationCompiler;}();var/** @type {?} */_ANIMATION_FACTORY_ELEMENT_VAR=variable('element');var/** @type {?} */_ANIMATION_DEFAULT_STATE_VAR=variable('defaultStateStyles');var/** @type {?} */_ANIMATION_FACTORY_VIEW_VAR=variable('view');var/** @type {?} */_ANIMATION_FACTORY_VIEW_CONTEXT=_ANIMATION_FACTORY_VIEW_VAR.prop('animationContext');var/** @type {?} */_ANIMATION_FACTORY_RENDERER_VAR=_ANIMATION_FACTORY_VIEW_VAR.prop('renderer');var/** @type {?} */_ANIMATION_CURRENT_STATE_VAR=variable('currentState');var/** @type {?} */_ANIMATION_NEXT_STATE_VAR=variable('nextState');var/** @type {?} */_ANIMATION_PLAYER_VAR=variable('player');var/** @type {?} */_ANIMATION_TIME_VAR=variable('totalTime');var/** @type {?} */_ANIMATION_START_STATE_STYLES_VAR=variable('startStateStyles');var/** @type {?} */_ANIMATION_END_STATE_STYLES_VAR=variable('endStateStyles');var/** @type {?} */_ANIMATION_COLLECTED_STYLES=variable('collectedStyles');var/** @type {?} */_PREVIOUS_ANIMATION_PLAYERS=variable('previousPlayers');var/** @type {?} */_EMPTY_MAP=literalMap([]);var/** @type {?} */_EMPTY_ARRAY=literalArr([]);var _AnimationBuilder=function(){/**
     * @param {?} animationName
     * @param {?} factoryName
     */function _AnimationBuilder(animationName,factoryName){_classCallCheck(this,_AnimationBuilder);this.animationName=animationName;this._fnVarName=factoryName+'_factory';this._statesMapVarName=factoryName+'_states';this._statesMapVar=variable(this._statesMapVarName);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */_createClass(_AnimationBuilder,[{key:'visitAnimationStyles',value:function visitAnimationStyles(ast,context){var/** @type {?} */stylesArr=[];if(context.isExpectingFirstStyleStep){stylesArr.push(_ANIMATION_START_STATE_STYLES_VAR);context.isExpectingFirstStyleStep=false;}ast.styles.forEach(function(entry){var/** @type {?} */entries=Object.keys(entry).map(function(key){return[key,literal(entry[key])];});stylesArr.push(literalMap(entries,null,true));});return importExpr(createIdentifier(Identifiers.AnimationStyles)).instantiate([importExpr(createIdentifier(Identifiers.collectAndResolveStyles)).callFn([_ANIMATION_COLLECTED_STYLES,literalArr(stylesArr)])]);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAnimationKeyframe',value:function visitAnimationKeyframe(ast,context){return importExpr(createIdentifier(Identifiers.AnimationKeyframe)).instantiate([literal(ast.offset),ast.styles.visit(this,context)]);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAnimationStep',value:function visitAnimationStep(ast,context){var _this221=this;if(context.endStateAnimateStep===ast){return this._visitEndStateAnimation(ast,context);}var/** @type {?} */startingStylesExpr=ast.startingStyles.visit(this,context);var/** @type {?} */keyframeExpressions=ast.keyframes.map(function(keyframeEntry){return keyframeEntry.visit(_this221,context);});return this._callAnimateMethod(ast,startingStylesExpr,literalArr(keyframeExpressions),context);}/**
     * \@internal
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'_visitEndStateAnimation',value:function _visitEndStateAnimation(ast,context){var _this222=this;var/** @type {?} */startingStylesExpr=ast.startingStyles.visit(this,context);var/** @type {?} */keyframeExpressions=ast.keyframes.map(function(keyframe){return keyframe.visit(_this222,context);});var/** @type {?} */keyframesExpr=importExpr(createIdentifier(Identifiers.balanceAnimationKeyframes)).callFn([_ANIMATION_COLLECTED_STYLES,_ANIMATION_END_STATE_STYLES_VAR,literalArr(keyframeExpressions)]);return this._callAnimateMethod(ast,startingStylesExpr,keyframesExpr,context);}/**
     * \@internal
     * @param {?} ast
     * @param {?} startingStylesExpr
     * @param {?} keyframesExpr
     * @param {?} context
     * @return {?}
     */},{key:'_callAnimateMethod',value:function _callAnimateMethod(ast,startingStylesExpr,keyframesExpr,context){var/** @type {?} */previousStylesValue=_EMPTY_ARRAY;if(context.isExpectingFirstAnimateStep){previousStylesValue=_PREVIOUS_ANIMATION_PLAYERS;context.isExpectingFirstAnimateStep=false;}context.totalTransitionTime+=ast.duration+ast.delay;return _ANIMATION_FACTORY_RENDERER_VAR.callMethod('animate',[_ANIMATION_FACTORY_ELEMENT_VAR,startingStylesExpr,keyframesExpr,literal(ast.duration),literal(ast.delay),literal(ast.easing),previousStylesValue]);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAnimationSequence',value:function visitAnimationSequence(ast,context){var _this223=this;var/** @type {?} */playerExprs=ast.steps.map(function(step){return step.visit(_this223,context);});return importExpr(createIdentifier(Identifiers.AnimationSequencePlayer)).instantiate([literalArr(playerExprs)]);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAnimationGroup',value:function visitAnimationGroup(ast,context){var _this224=this;var/** @type {?} */playerExprs=ast.steps.map(function(step){return step.visit(_this224,context);});return importExpr(createIdentifier(Identifiers.AnimationGroupPlayer)).instantiate([literalArr(playerExprs)]);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAnimationStateDeclaration',value:function visitAnimationStateDeclaration(ast,context){var/** @type {?} */flatStyles={};_getStylesArray(ast).forEach(function(entry){Object.keys(entry).forEach(function(key){flatStyles[key]=entry[key];});});context.stateMap.registerState(ast.stateName,flatStyles);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAnimationStateTransition',value:function visitAnimationStateTransition(ast,context){var/** @type {?} */steps=ast.animation.steps;var/** @type {?} */lastStep=steps[steps.length-1];if(_isEndStateAnimateStep(lastStep)){context.endStateAnimateStep=lastStep;}context.totalTransitionTime=0;context.isExpectingFirstStyleStep=true;context.isExpectingFirstAnimateStep=true;var/** @type {?} */stateChangePreconditions=[];ast.stateChanges.forEach(function(stateChange){if(stateChange instanceof AnimationStateTransitionFnExpression){stateChangePreconditions.push(importExpr({reference:stateChange.fn}).callFn([_ANIMATION_CURRENT_STATE_VAR,_ANIMATION_NEXT_STATE_VAR]));}else{stateChangePreconditions.push(_compareToAnimationStateExpr(_ANIMATION_CURRENT_STATE_VAR,stateChange.fromState).and(_compareToAnimationStateExpr(_ANIMATION_NEXT_STATE_VAR,stateChange.toState)));if(stateChange.fromState!=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_102" /* ɵANY_STATE */]){context.stateMap.registerState(stateChange.fromState);}if(stateChange.toState!=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_102" /* ɵANY_STATE */]){context.stateMap.registerState(stateChange.toState);}}});var/** @type {?} */animationPlayerExpr=ast.animation.visit(this,context);var/** @type {?} */reducedStateChangesPrecondition=stateChangePreconditions.reduce(function(a,b){return a.or(b);});var/** @type {?} */precondition=_ANIMATION_PLAYER_VAR.equals(NULL_EXPR).and(reducedStateChangesPrecondition);var/** @type {?} */animationStmt=_ANIMATION_PLAYER_VAR.set(animationPlayerExpr).toStmt();var/** @type {?} */totalTimeStmt=_ANIMATION_TIME_VAR.set(literal(context.totalTransitionTime)).toStmt();return new IfStmt(precondition,[animationStmt,totalTimeStmt]);}/**
     * @param {?} ast
     * @param {?} context
     * @return {?}
     */},{key:'visitAnimationEntry',value:function visitAnimationEntry(ast,context){var _this225=this;// visit each of the declarations first to build the context state map
ast.stateDeclarations.forEach(function(def){return def.visit(_this225,context);});// this should always be defined even if the user overrides it
context.stateMap.registerState(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_125" /* ɵDEFAULT_STATE */],{});var/** @type {?} */statements=[];statements.push(_PREVIOUS_ANIMATION_PLAYERS.set(_ANIMATION_FACTORY_VIEW_CONTEXT.callMethod('getAnimationPlayers',[_ANIMATION_FACTORY_ELEMENT_VAR,_ANIMATION_NEXT_STATE_VAR.equals(literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_108" /* ɵEMPTY_STATE */])).conditional(NULL_EXPR,literal(this.animationName))])).toDeclStmt());statements.push(_ANIMATION_COLLECTED_STYLES.set(_EMPTY_MAP).toDeclStmt());statements.push(_ANIMATION_PLAYER_VAR.set(NULL_EXPR).toDeclStmt());statements.push(_ANIMATION_TIME_VAR.set(literal(0)).toDeclStmt());statements.push(_ANIMATION_DEFAULT_STATE_VAR.set(this._statesMapVar.key(literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_125" /* ɵDEFAULT_STATE */]))).toDeclStmt());statements.push(_ANIMATION_START_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_CURRENT_STATE_VAR)).toDeclStmt());statements.push(new IfStmt(_ANIMATION_START_STATE_STYLES_VAR.equals(NULL_EXPR),[_ANIMATION_START_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));statements.push(_ANIMATION_END_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_NEXT_STATE_VAR)).toDeclStmt());statements.push(new IfStmt(_ANIMATION_END_STATE_STYLES_VAR.equals(NULL_EXPR),[_ANIMATION_END_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));var/** @type {?} */RENDER_STYLES_FN=importExpr(createIdentifier(Identifiers.renderStyles));ast.stateTransitions.forEach(function(transAst){return statements.push(transAst.visit(_this225,context));});// this check ensures that the animation factory always returns a player
// so that the onDone callback can be used for tracking
statements.push(new IfStmt(_ANIMATION_PLAYER_VAR.equals(NULL_EXPR),[_ANIMATION_PLAYER_VAR.set(importExpr(createIdentifier(Identifiers.NoOpAnimationPlayer)).instantiate([])).toStmt()]));// once complete we want to apply the styles on the element
// since the destination state's values should persist once
// the animation sequence has completed.
statements.push(_ANIMATION_PLAYER_VAR.callMethod('onDone',[fn([],[_ANIMATION_PLAYER_VAR.callMethod('destroy',[]).toStmt(),RENDER_STYLES_FN.callFn([_ANIMATION_FACTORY_ELEMENT_VAR,_ANIMATION_FACTORY_RENDERER_VAR,importExpr(createIdentifier(Identifiers.prepareFinalAnimationStyles)).callFn([_ANIMATION_START_STATE_STYLES_VAR,_ANIMATION_END_STATE_STYLES_VAR])]).toStmt()])]).toStmt());statements.push(importExpr(createIdentifier(Identifiers.AnimationSequencePlayer)).instantiate([_PREVIOUS_ANIMATION_PLAYERS]).callMethod('destroy',[]).toStmt());// before we start any animation we want to clear out the starting
// styles from the element's style property (since they were placed
// there at the end of the last animation
statements.push(RENDER_STYLES_FN.callFn([_ANIMATION_FACTORY_ELEMENT_VAR,_ANIMATION_FACTORY_RENDERER_VAR,importExpr(createIdentifier(Identifiers.clearStyles)).callFn([_ANIMATION_START_STATE_STYLES_VAR])]).toStmt());statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT.callMethod('queueAnimation',[_ANIMATION_FACTORY_ELEMENT_VAR,literal(this.animationName),_ANIMATION_PLAYER_VAR]).toStmt());statements.push(new ReturnStatement(importExpr(createIdentifier(Identifiers.AnimationTransition)).instantiate([_ANIMATION_PLAYER_VAR,_ANIMATION_FACTORY_ELEMENT_VAR,literal(this.animationName),_ANIMATION_CURRENT_STATE_VAR,_ANIMATION_NEXT_STATE_VAR,_ANIMATION_TIME_VAR])));return fn([new FnParam(_ANIMATION_FACTORY_VIEW_VAR.name,importType(createIdentifier(Identifiers.AppView),[DYNAMIC_TYPE])),new FnParam(_ANIMATION_FACTORY_ELEMENT_VAR.name,DYNAMIC_TYPE),new FnParam(_ANIMATION_CURRENT_STATE_VAR.name,DYNAMIC_TYPE),new FnParam(_ANIMATION_NEXT_STATE_VAR.name,DYNAMIC_TYPE)],statements,importType(createIdentifier(Identifiers.AnimationTransition)));}/**
     * @param {?} ast
     * @return {?}
     */},{key:'build',value:function build(ast){var/** @type {?} */context=new _AnimationBuilderContext();var/** @type {?} */fnStatement=ast.visit(this,context).toDeclStmt(this._fnVarName);var/** @type {?} */fnVariable=variable(this._fnVarName);var/** @type {?} */lookupMap=[];Object.keys(context.stateMap.states).forEach(function(stateName){var/** @type {?} */value=context.stateMap.states[stateName];var/** @type {?} */variableValue=_EMPTY_MAP;if(isPresent(value)){var/** @type {?} */styleMap=[];Object.keys(value).forEach(function(key){styleMap.push([key,literal(value[key])]);});variableValue=literalMap(styleMap,null,true);}lookupMap.push([stateName,variableValue]);});var/** @type {?} */compiledStatesMapStmt=this._statesMapVar.set(literalMap(lookupMap,null,true)).toDeclStmt();var/** @type {?} */statements=[compiledStatesMapStmt,fnStatement];return new AnimationEntryCompileResult(this.animationName,statements,fnVariable);}}]);return _AnimationBuilder;}();var _AnimationBuilderContext=function _AnimationBuilderContext(){_classCallCheck(this,_AnimationBuilderContext);this.stateMap=new _AnimationBuilderStateMap();this.endStateAnimateStep=null;this.isExpectingFirstStyleStep=false;this.isExpectingFirstAnimateStep=false;this.totalTransitionTime=0;};var _AnimationBuilderStateMap=function(){function _AnimationBuilderStateMap(){_classCallCheck(this,_AnimationBuilderStateMap);this._states={};}/**
     * @return {?}
     */_createClass(_AnimationBuilderStateMap,[{key:'registerState',/**
     * @param {?} name
     * @param {?=} value
     * @return {?}
     */value:function registerState(name){var value=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */existingEntry=this._states[name];if(!existingEntry){this._states[name]=value;}}},{key:'states',get:function get(){return this._states;}}]);return _AnimationBuilderStateMap;}();/**
 * @param {?} value
 * @param {?} animationState
 * @return {?}
 */function _compareToAnimationStateExpr(value,animationState){var/** @type {?} */emptyStateLiteral=literal(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_108" /* ɵEMPTY_STATE */]);switch(animationState){case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_108" /* ɵEMPTY_STATE */]:return value.equals(emptyStateLiteral);case __WEBPACK_IMPORTED_MODULE_0__angular_core__["_102" /* ɵANY_STATE */]:return literal(true);default:return value.equals(literal(animationState));}}/**
 * @param {?} step
 * @return {?}
 */function _isEndStateAnimateStep(step){// the final animation step is characterized by having only TWO
// keyframe values and it must have zero styles for both keyframes
if(step instanceof AnimationStepAst&&step.duration>0&&step.keyframes.length==2){var/** @type {?} */styles1=_getStylesArray(step.keyframes[0])[0];var/** @type {?} */styles2=_getStylesArray(step.keyframes[1])[0];return Object.keys(styles1).length===0&&Object.keys(styles2).length===0;}return false;}/**
 * @param {?} obj
 * @return {?}
 */function _getStylesArray(obj){return obj.styles.styles;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var GeneratedFile=/**
     * @param {?} srcFileUrl
     * @param {?} genFileUrl
     * @param {?} source
     */function GeneratedFile(srcFileUrl,genFileUrl,source){_classCallCheck(this,GeneratedFile);this.srcFileUrl=srcFileUrl;this.genFileUrl=genFileUrl;this.source=source;};/**
 * @param {?} summaryResolver
 * @param {?} symbolResolver
 * @param {?} symbols
 * @param {?} types
 * @return {?}
 */function serializeSummaries(summaryResolver,symbolResolver,symbols,types){var/** @type {?} */serializer=new Serializer$1(symbolResolver,summaryResolver);// for symbols, we use everything except for the class metadata itself
// (we keep the statics though), as the class metadata is contained in the
// CompileTypeSummary.
symbols.forEach(function(resolvedSymbol){return serializer.addOrMergeSummary({symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata});});// Add summaries that are referenced by the given symbols (transitively)
// Note: the serializer.symbols array might be growing while
// we execute the loop!
for(var/** @type {?} */processedIndex=0;processedIndex<serializer.symbols.length;processedIndex++){var/** @type {?} */symbol=serializer.symbols[processedIndex];if(summaryResolver.isLibraryFile(symbol.filePath)){var/** @type {?} */summary=summaryResolver.resolveSummary(symbol);if(!summary){// some symbols might originate from a plain typescript library
// that just exported .d.ts and .metadata.json files, i.e. where no summary
// files were created.
var/** @type {?} */resolvedSymbol=symbolResolver.resolveSymbol(symbol);if(resolvedSymbol){summary={symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata};}}if(summary){serializer.addOrMergeSummary(summary);}}}// Add type summaries.
// Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,
// as the type summaries already contain the transitive data that they require
// (in a minimal way).
types.forEach(function(typeSummary){serializer.addOrMergeSummary({symbol:typeSummary.type.reference,metadata:{__symbolic:'class'},type:typeSummary});if(typeSummary.summaryKind===CompileSummaryKind.NgModule){var/** @type {?} */ngModuleSummary=typeSummary;ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function(id){var/** @type {?} */symbol=id.reference;if(summaryResolver.isLibraryFile(symbol.filePath)){var/** @type {?} */_summary=summaryResolver.resolveSummary(symbol);if(_summary){serializer.addOrMergeSummary(_summary);}}});}});return serializer.serialize();}/**
 * @param {?} symbolCache
 * @param {?} json
 * @return {?}
 */function deserializeSummaries(symbolCache,json){var/** @type {?} */deserializer=new Deserializer(symbolCache);return deserializer.deserialize(json);}var Serializer$1=function(_ValueTransformer2){_inherits(Serializer$1,_ValueTransformer2);/**
     * @param {?} symbolResolver
     * @param {?} summaryResolver
     */function Serializer$1(symbolResolver,summaryResolver){_classCallCheck(this,Serializer$1);var _this226=_possibleConstructorReturn(this,(Serializer$1.__proto__||Object.getPrototypeOf(Serializer$1)).call(this));_this226.symbolResolver=symbolResolver;_this226.summaryResolver=summaryResolver;// Note: This only contains symbols without members.
_this226.symbols=[];_this226.indexBySymbol=new Map();_this226.processedSummaryBySymbol=new Map();_this226.processedSummaries=[];return _this226;}/**
     * @param {?} summary
     * @return {?}
     */_createClass(Serializer$1,[{key:'addOrMergeSummary',value:function addOrMergeSummary(summary){var/** @type {?} */symbolMeta=summary.metadata;if(symbolMeta&&symbolMeta.__symbolic==='class'){// For classes, we only keep their statics and arity, but not the metadata
// of the class itself as that has been captured already via other summaries
// (e.g. DirectiveSummary, ...).
symbolMeta={__symbolic:'class',statics:symbolMeta.statics,arity:symbolMeta.arity};}var/** @type {?} */processedSummary=this.processedSummaryBySymbol.get(summary.symbol);if(!processedSummary){processedSummary=this.processValue({symbol:summary.symbol});this.processedSummaries.push(processedSummary);this.processedSummaryBySymbol.set(summary.symbol,processedSummary);}// Note: == on purpose to compare with undefined!
if(processedSummary.metadata==null&&symbolMeta!=null){processedSummary.metadata=this.processValue(symbolMeta);}// Note: == on purpose to compare with undefined!
if(processedSummary.type==null&&summary.type!=null){processedSummary.type=this.processValue(summary.type);}}/**
     * @return {?}
     */},{key:'serialize',value:function serialize(){var _this227=this;var/** @type {?} */exportAs=[];var/** @type {?} */json=JSON.stringify({summaries:this.processedSummaries,symbols:this.symbols.map(function(symbol,index){symbol.assertNoMembers();var/** @type {?} */importAs=void 0;if(_this227.summaryResolver.isLibraryFile(symbol.filePath)){importAs=symbol.name+'_'+index;exportAs.push({symbol:symbol,exportAs:importAs});}return{__symbol:index,name:symbol.name,// We convert the source filenames tinto output filenames,
// as the generated summary file will be used when teh current
// compilation unit is used as a library
filePath:_this227.summaryResolver.getLibraryFileName(symbol.filePath),importAs:importAs};})});return{json:json,exportAs:exportAs};}/**
     * @param {?} value
     * @return {?}
     */},{key:'processValue',value:function processValue(value){return visitValue(value,this,null);}/**
     * @param {?} value
     * @param {?} context
     * @return {?}
     */},{key:'visitOther',value:function visitOther(value,context){if(value instanceof StaticSymbol){var/** @type {?} */baseSymbol=this.symbolResolver.getStaticSymbol(value.filePath,value.name);var/** @type {?} */index=this.indexBySymbol.get(baseSymbol);// Note: == on purpose to compare with undefined!
if(index==null){index=this.indexBySymbol.size;this.indexBySymbol.set(baseSymbol,index);this.symbols.push(baseSymbol);}return{__symbol:index,members:value.members};}}}]);return Serializer$1;}(ValueTransformer);var Deserializer=function(_ValueTransformer3){_inherits(Deserializer,_ValueTransformer3);/**
     * @param {?} symbolCache
     */function Deserializer(symbolCache){_classCallCheck(this,Deserializer);var _this228=_possibleConstructorReturn(this,(Deserializer.__proto__||Object.getPrototypeOf(Deserializer)).call(this));_this228.symbolCache=symbolCache;return _this228;}/**
     * @param {?} json
     * @return {?}
     */_createClass(Deserializer,[{key:'deserialize',value:function deserialize(json){var _this229=this;var/** @type {?} */data=JSON.parse(json);var/** @type {?} */importAs=[];this.symbols=[];data.symbols.forEach(function(serializedSymbol){var/** @type {?} */symbol=_this229.symbolCache.get(serializedSymbol.filePath,serializedSymbol.name);_this229.symbols.push(symbol);if(serializedSymbol.importAs){importAs.push({symbol:symbol,importAs:serializedSymbol.importAs});}});var/** @type {?} */summaries=visitValue(data.summaries,this,null);return{summaries:summaries,importAs:importAs};}/**
     * @param {?} map
     * @param {?} context
     * @return {?}
     */},{key:'visitStringMap',value:function visitStringMap(map,context){if('__symbol'in map){var/** @type {?} */baseSymbol=this.symbols[map['__symbol']];var/** @type {?} */members=map['members'];return members.length?this.symbolCache.get(baseSymbol.filePath,baseSymbol.name,members):baseSymbol;}else{return _get(Deserializer.prototype.__proto__||Object.getPrototypeOf(Deserializer.prototype),'visitStringMap',this).call(this,map,context);}}}]);return Deserializer;}(ValueTransformer);var AotCompiler=function(){/**
     * @param {?} _config
     * @param {?} _host
     * @param {?} _metadataResolver
     * @param {?} _templateParser
     * @param {?} _styleCompiler
     * @param {?} _viewCompiler
     * @param {?} _dirWrapperCompiler
     * @param {?} _ngModuleCompiler
     * @param {?} _outputEmitter
     * @param {?} _summaryResolver
     * @param {?} _localeId
     * @param {?} _translationFormat
     * @param {?} _animationParser
     * @param {?} _symbolResolver
     */function AotCompiler(_config,_host,_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_dirWrapperCompiler,_ngModuleCompiler,_outputEmitter,_summaryResolver,_localeId,_translationFormat,_animationParser,_symbolResolver){_classCallCheck(this,AotCompiler);this._config=_config;this._host=_host;this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._dirWrapperCompiler=_dirWrapperCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._outputEmitter=_outputEmitter;this._summaryResolver=_summaryResolver;this._localeId=_localeId;this._translationFormat=_translationFormat;this._animationParser=_animationParser;this._symbolResolver=_symbolResolver;this._animationCompiler=new AnimationCompiler();}/**
     * @return {?}
     */_createClass(AotCompiler,[{key:'clearCache',value:function clearCache(){this._metadataResolver.clearCache();}/**
     * @param {?} rootFiles
     * @return {?}
     */},{key:'compileAll',value:function compileAll(rootFiles){var _this230=this;var/** @type {?} */programSymbols=extractProgramSymbols(this._symbolResolver,rootFiles,this._host);var _analyzeAndValidateNg=analyzeAndValidateNgModules(programSymbols,this._host,this._metadataResolver),ngModuleByPipeOrDirective=_analyzeAndValidateNg.ngModuleByPipeOrDirective,files=_analyzeAndValidateNg.files,ngModules=_analyzeAndValidateNg.ngModules;return Promise.all(ngModules.map(function(ngModule){return _this230._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){var/** @type {?} */sourceModules=files.map(function(file){return _this230._compileSrcFile(file.srcUrl,ngModuleByPipeOrDirective,file.directives,file.pipes,file.ngModules,file.injectables);});return ListWrapper.flatten(sourceModules);});}/**
     * @param {?} srcFileUrl
     * @param {?} ngModuleByPipeOrDirective
     * @param {?} directives
     * @param {?} pipes
     * @param {?} ngModules
     * @param {?} injectables
     * @return {?}
     */},{key:'_compileSrcFile',value:function _compileSrcFile(srcFileUrl,ngModuleByPipeOrDirective,directives,pipes,ngModules,injectables){var _this231=this;var/** @type {?} */fileSuffix=splitTypescriptSuffix(srcFileUrl)[1];var/** @type {?} */statements=[];var/** @type {?} */exportedVars=[];var/** @type {?} */generatedFiles=[];generatedFiles.push(this._createSummary(srcFileUrl,directives,pipes,ngModules,injectables,statements,exportedVars));// compile all ng modules
exportedVars.push.apply(exportedVars,_toConsumableArray(ngModules.map(function(ngModuleType){return _this231._compileModule(ngModuleType,statements);})));// compile directive wrappers
if(!this._config.useViewEngine){exportedVars.push.apply(exportedVars,_toConsumableArray(directives.map(function(directiveType){return _this231._compileDirectiveWrapper(directiveType,statements);})));}// compile components
directives.forEach(function(dirType){var/** @type {?} */compMeta=_this231._metadataResolver.getDirectiveMetadata(/** @type {?} */dirType);if(!compMeta.isComponent){return Promise.resolve(null);}var/** @type {?} */ngModule=ngModuleByPipeOrDirective.get(dirType);if(!ngModule){throw new Error('Internal Error: cannot determine the module for component '+identifierName(compMeta.type)+'!');}_assertComponent(compMeta);// compile styles
var/** @type {?} */stylesCompileResults=_this231._styleCompiler.compileComponent(compMeta);stylesCompileResults.externalStylesheets.forEach(function(compiledStyleSheet){generatedFiles.push(_this231._codgenStyles(srcFileUrl,compiledStyleSheet,fileSuffix));});// compile components
var/** @type {?} */compViewVars=_this231._compileComponent(compMeta,ngModule,ngModule.transitiveModule.directives,stylesCompileResults.componentStylesheet,fileSuffix,statements);exportedVars.push(_this231._compileComponentFactory(compMeta,ngModule,fileSuffix,statements),compViewVars.viewClassVar,compViewVars.compRenderTypeVar);});if(statements.length>0){var/** @type {?} */srcModule=this._codegenSourceModule(srcFileUrl,ngfactoryFilePath(srcFileUrl),statements,exportedVars);generatedFiles.unshift(srcModule);}return generatedFiles;}/**
     * @param {?} srcFileUrl
     * @param {?} directives
     * @param {?} pipes
     * @param {?} ngModules
     * @param {?} injectables
     * @param {?} targetStatements
     * @param {?} targetExportedVars
     * @return {?}
     */},{key:'_createSummary',value:function _createSummary(srcFileUrl,directives,pipes,ngModules,injectables,targetStatements,targetExportedVars){var _this232=this;var/** @type {?} */symbolSummaries=this._symbolResolver.getSymbolsOf(srcFileUrl).map(function(symbol){return _this232._symbolResolver.resolveSymbol(symbol);});var/** @type {?} */typeSummaries=[].concat(_toConsumableArray(ngModules.map(function(ref){return _this232._metadataResolver.getNgModuleSummary(ref);})),_toConsumableArray(directives.map(function(ref){return _this232._metadataResolver.getDirectiveSummary(ref);})),_toConsumableArray(pipes.map(function(ref){return _this232._metadataResolver.getPipeSummary(ref);})),_toConsumableArray(injectables.map(function(ref){return _this232._metadataResolver.getInjectableSummary(ref);})));var _serializeSummaries=serializeSummaries(this._summaryResolver,this._symbolResolver,symbolSummaries,typeSummaries),json=_serializeSummaries.json,exportAs=_serializeSummaries.exportAs;exportAs.forEach(function(entry){targetStatements.push(variable(entry.exportAs).set(importExpr({reference:entry.symbol})).toDeclStmt());targetExportedVars.push(entry.exportAs);});return new GeneratedFile(srcFileUrl,summaryFileName(srcFileUrl),json);}/**
     * @param {?} ngModuleType
     * @param {?} targetStatements
     * @return {?}
     */},{key:'_compileModule',value:function _compileModule(ngModuleType,targetStatements){var/** @type {?} */ngModule=this._metadataResolver.getNgModuleMetadata(ngModuleType);var/** @type {?} */providers=[];if(this._localeId){providers.push({token:createIdentifierToken(Identifiers.LOCALE_ID),useValue:this._localeId});}if(this._translationFormat){providers.push({token:createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),useValue:this._translationFormat});}var/** @type {?} */appCompileResult=this._ngModuleCompiler.compile(ngModule,providers);targetStatements.push.apply(targetStatements,_toConsumableArray(appCompileResult.statements));return appCompileResult.ngModuleFactoryVar;}/**
     * @param {?} directiveType
     * @param {?} targetStatements
     * @return {?}
     */},{key:'_compileDirectiveWrapper',value:function _compileDirectiveWrapper(directiveType,targetStatements){var/** @type {?} */dirMeta=this._metadataResolver.getDirectiveMetadata(directiveType);var/** @type {?} */dirCompileResult=this._dirWrapperCompiler.compile(dirMeta);targetStatements.push.apply(targetStatements,_toConsumableArray(dirCompileResult.statements));return dirCompileResult.dirWrapperClassVar;}/**
     * @param {?} compMeta
     * @param {?} ngModule
     * @param {?} fileSuffix
     * @param {?} targetStatements
     * @return {?}
     */},{key:'_compileComponentFactory',value:function _compileComponentFactory(compMeta,ngModule,fileSuffix,targetStatements){var/** @type {?} */hostType=this._metadataResolver.getHostComponentType(compMeta.type.reference);var/** @type {?} */hostMeta=createHostComponentMeta(hostType,compMeta,this._metadataResolver.getHostComponentViewClass(hostType));var/** @type {?} */hostViewFactoryVar=this._compileComponent(hostMeta,ngModule,[compMeta.type],null,fileSuffix,targetStatements).viewClassVar;var/** @type {?} */compFactoryVar=componentFactoryName(compMeta.type.reference);if(this._config.useViewEngine){targetStatements.push(variable(compFactoryVar).set(importExpr(createIdentifier(Identifiers.createComponentFactory)).callFn([literal(compMeta.selector),importExpr(compMeta.type),variable(hostViewFactoryVar)])).toDeclStmt(importType(createIdentifier(Identifiers.ComponentFactory),[importType(compMeta.type)],[TypeModifier.Const]),[StmtModifier.Final]));}else{targetStatements.push(variable(compFactoryVar).set(importExpr(createIdentifier(Identifiers.ComponentFactory),[importType(compMeta.type)]).instantiate([literal(compMeta.selector),variable(hostViewFactoryVar),importExpr(compMeta.type)],importType(createIdentifier(Identifiers.ComponentFactory),[importType(compMeta.type)],[TypeModifier.Const]))).toDeclStmt(null,[StmtModifier.Final]));}return compFactoryVar;}/**
     * @param {?} compMeta
     * @param {?} ngModule
     * @param {?} directiveIdentifiers
     * @param {?} componentStyles
     * @param {?} fileSuffix
     * @param {?} targetStatements
     * @return {?}
     */},{key:'_compileComponent',value:function _compileComponent(compMeta,ngModule,directiveIdentifiers,componentStyles,fileSuffix,targetStatements){var _this233=this;var/** @type {?} */directives=directiveIdentifiers.map(function(dir){return _this233._metadataResolver.getDirectiveSummary(dir.reference);});var/** @type {?} */pipes=ngModule.transitiveModule.pipes.map(function(pipe){return _this233._metadataResolver.getPipeSummary(pipe.reference);});var _templateParser$parse=this._templateParser.parse(compMeta,compMeta.template.template,directives,pipes,ngModule.schemas,identifierName(compMeta.type)),parsedTemplate=_templateParser$parse.template,usedPipes=_templateParser$parse.pipes;var/** @type {?} */stylesExpr=componentStyles?variable(componentStyles.stylesVar):literalArr([]);var/** @type {?} */viewResult=this._viewCompiler.compileComponent(compMeta,parsedTemplate,stylesExpr,usedPipes,null);if(componentStyles){targetStatements.push.apply(targetStatements,_toConsumableArray(_resolveStyleStatements(this._symbolResolver,componentStyles,fileSuffix)));}targetStatements.push.apply(targetStatements,_toConsumableArray(viewResult.statements));return{viewClassVar:viewResult.viewClassVar,compRenderTypeVar:viewResult.rendererTypeVar};}/**
     * @param {?} fileUrl
     * @param {?} stylesCompileResult
     * @param {?} fileSuffix
     * @return {?}
     */},{key:'_codgenStyles',value:function _codgenStyles(fileUrl,stylesCompileResult,fileSuffix){_resolveStyleStatements(this._symbolResolver,stylesCompileResult,fileSuffix);return this._codegenSourceModule(fileUrl,_stylesModuleUrl(stylesCompileResult.meta.moduleUrl,stylesCompileResult.isShimmed,fileSuffix),stylesCompileResult.statements,[stylesCompileResult.stylesVar]);}/**
     * @param {?} srcFileUrl
     * @param {?} genFileUrl
     * @param {?} statements
     * @param {?} exportedVars
     * @return {?}
     */},{key:'_codegenSourceModule',value:function _codegenSourceModule(srcFileUrl,genFileUrl,statements,exportedVars){return new GeneratedFile(srcFileUrl,genFileUrl,this._outputEmitter.emitStatements(genFileUrl,statements,exportedVars));}}]);return AotCompiler;}();/**
 * @param {?} reflector
 * @param {?} compileResult
 * @param {?} fileSuffix
 * @return {?}
 */function _resolveStyleStatements(reflector,compileResult,fileSuffix){compileResult.dependencies.forEach(function(dep){dep.valuePlaceholder.reference=reflector.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl,dep.isShimmed,fileSuffix),dep.name);});return compileResult.statements;}/**
 * @param {?} stylesheetUrl
 * @param {?} shim
 * @param {?} suffix
 * @return {?}
 */function _stylesModuleUrl(stylesheetUrl,shim,suffix){return''+stylesheetUrl+(shim?'.shim':'')+'.ngstyle'+suffix;}/**
 * @param {?} meta
 * @return {?}
 */function _assertComponent(meta){if(!meta.isComponent){throw new Error('Could not compile \''+identifierName(meta.type)+'\' because it is not a component.');}}/**
 * @param {?} programStaticSymbols
 * @param {?} host
 * @param {?} metadataResolver
 * @return {?}
 */function analyzeNgModules(programStaticSymbols,host,metadataResolver){var _createNgModules2=_createNgModules(programStaticSymbols,host,metadataResolver),ngModules=_createNgModules2.ngModules,symbolsMissingModule=_createNgModules2.symbolsMissingModule;return _analyzeNgModules(programStaticSymbols,ngModules,symbolsMissingModule,metadataResolver);}/**
 * @param {?} programStaticSymbols
 * @param {?} host
 * @param {?} metadataResolver
 * @return {?}
 */function analyzeAndValidateNgModules(programStaticSymbols,host,metadataResolver){var/** @type {?} */result=analyzeNgModules(programStaticSymbols,host,metadataResolver);if(result.symbolsMissingModule&&result.symbolsMissingModule.length){var/** @type {?} */messages=result.symbolsMissingModule.map(function(s){return'Cannot determine the module for class '+s.name+' in '+s.filePath+'! Add '+s.name+' to the NgModule to fix it.';});throw syntaxError(messages.join('\n'));}return result;}/**
 * @param {?} programSymbols
 * @param {?} ngModuleMetas
 * @param {?} symbolsMissingModule
 * @param {?} metadataResolver
 * @return {?}
 */function _analyzeNgModules(programSymbols,ngModuleMetas,symbolsMissingModule,metadataResolver){var/** @type {?} */moduleMetasByRef=new Map();ngModuleMetas.forEach(function(ngModule){return moduleMetasByRef.set(ngModule.type.reference,ngModule);});var/** @type {?} */ngModuleByPipeOrDirective=new Map();var/** @type {?} */ngModulesByFile=new Map();var/** @type {?} */ngDirectivesByFile=new Map();var/** @type {?} */ngPipesByFile=new Map();var/** @type {?} */ngInjectablesByFile=new Map();var/** @type {?} */filePaths=new Set();// Make sure we produce an analyzed file for each input file
programSymbols.forEach(function(symbol){var/** @type {?} */filePath=symbol.filePath;filePaths.add(filePath);if(metadataResolver.isInjectable(symbol)){ngInjectablesByFile.set(filePath,(ngInjectablesByFile.get(filePath)||[]).concat(symbol));}});// Looping over all modules to construct:
// - a map from file to modules `ngModulesByFile`,
// - a map from file to directives `ngDirectivesByFile`,
// - a map from file to pipes `ngPipesByFile`,
// - a map from directive/pipe to module `ngModuleByPipeOrDirective`.
ngModuleMetas.forEach(function(ngModuleMeta){var/** @type {?} */srcFileUrl=ngModuleMeta.type.reference.filePath;filePaths.add(srcFileUrl);ngModulesByFile.set(srcFileUrl,(ngModulesByFile.get(srcFileUrl)||[]).concat(ngModuleMeta.type.reference));ngModuleMeta.declaredDirectives.forEach(function(dirIdentifier){var/** @type {?} */fileUrl=dirIdentifier.reference.filePath;filePaths.add(fileUrl);ngDirectivesByFile.set(fileUrl,(ngDirectivesByFile.get(fileUrl)||[]).concat(dirIdentifier.reference));ngModuleByPipeOrDirective.set(dirIdentifier.reference,ngModuleMeta);});ngModuleMeta.declaredPipes.forEach(function(pipeIdentifier){var/** @type {?} */fileUrl=pipeIdentifier.reference.filePath;filePaths.add(fileUrl);ngPipesByFile.set(fileUrl,(ngPipesByFile.get(fileUrl)||[]).concat(pipeIdentifier.reference));ngModuleByPipeOrDirective.set(pipeIdentifier.reference,ngModuleMeta);});});var/** @type {?} */files=[];filePaths.forEach(function(srcUrl){var/** @type {?} */directives=ngDirectivesByFile.get(srcUrl)||[];var/** @type {?} */pipes=ngPipesByFile.get(srcUrl)||[];var/** @type {?} */ngModules=ngModulesByFile.get(srcUrl)||[];var/** @type {?} */injectables=ngInjectablesByFile.get(srcUrl)||[];files.push({srcUrl:srcUrl,directives:directives,pipes:pipes,ngModules:ngModules,injectables:injectables});});return{// map directive/pipe to module
ngModuleByPipeOrDirective:ngModuleByPipeOrDirective,// list modules and directives for every source file
files:files,ngModules:ngModuleMetas,symbolsMissingModule:symbolsMissingModule};}/**
 * @param {?} staticSymbolResolver
 * @param {?} files
 * @param {?} host
 * @return {?}
 */function extractProgramSymbols(staticSymbolResolver,files,host){var/** @type {?} */staticSymbols=[];files.filter(function(fileName){return host.isSourceFile(fileName);}).forEach(function(sourceFile){staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function(symbol){var/** @type {?} */resolvedSymbol=staticSymbolResolver.resolveSymbol(symbol);var/** @type {?} */symbolMeta=resolvedSymbol.metadata;if(symbolMeta){if(symbolMeta.__symbolic!='error'){// Ignore symbols that are only included to record error information.
staticSymbols.push(resolvedSymbol.symbol);}}});});return staticSymbols;}/**
 * @param {?} programStaticSymbols
 * @param {?} host
 * @param {?} metadataResolver
 * @return {?}
 */function _createNgModules(programStaticSymbols,host,metadataResolver){var/** @type {?} */ngModules=new Map();var/** @type {?} */programPipesAndDirectives=[];var/** @type {?} */ngModulePipesAndDirective=new Set();var/** @type {?} */addNgModule=function addNgModule(staticSymbol){if(ngModules.has(staticSymbol)||!host.isSourceFile(staticSymbol.filePath)){return false;}var/** @type {?} */ngModule=metadataResolver.getNgModuleMetadata(staticSymbol,false);if(ngModule){ngModules.set(ngModule.type.reference,ngModule);ngModule.declaredDirectives.forEach(function(dir){return ngModulePipesAndDirective.add(dir.reference);});ngModule.declaredPipes.forEach(function(pipe){return ngModulePipesAndDirective.add(pipe.reference);});// For every input module add the list of transitively included modules
ngModule.transitiveModule.modules.forEach(function(modMeta){return addNgModule(modMeta.reference);});}return!!ngModule;};programStaticSymbols.forEach(function(staticSymbol){if(!addNgModule(staticSymbol)&&(metadataResolver.isDirective(staticSymbol)||metadataResolver.isPipe(staticSymbol))){programPipesAndDirectives.push(staticSymbol);}});// Throw an error if any of the program pipe or directives is not declared by a module
var/** @type {?} */symbolsMissingModule=programPipesAndDirectives.filter(function(s){return!ngModulePipesAndDirective.has(s);});return{ngModules:Array.from(ngModules.values()),symbolsMissingModule:symbolsMissingModule};}var StaticAndDynamicReflectionCapabilities=function(){/**
     * @param {?} staticDelegate
     */function StaticAndDynamicReflectionCapabilities(staticDelegate){_classCallCheck(this,StaticAndDynamicReflectionCapabilities);this.staticDelegate=staticDelegate;this.dynamicDelegate=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["_126" /* ɵReflectionCapabilities */]();}/**
     * @param {?} staticDelegate
     * @return {?}
     */_createClass(StaticAndDynamicReflectionCapabilities,[{key:'isReflectionEnabled',/**
     * @return {?}
     */value:function isReflectionEnabled(){return true;}/**
     * @param {?} type
     * @return {?}
     */},{key:'factory',value:function factory(type){return this.dynamicDelegate.factory(type);}/**
     * @param {?} type
     * @param {?} lcProperty
     * @return {?}
     */},{key:'hasLifecycleHook',value:function hasLifecycleHook(type,lcProperty){return isStaticType(type)?this.staticDelegate.hasLifecycleHook(type,lcProperty):this.dynamicDelegate.hasLifecycleHook(type,lcProperty);}/**
     * @param {?} type
     * @return {?}
     */},{key:'parameters',value:function parameters(type){return isStaticType(type)?this.staticDelegate.parameters(type):this.dynamicDelegate.parameters(type);}/**
     * @param {?} type
     * @return {?}
     */},{key:'annotations',value:function annotations(type){return isStaticType(type)?this.staticDelegate.annotations(type):this.dynamicDelegate.annotations(type);}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(typeOrFunc){return isStaticType(typeOrFunc)?this.staticDelegate.propMetadata(typeOrFunc):this.dynamicDelegate.propMetadata(typeOrFunc);}/**
     * @param {?} name
     * @return {?}
     */},{key:'getter',value:function getter(name){return this.dynamicDelegate.getter(name);}/**
     * @param {?} name
     * @return {?}
     */},{key:'setter',value:function setter(name){return this.dynamicDelegate.setter(name);}/**
     * @param {?} name
     * @return {?}
     */},{key:'method',value:function method(name){return this.dynamicDelegate.method(name);}/**
     * @param {?} type
     * @return {?}
     */},{key:'importUri',value:function importUri(type){return this.staticDelegate.importUri(type);}/**
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @param {?} runtime
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members,runtime){return this.staticDelegate.resolveIdentifier(name,moduleUrl,members);}/**
     * @param {?} enumIdentifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(enumIdentifier,name){if(isStaticType(enumIdentifier)){return this.staticDelegate.resolveEnum(enumIdentifier,name);}else{return null;}}}],[{key:'install',value:function install(staticDelegate){__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */].updateCapabilities(new StaticAndDynamicReflectionCapabilities(staticDelegate));}}]);return StaticAndDynamicReflectionCapabilities;}();/**
 * @param {?} type
 * @return {?}
 */function isStaticType(type){return(typeof type==='undefined'?'undefined':_typeof(type))==='object'&&type.name&&type.filePath;}var/** @type {?} */ANGULAR_CORE='@angular/core';var/** @type {?} */HIDDEN_KEY=/^\$.*\$$/;/**
 * A static reflector implements enough of the Reflector API that is necessary to compile
 * templates statically.
 */var StaticReflector=function(){/**
     * @param {?} symbolResolver
     * @param {?=} knownMetadataClasses
     * @param {?=} knownMetadataFunctions
     * @param {?=} errorRecorder
     */function StaticReflector(symbolResolver){var knownMetadataClasses=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var _this234=this;var knownMetadataFunctions=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var errorRecorder=arguments[3];_classCallCheck(this,StaticReflector);this.symbolResolver=symbolResolver;this.errorRecorder=errorRecorder;this.annotationCache=new Map();this.propertyCache=new Map();this.parameterCache=new Map();this.methodCache=new Map();this.conversionMap=new Map();this.initializeConversionMap();knownMetadataClasses.forEach(function(kc){return _this234._registerDecoratorOrConstructor(_this234.getStaticSymbol(kc.filePath,kc.name),kc.ctor);});knownMetadataFunctions.forEach(function(kf){return _this234._registerFunction(_this234.getStaticSymbol(kf.filePath,kf.name),kf.fn);});}/**
     * @param {?} typeOrFunc
     * @return {?}
     */_createClass(StaticReflector,[{key:'importUri',value:function importUri(typeOrFunc){var/** @type {?} */staticSymbol=this.findSymbolDeclaration(typeOrFunc);return staticSymbol?staticSymbol.filePath:null;}/**
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members){var/** @type {?} */importSymbol=this.getStaticSymbol(moduleUrl,name);var/** @type {?} */rootSymbol=this.findDeclaration(moduleUrl,name);if(importSymbol!=rootSymbol){this.symbolResolver.recordImportAs(rootSymbol,importSymbol);}if(members&&members.length){return this.getStaticSymbol(rootSymbol.filePath,rootSymbol.name,members);}return rootSymbol;}/**
     * @param {?} moduleUrl
     * @param {?} name
     * @param {?=} containingFile
     * @return {?}
     */},{key:'findDeclaration',value:function findDeclaration(moduleUrl,name,containingFile){return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl,name,containingFile));}/**
     * @param {?} symbol
     * @return {?}
     */},{key:'findSymbolDeclaration',value:function findSymbolDeclaration(symbol){var/** @type {?} */resolvedSymbol=this.symbolResolver.resolveSymbol(symbol);if(resolvedSymbol&&resolvedSymbol.metadata instanceof StaticSymbol){return this.findSymbolDeclaration(resolvedSymbol.metadata);}else{return symbol;}}/**
     * @param {?} enumIdentifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(enumIdentifier,name){var/** @type {?} */staticSymbol=enumIdentifier;var/** @type {?} */members=(staticSymbol.members||[]).concat(name);return this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name,members);}/**
     * @param {?} type
     * @return {?}
     */},{key:'annotations',value:function annotations(type){var/** @type {?} */annotations=this.annotationCache.get(type);if(!annotations){annotations=[];var/** @type {?} */classMetadata=this.getTypeMetadata(type);if(classMetadata['extends']){var/** @type {?} */parentType=this.trySimplify(type,classMetadata['extends']);if(parentType&&parentType instanceof StaticSymbol){var _annotations;var/** @type {?} */parentAnnotations=this.annotations(parentType);(_annotations=annotations).push.apply(_annotations,_toConsumableArray(parentAnnotations));}}if(classMetadata['decorators']){var _annotations2;var/** @type {?} */ownAnnotations=this.simplify(type,classMetadata['decorators']);(_annotations2=annotations).push.apply(_annotations2,_toConsumableArray(ownAnnotations));}this.annotationCache.set(type,annotations.filter(function(ann){return!!ann;}));}return annotations;}/**
     * @param {?} type
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(type){var _this235=this;var/** @type {?} */propMetadata=this.propertyCache.get(type);if(!propMetadata){var/** @type {?} */classMetadata=this.getTypeMetadata(type);propMetadata={};if(classMetadata['extends']){var/** @type {?} */parentType=this.simplify(type,classMetadata['extends']);if(parentType instanceof StaticSymbol){var/** @type {?} */parentPropMetadata=this.propMetadata(parentType);Object.keys(parentPropMetadata).forEach(function(parentProp){propMetadata[parentProp]=parentPropMetadata[parentProp];});}}var/** @type {?} */members=classMetadata['members']||{};Object.keys(members).forEach(function(propName){var/** @type {?} */propData=members[propName];var/** @type {?} */prop=propData.find(function(a){return a['__symbolic']=='property'||a['__symbolic']=='method';});var/** @type {?} */decorators=[];if(propMetadata[propName]){decorators.push.apply(decorators,_toConsumableArray(propMetadata[propName]));}propMetadata[propName]=decorators;if(prop&&prop['decorators']){decorators.push.apply(decorators,_toConsumableArray(_this235.simplify(type,prop['decorators'])));}});this.propertyCache.set(type,propMetadata);}return propMetadata;}/**
     * @param {?} type
     * @return {?}
     */},{key:'parameters',value:function parameters(type){if(!(type instanceof StaticSymbol)){this.reportError(new Error('parameters received '+JSON.stringify(type)+' which is not a StaticSymbol'),type);return[];}try{var/** @type {?} */parameters=this.parameterCache.get(type);if(!parameters){var/** @type {?} */classMetadata=this.getTypeMetadata(type);var/** @type {?} */members=classMetadata?classMetadata['members']:null;var/** @type {?} */ctorData=members?members['__ctor__']:null;if(ctorData){var/** @type {?} */ctor=ctorData.find(function(a){return a['__symbolic']=='constructor';});var/** @type {?} */parameterTypes=this.simplify(type,ctor['parameters']||[]);var/** @type {?} */parameterDecorators=this.simplify(type,ctor['parameterDecorators']||[]);parameters=[];parameterTypes.forEach(function(paramType,index){var/** @type {?} */nestedResult=[];if(paramType){nestedResult.push(paramType);}var/** @type {?} */decorators=parameterDecorators?parameterDecorators[index]:null;if(decorators){nestedResult.push.apply(nestedResult,_toConsumableArray(decorators));}parameters.push(nestedResult);});}else if(classMetadata['extends']){var/** @type {?} */parentType=this.simplify(type,classMetadata['extends']);if(parentType instanceof StaticSymbol){parameters=this.parameters(parentType);}}if(!parameters){parameters=[];}this.parameterCache.set(type,parameters);}return parameters;}catch(e){console.error('Failed on type '+JSON.stringify(type)+' with error '+e);throw e;}}/**
     * @param {?} type
     * @return {?}
     */},{key:'_methodNames',value:function _methodNames(type){var/** @type {?} */methodNames=this.methodCache.get(type);if(!methodNames){var/** @type {?} */classMetadata=this.getTypeMetadata(type);methodNames={};if(classMetadata['extends']){var/** @type {?} */parentType=this.simplify(type,classMetadata['extends']);if(parentType instanceof StaticSymbol){var/** @type {?} */parentMethodNames=this._methodNames(parentType);Object.keys(parentMethodNames).forEach(function(parentProp){methodNames[parentProp]=parentMethodNames[parentProp];});}}var/** @type {?} */members=classMetadata['members']||{};Object.keys(members).forEach(function(propName){var/** @type {?} */propData=members[propName];var/** @type {?} */isMethod=propData.some(function(a){return a['__symbolic']=='method';});methodNames[propName]=methodNames[propName]||isMethod;});this.methodCache.set(type,methodNames);}return methodNames;}/**
     * @param {?} type
     * @param {?} lcProperty
     * @return {?}
     */},{key:'hasLifecycleHook',value:function hasLifecycleHook(type,lcProperty){if(!(type instanceof StaticSymbol)){this.reportError(new Error('hasLifecycleHook received '+JSON.stringify(type)+' which is not a StaticSymbol'),type);}try{return!!this._methodNames(type)[lcProperty];}catch(e){console.error('Failed on type '+JSON.stringify(type)+' with error '+e);throw e;}}/**
     * @param {?} type
     * @param {?} ctor
     * @return {?}
     */},{key:'_registerDecoratorOrConstructor',value:function _registerDecoratorOrConstructor(type,ctor){this.conversionMap.set(type,function(context,args){return new(Function.prototype.bind.apply(ctor,[null].concat(_toConsumableArray(args))))();});}/**
     * @param {?} type
     * @param {?} fn
     * @return {?}
     */},{key:'_registerFunction',value:function _registerFunction(type,fn){this.conversionMap.set(type,function(context,args){return fn.apply(undefined,args);});}/**
     * @return {?}
     */},{key:'initializeConversionMap',value:function initializeConversionMap(){this.injectionToken=this.findDeclaration(ANGULAR_CORE,'InjectionToken');this.opaqueToken=this.findDeclaration(ANGULAR_CORE,'OpaqueToken');this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Injectable'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Inject'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Attribute'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChild'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["F" /* ContentChild */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChildren'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChild'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChildren'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_127" /* ViewChildren */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Input'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Output'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Pipe'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_8" /* Pipe */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostBinding'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostListener'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* HostListener */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Directive'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Component'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'NgModule'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */]);// Note: Some metadata classes can be used directly with Provider.deps.
this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */]);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'trigger'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_128" /* trigger */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'state'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_129" /* state */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'transition'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_130" /* transition */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'style'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_131" /* style */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'animate'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_132" /* animate */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'keyframes'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_133" /* keyframes */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'sequence'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_134" /* sequence */]);this._registerFunction(this.findDeclaration(ANGULAR_CORE,'group'),__WEBPACK_IMPORTED_MODULE_0__angular_core__["_135" /* group */]);}/**
     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
     * All types passed to the StaticResolver should be pseudo-types returned by this method.
     *
     * @param {?} declarationFile the absolute path of the file where the symbol is declared
     * @param {?} name the name of the type.
     * @param {?=} members
     * @return {?}
     */},{key:'getStaticSymbol',value:function getStaticSymbol(declarationFile,name,members){return this.symbolResolver.getStaticSymbol(declarationFile,name,members);}/**
     * @param {?} error
     * @param {?} context
     * @param {?=} path
     * @return {?}
     */},{key:'reportError',value:function reportError(error,context,path){if(this.errorRecorder){this.errorRecorder(error,context&&context.filePath||path);}else{throw error;}}/**
     * Simplify but discard any errors
     * @param {?} context
     * @param {?} value
     * @return {?}
     */},{key:'trySimplify',value:function trySimplify(context,value){var/** @type {?} */originalRecorder=this.errorRecorder;this.errorRecorder=function(error,fileName){};var/** @type {?} */result=this.simplify(context,value);this.errorRecorder=originalRecorder;return result;}/**
     * \@internal
     * @param {?} context
     * @param {?} value
     * @return {?}
     */},{key:'simplify',value:function simplify(context,value){var _this236=this;var/** @type {?} */self=this;var/** @type {?} */scope=BindingScope.empty;var/** @type {?} */calling=new Map();/**
         * @param {?} context
         * @param {?} value
         * @param {?} depth
         * @return {?}
         */function simplifyInContext(context,value,depth){/**
             * @param {?} staticSymbol
             * @return {?}
             */function resolveReferenceValue(staticSymbol){var/** @type {?} */resolvedSymbol=self.symbolResolver.resolveSymbol(staticSymbol);return resolvedSymbol?resolvedSymbol.metadata:null;}/**
             * @param {?} functionSymbol
             * @param {?} targetFunction
             * @param {?} args
             * @return {?}
             */function simplifyCall(functionSymbol,targetFunction,args){if(targetFunction&&targetFunction['__symbolic']=='function'){if(calling.get(functionSymbol)){throw new Error('Recursion not supported');}calling.set(functionSymbol,true);try{var/** @type {?} */_value=targetFunction['value'];if(_value&&(depth!=0||_value.__symbolic!='error')){var/** @type {?} */parameters=targetFunction['parameters'];var/** @type {?} */defaults=targetFunction.defaults;args=args.map(function(arg){return simplifyInContext(context,arg,depth+1);});if(defaults&&defaults.length>args.length){var _args;(_args=args).push.apply(_args,_toConsumableArray(defaults.slice(args.length).map(function(value){return simplify(value);})));}var/** @type {?} */functionScope=BindingScope.build();for(var/** @type {?} */i=0;i<parameters.length;i++){functionScope.define(parameters[i],args[i]);}var/** @type {?} */oldScope=scope;var/** @type {?} */_result=void 0;try{scope=functionScope.done();_result=simplifyInContext(functionSymbol,_value,depth+1);}finally{scope=oldScope;}return _result;}}finally{calling.delete(functionSymbol);}}if(depth===0){// If depth is 0 we are evaluating the top level expression that is describing element
// decorator. In this case, it is a decorator we don't understand, such as a custom
// non-angular decorator, and we should just ignore it.
return{__symbolic:'ignore'};}return simplify({__symbolic:'error',message:'Function call not supported',context:functionSymbol});}/**
             * @param {?} expression
             * @return {?}
             */function simplify(expression){if(isPrimitive$1(expression)){return expression;}if(expression instanceof Array){var/** @type {?} */_result2=[];var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=expression[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var item=_step5.value;// Check for a spread expression
if(item&&item.__symbolic==='spread'){var/** @type {?} */spreadArray=simplify(item.expression);if(Array.isArray(spreadArray)){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=spreadArray[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var spreadItem=_step6.value;_result2.push(spreadItem);}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}continue;}}var/** @type {?} */_value2=simplify(item);if(shouldIgnore(_value2)){continue;}_result2.push(_value2);}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return _result2;}if(expression instanceof StaticSymbol){// Stop simplification at builtin symbols
if(expression===self.injectionToken||expression===self.opaqueToken||self.conversionMap.has(expression)){return expression;}else{var/** @type {?} */staticSymbol=expression;var/** @type {?} */declarationValue=resolveReferenceValue(staticSymbol);if(declarationValue){return simplifyInContext(staticSymbol,declarationValue,depth+1);}else{return staticSymbol;}}}if(expression){if(expression['__symbolic']){var/** @type {?} */_staticSymbol=void 0;switch(expression['__symbolic']){case'binop':var/** @type {?} */left=simplify(expression['left']);if(shouldIgnore(left))return left;var/** @type {?} */right=simplify(expression['right']);if(shouldIgnore(right))return right;switch(expression['operator']){case'&&':return left&&right;case'||':return left||right;case'|':return left|right;case'^':return left^right;case'&':return left&right;case'==':return left==right;case'!=':return left!=right;case'===':return left===right;case'!==':return left!==right;case'<':return left<right;case'>':return left>right;case'<=':return left<=right;case'>=':return left>=right;case'<<':return left<<right;case'>>':return left>>right;case'+':return left+right;case'-':return left-right;case'*':return left*right;case'/':return left/right;case'%':return left%right;}return null;case'if':var/** @type {?} */condition=simplify(expression['condition']);return condition?simplify(expression['thenExpression']):simplify(expression['elseExpression']);case'pre':var/** @type {?} */operand=simplify(expression['operand']);if(shouldIgnore(operand))return operand;switch(expression['operator']){case'+':return operand;case'-':return-operand;case'!':return!operand;case'~':return~operand;}return null;case'index':var/** @type {?} */indexTarget=simplify(expression['expression']);var/** @type {?} */index=simplify(expression['index']);if(indexTarget&&isPrimitive$1(index))return indexTarget[index];return null;case'select':var/** @type {?} */member=expression['member'];var/** @type {?} */selectContext=context;var/** @type {?} */selectTarget=simplify(expression['expression']);if(selectTarget instanceof StaticSymbol){var/** @type {?} */members=selectTarget.members.concat(member);selectContext=self.getStaticSymbol(selectTarget.filePath,selectTarget.name,members);var/** @type {?} */_declarationValue=resolveReferenceValue(selectContext);if(_declarationValue){return simplifyInContext(selectContext,_declarationValue,depth+1);}else{return selectContext;}}if(selectTarget&&isPrimitive$1(member))return simplifyInContext(selectContext,selectTarget[member],depth+1);return null;case'reference':// Note: This only has to deal with variable references,
// as symbol references have been converted into StaticSymbols already
// in the StaticSymbolResolver!
var/** @type {?} */name=expression['name'];var/** @type {?} */localValue=scope.resolve(name);if(localValue!=BindingScope.missing){return localValue;}break;case'class':return context;case'function':return context;case'new':case'call':// Determine if the function is a built-in conversion
_staticSymbol=simplifyInContext(context,expression['expression'],depth+1);if(_staticSymbol instanceof StaticSymbol){if(_staticSymbol===self.injectionToken||_staticSymbol===self.opaqueToken){// if somebody calls new InjectionToken, don't create an InjectionToken,
// but rather return the symbol to which the InjectionToken is assigned to.
return context;}var/** @type {?} */argExpressions=expression['arguments']||[];var/** @type {?} */converter=self.conversionMap.get(_staticSymbol);if(converter){var/** @type {?} */args=argExpressions.map(function(arg){return simplifyInContext(context,arg,depth+1);});return converter(context,args);}else{// Determine if the function is one we can simplify.
var/** @type {?} */targetFunction=resolveReferenceValue(_staticSymbol);return simplifyCall(_staticSymbol,targetFunction,argExpressions);}}break;case'error':var/** @type {?} */message=produceErrorMessage(expression);if(expression['line']){message=message+' (position '+(expression['line']+1)+':'+(expression['character']+1)+' in the original .ts file)';throw positionalError(message,context.filePath,expression['line'],expression['character']);}throw new Error(message);}return null;}return mapStringMap(expression,function(value,name){return simplify(value);});}return null;}try{return simplify(value);}catch(e){var/** @type {?} */members=context.members.length?'.'+context.members.join('.'):'';var/** @type {?} */message=e.message+', resolving symbol '+context.name+members+' in '+context.filePath;if(e.fileName){throw positionalError(message,e.fileName,e.line,e.column);}throw syntaxError(message);}}var/** @type {?} */recordedSimplifyInContext=function recordedSimplifyInContext(context,value,depth){try{return simplifyInContext(context,value,depth);}catch(e){_this236.reportError(e,context);}};var/** @type {?} */result=this.errorRecorder?recordedSimplifyInContext(context,value,0):simplifyInContext(context,value,0);if(shouldIgnore(result)){return undefined;}return result;}/**
     * @param {?} type
     * @return {?}
     */},{key:'getTypeMetadata',value:function getTypeMetadata(type){var/** @type {?} */resolvedSymbol=this.symbolResolver.resolveSymbol(type);return resolvedSymbol&&resolvedSymbol.metadata?resolvedSymbol.metadata:{__symbolic:'class'};}}]);return StaticReflector;}();/**
 * @param {?} error
 * @return {?}
 */function expandedMessage(error){switch(error.message){case'Reference to non-exported class':if(error.context&&error.context.className){return'Reference to a non-exported class '+error.context.className+'. Consider exporting the class';}break;case'Variable not initialized':return'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';case'Destructuring not supported':return'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';case'Could not resolve type':if(error.context&&error.context.typeName){return'Could not resolve type '+error.context.typeName;}break;case'Function call not supported':var/** @type {?} */prefix=error.context&&error.context.name?'Calling function \''+error.context.name+'\', f':'F';return prefix+'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';case'Reference to a local symbol':if(error.context&&error.context.name){return'Reference to a local (non-exported) symbol \''+error.context.name+'\'. Consider exporting the symbol';}break;}return error.message;}/**
 * @param {?} error
 * @return {?}
 */function produceErrorMessage(error){return'Error encountered resolving symbol values statically. '+expandedMessage(error);}/**
 * @param {?} input
 * @param {?} transform
 * @return {?}
 */function mapStringMap(input,transform){if(!input)return{};var/** @type {?} */result={};Object.keys(input).forEach(function(key){var/** @type {?} */value=transform(input[key],key);if(!shouldIgnore(value)){if(HIDDEN_KEY.test(key)){Object.defineProperty(result,key,{enumerable:false,configurable:true,value:value});}else{result[key]=value;}}});return result;}/**
 * @param {?} o
 * @return {?}
 */function isPrimitive$1(o){return o===null||typeof o!=='function'&&(typeof o==='undefined'?'undefined':_typeof(o))!=='object';}/**
 * @abstract
 */var BindingScope=function(){function BindingScope(){_classCallCheck(this,BindingScope);}_createClass(BindingScope,[{key:'resolve',/**
     * @abstract
     * @param {?} name
     * @return {?}
     */value:function resolve(name){}/**
     * @return {?}
     */}],[{key:'build',value:function build(){var/** @type {?} */current=new Map();return{define:function define(name,value){current.set(name,value);return this;},done:function done(){return current.size>0?new PopulatedScope(current):BindingScope.empty;}};}}]);return BindingScope;}();BindingScope.missing={};BindingScope.empty={resolve:function resolve(name){return BindingScope.missing;}};var PopulatedScope=function(_BindingScope){_inherits(PopulatedScope,_BindingScope);/**
     * @param {?} bindings
     */function PopulatedScope(bindings){_classCallCheck(this,PopulatedScope);var _this237=_possibleConstructorReturn(this,(PopulatedScope.__proto__||Object.getPrototypeOf(PopulatedScope)).call(this));_this237.bindings=bindings;return _this237;}/**
     * @param {?} name
     * @return {?}
     */_createClass(PopulatedScope,[{key:'resolve',value:function resolve(name){return this.bindings.has(name)?this.bindings.get(name):BindingScope.missing;}}]);return PopulatedScope;}(BindingScope);/**
 * @param {?} value
 * @return {?}
 */function shouldIgnore(value){return value&&value.__symbolic=='ignore';}/**
 * @param {?} message
 * @param {?} fileName
 * @param {?} line
 * @param {?} column
 * @return {?}
 */function positionalError(message,fileName,line,column){var/** @type {?} */result=new Error(message);result.fileName=fileName;result.line=line;result.column=column;return result;}var ResolvedStaticSymbol=/**
     * @param {?} symbol
     * @param {?} metadata
     */function ResolvedStaticSymbol(symbol,metadata){_classCallCheck(this,ResolvedStaticSymbol);this.symbol=symbol;this.metadata=metadata;};var/** @type {?} */SUPPORTED_SCHEMA_VERSION=3;/**
 * This class is responsible for loading metadata per symbol,
 * and normalizing references between symbols.
 *
 * Internally, it only uses symbols without members,
 * and deduces the values for symbols with members based
 * on these symbols.
 */var StaticSymbolResolver=function(){/**
     * @param {?} host
     * @param {?} staticSymbolCache
     * @param {?} summaryResolver
     * @param {?=} errorRecorder
     */function StaticSymbolResolver(host,staticSymbolCache,summaryResolver,errorRecorder){_classCallCheck(this,StaticSymbolResolver);this.host=host;this.staticSymbolCache=staticSymbolCache;this.summaryResolver=summaryResolver;this.errorRecorder=errorRecorder;this.metadataCache=new Map();this.resolvedSymbols=new Map();this.resolvedFilePaths=new Set();this.importAs=new Map();}/**
     * @param {?} staticSymbol
     * @return {?}
     */_createClass(StaticSymbolResolver,[{key:'resolveSymbol',value:function resolveSymbol(staticSymbol){if(staticSymbol.members.length>0){return this._resolveSymbolMembers(staticSymbol);}var/** @type {?} */result=this.resolvedSymbols.get(staticSymbol);if(result){return result;}result=this._resolveSymbolFromSummary(staticSymbol);if(result){return result;}// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files. So we always need to check both, the summary
// and metadata.
this._createSymbolsOf(staticSymbol.filePath);result=this.resolvedSymbols.get(staticSymbol);return result;}/**
     * getImportAs produces a symbol that can be used to import the given symbol.
     * The import might be different than the symbol if the symbol is exported from
     * a library with a summary; in which case we want to import the symbol from the
     * ngfactory re-export instead of directly to avoid introducing a direct dependency
     * on an otherwise indirect dependency.
     *
     * @param {?} staticSymbol the symbol for which to generate a import symbol
     * @return {?}
     */},{key:'getImportAs',value:function getImportAs(staticSymbol){if(staticSymbol.members.length){var/** @type {?} */baseSymbol=this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name);var/** @type {?} */baseImportAs=this.getImportAs(baseSymbol);return baseImportAs?this.getStaticSymbol(baseImportAs.filePath,baseImportAs.name,staticSymbol.members):null;}var/** @type {?} */result=this.summaryResolver.getImportAs(staticSymbol);if(!result){result=this.importAs.get(staticSymbol);}return result;}/**
     * getTypeArity returns the number of generic type parameters the given symbol
     * has. If the symbol is not a type the result is null.
     * @param {?} staticSymbol
     * @return {?}
     */},{key:'getTypeArity',value:function getTypeArity(staticSymbol){// If the file is a factory file, don't resolve the symbol as doing so would
// cause the metadata for an factory file to be loaded which doesn't exist.
// All references to generated classes must include the correct arity whenever
// generating code.
if(isNgFactoryFile(staticSymbol.filePath)){return null;}var/** @type {?} */resolvedSymbol=this.resolveSymbol(staticSymbol);while(resolvedSymbol&&resolvedSymbol.metadata instanceof StaticSymbol){resolvedSymbol=this.resolveSymbol(resolvedSymbol.metadata);}return resolvedSymbol&&resolvedSymbol.metadata&&resolvedSymbol.metadata.arity||null;}/**
     * @param {?} sourceSymbol
     * @param {?} targetSymbol
     * @return {?}
     */},{key:'recordImportAs',value:function recordImportAs(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();this.importAs.set(sourceSymbol,targetSymbol);}/**
     * @param {?} staticSymbol
     * @return {?}
     */},{key:'_resolveSymbolMembers',value:function _resolveSymbolMembers(staticSymbol){var/** @type {?} */members=staticSymbol.members;var/** @type {?} */baseResolvedSymbol=this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name));if(!baseResolvedSymbol){return null;}var/** @type {?} */baseMetadata=baseResolvedSymbol.metadata;if(baseMetadata instanceof StaticSymbol){return new ResolvedStaticSymbol(staticSymbol,this.getStaticSymbol(baseMetadata.filePath,baseMetadata.name,members));}else if(baseMetadata&&baseMetadata.__symbolic==='class'){if(baseMetadata.statics&&members.length===1){return new ResolvedStaticSymbol(staticSymbol,baseMetadata.statics[members[0]]);}}else{var/** @type {?} */value=baseMetadata;for(var/** @type {?} */i=0;i<members.length&&value;i++){value=value[members[i]];}return new ResolvedStaticSymbol(staticSymbol,value);}return null;}/**
     * @param {?} staticSymbol
     * @return {?}
     */},{key:'_resolveSymbolFromSummary',value:function _resolveSymbolFromSummary(staticSymbol){var/** @type {?} */summary=this.summaryResolver.resolveSummary(staticSymbol);return summary?new ResolvedStaticSymbol(staticSymbol,summary.metadata):null;}/**
     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
     * All types passed to the StaticResolver should be pseudo-types returned by this method.
     *
     * @param {?} declarationFile the absolute path of the file where the symbol is declared
     * @param {?} name the name of the type.
     * @param {?=} members a symbol for a static member of the named type
     * @return {?}
     */},{key:'getStaticSymbol',value:function getStaticSymbol(declarationFile,name,members){return this.staticSymbolCache.get(declarationFile,name,members);}/**
     * @param {?} filePath
     * @return {?}
     */},{key:'getSymbolsOf',value:function getSymbolsOf(filePath){// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files. So we always need to check both, the summary
// and metadata.
var/** @type {?} */symbols=new Set(this.summaryResolver.getSymbolsOf(filePath));this._createSymbolsOf(filePath);this.resolvedSymbols.forEach(function(resolvedSymbol){if(resolvedSymbol.symbol.filePath===filePath){symbols.add(resolvedSymbol.symbol);}});return Array.from(symbols);}/**
     * @param {?} filePath
     * @return {?}
     */},{key:'_createSymbolsOf',value:function _createSymbolsOf(filePath){var _this238=this;if(this.resolvedFilePaths.has(filePath)){return;}this.resolvedFilePaths.add(filePath);var/** @type {?} */resolvedSymbols=[];var/** @type {?} */metadata=this.getModuleMetadata(filePath);if(metadata['metadata']){// handle direct declarations of the symbol
var/** @type {?} */topLevelSymbolNames=new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));Object.keys(metadata['metadata']).forEach(function(metadataKey){var/** @type {?} */symbolMeta=metadata['metadata'][metadataKey];var/** @type {?} */name=unescapeIdentifier(metadataKey);var/** @type {?} */canonicalSymbol=_this238.getStaticSymbol(filePath,name);if(metadata['importAs']){// Index bundle indexes should use the importAs module name instead of a reference
// to the .d.ts file directly.
var/** @type {?} */importSymbol=_this238.getStaticSymbol(metadata['importAs'],name);_this238.recordImportAs(canonicalSymbol,importSymbol);}resolvedSymbols.push(_this238.createResolvedSymbol(canonicalSymbol,topLevelSymbolNames,symbolMeta));});}// handle the symbols in one of the re-export location
if(metadata['exports']){var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{var _loop3=function _loop3(){var moduleExport=_step7.value;// handle the symbols in the list of explicitly re-exported symbols.
if(moduleExport.export){moduleExport.export.forEach(function(exportSymbol){var/** @type {?} */symbolName=void 0;if(typeof exportSymbol==='string'){symbolName=exportSymbol;}else{symbolName=exportSymbol.as;}symbolName=unescapeIdentifier(symbolName);var/** @type {?} */symName=symbolName;if(typeof exportSymbol!=='string'){symName=unescapeIdentifier(exportSymbol.name);}var/** @type {?} */resolvedModule=_this238.resolveModule(moduleExport.from,filePath);if(resolvedModule){var/** @type {?} */targetSymbol=_this238.getStaticSymbol(resolvedModule,symName);var/** @type {?} */sourceSymbol=_this238.getStaticSymbol(filePath,symbolName);resolvedSymbols.push(_this238.createExport(sourceSymbol,targetSymbol));}});}else{// handle the symbols via export * directives.
var/** @type {?} */resolvedModule=_this238.resolveModule(moduleExport.from,filePath);if(resolvedModule){var/** @type {?} */nestedExports=_this238.getSymbolsOf(resolvedModule);nestedExports.forEach(function(targetSymbol){var/** @type {?} */sourceSymbol=_this238.getStaticSymbol(filePath,targetSymbol.name);resolvedSymbols.push(_this238.createExport(sourceSymbol,targetSymbol));});}}};for(var _iterator7=metadata['exports'][Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){_loop3();}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}}resolvedSymbols.forEach(function(resolvedSymbol){return _this238.resolvedSymbols.set(resolvedSymbol.symbol,resolvedSymbol);});}/**
     * @param {?} sourceSymbol
     * @param {?} topLevelSymbolNames
     * @param {?} metadata
     * @return {?}
     */},{key:'createResolvedSymbol',value:function createResolvedSymbol(sourceSymbol,topLevelSymbolNames,metadata){var/** @type {?} */self=this;var ReferenceTransformer=function(_ValueTransformer4){_inherits(ReferenceTransformer,_ValueTransformer4);function ReferenceTransformer(){_classCallCheck(this,ReferenceTransformer);return _possibleConstructorReturn(this,(ReferenceTransformer.__proto__||Object.getPrototypeOf(ReferenceTransformer)).apply(this,arguments));}_createClass(ReferenceTransformer,[{key:'visitStringMap',/**
             * @param {?} map
             * @param {?} functionParams
             * @return {?}
             */value:function visitStringMap(map,functionParams){var/** @type {?} */symbolic=map['__symbolic'];if(symbolic==='function'){var/** @type {?} */oldLen=functionParams.length;functionParams.push.apply(functionParams,_toConsumableArray(map['parameters']||[]));var/** @type {?} */result=_get(ReferenceTransformer.prototype.__proto__||Object.getPrototypeOf(ReferenceTransformer.prototype),'visitStringMap',this).call(this,map,functionParams);functionParams.length=oldLen;return result;}else if(symbolic==='reference'){var/** @type {?} */module=map['module'];var/** @type {?} */name=map['name']?unescapeIdentifier(map['name']):map['name'];if(!name){return null;}var/** @type {?} */filePath=void 0;if(module){filePath=self.resolveModule(module,sourceSymbol.filePath);if(!filePath){return{__symbolic:'error',message:'Could not resolve '+module+' relative to '+sourceSymbol.filePath+'.'};}return self.getStaticSymbol(filePath,name);}else if(functionParams.indexOf(name)>=0){// reference to a function parameter
return{__symbolic:'reference',name:name};}else{if(topLevelSymbolNames.has(name)){return self.getStaticSymbol(sourceSymbol.filePath,name);}// ambient value
null;}}else{return _get(ReferenceTransformer.prototype.__proto__||Object.getPrototypeOf(ReferenceTransformer.prototype),'visitStringMap',this).call(this,map,functionParams);}}}]);return ReferenceTransformer;}(ValueTransformer);var/** @type {?} */transformedMeta=visitValue(metadata,new ReferenceTransformer(),[]);if(transformedMeta instanceof StaticSymbol){return this.createExport(sourceSymbol,transformedMeta);}return new ResolvedStaticSymbol(sourceSymbol,transformedMeta);}/**
     * @param {?} sourceSymbol
     * @param {?} targetSymbol
     * @return {?}
     */},{key:'createExport',value:function createExport(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();if(this.summaryResolver.isLibraryFile(sourceSymbol.filePath)){// This case is for an ng library importing symbols from a plain ts library
// transitively.
// Note: We rely on the fact that we discover symbols in the direction
// from source files to library files
this.importAs.set(targetSymbol,this.getImportAs(sourceSymbol)||sourceSymbol);}return new ResolvedStaticSymbol(sourceSymbol,targetSymbol);}/**
     * @param {?} error
     * @param {?} context
     * @param {?=} path
     * @return {?}
     */},{key:'reportError',value:function reportError(error,context,path){if(this.errorRecorder){this.errorRecorder(error,context&&context.filePath||path);}else{throw error;}}/**
     * @param {?} module an absolute path to a module file.
     * @return {?}
     */},{key:'getModuleMetadata',value:function getModuleMetadata(module){var/** @type {?} */moduleMetadata=this.metadataCache.get(module);if(!moduleMetadata){var/** @type {?} */moduleMetadatas=this.host.getMetadataFor(module);if(moduleMetadatas){var/** @type {?} */maxVersion=-1;moduleMetadatas.forEach(function(md){if(md['version']>maxVersion){maxVersion=md['version'];moduleMetadata=md;}});}if(!moduleMetadata){moduleMetadata={__symbolic:'module',version:SUPPORTED_SCHEMA_VERSION,module:module,metadata:{}};}if(moduleMetadata['version']!=SUPPORTED_SCHEMA_VERSION){var/** @type {?} */errorMessage=moduleMetadata['version']==2?'Unsupported metadata version '+moduleMetadata['version']+' for module '+module+'. This module should be compiled with a newer version of ngc':'Metadata version mismatch for module '+module+', found version '+moduleMetadata['version']+', expected '+SUPPORTED_SCHEMA_VERSION;this.reportError(new Error(errorMessage),null);}this.metadataCache.set(module,moduleMetadata);}return moduleMetadata;}/**
     * @param {?} module
     * @param {?} symbolName
     * @param {?=} containingFile
     * @return {?}
     */},{key:'getSymbolByModule',value:function getSymbolByModule(module,symbolName,containingFile){var/** @type {?} */filePath=this.resolveModule(module,containingFile);if(!filePath){this.reportError(new Error('Could not resolve module '+module+(containingFile?' relative to $ {\n            containingFile\n          } ':'')),null);return this.getStaticSymbol('ERROR:'+module,symbolName);}return this.getStaticSymbol(filePath,symbolName);}/**
     * @param {?} module
     * @param {?} containingFile
     * @return {?}
     */},{key:'resolveModule',value:function resolveModule(module,containingFile){try{return this.host.moduleNameToFileName(module,containingFile);}catch(e){console.error('Could not resolve module \''+module+'\' relative to file '+containingFile);this.reportError(e,null,containingFile);}}}]);return StaticSymbolResolver;}();/**
 * @param {?} identifier
 * @return {?}
 */function unescapeIdentifier(identifier){return identifier.startsWith('___')?identifier.substr(1):identifier;}var AotSummaryResolver=function(){/**
     * @param {?} host
     * @param {?} staticSymbolCache
     */function AotSummaryResolver(host,staticSymbolCache){_classCallCheck(this,AotSummaryResolver);this.host=host;this.staticSymbolCache=staticSymbolCache;this.summaryCache=new Map();this.loadedFilePaths=new Set();this.importAs=new Map();}/**
     * @param {?} filePath
     * @return {?}
     */_createClass(AotSummaryResolver,[{key:'isLibraryFile',value:function isLibraryFile(filePath){// Note: We need to strip the .ngfactory. file path,
// so this method also works for generated files
// (for which host.isSourceFile will always return false).
return!this.host.isSourceFile(stripNgFactory(filePath));}/**
     * @param {?} filePath
     * @return {?}
     */},{key:'getLibraryFileName',value:function getLibraryFileName(filePath){return this.host.getOutputFileName(filePath);}/**
     * @param {?} staticSymbol
     * @return {?}
     */},{key:'resolveSummary',value:function resolveSummary(staticSymbol){staticSymbol.assertNoMembers();var/** @type {?} */summary=this.summaryCache.get(staticSymbol);if(!summary){this._loadSummaryFile(staticSymbol.filePath);summary=this.summaryCache.get(staticSymbol);}return summary;}/**
     * @param {?} filePath
     * @return {?}
     */},{key:'getSymbolsOf',value:function getSymbolsOf(filePath){this._loadSummaryFile(filePath);return Array.from(this.summaryCache.keys()).filter(function(symbol){return symbol.filePath===filePath;});}/**
     * @param {?} staticSymbol
     * @return {?}
     */},{key:'getImportAs',value:function getImportAs(staticSymbol){staticSymbol.assertNoMembers();return this.importAs.get(staticSymbol);}/**
     * @param {?} filePath
     * @return {?}
     */},{key:'_loadSummaryFile',value:function _loadSummaryFile(filePath){var _this240=this;if(this.loadedFilePaths.has(filePath)){return;}this.loadedFilePaths.add(filePath);if(this.isLibraryFile(filePath)){var/** @type {?} */summaryFilePath=summaryFileName(filePath);var/** @type {?} */json=void 0;try{json=this.host.loadSummary(summaryFilePath);}catch(e){console.error('Error loading summary file '+summaryFilePath);throw e;}if(json){var _deserializeSummaries=deserializeSummaries(this.staticSymbolCache,json),summaries=_deserializeSummaries.summaries,importAs=_deserializeSummaries.importAs;summaries.forEach(function(summary){return _this240.summaryCache.set(summary.symbol,summary);});importAs.forEach(function(importAs){_this240.importAs.set(importAs.symbol,_this240.staticSymbolCache.get(ngfactoryFilePath(filePath),importAs.importAs));});}}}}]);return AotSummaryResolver;}();/**
 * Creates a new AotCompiler based on options and a host.
 * @param {?} compilerHost
 * @param {?} options
 * @return {?}
 */function createAotCompiler(compilerHost,options){var/** @type {?} */translations=options.translations||'';var/** @type {?} */urlResolver=createOfflineCompileUrlResolver();var/** @type {?} */symbolCache=new StaticSymbolCache();var/** @type {?} */summaryResolver=new AotSummaryResolver(compilerHost,symbolCache);var/** @type {?} */symbolResolver=new StaticSymbolResolver(compilerHost,symbolCache,summaryResolver);var/** @type {?} */staticReflector=new StaticReflector(symbolResolver);StaticAndDynamicReflectionCapabilities.install(staticReflector);var/** @type {?} */console=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["_101" /* ɵConsole */]();var/** @type {?} */htmlParser=new I18NHtmlParser(new HtmlParser(),translations,options.i18nFormat,__WEBPACK_IMPORTED_MODULE_0__angular_core__["_100" /* MissingTranslationStrategy */].Warning,console);var/** @type {?} */config=new CompilerConfig({genDebugInfo:options.debug===true,defaultEncapsulation:__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].Emulated,logBindingUpdate:false,useJit:false,useViewEngine:options.useViewEngine,enableLegacyTemplate:options.enableLegacyTemplate!==false});var/** @type {?} */normalizer=new DirectiveNormalizer({get:function get(url){return compilerHost.loadResource(url);}},urlResolver,htmlParser,config);var/** @type {?} */expressionParser=new Parser(new Lexer());var/** @type {?} */elementSchemaRegistry=new DomElementSchemaRegistry();var/** @type {?} */tmplParser=new TemplateParser(config,expressionParser,elementSchemaRegistry,htmlParser,console,[]);var/** @type {?} */resolver=new CompileMetadataResolver(config,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,symbolCache,staticReflector);// TODO(vicb): do not pass options.i18nFormat here
var/** @type {?} */importResolver={getImportAs:function getImportAs(symbol){return symbolResolver.getImportAs(symbol);},fileNameToModuleName:function fileNameToModuleName(fileName,containingFilePath){return compilerHost.fileNameToModuleName(fileName,containingFilePath);},getTypeArity:function getTypeArity(symbol){return symbolResolver.getTypeArity(symbol);}};var/** @type {?} */viewCompiler=config.useViewEngine?new ViewCompilerNext(config,elementSchemaRegistry):new ViewCompiler(config,elementSchemaRegistry);var/** @type {?} */compiler=new AotCompiler(config,compilerHost,resolver,tmplParser,new StyleCompiler(urlResolver),viewCompiler,new DirectiveWrapperCompiler(config,expressionParser,elementSchemaRegistry,console),new NgModuleCompiler(),new TypeScriptEmitter(importResolver),summaryResolver,options.locale,options.i18nFormat,new AnimationParser(elementSchemaRegistry),symbolResolver);return{compiler:compiler,reflector:staticReflector};}/**
 * @param {?} statements
 * @param {?} resultVars
 * @return {?}
 */function interpretStatements(statements,resultVars){var/** @type {?} */stmtsWithReturn=statements.concat([new ReturnStatement(literalArr(resultVars.map(function(resultVar){return variable(resultVar);})))]);var/** @type {?} */ctx=new _ExecutionContext(null,null,null,new Map());var/** @type {?} */visitor=new StatementInterpreter();var/** @type {?} */result=visitor.visitAllStatements(stmtsWithReturn,ctx);return isPresent(result)?result.value:null;}/**
 * @param {?} varNames
 * @param {?} varValues
 * @param {?} statements
 * @param {?} ctx
 * @param {?} visitor
 * @return {?}
 */function _executeFunctionStatements(varNames,varValues,statements,ctx,visitor){var/** @type {?} */childCtx=ctx.createChildWihtLocalVars();for(var/** @type {?} */i=0;i<varNames.length;i++){childCtx.vars.set(varNames[i],varValues[i]);}var/** @type {?} */result=visitor.visitAllStatements(statements,childCtx);return result?result.value:null;}var _ExecutionContext=function(){/**
     * @param {?} parent
     * @param {?} instance
     * @param {?} className
     * @param {?} vars
     */function _ExecutionContext(parent,instance,className,vars){_classCallCheck(this,_ExecutionContext);this.parent=parent;this.instance=instance;this.className=className;this.vars=vars;}/**
     * @return {?}
     */_createClass(_ExecutionContext,[{key:'createChildWihtLocalVars',value:function createChildWihtLocalVars(){return new _ExecutionContext(this,this.instance,this.className,new Map());}}]);return _ExecutionContext;}();var ReturnValue=/**
     * @param {?} value
     */function ReturnValue(value){_classCallCheck(this,ReturnValue);this.value=value;};/**
 * @param {?} _classStmt
 * @param {?} _ctx
 * @param {?} _visitor
 * @return {?}
 */function createDynamicClass(_classStmt,_ctx,_visitor){var/** @type {?} */propertyDescriptors={};_classStmt.getters.forEach(function(getter){// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[getter.name]={configurable:false,get:function get(){var/** @type {?} */instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);return _executeFunctionStatements([],[],getter.body,instanceCtx,_visitor);}};});_classStmt.methods.forEach(function(method){var/** @type {?} */paramNames=method.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[method.name]={writable:false,configurable:false,value:function value(){var/** @type {?} */instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);for(var _len5=arguments.length,args=Array(_len5),_key5=0;_key5<_len5;_key5++){args[_key5]=arguments[_key5];}return _executeFunctionStatements(paramNames,args,method.body,instanceCtx,_visitor);}};});var/** @type {?} */ctorParamNames=_classStmt.constructorMethod.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
var/** @type {?} */ctor=function ctor(){var _this241=this;var/** @type {?} */instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);_classStmt.fields.forEach(function(field){_this241[field.name]=undefined;});for(var _len6=arguments.length,args=Array(_len6),_key6=0;_key6<_len6;_key6++){args[_key6]=arguments[_key6];}_executeFunctionStatements(ctorParamNames,args,_classStmt.constructorMethod.body,instanceCtx,_visitor);};var/** @type {?} */superClass=_classStmt.parent?_classStmt.parent.visitExpression(_visitor,_ctx):Object;ctor.prototype=Object.create(superClass.prototype,propertyDescriptors);return ctor;}var StatementInterpreter=function(){function StatementInterpreter(){_classCallCheck(this,StatementInterpreter);}_createClass(StatementInterpreter,[{key:'debugAst',/**
     * @param {?} ast
     * @return {?}
     */value:function debugAst(ast){return debugOutputAstAsTypeScript(ast);}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareVarStmt',value:function visitDeclareVarStmt(stmt,ctx){ctx.vars.set(stmt.name,stmt.value.visitExpression(this,ctx));return null;}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitWriteVarExpr',value:function visitWriteVarExpr(expr,ctx){var/** @type {?} */value=expr.value.visitExpression(this,ctx);var/** @type {?} */currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(expr.name)){currCtx.vars.set(expr.name,value);return value;}currCtx=currCtx.parent;}throw new Error('Not declared variable '+expr.name);}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReadVarExpr',value:function visitReadVarExpr(ast,ctx){var/** @type {?} */varName=ast.name;if(isPresent(ast.builtin)){switch(ast.builtin){case BuiltinVar.Super:return ctx.instance.__proto__;case BuiltinVar.This:return ctx.instance;case BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$2;break;case BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$2;break;default:throw new Error('Unknown builtin variable '+ast.builtin);}}var/** @type {?} */currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(varName)){return currCtx.vars.get(varName);}currCtx=currCtx.parent;}throw new Error('Not declared variable '+varName);}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitWriteKeyExpr',value:function visitWriteKeyExpr(expr,ctx){var/** @type {?} */receiver=expr.receiver.visitExpression(this,ctx);var/** @type {?} */index=expr.index.visitExpression(this,ctx);var/** @type {?} */value=expr.value.visitExpression(this,ctx);receiver[index]=value;return value;}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitWritePropExpr',value:function visitWritePropExpr(expr,ctx){var/** @type {?} */receiver=expr.receiver.visitExpression(this,ctx);var/** @type {?} */value=expr.value.visitExpression(this,ctx);receiver[expr.name]=value;return value;}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInvokeMethodExpr',value:function visitInvokeMethodExpr(expr,ctx){var/** @type {?} */receiver=expr.receiver.visitExpression(this,ctx);var/** @type {?} */args=this.visitAllExpressions(expr.args,ctx);var/** @type {?} */result=void 0;if(isPresent(expr.builtin)){switch(expr.builtin){case BuiltinMethod.ConcatArray:result=receiver.concat.apply(receiver,_toConsumableArray(args));break;case BuiltinMethod.SubscribeObservable:result=receiver.subscribe({next:args[0]});break;case BuiltinMethod.Bind:result=receiver.bind.apply(receiver,_toConsumableArray(args));break;default:throw new Error('Unknown builtin method '+expr.builtin);}}else{result=receiver[expr.name].apply(receiver,args);}return result;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInvokeFunctionExpr',value:function visitInvokeFunctionExpr(stmt,ctx){var/** @type {?} */args=this.visitAllExpressions(stmt.args,ctx);var/** @type {?} */fnExpr=stmt.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===BuiltinVar.Super){ctx.instance.constructor.prototype.constructor.apply(ctx.instance,args);return null;}else{var/** @type {?} */_fn=stmt.fn.visitExpression(this,ctx);return _fn.apply(null,args);}}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReturnStmt',value:function visitReturnStmt(stmt,ctx){return new ReturnValue(stmt.value.visitExpression(this,ctx));}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareClassStmt',value:function visitDeclareClassStmt(stmt,ctx){var/** @type {?} */clazz=createDynamicClass(stmt,ctx,this);ctx.vars.set(stmt.name,clazz);return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitExpressionStmt',value:function visitExpressionStmt(stmt,ctx){return stmt.expr.visitExpression(this,ctx);}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitIfStmt',value:function visitIfStmt(stmt,ctx){var/** @type {?} */condition=stmt.condition.visitExpression(this,ctx);if(condition){return this.visitAllStatements(stmt.trueCase,ctx);}else if(isPresent(stmt.falseCase)){return this.visitAllStatements(stmt.falseCase,ctx);}return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitTryCatchStmt',value:function visitTryCatchStmt(stmt,ctx){try{return this.visitAllStatements(stmt.bodyStmts,ctx);}catch(e){var/** @type {?} */childCtx=ctx.createChildWihtLocalVars();childCtx.vars.set(CATCH_ERROR_VAR$2,e);childCtx.vars.set(CATCH_STACK_VAR$2,e.stack);return this.visitAllStatements(stmt.catchStmts,childCtx);}}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitThrowStmt',value:function visitThrowStmt(stmt,ctx){throw stmt.error.visitExpression(this,ctx);}/**
     * @param {?} stmt
     * @param {?=} context
     * @return {?}
     */},{key:'visitCommentStmt',value:function visitCommentStmt(stmt,context){return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInstantiateExpr',value:function visitInstantiateExpr(ast,ctx){var/** @type {?} */args=this.visitAllExpressions(ast.args,ctx);var/** @type {?} */clazz=ast.classExpr.visitExpression(this,ctx);return new(Function.prototype.bind.apply(clazz,[null].concat(_toConsumableArray(args))))();}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralExpr',value:function visitLiteralExpr(ast,ctx){return ast.value;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitExternalExpr',value:function visitExternalExpr(ast,ctx){return ast.value.reference;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitConditionalExpr',value:function visitConditionalExpr(ast,ctx){if(ast.condition.visitExpression(this,ctx)){return ast.trueCase.visitExpression(this,ctx);}else if(isPresent(ast.falseCase)){return ast.falseCase.visitExpression(this,ctx);}return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitNotExpr',value:function visitNotExpr(ast,ctx){return!ast.condition.visitExpression(this,ctx);}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitCastExpr',value:function visitCastExpr(ast,ctx){return ast.value.visitExpression(this,ctx);}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitFunctionExpr',value:function visitFunctionExpr(ast,ctx){var/** @type {?} */paramNames=ast.params.map(function(param){return param.name;});return _declareFn(paramNames,ast.statements,ctx,this);}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareFunctionStmt',value:function visitDeclareFunctionStmt(stmt,ctx){var/** @type {?} */paramNames=stmt.params.map(function(param){return param.name;});ctx.vars.set(stmt.name,_declareFn(paramNames,stmt.statements,ctx,this));return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitBinaryOperatorExpr',value:function visitBinaryOperatorExpr(ast,ctx){var _this242=this;var/** @type {?} */lhs=function lhs(){return ast.lhs.visitExpression(_this242,ctx);};var/** @type {?} */rhs=function rhs(){return ast.rhs.visitExpression(_this242,ctx);};switch(ast.operator){case BinaryOperator.Equals:return lhs()==rhs();case BinaryOperator.Identical:return lhs()===rhs();case BinaryOperator.NotEquals:return lhs()!=rhs();case BinaryOperator.NotIdentical:return lhs()!==rhs();case BinaryOperator.And:return lhs()&&rhs();case BinaryOperator.Or:return lhs()||rhs();case BinaryOperator.Plus:return lhs()+rhs();case BinaryOperator.Minus:return lhs()-rhs();case BinaryOperator.Divide:return lhs()/rhs();case BinaryOperator.Multiply:return lhs()*rhs();case BinaryOperator.Modulo:return lhs()%rhs();case BinaryOperator.Lower:return lhs()<rhs();case BinaryOperator.LowerEquals:return lhs()<=rhs();case BinaryOperator.Bigger:return lhs()>rhs();case BinaryOperator.BiggerEquals:return lhs()>=rhs();default:throw new Error('Unknown operator '+ast.operator);}}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReadPropExpr',value:function visitReadPropExpr(ast,ctx){var/** @type {?} */result=void 0;var/** @type {?} */receiver=ast.receiver.visitExpression(this,ctx);result=receiver[ast.name];return result;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReadKeyExpr',value:function visitReadKeyExpr(ast,ctx){var/** @type {?} */receiver=ast.receiver.visitExpression(this,ctx);var/** @type {?} */prop=ast.index.visitExpression(this,ctx);return receiver[prop];}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralArrayExpr',value:function visitLiteralArrayExpr(ast,ctx){return this.visitAllExpressions(ast.entries,ctx);}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitLiteralMapExpr',value:function visitLiteralMapExpr(ast,ctx){var _this243=this;var/** @type {?} */result={};ast.entries.forEach(function(entry){return result[entry.key]=entry.value.visitExpression(_this243,ctx);});return result;}/**
     * @param {?} expressions
     * @param {?} ctx
     * @return {?}
     */},{key:'visitAllExpressions',value:function visitAllExpressions(expressions,ctx){var _this244=this;return expressions.map(function(expr){return expr.visitExpression(_this244,ctx);});}/**
     * @param {?} statements
     * @param {?} ctx
     * @return {?}
     */},{key:'visitAllStatements',value:function visitAllStatements(statements,ctx){for(var/** @type {?} */i=0;i<statements.length;i++){var/** @type {?} */stmt=statements[i];var/** @type {?} */val=stmt.visitStatement(this,ctx);if(val instanceof ReturnValue){return val;}}return null;}}]);return StatementInterpreter;}();/**
 * @param {?} varNames
 * @param {?} statements
 * @param {?} ctx
 * @param {?} visitor
 * @return {?}
 */function _declareFn(varNames,statements,ctx,visitor){return function(){for(var _len7=arguments.length,args=Array(_len7),_key7=0;_key7<_len7;_key7++){args[_key7]=arguments[_key7];}return _executeFunctionStatements(varNames,args,statements,ctx,visitor);};}var/** @type {?} */CATCH_ERROR_VAR$2='error';var/** @type {?} */CATCH_STACK_VAR$2='stack';/**
 * @abstract
 */var AbstractJsEmitterVisitor=function(_AbstractEmitterVisit2){_inherits(AbstractJsEmitterVisitor,_AbstractEmitterVisit2);function AbstractJsEmitterVisitor(){_classCallCheck(this,AbstractJsEmitterVisitor);return _possibleConstructorReturn(this,(AbstractJsEmitterVisitor.__proto__||Object.getPrototypeOf(AbstractJsEmitterVisitor)).call(this,false));}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */_createClass(AbstractJsEmitterVisitor,[{key:'visitDeclareClassStmt',value:function visitDeclareClassStmt(stmt,ctx){var _this246=this;ctx.pushClass(stmt);this._visitClassConstructor(stmt,ctx);if(isPresent(stmt.parent)){ctx.print(stmt,stmt.name+'.prototype = Object.create(');stmt.parent.visitExpression(this,ctx);ctx.println(stmt,'.prototype);');}stmt.getters.forEach(function(getter){return _this246._visitClassGetter(stmt,getter,ctx);});stmt.methods.forEach(function(method){return _this246._visitClassMethod(stmt,method,ctx);});ctx.popClass();return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitClassConstructor',value:function _visitClassConstructor(stmt,ctx){ctx.print(stmt,'function '+stmt.name+'(');if(isPresent(stmt.constructorMethod)){this._visitParams(stmt.constructorMethod.params,ctx);}ctx.println(stmt,') {');ctx.incIndent();if(isPresent(stmt.constructorMethod)){if(stmt.constructorMethod.body.length>0){ctx.println(stmt,'var self = this;');this.visitAllStatements(stmt.constructorMethod.body,ctx);}}ctx.decIndent();ctx.println(stmt,'}');}/**
     * @param {?} stmt
     * @param {?} getter
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitClassGetter',value:function _visitClassGetter(stmt,getter,ctx){ctx.println(stmt,'Object.defineProperty('+stmt.name+'.prototype, \''+getter.name+'\', { get: function() {');ctx.incIndent();if(getter.body.length>0){ctx.println(stmt,'var self = this;');this.visitAllStatements(getter.body,ctx);}ctx.decIndent();ctx.println(stmt,'}});');}/**
     * @param {?} stmt
     * @param {?} method
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitClassMethod',value:function _visitClassMethod(stmt,method,ctx){ctx.print(stmt,stmt.name+'.prototype.'+method.name+' = function(');this._visitParams(method.params,ctx);ctx.println(stmt,') {');ctx.incIndent();if(method.body.length>0){ctx.println(stmt,'var self = this;');this.visitAllStatements(method.body,ctx);}ctx.decIndent();ctx.println(stmt,'};');}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitReadVarExpr',value:function visitReadVarExpr(ast,ctx){if(ast.builtin===BuiltinVar.This){ctx.print(ast,'self');}else if(ast.builtin===BuiltinVar.Super){throw new Error('\'super\' needs to be handled at a parent ast node, not at the variable level!');}else{_get(AbstractJsEmitterVisitor.prototype.__proto__||Object.getPrototypeOf(AbstractJsEmitterVisitor.prototype),'visitReadVarExpr',this).call(this,ast,ctx);}return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareVarStmt',value:function visitDeclareVarStmt(stmt,ctx){ctx.print(stmt,'var '+stmt.name+' = ');stmt.value.visitExpression(this,ctx);ctx.println(stmt,';');return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitCastExpr',value:function visitCastExpr(ast,ctx){ast.value.visitExpression(this,ctx);return null;}/**
     * @param {?} expr
     * @param {?} ctx
     * @return {?}
     */},{key:'visitInvokeFunctionExpr',value:function visitInvokeFunctionExpr(expr,ctx){var/** @type {?} */fnExpr=expr.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===BuiltinVar.Super){ctx.currentClass.parent.visitExpression(this,ctx);ctx.print(expr,'.call(this');if(expr.args.length>0){ctx.print(expr,', ');this.visitAllExpressions(expr.args,ctx,',');}ctx.print(expr,')');}else{_get(AbstractJsEmitterVisitor.prototype.__proto__||Object.getPrototypeOf(AbstractJsEmitterVisitor.prototype),'visitInvokeFunctionExpr',this).call(this,expr,ctx);}return null;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitFunctionExpr',value:function visitFunctionExpr(ast,ctx){ctx.print(ast,'function(');this._visitParams(ast.params,ctx);ctx.println(ast,') {');ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,'}');return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitDeclareFunctionStmt',value:function visitDeclareFunctionStmt(stmt,ctx){ctx.print(stmt,'function '+stmt.name+'(');this._visitParams(stmt.params,ctx);ctx.println(stmt,') {');ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,'}');return null;}/**
     * @param {?} stmt
     * @param {?} ctx
     * @return {?}
     */},{key:'visitTryCatchStmt',value:function visitTryCatchStmt(stmt,ctx){ctx.println(stmt,'try {');ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,'} catch ('+CATCH_ERROR_VAR$1.name+') {');ctx.incIndent();var/** @type {?} */catchStmts=[/** @type {?} */CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null,[StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,'}');return null;}/**
     * @param {?} params
     * @param {?} ctx
     * @return {?}
     */},{key:'_visitParams',value:function _visitParams(params,ctx){this.visitAllObjects(function(param){return ctx.print(null,param.name);},params,ctx,',');}/**
     * @param {?} method
     * @return {?}
     */},{key:'getBuiltinMethodName',value:function getBuiltinMethodName(method){var/** @type {?} */name=void 0;switch(method){case BuiltinMethod.ConcatArray:name='concat';break;case BuiltinMethod.SubscribeObservable:name='subscribe';break;case BuiltinMethod.Bind:name='bind';break;default:throw new Error('Unknown builtin method: '+method);}return name;}}]);return AbstractJsEmitterVisitor;}(AbstractEmitterVisitor);/**
 * @param {?} sourceUrl
 * @param {?} ctx
 * @param {?} vars
 * @return {?}
 */function evalExpression(sourceUrl,ctx,vars){var/** @type {?} */fnBody=ctx.toSource()+'\n//# sourceURL='+sourceUrl+'\n'+ctx.toSourceMapGenerator().toJsComment();var/** @type {?} */fnArgNames=[];var/** @type {?} */fnArgValues=[];for(var/** @type {?} */argName in vars){fnArgNames.push(argName);fnArgValues.push(vars[argName]);}return new(Function.prototype.bind.apply(Function,[null].concat(_toConsumableArray(fnArgNames.concat(fnBody)))))().apply(undefined,fnArgValues);}/**
 * @param {?} sourceUrl
 * @param {?} statements
 * @param {?} resultVars
 * @return {?}
 */function jitStatements(sourceUrl,statements,resultVars){var/** @type {?} */converter=new JitEmitterVisitor();var/** @type {?} */ctx=EmitterVisitorContext.createRoot(resultVars);var/** @type {?} */returnStmt=new ReturnStatement(literalArr(resultVars.map(function(resultVar){return variable(resultVar);})));converter.visitAllStatements(statements.concat([returnStmt]),ctx);return evalExpression(sourceUrl,ctx,converter.getArgs());}var JitEmitterVisitor=function(_AbstractJsEmitterVis){_inherits(JitEmitterVisitor,_AbstractJsEmitterVis);function JitEmitterVisitor(){_classCallCheck(this,JitEmitterVisitor);var _this247=_possibleConstructorReturn(this,(JitEmitterVisitor.__proto__||Object.getPrototypeOf(JitEmitterVisitor)).apply(this,arguments));_this247._evalArgNames=[];_this247._evalArgValues=[];return _this247;}/**
     * @return {?}
     */_createClass(JitEmitterVisitor,[{key:'getArgs',value:function getArgs(){var/** @type {?} */result={};for(var/** @type {?} */i=0;i<this._evalArgNames.length;i++){result[this._evalArgNames[i]]=this._evalArgValues[i];}return result;}/**
     * @param {?} ast
     * @param {?} ctx
     * @return {?}
     */},{key:'visitExternalExpr',value:function visitExternalExpr(ast,ctx){var/** @type {?} */value=ast.value.reference;var/** @type {?} */id=this._evalArgValues.indexOf(value);if(id===-1){id=this._evalArgValues.length;this._evalArgValues.push(value);var/** @type {?} */name=identifierName(ast.value)||'val';this._evalArgNames.push('jit_'+name+id);}ctx.print(ast,this._evalArgNames[id]);return null;}}]);return JitEmitterVisitor;}(AbstractJsEmitterVisitor);/**
 * An internal module of the Angular compiler that begins with component types,
 * extracts templates, and eventually produces a compiled version of the component
 * ready for linking into an application.
 *
 * \@security When compiling templates at runtime, you must ensure that the entire template comes
 * from a trusted source. Attacker-controlled data introduced by a template could expose your
 * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).
 */var JitCompiler=function(){/**
     * @param {?} _injector
     * @param {?} _metadataResolver
     * @param {?} _templateParser
     * @param {?} _styleCompiler
     * @param {?} _viewCompiler
     * @param {?} _ngModuleCompiler
     * @param {?} _directiveWrapperCompiler
     * @param {?} _compilerConfig
     * @param {?} _animationParser
     */function JitCompiler(_injector,_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_ngModuleCompiler,_directiveWrapperCompiler,_compilerConfig,_animationParser){_classCallCheck(this,JitCompiler);this._injector=_injector;this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._directiveWrapperCompiler=_directiveWrapperCompiler;this._compilerConfig=_compilerConfig;this._animationParser=_animationParser;this._compiledTemplateCache=new Map();this._compiledHostTemplateCache=new Map();this._compiledDirectiveWrapperCache=new Map();this._compiledNgModuleCache=new Map();this._animationCompiler=new AnimationCompiler();}/**
     * @return {?}
     */_createClass(JitCompiler,[{key:'compileModuleSync',/**
     * @param {?} moduleType
     * @return {?}
     */value:function compileModuleSync(moduleType){return this._compileModuleAndComponents(moduleType,true).syncResult;}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAsync',value:function compileModuleAsync(moduleType){return this._compileModuleAndComponents(moduleType,false).asyncResult;}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsSync',value:function compileModuleAndAllComponentsSync(moduleType){return this._compileModuleAndAllComponents(moduleType,true).syncResult;}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsAsync',value:function compileModuleAndAllComponentsAsync(moduleType){return this._compileModuleAndAllComponents(moduleType,false).asyncResult;}/**
     * @param {?} component
     * @return {?}
     */},{key:'getNgContentSelectors',value:function getNgContentSelectors(component){var/** @type {?} */template=this._compiledTemplateCache.get(component);if(!template){throw new Error('The component '+stringify(component)+' is not yet compiled!');}return template.compMeta.template.ngContentSelectors;}/**
     * @param {?} moduleType
     * @param {?} isSync
     * @return {?}
     */},{key:'_compileModuleAndComponents',value:function _compileModuleAndComponents(moduleType,isSync){var _this248=this;var/** @type {?} */loadingPromise=this._loadModules(moduleType,isSync);var/** @type {?} */createResult=function createResult(){_this248._compileComponents(moduleType,null);return _this248._compileModule(moduleType);};if(isSync){return new SyncAsyncResult(createResult());}else{return new SyncAsyncResult(null,loadingPromise.then(createResult));}}/**
     * @param {?} moduleType
     * @param {?} isSync
     * @return {?}
     */},{key:'_compileModuleAndAllComponents',value:function _compileModuleAndAllComponents(moduleType,isSync){var _this249=this;var/** @type {?} */loadingPromise=this._loadModules(moduleType,isSync);var/** @type {?} */createResult=function createResult(){var/** @type {?} */componentFactories=[];_this249._compileComponents(moduleType,componentFactories);return new __WEBPACK_IMPORTED_MODULE_0__angular_core__["_136" /* ModuleWithComponentFactories */](_this249._compileModule(moduleType),componentFactories);};if(isSync){return new SyncAsyncResult(createResult());}else{return new SyncAsyncResult(null,loadingPromise.then(createResult));}}/**
     * @param {?} mainModule
     * @param {?} isSync
     * @return {?}
     */},{key:'_loadModules',value:function _loadModules(mainModule,isSync){var _this250=this;var/** @type {?} */loadingPromises=[];var/** @type {?} */ngModule=this._metadataResolver.getNgModuleMetadata(mainModule);// Note: the loadingPromise for a module only includes the loading of the exported directives
// of imported modules.
// However, for runtime compilation, we want to transitively compile all modules,
// so we also need to call loadNgModuleDirectiveAndPipeMetadata for all nested modules.
ngModule.transitiveModule.modules.forEach(function(localModuleMeta){loadingPromises.push(_this250._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(localModuleMeta.reference,isSync));});return Promise.all(loadingPromises);}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'_compileModule',value:function _compileModule(moduleType){var _this251=this;var/** @type {?} */ngModuleFactory=this._compiledNgModuleCache.get(moduleType);if(!ngModuleFactory){var/** @type {?} */moduleMeta=this._metadataResolver.getNgModuleMetadata(moduleType);// Always provide a bound Compiler
var/** @type {?} */extraProviders=[this._metadataResolver.getProviderMetadata(new ProviderMeta(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* Compiler */],{useFactory:function useFactory(){return new ModuleBoundCompiler(_this251,moduleMeta.type.reference);}}))];var/** @type {?} */compileResult=this._ngModuleCompiler.compile(moduleMeta,extraProviders);if(!this._compilerConfig.useJit){ngModuleFactory=interpretStatements(compileResult.statements,[compileResult.ngModuleFactoryVar])[0];}else{ngModuleFactory=jitStatements('/'+identifierName(moduleMeta.type)+'/module.ngfactory.js',compileResult.statements,[compileResult.ngModuleFactoryVar])[0];}this._compiledNgModuleCache.set(moduleMeta.type.reference,ngModuleFactory);}return ngModuleFactory;}/**
     * \@internal
     * @param {?} mainModule
     * @param {?} allComponentFactories
     * @return {?}
     */},{key:'_compileComponents',value:function _compileComponents(mainModule,allComponentFactories){var _this252=this;var/** @type {?} */ngModule=this._metadataResolver.getNgModuleMetadata(mainModule);var/** @type {?} */moduleByDirective=new Map();var/** @type {?} */templates=new Set();ngModule.transitiveModule.modules.forEach(function(localModuleSummary){var/** @type {?} */localModuleMeta=_this252._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);localModuleMeta.declaredDirectives.forEach(function(dirIdentifier){moduleByDirective.set(dirIdentifier.reference,localModuleMeta);var/** @type {?} */dirMeta=_this252._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);_this252._compileDirectiveWrapper(dirMeta,localModuleMeta);if(dirMeta.isComponent){templates.add(_this252._createCompiledTemplate(dirMeta,localModuleMeta));if(allComponentFactories){var/** @type {?} */template=_this252._createCompiledHostTemplate(dirMeta.type.reference,localModuleMeta);templates.add(template);allComponentFactories.push(/** @type {?} */dirMeta.componentFactory);}}});});ngModule.transitiveModule.modules.forEach(function(localModuleSummary){var/** @type {?} */localModuleMeta=_this252._metadataResolver.getNgModuleMetadata(localModuleSummary.reference);localModuleMeta.declaredDirectives.forEach(function(dirIdentifier){var/** @type {?} */dirMeta=_this252._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);if(dirMeta.isComponent){dirMeta.entryComponents.forEach(function(entryComponentType){var/** @type {?} */moduleMeta=moduleByDirective.get(entryComponentType.componentType);templates.add(_this252._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));});}});localModuleMeta.entryComponents.forEach(function(entryComponentType){var/** @type {?} */moduleMeta=moduleByDirective.get(entryComponentType.componentType);templates.add(_this252._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));});});templates.forEach(function(template){return _this252._compileTemplate(template);});}/**
     * @param {?} type
     * @return {?}
     */},{key:'clearCacheFor',value:function clearCacheFor(type){this._compiledNgModuleCache.delete(type);this._metadataResolver.clearCacheFor(type);this._compiledHostTemplateCache.delete(type);var/** @type {?} */compiledTemplate=this._compiledTemplateCache.get(type);if(compiledTemplate){this._compiledTemplateCache.delete(type);}}/**
     * @return {?}
     */},{key:'clearCache',value:function clearCache(){this._metadataResolver.clearCache();this._compiledTemplateCache.clear();this._compiledHostTemplateCache.clear();this._compiledNgModuleCache.clear();}/**
     * @param {?} compType
     * @param {?} ngModule
     * @return {?}
     */},{key:'_createCompiledHostTemplate',value:function _createCompiledHostTemplate(compType,ngModule){if(!ngModule){throw new Error('Component '+stringify(compType)+' is not part of any NgModule or the module has not been imported into your module.');}var/** @type {?} */compiledTemplate=this._compiledHostTemplateCache.get(compType);if(!compiledTemplate){var/** @type {?} */compMeta=this._metadataResolver.getDirectiveMetadata(compType);assertComponent(compMeta);var/** @type {?} */componentFactory=compMeta.componentFactory;var/** @type {?} */hostClass=this._metadataResolver.getHostComponentType(compType);var/** @type {?} */hostMeta=createHostComponentMeta(hostClass,compMeta,/** @type {?} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_137" /* ɵgetComponentFactoryViewClass */])(componentFactory));compiledTemplate=new CompiledTemplate(true,compMeta.type,hostMeta,ngModule,[compMeta.type]);this._compiledHostTemplateCache.set(compType,compiledTemplate);}return compiledTemplate;}/**
     * @param {?} compMeta
     * @param {?} ngModule
     * @return {?}
     */},{key:'_createCompiledTemplate',value:function _createCompiledTemplate(compMeta,ngModule){var/** @type {?} */compiledTemplate=this._compiledTemplateCache.get(compMeta.type.reference);if(!compiledTemplate){assertComponent(compMeta);compiledTemplate=new CompiledTemplate(false,compMeta.type,compMeta,ngModule,ngModule.transitiveModule.directives);this._compiledTemplateCache.set(compMeta.type.reference,compiledTemplate);}return compiledTemplate;}/**
     * @param {?} dirMeta
     * @param {?} moduleMeta
     * @return {?}
     */},{key:'_compileDirectiveWrapper',value:function _compileDirectiveWrapper(dirMeta,moduleMeta){if(this._compilerConfig.useViewEngine){return;}var/** @type {?} */compileResult=this._directiveWrapperCompiler.compile(dirMeta);var/** @type {?} */statements=compileResult.statements;var/** @type {?} */directiveWrapperClass=void 0;if(!this._compilerConfig.useJit){directiveWrapperClass=interpretStatements(statements,[compileResult.dirWrapperClassVar])[0];}else{directiveWrapperClass=jitStatements('/'+identifierName(moduleMeta.type)+'/'+identifierName(dirMeta.type)+'/wrapper.ngfactory.js',statements,[compileResult.dirWrapperClassVar])[0];}dirMeta.wrapperType.setDelegate(directiveWrapperClass);this._compiledDirectiveWrapperCache.set(dirMeta.type.reference,directiveWrapperClass);}/**
     * @param {?} template
     * @return {?}
     */},{key:'_compileTemplate',value:function _compileTemplate(template){var _this253=this,_stylesCompileResult$;if(template.isCompiled){return;}var/** @type {?} */compMeta=template.compMeta;var/** @type {?} */externalStylesheetsByModuleUrl=new Map();var/** @type {?} */stylesCompileResult=this._styleCompiler.compileComponent(compMeta);stylesCompileResult.externalStylesheets.forEach(function(r){externalStylesheetsByModuleUrl.set(r.meta.moduleUrl,r);});this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet,externalStylesheetsByModuleUrl);var/** @type {?} */parsedAnimations=this._compilerConfig.useViewEngine?[]:this._animationParser.parseComponent(compMeta);var/** @type {?} */directives=template.directives.map(function(dir){return _this253._metadataResolver.getDirectiveSummary(dir.reference);});var/** @type {?} */pipes=template.ngModule.transitiveModule.pipes.map(function(pipe){return _this253._metadataResolver.getPipeSummary(pipe.reference);});var _templateParser$parse2=this._templateParser.parse(compMeta,compMeta.template.template,directives,pipes,template.ngModule.schemas,identifierName(compMeta.type)),parsedTemplate=_templateParser$parse2.template,usedPipes=_templateParser$parse2.pipes;var/** @type {?} */compiledAnimations=this._compilerConfig.useViewEngine?[]:this._animationCompiler.compile(identifierName(compMeta.type),parsedAnimations);var/** @type {?} */compileResult=this._viewCompiler.compileComponent(compMeta,parsedTemplate,variable(stylesCompileResult.componentStylesheet.stylesVar),usedPipes,compiledAnimations);var/** @type {?} */statements=(_stylesCompileResult$=stylesCompileResult.componentStylesheet.statements).concat.apply(_stylesCompileResult$,_toConsumableArray(compiledAnimations.map(function(ca){return ca.statements;}))).concat(compileResult.statements);var/** @type {?} */viewClass=void 0;var/** @type {?} */rendererType=void 0;if(!this._compilerConfig.useJit){var _interpretStatements=interpretStatements(statements,[compileResult.viewClassVar,compileResult.rendererTypeVar]);var _interpretStatements2=_slicedToArray(_interpretStatements,2);viewClass=_interpretStatements2[0];rendererType=_interpretStatements2[1];}else{var/** @type {?} */sourceUrl='/'+identifierName(template.ngModule.type)+'/'+identifierName(template.compType)+'/'+(template.isHost?'host':'component')+'.ngfactory.js';var _jitStatements=jitStatements(sourceUrl,statements,[compileResult.viewClassVar,compileResult.rendererTypeVar]);var _jitStatements2=_slicedToArray(_jitStatements,2);viewClass=_jitStatements2[0];rendererType=_jitStatements2[1];}template.compiled(viewClass,rendererType);}/**
     * @param {?} result
     * @param {?} externalStylesheetsByModuleUrl
     * @return {?}
     */},{key:'_resolveStylesCompileResult',value:function _resolveStylesCompileResult(result,externalStylesheetsByModuleUrl){var _this254=this;result.dependencies.forEach(function(dep,i){var/** @type {?} */nestedCompileResult=externalStylesheetsByModuleUrl.get(dep.moduleUrl);var/** @type {?} */nestedStylesArr=_this254._resolveAndEvalStylesCompileResult(nestedCompileResult,externalStylesheetsByModuleUrl);dep.valuePlaceholder.reference=nestedStylesArr;});}/**
     * @param {?} result
     * @param {?} externalStylesheetsByModuleUrl
     * @return {?}
     */},{key:'_resolveAndEvalStylesCompileResult',value:function _resolveAndEvalStylesCompileResult(result,externalStylesheetsByModuleUrl){this._resolveStylesCompileResult(result,externalStylesheetsByModuleUrl);if(!this._compilerConfig.useJit){return interpretStatements(result.statements,[result.stylesVar])[0];}else{return jitStatements('/'+result.meta.moduleUrl+'.ngstyle.js',result.statements,[result.stylesVar])[0];}}},{key:'injector',get:function get(){return this._injector;}}]);return JitCompiler;}();JitCompiler.decorators=[{type:CompilerInjectable}];/** @nocollapse */JitCompiler.ctorParameters=function(){return[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["x" /* Injector */]},{type:CompileMetadataResolver},{type:TemplateParser},{type:StyleCompiler},{type:ViewCompiler},{type:NgModuleCompiler},{type:DirectiveWrapperCompiler},{type:CompilerConfig},{type:AnimationParser}];};var CompiledTemplate=function(){/**
     * @param {?} isHost
     * @param {?} compType
     * @param {?} compMeta
     * @param {?} ngModule
     * @param {?} directives
     */function CompiledTemplate(isHost,compType,compMeta,ngModule,directives){_classCallCheck(this,CompiledTemplate);this.isHost=isHost;this.compType=compType;this.compMeta=compMeta;this.ngModule=ngModule;this.directives=directives;this._viewClass=null;this.isCompiled=false;}/**
     * @param {?} viewClass
     * @param {?} rendererType
     * @return {?}
     */_createClass(CompiledTemplate,[{key:'compiled',value:function compiled(viewClass,rendererType){this._viewClass=viewClass;this.compMeta.componentViewType.setDelegate(viewClass);for(var/** @type {?} */prop in rendererType){this.compMeta.rendererType[prop]=rendererType[prop];}this.isCompiled=true;}}]);return CompiledTemplate;}();/**
 * @param {?} meta
 * @return {?}
 */function assertComponent(meta){if(!meta.isComponent){throw new Error('Could not compile \''+identifierName(meta.type)+'\' because it is not a component.');}}/**
 * Implements `Compiler` by delegating to the JitCompiler using a known module.
 */var ModuleBoundCompiler=function(){/**
     * @param {?} _delegate
     * @param {?} _ngModule
     */function ModuleBoundCompiler(_delegate,_ngModule){_classCallCheck(this,ModuleBoundCompiler);this._delegate=_delegate;this._ngModule=_ngModule;}/**
     * @return {?}
     */_createClass(ModuleBoundCompiler,[{key:'compileModuleSync',/**
     * @param {?} moduleType
     * @return {?}
     */value:function compileModuleSync(moduleType){return this._delegate.compileModuleSync(moduleType);}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAsync',value:function compileModuleAsync(moduleType){return this._delegate.compileModuleAsync(moduleType);}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsSync',value:function compileModuleAndAllComponentsSync(moduleType){return this._delegate.compileModuleAndAllComponentsSync(moduleType);}/**
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsAsync',value:function compileModuleAndAllComponentsAsync(moduleType){return this._delegate.compileModuleAndAllComponentsAsync(moduleType);}/**
     * @param {?} component
     * @return {?}
     */},{key:'getNgContentSelectors',value:function getNgContentSelectors(component){return this._delegate.getNgContentSelectors(component);}/**
     * Clears all caches
     * @return {?}
     */},{key:'clearCache',value:function clearCache(){this._delegate.clearCache();}/**
     * Clears the cache for the given component/ngModule.
     * @param {?} type
     * @return {?}
     */},{key:'clearCacheFor',value:function clearCacheFor(type){this._delegate.clearCacheFor(type);}},{key:'_injector',get:function get(){return this._delegate.injector;}}]);return ModuleBoundCompiler;}();/**
 * A container for message extracted from the templates.
 */var MessageBundle=function(){/**
     * @param {?} _htmlParser
     * @param {?} _implicitTags
     * @param {?} _implicitAttrs
     * @param {?=} _locale
     */function MessageBundle(_htmlParser,_implicitTags,_implicitAttrs){var _locale=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;_classCallCheck(this,MessageBundle);this._htmlParser=_htmlParser;this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;this._locale=_locale;this._messages=[];}/**
     * @param {?} html
     * @param {?} url
     * @param {?} interpolationConfig
     * @return {?}
     */_createClass(MessageBundle,[{key:'updateFromTemplate',value:function updateFromTemplate(html,url,interpolationConfig){var _messages;var/** @type {?} */htmlParserResult=this._htmlParser.parse(html,url,true,interpolationConfig);if(htmlParserResult.errors.length){return htmlParserResult.errors;}var/** @type {?} */i18nParserResult=extractMessages(htmlParserResult.rootNodes,interpolationConfig,this._implicitTags,this._implicitAttrs);if(i18nParserResult.errors.length){return i18nParserResult.errors;}(_messages=this._messages).push.apply(_messages,_toConsumableArray(i18nParserResult.messages));}/**
     * @return {?}
     */},{key:'getMessages',value:function getMessages(){return this._messages;}/**
     * @param {?} serializer
     * @return {?}
     */},{key:'write',value:function write(serializer){var/** @type {?} */messages={};var/** @type {?} */mapperVisitor=new MapPlaceholderNames();// Deduplicate messages based on their ID
this._messages.forEach(function(message){var/** @type {?} */id=serializer.digest(message);if(!messages.hasOwnProperty(id)){messages[id]=message;}});// Transform placeholder names using the serializer mapping
var/** @type {?} */msgList=Object.keys(messages).map(function(id){var/** @type {?} */mapper=serializer.createNameMapper(messages[id]);var/** @type {?} */src=messages[id];var/** @type {?} */nodes=mapper?mapperVisitor.convert(src.nodes,mapper):src.nodes;return new Message(nodes,{},{},src.meaning,src.description,id);});return serializer.write(msgList,this._locale);}}]);return MessageBundle;}();var MapPlaceholderNames=function(_CloneVisitor){_inherits(MapPlaceholderNames,_CloneVisitor);function MapPlaceholderNames(){_classCallCheck(this,MapPlaceholderNames);return _possibleConstructorReturn(this,(MapPlaceholderNames.__proto__||Object.getPrototypeOf(MapPlaceholderNames)).apply(this,arguments));}_createClass(MapPlaceholderNames,[{key:'convert',/**
     * @param {?} nodes
     * @param {?} mapper
     * @return {?}
     */value:function convert(nodes,mapper){var _this256=this;return mapper?nodes.map(function(n){return n.visit(_this256,mapper);}):nodes;}/**
     * @param {?} ph
     * @param {?} mapper
     * @return {?}
     */},{key:'visitTagPlaceholder',value:function visitTagPlaceholder(ph,mapper){var _this257=this;var/** @type {?} */startName=mapper.toPublicName(ph.startName);var/** @type {?} */closeName=ph.closeName?mapper.toPublicName(ph.closeName):ph.closeName;var/** @type {?} */children=ph.children.map(function(n){return n.visit(_this257,mapper);});return new TagPlaceholder(ph.tag,ph.attrs,startName,closeName,children,ph.isVoid,ph.sourceSpan);}/**
     * @param {?} ph
     * @param {?} mapper
     * @return {?}
     */},{key:'visitPlaceholder',value:function visitPlaceholder(ph,mapper){return new Placeholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);}/**
     * @param {?} ph
     * @param {?} mapper
     * @return {?}
     */},{key:'visitIcuPlaceholder',value:function visitIcuPlaceholder(ph,mapper){return new IcuPlaceholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);}}]);return MapPlaceholderNames;}(CloneVisitor);var Extractor=function(){/**
     * @param {?} host
     * @param {?} staticSymbolResolver
     * @param {?} messageBundle
     * @param {?} metadataResolver
     */function Extractor(host,staticSymbolResolver,messageBundle,metadataResolver){_classCallCheck(this,Extractor);this.host=host;this.staticSymbolResolver=staticSymbolResolver;this.messageBundle=messageBundle;this.metadataResolver=metadataResolver;}/**
     * @param {?} rootFiles
     * @return {?}
     */_createClass(Extractor,[{key:'extract',value:function extract(rootFiles){var _this258=this;var/** @type {?} */programSymbols=extractProgramSymbols(this.staticSymbolResolver,rootFiles,this.host);var _analyzeAndValidateNg2=analyzeAndValidateNgModules(programSymbols,this.host,this.metadataResolver),files=_analyzeAndValidateNg2.files,ngModules=_analyzeAndValidateNg2.ngModules;return Promise.all(ngModules.map(function(ngModule){return _this258.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){var/** @type {?} */errors=[];files.forEach(function(file){var/** @type {?} */compMetas=[];file.directives.forEach(function(directiveType){var/** @type {?} */dirMeta=_this258.metadataResolver.getDirectiveMetadata(directiveType);if(dirMeta&&dirMeta.isComponent){compMetas.push(dirMeta);}});compMetas.forEach(function(compMeta){var/** @type {?} */html=compMeta.template.template;var/** @type {?} */interpolationConfig=InterpolationConfig.fromArray(compMeta.template.interpolation);errors.push.apply(errors,_toConsumableArray(_this258.messageBundle.updateFromTemplate(html,file.srcUrl,interpolationConfig)));});});if(errors.length){throw new Error(errors.map(function(e){return e.toString();}).join('\n'));}return _this258.messageBundle;});}/**
     * @param {?} host
     * @param {?} locale
     * @return {?}
     */}],[{key:'create',value:function create(host,locale){var/** @type {?} */htmlParser=new I18NHtmlParser(new HtmlParser());var/** @type {?} */urlResolver=createOfflineCompileUrlResolver();var/** @type {?} */symbolCache=new StaticSymbolCache();var/** @type {?} */summaryResolver=new AotSummaryResolver(host,symbolCache);var/** @type {?} */staticSymbolResolver=new StaticSymbolResolver(host,symbolCache,summaryResolver);var/** @type {?} */staticReflector=new StaticReflector(staticSymbolResolver);StaticAndDynamicReflectionCapabilities.install(staticReflector);var/** @type {?} */config=new CompilerConfig({genDebugInfo:false,defaultEncapsulation:__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].Emulated,logBindingUpdate:false,useJit:false});var/** @type {?} */normalizer=new DirectiveNormalizer({get:function get(url){return host.loadResource(url);}},urlResolver,htmlParser,config);var/** @type {?} */elementSchemaRegistry=new DomElementSchemaRegistry();var/** @type {?} */resolver=new CompileMetadataResolver(config,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,symbolCache,staticReflector);// TODO(vicb): implicit tags & attributes
var/** @type {?} */messageBundle=new MessageBundle(htmlParser,[],{},locale);var/** @type {?} */extractor=new Extractor(host,staticSymbolResolver,messageBundle,resolver);return{extractor:extractor,staticReflector:staticReflector};}}]);return Extractor;}();var/** @type {?} */_NO_RESOURCE_LOADER={/**
     * @param {?} url
     * @return {?}
     */get:function get(url){throw new Error('No ResourceLoader implementation has been provided. Can\'t read the url "'+url+'"');}};var/** @type {?} */baseHtmlParser=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["I" /* InjectionToken */]('HtmlParser');/**
 * @param {?} cc
 * @param {?} sr
 * @return {?}
 */function viewCompilerFactory(cc,sr){return cc.useViewEngine?new ViewCompilerNext(cc,sr):new ViewCompiler(cc,sr);}/**
 * A set of providers that provide `JitCompiler` and its dependencies to use for
 * template compilation.
 */var/** @type {?} */COMPILER_PROVIDERS=[{provide:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_138" /* ɵReflector */],useValue:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */]},{provide:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_107" /* ɵReflectorReader */],useExisting:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_138" /* ɵReflector */]},{provide:ResourceLoader,useValue:_NO_RESOURCE_LOADER},SummaryResolver,__WEBPACK_IMPORTED_MODULE_0__angular_core__["_101" /* ɵConsole */],Lexer,Parser,{provide:baseHtmlParser,useClass:HtmlParser},{provide:I18NHtmlParser,useFactory:function useFactory(parser,translations,format,config,console){return new I18NHtmlParser(parser,translations,format,config.missingTranslation,console);},deps:[baseHtmlParser,[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](),new __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */](__WEBPACK_IMPORTED_MODULE_0__angular_core__["_139" /* TRANSLATIONS */])],[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](),new __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */](__WEBPACK_IMPORTED_MODULE_0__angular_core__["_71" /* TRANSLATIONS_FORMAT */])],[CompilerConfig],[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_101" /* ɵConsole */]]]},{provide:HtmlParser,useExisting:I18NHtmlParser},TemplateParser,DirectiveNormalizer,CompileMetadataResolver,DEFAULT_PACKAGE_URL_PROVIDER,StyleCompiler,{provide:USE_VIEW_ENGINE,useValue:false},{provide:ViewCompiler,useFactory:viewCompilerFactory,deps:[CompilerConfig,ElementSchemaRegistry]},NgModuleCompiler,DirectiveWrapperCompiler,{provide:CompilerConfig,useValue:new CompilerConfig()},JitCompiler,{provide:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* Compiler */],useExisting:JitCompiler},DomElementSchemaRegistry,{provide:ElementSchemaRegistry,useExisting:DomElementSchemaRegistry},UrlResolver,DirectiveResolver,PipeResolver,NgModuleResolver,AnimationParser];var JitCompilerFactory=function(){/**
     * @param {?} defaultOptions
     */function JitCompilerFactory(defaultOptions){_classCallCheck(this,JitCompilerFactory);var compilerOptions={useDebug:__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])(),useJit:true,defaultEncapsulation:__WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].Emulated,missingTranslation:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_100" /* MissingTranslationStrategy */].Warning,enableLegacyTemplate:true};this._defaultOptions=[compilerOptions].concat(_toConsumableArray(defaultOptions));}/**
     * @param {?=} options
     * @return {?}
     */_createClass(JitCompilerFactory,[{key:'createCompiler',value:function createCompiler(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var/** @type {?} */opts=_mergeOptions(this._defaultOptions.concat(options));var/** @type {?} */injector=__WEBPACK_IMPORTED_MODULE_0__angular_core__["_10" /* ReflectiveInjector */].resolveAndCreate([COMPILER_PROVIDERS,{provide:CompilerConfig,useFactory:function useFactory(useViewEngine){return new CompilerConfig({// let explicit values from the compiler options overwrite options
// from the app providers. E.g. important for the testing platform.
genDebugInfo:opts.useDebug,// let explicit values from the compiler options overwrite options
// from the app providers
useJit:opts.useJit,// let explicit values from the compiler options overwrite options
// from the app providers
defaultEncapsulation:opts.defaultEncapsulation,logBindingUpdate:opts.useDebug,missingTranslation:opts.missingTranslation,useViewEngine:useViewEngine,enableLegacyTemplate:opts.enableLegacyTemplate});},deps:[USE_VIEW_ENGINE]},opts.providers]);return injector.get(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* Compiler */]);}}]);return JitCompilerFactory;}();JitCompilerFactory.decorators=[{type:CompilerInjectable}];/** @nocollapse */JitCompilerFactory.ctorParameters=function(){return[{type:Array,decorators:[{type:__WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */],args:[__WEBPACK_IMPORTED_MODULE_0__angular_core__["_15" /* COMPILER_OPTIONS */]]}]}];};/**
 * @return {?}
 */function _initReflector(){__WEBPACK_IMPORTED_MODULE_0__angular_core__["_16" /* ɵreflector */].reflectionCapabilities=new __WEBPACK_IMPORTED_MODULE_0__angular_core__["_126" /* ɵReflectionCapabilities */]();}/**
 * A platform that included corePlatform and the compiler.
 *
 * @experimental
 */var/** @type {?} */platformCoreDynamic=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Y" /* createPlatformFactory */])(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Z" /* platformCore */],'coreDynamic',[{provide:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_15" /* COMPILER_OPTIONS */],useValue:{},multi:true},{provide:__WEBPACK_IMPORTED_MODULE_0__angular_core__["_140" /* CompilerFactory */],useClass:JitCompilerFactory},{provide:__WEBPACK_IMPORTED_MODULE_0__angular_core__["W" /* PLATFORM_INITIALIZER */],useValue:_initReflector,multi:true}]);/**
 * @param {?} optionsArr
 * @return {?}
 */function _mergeOptions(optionsArr){return{useDebug:_lastDefined(optionsArr.map(function(options){return options.useDebug;})),useJit:_lastDefined(optionsArr.map(function(options){return options.useJit;})),defaultEncapsulation:_lastDefined(optionsArr.map(function(options){return options.defaultEncapsulation;})),providers:_mergeArrays(optionsArr.map(function(options){return options.providers;})),missingTranslation:_lastDefined(optionsArr.map(function(options){return options.missingTranslation;}))};}/**
 * @param {?} args
 * @return {?}
 */function _lastDefined(args){for(var/** @type {?} */i=args.length-1;i>=0;i--){if(args[i]!==undefined){return args[i];}}return undefined;}/**
 * @param {?} parts
 * @return {?}
 */function _mergeArrays(parts){var/** @type {?} */result=[];parts.forEach(function(part){return part&&result.push.apply(result,_toConsumableArray(part));});return result;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * Interface that defines how import statements should be generated.
 * @abstract
 */var ImportResolver=function(){function ImportResolver(){_classCallCheck(this,ImportResolver);}_createClass(ImportResolver,[{key:'fileNameToModuleName',/**
     * Converts a file path to a module name that can be used as an `import.
     * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.
     * @abstract
     * @param {?} importedFilePath
     * @param {?} containingFilePath
     * @return {?}
     */value:function fileNameToModuleName(importedFilePath,containingFilePath){}/**
     * Converts the given StaticSymbol into another StaticSymbol that should be used
     * to generate the import from.
     * @abstract
     * @param {?} symbol
     * @return {?}
     */},{key:'getImportAs',value:function getImportAs(symbol){}/**
     * Determine the airty of a type.
     * @abstract
     * @param {?} symbol
     * @return {?}
     */},{key:'getTypeArity',value:function getTypeArity(symbol){}}]);return ImportResolver;}();


/***/ }),
/* 176 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_filter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_filter__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__media_query_module__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__api_flex__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__api_layout__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__api_hide__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__api_show__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__api_flex_align__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__api_flex_fill__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__api_flex_offset__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__api_flex_order__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__api_layout_align__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__api_layout_wrap__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__api_layout_gap__ = __webpack_require__(184);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FlexLayoutModule; });
















/**
 * Since the equivalent results are easily achieved with a css class attached to each
 * layout child, these have been deprecated and removed from the API.
 *
 *  import {LayoutPaddingDirective} from './api/layout-padding';
 *  import {LayoutMarginDirective} from './api/layout-margin';
 */
var ALL_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_6__api_layout__["a" /* LayoutDirective */],
    __WEBPACK_IMPORTED_MODULE_14__api_layout_wrap__["a" /* LayoutWrapDirective */],
    __WEBPACK_IMPORTED_MODULE_15__api_layout_gap__["a" /* LayoutGapDirective */],
    __WEBPACK_IMPORTED_MODULE_13__api_layout_align__["a" /* LayoutAlignDirective */],
    __WEBPACK_IMPORTED_MODULE_5__api_flex__["a" /* FlexDirective */],
    __WEBPACK_IMPORTED_MODULE_12__api_flex_order__["a" /* FlexOrderDirective */],
    __WEBPACK_IMPORTED_MODULE_11__api_flex_offset__["a" /* FlexOffsetDirective */],
    __WEBPACK_IMPORTED_MODULE_10__api_flex_fill__["a" /* FlexFillDirective */],
    __WEBPACK_IMPORTED_MODULE_9__api_flex_align__["a" /* FlexAlignDirective */],
    __WEBPACK_IMPORTED_MODULE_8__api_show__["a" /* ShowDirective */],
    __WEBPACK_IMPORTED_MODULE_7__api_hide__["a" /* HideDirective */],
];
/**
 *
 */
var FlexLayoutModule = (function () {
    function FlexLayoutModule() {
    }
    FlexLayoutModule.forRoot = function () {
        return { ngModule: FlexLayoutModule, providers: [__WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__["a" /* MediaMonitor */]] };
    };
    FlexLayoutModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__["b" /* NgModule */], args: [{
                    declarations: ALL_DIRECTIVES,
                    imports: [__WEBPACK_IMPORTED_MODULE_4__media_query_module__["a" /* MediaQueriesModule */]],
                    exports: [__WEBPACK_IMPORTED_MODULE_4__media_query_module__["a" /* MediaQueriesModule */]].concat(ALL_DIRECTIVES),
                    providers: []
                },] },
    ];
    /** @nocollapse */
    FlexLayoutModule.ctorParameters = function () { return []; };
    return FlexLayoutModule;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/_module.js.map

/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FlexAlignDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};



/**
 * 'flex-align' flexbox styling directive
 * Allows element-specific overrides for cross-axis alignments in a layout container
 * @see https://css-tricks.com/almanac/properties/a/align-self/
 */
var FlexAlignDirective = (function (_super) {
    __extends(FlexAlignDirective, _super);
    function FlexAlignDirective(monitor, elRef, renderer) {
        _super.call(this, monitor, elRef, renderer);
    }
    Object.defineProperty(FlexAlignDirective.prototype, "align", {
        set: function (val) {
            this._cacheInput('align', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexAlignDirective.prototype, "alignXs", {
        set: function (val) {
            this._cacheInput('alignXs', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexAlignDirective.prototype, "alignGtXs", {
        set: function (val) {
            this._cacheInput('alignGtXs', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexAlignDirective.prototype, "alignSm", {
        set: function (val) {
            this._cacheInput('alignSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexAlignDirective.prototype, "alignGtSm", {
        set: function (val) {
            this._cacheInput('alignGtSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexAlignDirective.prototype, "alignMd", {
        set: function (val) {
            this._cacheInput('alignMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexAlignDirective.prototype, "alignGtMd", {
        set: function (val) {
            this._cacheInput('alignGtMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexAlignDirective.prototype, "alignLg", {
        set: function (val) {
            this._cacheInput('alignLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexAlignDirective.prototype, "alignGtLg", {
        set: function (val) {
            this._cacheInput('alignGtLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexAlignDirective.prototype, "alignXl", {
        set: function (val) {
            this._cacheInput('alignXl', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    FlexAlignDirective.prototype.ngOnChanges = function (changes) {
        if (changes['align'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    FlexAlignDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('align', 'stretch', function (changes) {
            _this._updateWithValue(changes.value);
        });
        this._updateWithValue();
    };
    // *********************************************
    // Protected methods
    // *********************************************
    FlexAlignDirective.prototype._updateWithValue = function (value) {
        value = value || this._queryInput("align") || 'stretch';
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        this._applyStyleToElement(this._buildCSS(value));
    };
    FlexAlignDirective.prototype._buildCSS = function (align) {
        var css = {};
        // Cross-axis
        switch (align) {
            case 'start':
                css['align-self'] = 'flex-start';
                break;
            case 'end':
                css['align-self'] = 'flex-end';
                break;
            default:
                css['align-self'] = align;
                break;
        }
        return css;
    };
    FlexAlignDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                    selector: "\n  [fxFlexAlign],\n  [fxFlexAlign.xs],\n  [fxFlexAlign.gt-xs],\n  [fxFlexAlign.sm],\n  [fxFlexAlign.gt-sm],\n  [fxFlexAlign.md],\n  [fxFlexAlign.gt-md],\n  [fxFlexAlign.lg],\n  [fxFlexAlign.gt-lg],\n  [fxFlexAlign.xl]\n"
                },] },
    ];
    /** @nocollapse */
    FlexAlignDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    ]; };
    FlexAlignDirective.propDecorators = {
        'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign',] },],
        'alignXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.xs',] },],
        'alignGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.gt-xs',] },],
        'alignSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.sm',] },],
        'alignGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.gt-sm',] },],
        'alignMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.md',] },],
        'alignGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.gt-md',] },],
        'alignLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.lg',] },],
        'alignGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.gt-lg',] },],
        'alignXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexAlign.xl',] },],
    };
    return FlexAlignDirective;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/flex-align.js.map

/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(15);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FlexFillDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};



var FLEX_FILL_CSS = {
    'margin': 0,
    'width': '100%',
    'height': '100%',
    'min-width': '100%',
    'min-height': '100%'
};
/**
 * 'fxFill' flexbox styling directive
 *  Maximizes width and height of element in a layout container
 *
 *  NOTE: fxFill is NOT responsive API!!
 */
var FlexFillDirective = (function (_super) {
    __extends(FlexFillDirective, _super);
    function FlexFillDirective(monitor, elRef, renderer) {
        _super.call(this, monitor, elRef, renderer);
        this.elRef = elRef;
        this.renderer = renderer;
        this._applyStyleToElement(FLEX_FILL_CSS);
    }
    FlexFillDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: "\n  [fxFill],\n  [fxFlexFill]\n" },] },
    ];
    /** @nocollapse */
    FlexFillDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_1__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    ]; };
    return FlexFillDirective;
}(__WEBPACK_IMPORTED_MODULE_2__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/flex-fill.js.map

/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FlexOffsetDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};



/**
 * 'flex-offset' flexbox styling directive
 * Configures the 'margin-left' of the element in a layout container
 */
var FlexOffsetDirective = (function (_super) {
    __extends(FlexOffsetDirective, _super);
    function FlexOffsetDirective(monitor, elRef, renderer) {
        _super.call(this, monitor, elRef, renderer);
    }
    Object.defineProperty(FlexOffsetDirective.prototype, "offset", {
        set: function (val) { this._cacheInput('offset', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetXs", {
        set: function (val) { this._cacheInput('offsetXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtXs", {
        set: function (val) { this._cacheInput('offsetGtXs', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetSm", {
        set: function (val) { this._cacheInput('offsetSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtSm", {
        set: function (val) { this._cacheInput('offsetGtSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetMd", {
        set: function (val) { this._cacheInput('offsetMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtMd", {
        set: function (val) { this._cacheInput('offsetGtMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetLg", {
        set: function (val) { this._cacheInput('offsetLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtLg", {
        set: function (val) { this._cacheInput('offsetGtLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetXl", {
        set: function (val) { this._cacheInput('offsetXl', val); },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    FlexOffsetDirective.prototype.ngOnChanges = function (changes) {
        if (changes['offset'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    FlexOffsetDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('offset', 0, function (changes) {
            _this._updateWithValue(changes.value);
        });
    };
    // *********************************************
    // Protected methods
    // *********************************************
    FlexOffsetDirective.prototype._updateWithValue = function (value) {
        value = value || this._queryInput("offset") || 0;
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        this._applyStyleToElement(this._buildCSS(value));
    };
    FlexOffsetDirective.prototype._buildCSS = function (offset) {
        var isPercent = String(offset).indexOf('%') > -1;
        var isPx = String(offset).indexOf('px') > -1;
        if (!isPx && !isPercent && !isNaN(offset)) {
            offset = offset + '%';
        }
        return { 'margin-left': "" + offset };
    };
    FlexOffsetDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: "\n  [fxFlexOffset],\n  [fxFlexOffset.xs],\n  [fxFlexOffset.gt-xs],\n  [fxFlexOffset.sm],\n  [fxFlexOffset.gt-sm],\n  [fxFlexOffset.md],\n  [fxFlexOffset.gt-md],\n  [fxFlexOffset.lg],\n  [fxFlexOffset.gt-lg],\n  [fxFlexOffset.xl]\n" },] },
    ];
    /** @nocollapse */
    FlexOffsetDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    ]; };
    FlexOffsetDirective.propDecorators = {
        'offset': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset',] },],
        'offsetXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.xs',] },],
        'offsetGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.gt-xs',] },],
        'offsetSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.sm',] },],
        'offsetGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.gt-sm',] },],
        'offsetMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.md',] },],
        'offsetGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.gt-md',] },],
        'offsetLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.lg',] },],
        'offsetGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.gt-lg',] },],
        'offsetXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOffset.xl',] },],
    };
    return FlexOffsetDirective;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/flex-offset.js.map

/***/ }),
/* 180 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FlexOrderDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};



/**
 * 'flex-order' flexbox styling directive
 * Configures the positional ordering of the element in a sorted layout container
 * @see https://css-tricks.com/almanac/properties/o/order/
 */
var FlexOrderDirective = (function (_super) {
    __extends(FlexOrderDirective, _super);
    function FlexOrderDirective(monitor, elRef, renderer) {
        _super.call(this, monitor, elRef, renderer);
    }
    Object.defineProperty(FlexOrderDirective.prototype, "order", {
        set: function (val) { this._cacheInput('order', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOrderDirective.prototype, "orderXs", {
        set: function (val) { this._cacheInput('orderXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtXs", {
        set: function (val) { this._cacheInput('orderGtXs', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOrderDirective.prototype, "orderSm", {
        set: function (val) { this._cacheInput('orderSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtSm", {
        set: function (val) { this._cacheInput('orderGtSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOrderDirective.prototype, "orderMd", {
        set: function (val) { this._cacheInput('orderMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtMd", {
        set: function (val) { this._cacheInput('orderGtMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOrderDirective.prototype, "orderLg", {
        set: function (val) { this._cacheInput('orderLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtLg", {
        set: function (val) { this._cacheInput('orderGtLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexOrderDirective.prototype, "orderXl", {
        set: function (val) { this._cacheInput('orderXl', val); },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    FlexOrderDirective.prototype.ngOnChanges = function (changes) {
        if (changes['order'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    FlexOrderDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('order', '0', function (changes) {
            _this._updateWithValue(changes.value);
        });
        this._updateWithValue();
    };
    // *********************************************
    // Protected methods
    // *********************************************
    FlexOrderDirective.prototype._updateWithValue = function (value) {
        value = value || this._queryInput("order") || '0';
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        this._applyStyleToElement(this._buildCSS(value));
    };
    FlexOrderDirective.prototype._buildCSS = function (value) {
        value = parseInt(value, 10);
        return { order: isNaN(value) ? 0 : value };
    };
    FlexOrderDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: "\n  [fxFlexOrder],\n  [fxFlexOrder.xs],\n  [fxFlexOrder.gt-xs],\n  [fxFlexOrder.sm],\n  [fxFlexOrder.gt-sm],\n  [fxFlexOrder.md],\n  [fxFlexOrder.gt-md],\n  [fxFlexOrder.lg],\n  [fxFlexOrder.gt-lg],\n  [fxFlexOrder.xl]\n" },] },
    ];
    /** @nocollapse */
    FlexOrderDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    ]; };
    FlexOrderDirective.propDecorators = {
        'order': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder',] },],
        'orderXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.xs',] },],
        'orderGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.gt-xs',] },],
        'orderSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.sm',] },],
        'orderGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.gt-sm',] },],
        'orderMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.md',] },],
        'orderGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.gt-md',] },],
        'orderLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.lg',] },],
        'orderGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.gt-lg',] },],
        'orderXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlexOrder.xl',] },],
    };
    return FlexOrderDirective;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/flex-order.js.map

/***/ }),
/* 181 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_object_extend__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__layout__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__layout_wrap__ = __webpack_require__(101);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FlexDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};






/**
 * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.
 * Corresponds to the css `flex` shorthand property.
 *
 * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/
 */
var FlexDirective = (function (_super) {
    __extends(FlexDirective, _super);
    // Explicitly @SkipSelf on LayoutDirective and LayoutWrapDirective because we want the
    // parent flex container for this flex item.
    function FlexDirective(monitor, elRef, renderer, _container, _wrap) {
        var _this = this;
        _super.call(this, monitor, elRef, renderer);
        this._container = _container;
        this._wrap = _wrap;
        /** The flex-direction of this element's flex container. Defaults to 'row'. */
        this._layout = 'row';
        this._cacheInput("flex", "");
        this._cacheInput("shrink", 1);
        this._cacheInput("grow", 1);
        if (_container) {
            // If this flex item is inside of a flex container marked with
            // Subscribe to layout immediate parent direction changes
            this._layoutWatcher = _container.layout$.subscribe(function (direction) {
                // `direction` === null if parent container does not have a `fxLayout`
                _this._onLayoutChange(direction);
            });
        }
    }
    Object.defineProperty(FlexDirective.prototype, "flex", {
        set: function (val) {
            this._cacheInput("flex", val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexDirective.prototype, "shrink", {
        set: function (val) {
            this._cacheInput("shrink", val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexDirective.prototype, "grow", {
        set: function (val) {
            this._cacheInput("grow", val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexDirective.prototype, "flexXs", {
        set: function (val) {
            this._cacheInput('flexXs', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexDirective.prototype, "flexGtXs", {
        set: function (val) {
            this._cacheInput('flexGtXs', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexDirective.prototype, "flexSm", {
        set: function (val) {
            this._cacheInput('flexSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexDirective.prototype, "flexGtSm", {
        set: function (val) {
            this._cacheInput('flexGtSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexDirective.prototype, "flexMd", {
        set: function (val) {
            this._cacheInput('flexMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexDirective.prototype, "flexGtMd", {
        set: function (val) {
            this._cacheInput('flexGtMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexDirective.prototype, "flexLg", {
        set: function (val) {
            this._cacheInput('flexLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexDirective.prototype, "flexGtLg", {
        set: function (val) {
            this._cacheInput('flexGtLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(FlexDirective.prototype, "flexXl", {
        set: function (val) {
            this._cacheInput('flexXl', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    FlexDirective.prototype.ngOnChanges = function (changes) {
        if (changes['flex'] != null || this._mqActivation) {
            this._onLayoutChange();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    FlexDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('flex', '', function (changes) {
            _this._updateStyle(changes.value);
        });
        this._onLayoutChange();
    };
    FlexDirective.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
        if (this._layoutWatcher) {
            this._layoutWatcher.unsubscribe();
        }
    };
    /**
     * Caches the parent container's 'flex-direction' and updates the element's style.
     * Used as a handler for layout change events from the parent flex container.
     */
    FlexDirective.prototype._onLayoutChange = function (direction) {
        this._layout = direction || this._layout || "row";
        this._updateStyle();
    };
    FlexDirective.prototype._updateStyle = function (value) {
        var flexBasis = value || this._queryInput("flex") || '';
        if (this._mqActivation) {
            flexBasis = this._mqActivation.activatedInput;
        }
        this._applyStyleToElement(this._validateValue.apply(this, this._parseFlexParts(String(flexBasis))));
    };
    /**
     * If the used the short-form `fxFlex="1 0 37%"`, then parse the parts
     */
    FlexDirective.prototype._parseFlexParts = function (basis) {
        basis = basis.replace(";", "");
        var hasCalc = basis && basis.indexOf("calc") > -1;
        var matches = !hasCalc ? basis.split(" ") : this._getPartsWithCalc(basis.trim());
        return (matches.length === 3) ? matches : [this._queryInput("grow"),
            this._queryInput("shrink"), basis];
    };
    /**
     * Extract more complicated short-hand versions.
     * e.g.
     * fxFlex="3 3 calc(15em + 20px)"
     */
    FlexDirective.prototype._getPartsWithCalc = function (value) {
        var parts = [this._queryInput("grow"), this._queryInput("shrink"), value];
        var j = value.indexOf('calc');
        if (j > 0) {
            parts[2] = value.substring(j);
            var matches = value.substr(0, j).trim().split(" ");
            if (matches.length == 2) {
                parts[0] = matches[0];
                parts[1] = matches[1];
            }
        }
        return parts;
    };
    /**
     * Validate the value to be one of the acceptable value options
     * Use default fallback of "row"
     */
    FlexDirective.prototype._validateValue = function (grow, shrink, basis) {
        var css, isValue;
        var direction = (this._layout === 'column') || (this._layout == 'column-reverse') ?
            'column' :
            'row';
        // flex-basis allows you to specify the initial/starting main-axis size of the element,
        // before anything else is computed. It can either be a percentage or an absolute value.
        // It is, however, not the breaking point for flex-grow/shrink properties
        //
        // flex-grow can be seen as this:
        //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.
        //   1: (Default value). Stretch; will be the same size to all other flex items on
        //       the same row since they have a default value of 1.
        //   ≥2 (integer n): Stretch. Will be n times the size of other elements
        //      with 'flex-grow: 1' on the same row.
        // Use `null` to clear existing styles.
        var clearStyles = {
            'max-width': null,
            'max-height': null,
            'min-width': null,
            'min-height': null
        };
        switch (basis || '') {
            case '':
                css = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(clearStyles, { 'flex': '1 1 0.000000001px' });
                break;
            case 'initial': // default
            case 'nogrow':
                css = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(clearStyles, { 'flex': '0 1 auto' });
                break;
            case 'grow':
                css = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(clearStyles, { 'flex': '1 1 100%' });
                break;
            case 'noshrink':
                shrink = 0;
                css = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(clearStyles, { 'flex': '1 0 auto' });
                break;
            case 'auto':
                css = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(clearStyles, { 'flex': grow + " " + shrink + " auto" });
                break;
            case 'none':
                shrink = 0;
                css = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(clearStyles, { 'flex': '0 0 auto' });
                break;
            default:
                var isPercent = String(basis).indexOf('%') > -1;
                isValue = String(basis).indexOf('px') > -1 ||
                    String(basis).indexOf('calc') > -1 ||
                    String(basis).indexOf('em') > -1 ||
                    String(basis).indexOf('vw') > -1 ||
                    String(basis).indexOf('vh') > -1;
                // Defaults to percentage sizing unless `px` is explicitly set
                if (!isValue && !isPercent && !isNaN(basis)) {
                    basis = basis + '%';
                }
                if (basis === '0px') {
                    basis = '0%';
                }
                // Set max-width = basis if using layout-wrap
                // tslint:disable-next-line:max-line-length
                // @see https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrappifl-flex-items
                css = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(clearStyles, {
                    'flex': grow + " " + shrink + " " + ((isValue || this._wrap) ? basis : '100%'),
                });
                break;
        }
        var max = (direction === 'row') ? 'max-width' : 'max-height';
        var min = (direction === 'row') ? 'min-width' : 'min-height';
        var usingCalc = String(basis).indexOf('calc') > -1;
        var isPx = String(basis).indexOf('px') > -1 || usingCalc;
        css[min] = (basis == '0%') ? 0 : isPx ? basis : null;
        css[max] = (basis == '0%') ? 0 : usingCalc ? null : basis;
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(css, { 'box-sizing': 'border-box' });
    };
    FlexDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                    selector: "\n  [fxFlex],\n  [fxFlex.xs],\n  [fxFlex.gt-xs],\n  [fxFlex.sm],\n  [fxFlex.gt-sm],\n  [fxFlex.md],\n  [fxFlex.gt-md],\n  [fxFlex.lg],\n  [fxFlex.gt-lg],\n  [fxFlex.xl]\n"
                },] },
    ];
    /** @nocollapse */
    FlexDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
        { type: __WEBPACK_IMPORTED_MODULE_4__layout__["a" /* LayoutDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */] },] },
        { type: __WEBPACK_IMPORTED_MODULE_5__layout_wrap__["a" /* LayoutWrapDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */] },] },
    ]; };
    FlexDirective.propDecorators = {
        'flex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex',] },],
        'shrink': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShrink',] },],
        'grow': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxGrow',] },],
        'flexXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.xs',] },],
        'flexGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.gt-xs',] },],
        'flexSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.sm',] },],
        'flexGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.gt-sm',] },],
        'flexMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.md',] },],
        'flexGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.gt-md',] },],
        'flexLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.lg',] },],
        'flexGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.gt-lg',] },],
        'flexXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxFlex.xl',] },],
    };
    return FlexDirective;
}(__WEBPACK_IMPORTED_MODULE_2__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/flex.js.map

/***/ }),
/* 182 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__layout__ = __webpack_require__(27);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HideDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};




/**
 * 'show' Layout API directive
 *
 */
var HideDirective = (function (_super) {
    __extends(HideDirective, _super);
    /**
     *
     */
    function HideDirective(monitor, _layout, elRef, renderer) {
        var _this = this;
        _super.call(this, monitor, elRef, renderer);
        this._layout = _layout;
        this.elRef = elRef;
        this.renderer = renderer;
        this._display = this._getDisplayStyle(); // re-invoke override to use `this._layout`
        if (_layout) {
            /**
             * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.
             * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS
             */
            this._layoutWatcher = _layout.layout$.subscribe(function () { return _this._updateWithValue(); });
        }
    }
    Object.defineProperty(HideDirective.prototype, "hide", {
        set: function (val) {
            this._cacheInput("hide", val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HideDirective.prototype, "hideXs", {
        set: function (val) {
            this._cacheInput('hideXs', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HideDirective.prototype, "hideGtXs", {
        set: function (val) {
            this._cacheInput('hideGtXs', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(HideDirective.prototype, "hideSm", {
        set: function (val) {
            this._cacheInput('hideSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(HideDirective.prototype, "hideGtSm", {
        set: function (val) {
            this._cacheInput('hideGtSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(HideDirective.prototype, "hideMd", {
        set: function (val) {
            this._cacheInput('hideMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(HideDirective.prototype, "hideGtMd", {
        set: function (val) {
            this._cacheInput('hideGtMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(HideDirective.prototype, "hideLg", {
        set: function (val) {
            this._cacheInput('hideLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(HideDirective.prototype, "hideGtLg", {
        set: function (val) {
            this._cacheInput('hideGtLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(HideDirective.prototype, "hideXl", {
        set: function (val) {
            this._cacheInput('hideXl', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    /**
     * Override accessor to the current HTMLElement's `display` style
     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'
     * unless it was already explicitly defined.
     */
    HideDirective.prototype._getDisplayStyle = function () {
        var element = this._elementRef.nativeElement;
        return element.style['display'] || (this._layout ? "flex" : "block");
    };
    /**
     * On changes to any @Input properties...
     * Default to use the non-responsive Input value ('fxHide')
     * Then conditionally override with the mq-activated Input's current value
     */
    HideDirective.prototype.ngOnChanges = function (changes) {
        if (changes['hide'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    HideDirective.prototype.ngOnInit = function () {
        var _this = this;
        var value = this._getDefaultVal("hide", false);
        this._listenForMediaQueryChanges('hide', value, function (changes) {
            _this._updateWithValue(changes.value);
        });
        this._updateWithValue();
    };
    HideDirective.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
        if (this._layoutWatcher) {
            this._layoutWatcher.unsubscribe();
        }
    };
    // *********************************************
    // Protected methods
    // *********************************************
    /**
     * Validate the visibility value and then update the host's inline display style
     */
    HideDirective.prototype._updateWithValue = function (value) {
        value = value || this._getDefaultVal("hide", false);
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        var shouldHide = this._validateTruthy(value);
        this._applyStyleToElement(this._buildCSS(shouldHide));
    };
    /**
     * Build the CSS that should be assigned to the element instance
     */
    HideDirective.prototype._buildCSS = function (value) {
        return { 'display': value ? 'none' : this._display };
    };
    /**
     * Validate the value to NOT be FALSY
     */
    HideDirective.prototype._validateTruthy = function (value) {
        return FALSY.indexOf(value) === -1;
    };
    HideDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                    selector: "\n  [fxHide],\n  [fxHide.xs],\n  [fxHide.gt-xs],\n  [fxHide.sm],\n  [fxHide.gt-sm],\n  [fxHide.md],\n  [fxHide.gt-md],\n  [fxHide.lg],\n  [fxHide.gt-lg],\n  [fxHide.xl]\n"
                },] },
    ];
    /** @nocollapse */
    HideDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_3__layout__["a" /* LayoutDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */] },] },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    ]; };
    HideDirective.propDecorators = {
        'hide': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide',] },],
        'hideXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.xs',] },],
        'hideGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.gt-xs',] },],
        'hideSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.sm',] },],
        'hideGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.gt-sm',] },],
        'hideMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.md',] },],
        'hideGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.gt-md',] },],
        'hideLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.lg',] },],
        'hideGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.gt-lg',] },],
        'hideXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxHide.xl',] },],
    };
    return HideDirective;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* BaseFxDirective */]));
var FALSY = ['false', false, 0];
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/hide.js.map

/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_object_extend__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__layout__ = __webpack_require__(27);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LayoutAlignDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};





/**
 * 'layout-align' flexbox styling directive
 *  Defines positioning of child elements along main and cross axis in a layout container
 *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs
 *
 *  @see https://css-tricks.com/almanac/properties/j/justify-content/
 *  @see https://css-tricks.com/almanac/properties/a/align-items/
 *  @see https://css-tricks.com/almanac/properties/a/align-content/
 */
var LayoutAlignDirective = (function (_super) {
    __extends(LayoutAlignDirective, _super);
    function LayoutAlignDirective(monitor, elRef, renderer, container) {
        _super.call(this, monitor, elRef, renderer);
        this._layout = 'row'; // default flex-direction
        if (container) {
            this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));
        }
    }
    Object.defineProperty(LayoutAlignDirective.prototype, "align", {
        set: function (val) { this._cacheInput('align', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutAlignDirective.prototype, "alignXs", {
        set: function (val) { this._cacheInput('alignXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtXs", {
        set: function (val) { this._cacheInput('alignGtXs', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutAlignDirective.prototype, "alignSm", {
        set: function (val) { this._cacheInput('alignSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtSm", {
        set: function (val) { this._cacheInput('alignGtSm', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutAlignDirective.prototype, "alignMd", {
        set: function (val) { this._cacheInput('alignMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtMd", {
        set: function (val) { this._cacheInput('alignGtMd', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutAlignDirective.prototype, "alignLg", {
        set: function (val) { this._cacheInput('alignLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtLg", {
        set: function (val) { this._cacheInput('alignGtLg', val); },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutAlignDirective.prototype, "alignXl", {
        set: function (val) { this._cacheInput('alignXl', val); },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    LayoutAlignDirective.prototype.ngOnChanges = function (changes) {
        if (changes['align'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    LayoutAlignDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('align', 'start stretch', function (changes) {
            _this._updateWithValue(changes.value);
        });
        this._updateWithValue();
    };
    LayoutAlignDirective.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
        if (this._layoutWatcher) {
            this._layoutWatcher.unsubscribe();
        }
    };
    // *********************************************
    // Protected methods
    // *********************************************
    /**
     *
     */
    LayoutAlignDirective.prototype._updateWithValue = function (value) {
        value = value || this._queryInput("align") || 'start stretch';
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        this._applyStyleToElement(this._buildCSS(value));
        this._allowStretching(value, !this._layout ? "row" : this._layout);
    };
    /**
     * Cache the parent container 'flex-direction' and update the 'flex' styles
     */
    LayoutAlignDirective.prototype._onLayoutChange = function (direction) {
        var _this = this;
        this._layout = (direction || '').toLowerCase();
        if (!__WEBPACK_IMPORTED_MODULE_4__layout__["b" /* LAYOUT_VALUES */].find(function (x) { return x === _this._layout; })) {
            this._layout = 'row';
        }
        var value = this._queryInput("align") || 'start stretch';
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        this._allowStretching(value, this._layout || "row");
    };
    LayoutAlignDirective.prototype._buildCSS = function (align) {
        var css = {}, _a = align.split(' '), main_axis = _a[0], cross_axis = _a[1]; // tslint:disable-line:variable-name
        css['justify-content'] = 'flex-start'; // default main axis
        css['align-items'] = 'stretch'; // default cross axis
        css['align-content'] = 'stretch'; // default cross axis
        // Main axis
        switch (main_axis) {
            case 'center':
                css['justify-content'] = 'center';
                break;
            case 'space-around':
                css['justify-content'] = 'space-around';
                break;
            case 'space-between':
                css['justify-content'] = 'space-between';
                break;
            case 'end':
                css['justify-content'] = 'flex-end';
                break;
        }
        // Cross-axis
        switch (cross_axis) {
            case 'start':
                css['align-items'] = css['align-content'] = 'flex-start';
                break;
            case 'baseline':
                css['align-items'] = 'baseline';
                break;
            case 'center':
                css['align-items'] = css['align-content'] = 'center';
                break;
            case 'end':
                css['align-items'] = css['align-content'] = 'flex-end';
                break;
            default:
                break;
        }
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_object_extend__["a" /* extendObject */])(css, {
            'display': 'flex',
            'flex-direction': this._layout || "row",
            'box-sizing': 'border-box'
        });
    };
    /**
     * Update container element to 'stretch' as needed...
     * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'
     */
    LayoutAlignDirective.prototype._allowStretching = function (align, layout) {
        var _a = align.split(' '), cross_axis = _a[1]; // tslint:disable-line:variable-name
        if (cross_axis == 'stretch') {
            // Use `null` values to remove style
            this._applyStyleToElement({
                'box-sizing': 'border-box',
                'max-width': (layout === 'column') ? '100%' : null,
                'max-height': (layout === 'row') ? '100%' : null
            });
        }
    };
    LayoutAlignDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: "\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs],\n  [fxLayoutAlign.gt-xs],\n  [fxLayoutAlign.sm],\n  [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.md],\n  [fxLayoutAlign.gt-md],\n  [fxLayoutAlign.lg],\n  [fxLayoutAlign.gt-lg],\n  [fxLayoutAlign.xl]\n" },] },
    ];
    /** @nocollapse */
    LayoutAlignDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_3__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
        { type: __WEBPACK_IMPORTED_MODULE_4__layout__["a" /* LayoutDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */] },] },
    ]; };
    LayoutAlignDirective.propDecorators = {
        'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign',] },],
        'alignXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.xs',] },],
        'alignGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.gt-xs',] },],
        'alignSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.sm',] },],
        'alignGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.gt-sm',] },],
        'alignMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.md',] },],
        'alignGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.gt-md',] },],
        'alignLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.lg',] },],
        'alignGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.gt-lg',] },],
        'alignXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutAlign.xl',] },],
    };
    return LayoutAlignDirective;
}(__WEBPACK_IMPORTED_MODULE_2__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/layout-align.js.map

/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__layout__ = __webpack_require__(27);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LayoutGapDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};




/**
 * 'layout-padding' styling directive
 *  Defines padding of child elements in a layout container
 */
var LayoutGapDirective = (function (_super) {
    __extends(LayoutGapDirective, _super);
    function LayoutGapDirective(monitor, elRef, renderer, container) {
        _super.call(this, monitor, elRef, renderer);
        this._layout = 'row'; // default flex-direction
        if (container) {
            this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));
        }
    }
    Object.defineProperty(LayoutGapDirective.prototype, "gap", {
        set: function (val) {
            this._cacheInput('gap', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutGapDirective.prototype, "gapXs", {
        set: function (val) {
            this._cacheInput('gapXs', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutGapDirective.prototype, "gapGtXs", {
        set: function (val) {
            this._cacheInput('gapGtXs', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutGapDirective.prototype, "gapSm", {
        set: function (val) {
            this._cacheInput('gapSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutGapDirective.prototype, "gapGtSm", {
        set: function (val) {
            this._cacheInput('gapGtSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutGapDirective.prototype, "gapMd", {
        set: function (val) {
            this._cacheInput('gapMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutGapDirective.prototype, "gapGtMd", {
        set: function (val) {
            this._cacheInput('gapGtMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutGapDirective.prototype, "gapLg", {
        set: function (val) {
            this._cacheInput('gapLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutGapDirective.prototype, "gapGtLg", {
        set: function (val) {
            this._cacheInput('gapGtLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(LayoutGapDirective.prototype, "gapXl", {
        set: function (val) {
            this._cacheInput('gapXl', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    LayoutGapDirective.prototype.ngOnChanges = function (changes) {
        if (changes['gap'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    LayoutGapDirective.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._watchContentChanges();
        this._listenForMediaQueryChanges('gap', '0', function (changes) {
            _this._updateWithValue(changes.value);
        });
        this._updateWithValue();
    };
    LayoutGapDirective.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
        if (this._layoutWatcher) {
            this._layoutWatcher.unsubscribe();
        }
        if (this._observer) {
            this._observer.disconnect();
        }
    };
    // *********************************************
    // Protected methods
    // *********************************************
    /**
     * Watch for child nodes to be added... and apply the layout gap styles to each.
     * NOTE: this does NOT! differentiate between viewChildren and contentChildren
     */
    LayoutGapDirective.prototype._watchContentChanges = function () {
        var _this = this;
        var onMutationCallback = function (mutations) {
            // update gap styles only for 'addedNodes' events
            mutations
                .filter(function (it) { return it.addedNodes && it.addedNodes.length; })
                .map(function () { return _this._updateWithValue(); });
        };
        this._observer = new MutationObserver(onMutationCallback);
        this._observer.observe(this._elementRef.nativeElement, { childList: true });
    };
    /**
     * Cache the parent container 'flex-direction' and update the 'margin' styles
     */
    LayoutGapDirective.prototype._onLayoutChange = function (direction) {
        var _this = this;
        this._layout = (direction || '').toLowerCase();
        if (!__WEBPACK_IMPORTED_MODULE_3__layout__["b" /* LAYOUT_VALUES */].find(function (x) { return x === _this._layout; })) {
            this._layout = 'row';
        }
        this._updateWithValue();
    };
    /**
     *
     */
    LayoutGapDirective.prototype._updateWithValue = function (value) {
        value = value || this._queryInput("gap") || '0';
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        // Reset 1st child element to 0px gap
        var items = this.childrenNodes
            .filter(function (el) { return (el.nodeType === 1); }) // only Element types
            .filter(function (el, j) { return j == 0; });
        this._applyStyleToElements(this._buildCSS(0), items);
        // For each `element` child, set the padding styles...
        items = this.childrenNodes
            .filter(function (el) { return (el.nodeType === 1); }) // only Element types
            .filter(function (el, j) { return j > 0; }); // skip first element since gaps are needed
        this._applyStyleToElements(this._buildCSS(value), items);
    };
    /**
     * Prepare margin CSS, remove any previous explicitly
     * assigned margin assignments
     */
    LayoutGapDirective.prototype._buildCSS = function (value) {
        var key, margins = {
            'margin-left': null,
            'margin-right': null,
            'margin-top': null,
            'margin-bottom': null
        };
        switch (this._layout) {
            case 'column':
                key = 'margin-top';
                break;
            case 'column-reverse':
                key = 'margin-bottom';
                break;
            case 'row-reverse':
                key = 'margin-right';
                break;
            case "row":
                key = 'margin-left';
                break;
            default:
                key = 'margin-left';
                break;
        }
        margins[key] = value;
        return margins;
    };
    LayoutGapDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                    selector: "\n  [fxLayoutGap],\n  [fxLayoutGap.xs],\n  [fxLayoutGap.gt-xs],\n  [fxLayoutGap.sm],\n  [fxLayoutGap.gt-sm]\n  [fxLayoutGap.md],\n  [fxLayoutGap.gt-md]\n  [fxLayoutGap.lg],\n  [fxLayoutGap.gt-lg],\n  [fxLayoutGap.xl]\n"
                },] },
    ];
    /** @nocollapse */
    LayoutGapDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
        { type: __WEBPACK_IMPORTED_MODULE_3__layout__["a" /* LayoutDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */] },] },
    ]; };
    LayoutGapDirective.propDecorators = {
        'gap': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap',] },],
        'gapXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.xs',] },],
        'gapGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.gt-xs',] },],
        'gapSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.sm',] },],
        'gapGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.gt-sm',] },],
        'gapMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.md',] },],
        'gapGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.gt-md',] },],
        'gapLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.lg',] },],
        'gapGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.gt-lg',] },],
        'gapXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxLayoutGap.xl',] },],
    };
    return LayoutGapDirective;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/layout-gap.js.map

/***/ }),
/* 185 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__layout__ = __webpack_require__(27);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ShowDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};




var FALSY = ['false', false, 0];
/**
 * 'show' Layout API directive
 *
 */
var ShowDirective = (function (_super) {
    __extends(ShowDirective, _super);
    /**
     *
     */
    function ShowDirective(monitor, _layout, elRef, renderer) {
        var _this = this;
        _super.call(this, monitor, elRef, renderer);
        this._layout = _layout;
        this.elRef = elRef;
        this.renderer = renderer;
        this._display = this._getDisplayStyle(); // re-invoke override to use `this._layout`
        if (_layout) {
            /**
             * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.
             * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS
             */
            this._layoutWatcher = _layout.layout$.subscribe(function () { return _this._updateWithValue(); });
        }
    }
    Object.defineProperty(ShowDirective.prototype, "show", {
        set: function (val) {
            this._cacheInput("show", val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShowDirective.prototype, "showXs", {
        set: function (val) {
            this._cacheInput('showXs', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShowDirective.prototype, "showGtXs", {
        set: function (val) {
            this._cacheInput('showGtXs', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ShowDirective.prototype, "showSm", {
        set: function (val) {
            this._cacheInput('showSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ShowDirective.prototype, "showGtSm", {
        set: function (val) {
            this._cacheInput('showGtSm', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ShowDirective.prototype, "showMd", {
        set: function (val) {
            this._cacheInput('showMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ShowDirective.prototype, "showGtMd", {
        set: function (val) {
            this._cacheInput('showGtMd', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ShowDirective.prototype, "showLg", {
        set: function (val) {
            this._cacheInput('showLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ShowDirective.prototype, "showGtLg", {
        set: function (val) {
            this._cacheInput('showGtLg', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ShowDirective.prototype, "showXl", {
        set: function (val) {
            this._cacheInput('showXl', val);
        },
        enumerable: true,
        configurable: true
    });
    ;
    // *********************************************
    // Lifecycle Methods
    // *********************************************
    /**
     * Override accessor to the current HTMLElement's `display` style
     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'
     * unless it was already explicitly defined.
     */
    ShowDirective.prototype._getDisplayStyle = function () {
        var element = this._elementRef.nativeElement;
        return element.style['display'] || (this._layout ? "flex" : "block");
    };
    /**
     * On changes to any @Input properties...
     * Default to use the non-responsive Input value ('fxShow')
     * Then conditionally override with the mq-activated Input's current value
     */
    ShowDirective.prototype.ngOnChanges = function (changes) {
        if (changes['show'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    ShowDirective.prototype.ngOnInit = function () {
        var _this = this;
        var value = this._getDefaultVal("show", true);
        this._listenForMediaQueryChanges('show', value, function (changes) {
            _this._updateWithValue(changes.value);
        });
        this._updateWithValue();
    };
    ShowDirective.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
        if (this._layoutWatcher) {
            this._layoutWatcher.unsubscribe();
        }
    };
    // *********************************************
    // Protected methods
    // *********************************************
    /** Validate the visibility value and then update the host's inline display style */
    ShowDirective.prototype._updateWithValue = function (value) {
        value = value || this._getDefaultVal("show", true);
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        var shouldShow = this._validateTruthy(value);
        this._applyStyleToElement(this._buildCSS(shouldShow));
    };
    /** Build the CSS that should be assigned to the element instance */
    ShowDirective.prototype._buildCSS = function (show) {
        return { 'display': show ? this._display : 'none' };
    };
    /**  Validate the to be not FALSY */
    ShowDirective.prototype._validateTruthy = function (show) {
        return (FALSY.indexOf(show) == -1);
    };
    ShowDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                    selector: "\n  [fxShow],\n  [fxShow.xs],\n  [fxShow.gt-xs],\n  [fxShow.sm],\n  [fxShow.gt-sm],\n  [fxShow.md],\n  [fxShow.gt-md],\n  [fxShow.lg],\n  [fxShow.gt-lg],\n  [fxShow.xl]\n"
                },] },
    ];
    /** @nocollapse */
    ShowDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__media_query_media_monitor__["a" /* MediaMonitor */], },
        { type: __WEBPACK_IMPORTED_MODULE_3__layout__["a" /* LayoutDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */] },] },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    ]; };
    ShowDirective.propDecorators = {
        'show': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow',] },],
        'showXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.xs',] },],
        'showGtXs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.gt-xs',] },],
        'showSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.sm',] },],
        'showGtSm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.gt-sm',] },],
        'showMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.md',] },],
        'showGtMd': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.gt-md',] },],
        'showLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.lg',] },],
        'showGtLg': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.gt-lg',] },],
        'showXl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['fxShow.xl',] },],
    };
    return ShowDirective;
}(__WEBPACK_IMPORTED_MODULE_1__base__["a" /* BaseFxDirective */]));
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/api/show.js.map

/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__api_base__ = __webpack_require__(15);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__responsive_responsive_activation__ = __webpack_require__(102);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__module__ = __webpack_require__(176);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_2__module__["a"]; });
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */



//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/flexbox/index.js.map

/***/ }),
/* 187 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__flexbox_index__ = __webpack_require__(186);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__flexbox_index__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__media_query_index__ = __webpack_require__(188);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_index__ = __webpack_require__(190);
/* unused harmony namespace reexport */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */



//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/index.js.map

/***/ }),
/* 188 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__breakpoints_break_point_registry__ = __webpack_require__(51);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_break_points_provider__ = __webpack_require__(70);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_observable_media_service_provider__ = __webpack_require__(105);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__match_media__ = __webpack_require__(52);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__media_change__ = __webpack_require__(104);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__media_monitor__ = __webpack_require__(12);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__module__ = __webpack_require__(103);
/* unused harmony namespace reexport */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */







//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/index.js.map

/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_filter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_filter__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_add_alias__ = __webpack_require__(71);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObservableMediaService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return MediaService; });
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */




/**
 *  Opaque Token unique to the flex-layout library.
 *  Note: Developers must use this token when building their own custom
 *  `ObservableMediaServiceProvider` provider.
 *
 *  @see ./providers/match-media-observable-provider.ts
 */
// tslint:disable-next-line:variable-name
var ObservableMediaService = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["d" /* OpaqueToken */]('flex-layout-media-service');
/**
 * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.

 * This an Observable with that exposes a feature to subscribe to mediaQuery
 * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is
 * currently active.
 *
 * !! Only mediaChange activations (not de-activations) are announced by the ObservableMediaService
 *
 * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange
 * notification. For custom mediaQuery notifications, alias information will not be injected and
 * those fields will be ''.
 *
 * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional
 * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use
 * `.asObservable()` with syntax like media.asObservable().map(....).
 *
 *  @usage
 *
 *  // RxJS
 *  import 'rxjs/add/operator/map';
 *
 *  @Component({ ... })
 *  export class AppComponent {
 *    constructor( @Inject(ObservableMediaService) media) {
 *      media.asObservable()
 *        .map( (change:MediaChange) => change.mqAlias == 'md' )
 *        .subscribe((change:MediaChange) => {
 *          console.log( change ? `'${change.mqAlias}' = (${change.mediaQuery})` : "" );
 *        });
 *    }
 *  }
 */
var MediaService = (function () {
    function MediaService(mediaWatcher, breakpoints) {
        this.mediaWatcher = mediaWatcher;
        this.breakpoints = breakpoints;
        this._registerBreakPoints();
        this.observable$ = this._buildObservable();
    }
    /**
     * Test if specified query/alias is active.
     */
    MediaService.prototype.isActive = function (alias) {
        var query = this._toMediaQuery(alias);
        return this.mediaWatcher.isActive(query);
    };
    ;
    /**
     * Proxy to the Observable subscribe method
     */
    MediaService.prototype.subscribe = function (next, error, complete) {
        return this.observable$.subscribe(next, error, complete);
    };
    ;
    /**
     * Access to observable for use with operators like
     * .filter(), .map(), etc.
     */
    MediaService.prototype.asObservable = function () {
        return this.observable$;
    };
    // ************************************************
    // Internal Methods
    // ************************************************
    /**
     * Register all the mediaQueries registered in the BreakPointRegistry
     * This is needed so subscribers can be auto-notified of all standard, registered
     * mediaQuery activations
     */
    MediaService.prototype._registerBreakPoints = function () {
        var _this = this;
        this.breakpoints.items.forEach(function (bp) {
            _this.mediaWatcher.registerQuery(bp.mediaQuery);
            return bp;
        });
    };
    /**
     * Prepare internal observable
     * NOTE: the raw MediaChange events [from MatchMedia] do not contain important alias information
     * these must be injected into the MediaChange
     */
    MediaService.prototype._buildObservable = function () {
        var _this = this;
        return this.mediaWatcher.observe()
            .filter(function (change) {
            // Only pass/announce activations (not de-activations)
            return change.matches === true;
        })
            .map(function (change) {
            // Inject associated (if any) alias information into the MediaChange event
            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_add_alias__["a" /* mergeAlias */])(change, _this._findByQuery(change.mediaQuery));
        });
    };
    /**
     * Breakpoint locator by alias
     */
    MediaService.prototype._findByAlias = function (alias) {
        return this.breakpoints.findByAlias(alias);
    };
    ;
    /**
     * Breakpoint locator by mediaQuery
     */
    MediaService.prototype._findByQuery = function (query) {
        return this.breakpoints.findByQuery(query);
    };
    ;
    /**
     * Find associated breakpoint (if any)
     */
    MediaService.prototype._toMediaQuery = function (query) {
        var bp = this._findByAlias(query) || this._findByQuery(query);
        return bp ? bp.mediaQuery : query;
    };
    ;
    return MediaService;
}());
//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/media-query/observable-media-service.js.map

/***/ }),
/* 190 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__auto_prefixer__ = __webpack_require__(106);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__object_extend__ = __webpack_require__(32);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_alias__ = __webpack_require__(71);
/* unused harmony namespace reexport */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */



//# sourceMappingURL=/usr/local/google/home/andrewjs/Desktop/caretaker/flex-layout/src/lib/utils/index.js.map

/***/ }),
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__ = __webpack_require__(124);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__ = __webpack_require__(126);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_auditTime__ = __webpack_require__(128);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_auditTime___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_auditTime__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_forms__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_animations__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_startWith__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_startWith___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_startWith__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_first__ = __webpack_require__(132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_first___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_first__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__angular_http__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_add_observable_forkJoin__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_add_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs_add_observable_forkJoin__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_add_observable_of__ = __webpack_require__(127);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_add_operator_map__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_add_operator_filter__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_add_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_rxjs_add_operator_filter__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_add_operator_do__ = __webpack_require__(130);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_add_operator_do___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_rxjs_add_operator_do__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_add_operator_share__ = __webpack_require__(133);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_add_operator_share___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_rxjs_add_operator_share__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_add_operator_finally__ = __webpack_require__(131);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_add_operator_finally___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_rxjs_add_operator_finally__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_rxjs_add_operator_catch__ = __webpack_require__(129);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_add_observable_throw__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_add_observable_throw___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_rxjs_add_observable_throw__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_rxjs_add_operator_switchMap__ = __webpack_require__(135);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_rxjs_add_operator_switchMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22_rxjs_add_operator_switchMap__);
/* unused harmony export Dir */
/* unused harmony export RtlModule */
/* unused harmony export ObserveContentModule */
/* unused harmony export ObserveContent */
/* unused harmony export MdOptionModule */
/* unused harmony export MdOption */
/* unused harmony export Portal */
/* unused harmony export BasePortalHost */
/* unused harmony export ComponentPortal */
/* unused harmony export TemplatePortal */
/* unused harmony export PortalHostDirective */
/* unused harmony export TemplatePortalDirective */
/* unused harmony export PortalModule */
/* unused harmony export DomPortalHost */
/* unused harmony export Overlay */
/* unused harmony export OVERLAY_PROVIDERS */
/* unused harmony export OverlayContainer */
/* unused harmony export FullscreenOverlayContainer */
/* unused harmony export OverlayRef */
/* unused harmony export OverlayState */
/* unused harmony export ConnectedOverlayDirective */
/* unused harmony export OverlayOrigin */
/* unused harmony export OverlayModule */
/* unused harmony export ScrollDispatcher */
/* unused harmony export GestureConfig */
/* unused harmony export LiveAnnouncer */
/* unused harmony export LIVE_ANNOUNCER_ELEMENT_TOKEN */
/* unused harmony export LIVE_ANNOUNCER_PROVIDER */
/* unused harmony export InteractivityChecker */
/* unused harmony export isFakeMousedownFromScreenReader */
/* unused harmony export A11yModule */
/* unused harmony export UniqueSelectionDispatcher */
/* unused harmony export UNIQUE_SELECTION_DISPATCHER_PROVIDER */
/* unused harmony export MdLineModule */
/* unused harmony export MdLine */
/* unused harmony export MdLineSetter */
/* unused harmony export MdError */
/* unused harmony export coerceBooleanProperty */
/* unused harmony export coerceNumberProperty */
/* unused harmony export CompatibilityModule */
/* unused harmony export NoConflictStyleCompatibilityMode */
/* unused harmony export MdCoreModule */
/* unused harmony export PlatformModule */
/* unused harmony export Platform */
/* unused harmony export getSupportedInputTypes */
/* unused harmony export GlobalPositionStrategy */
/* unused harmony export ConnectedPositionStrategy */
/* unused harmony export ConnectionPositionPair */
/* unused harmony export ScrollableViewProperties */
/* unused harmony export ConnectedOverlayPositionChange */
/* unused harmony export MdRipple */
/* unused harmony export MD_RIPPLE_GLOBAL_OPTIONS */
/* unused harmony export RippleRef */
/* unused harmony export RippleState */
/* unused harmony export RIPPLE_FADE_IN_DURATION */
/* unused harmony export RIPPLE_FADE_OUT_DURATION */
/* unused harmony export MdRippleModule */
/* unused harmony export SelectionModel */
/* unused harmony export SelectionChange */
/* unused harmony export FocusTrap */
/* unused harmony export FocusTrapFactory */
/* unused harmony export FocusTrapDeprecatedDirective */
/* unused harmony export FocusTrapDirective */
/* unused harmony export StyleModule */
/* unused harmony export TOUCH_BUFFER_MS */
/* unused harmony export FocusOriginMonitor */
/* unused harmony export CdkMonitorFocus */
/* unused harmony export FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY */
/* unused harmony export FOCUS_ORIGIN_MONITOR_PROVIDER */
/* unused harmony export applyCssTransform */
/* unused harmony export UP_ARROW */
/* unused harmony export DOWN_ARROW */
/* unused harmony export RIGHT_ARROW */
/* unused harmony export LEFT_ARROW */
/* unused harmony export PAGE_UP */
/* unused harmony export PAGE_DOWN */
/* unused harmony export HOME */
/* unused harmony export END */
/* unused harmony export ENTER */
/* unused harmony export SPACE */
/* unused harmony export TAB */
/* unused harmony export ESCAPE */
/* unused harmony export BACKSPACE */
/* unused harmony export DELETE */
/* unused harmony export MATERIAL_COMPATIBILITY_MODE */
/* unused harmony export MAT_ELEMENTS_SELECTOR */
/* unused harmony export MD_ELEMENTS_SELECTOR */
/* unused harmony export MatPrefixRejector */
/* unused harmony export MdPrefixRejector */
/* unused harmony export AnimationCurves */
/* unused harmony export AnimationDurations */
/* unused harmony export MdSelectionModule */
/* unused harmony export MdPseudoCheckbox */
/* unused harmony export MaterialRootModule */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MaterialModule; });
/* unused harmony export MdAutocompleteModule */
/* unused harmony export MdAutocomplete */
/* unused harmony export AUTOCOMPLETE_OPTION_HEIGHT */
/* unused harmony export AUTOCOMPLETE_PANEL_HEIGHT */
/* unused harmony export MD_AUTOCOMPLETE_VALUE_ACCESSOR */
/* unused harmony export MdAutocompleteTrigger */
/* unused harmony export MdButtonModule */
/* unused harmony export MdButtonCssMatStyler */
/* unused harmony export MdRaisedButtonCssMatStyler */
/* unused harmony export MdIconButtonCssMatStyler */
/* unused harmony export MdFabCssMatStyler */
/* unused harmony export MdMiniFabCssMatStyler */
/* unused harmony export MdButton */
/* unused harmony export MdAnchor */
/* unused harmony export MdButtonToggleModule */
/* unused harmony export MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR */
/* unused harmony export MdButtonToggleChange */
/* unused harmony export MdButtonToggleGroup */
/* unused harmony export MdButtonToggleGroupMultiple */
/* unused harmony export MdButtonToggle */
/* unused harmony export MdCardModule */
/* unused harmony export MdCardContent */
/* unused harmony export MdCardTitle */
/* unused harmony export MdCardSubtitle */
/* unused harmony export MdCardActions */
/* unused harmony export MdCardFooter */
/* unused harmony export MdCardSmImage */
/* unused harmony export MdCardMdImage */
/* unused harmony export MdCardLgImage */
/* unused harmony export MdCardImage */
/* unused harmony export MdCardXlImage */
/* unused harmony export MdCardAvatar */
/* unused harmony export MdCard */
/* unused harmony export MdCardHeader */
/* unused harmony export MdCardTitleGroup */
/* unused harmony export MdChipsModule */
/* unused harmony export MdChipList */
/* unused harmony export MdChip */
/* unused harmony export MdCheckboxModule */
/* unused harmony export MD_CHECKBOX_CONTROL_VALUE_ACCESSOR */
/* unused harmony export TransitionCheckState */
/* unused harmony export MdCheckboxChange */
/* unused harmony export MdCheckbox */
/* unused harmony export MdDialogModule */
/* unused harmony export MD_DIALOG_DATA */
/* unused harmony export MdDialog */
/* unused harmony export MdDialogContainer */
/* unused harmony export MdDialogClose */
/* unused harmony export MdDialogTitle */
/* unused harmony export MdDialogContent */
/* unused harmony export MdDialogActions */
/* unused harmony export MdDialogConfig */
/* unused harmony export MdDialogRef */
/* unused harmony export MdGridListModule */
/* unused harmony export MdGridList */
/* unused harmony export MdIconModule */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return MdIconRegistry; });
/* unused harmony export MdIconInvalidNameError */
/* unused harmony export MdIcon */
/* unused harmony export ICON_REGISTRY_PROVIDER_FACTORY */
/* unused harmony export ICON_REGISTRY_PROVIDER */
/* unused harmony export MdInputModule */
/* unused harmony export MdTextareaAutosize */
/* unused harmony export MdPlaceholder */
/* unused harmony export MdHint */
/* unused harmony export MdErrorDirective */
/* unused harmony export MdPrefix */
/* unused harmony export MdSuffix */
/* unused harmony export MdInputDirective */
/* unused harmony export MdInputContainer */
/* unused harmony export MdInputContainerPlaceholderConflictError */
/* unused harmony export MdInputContainerUnsupportedTypeError */
/* unused harmony export MdInputContainerDuplicatedHintError */
/* unused harmony export MdInputContainerMissingMdInputError */
/* unused harmony export MdListModule */
/* unused harmony export MdListDivider */
/* unused harmony export LIST_TYPE_TOKEN */
/* unused harmony export MdList */
/* unused harmony export MdListCssMatStyler */
/* unused harmony export MdNavListCssMatStyler */
/* unused harmony export MdNavListTokenSetter */
/* unused harmony export MdDividerCssMatStyler */
/* unused harmony export MdListAvatarCssMatStyler */
/* unused harmony export MdListIconCssMatStyler */
/* unused harmony export MdListSubheaderCssMatStyler */
/* unused harmony export MdListItem */
/* unused harmony export MdMenuModule */
/* unused harmony export fadeInItems */
/* unused harmony export transformMenu */
/* unused harmony export MdMenu */
/* unused harmony export MdMenuItem */
/* unused harmony export MdMenuTrigger */
/* unused harmony export MdProgressBarModule */
/* unused harmony export MdProgressBar */
/* unused harmony export MdProgressSpinnerModule */
/* unused harmony export MdProgressSpinnerCssMatStyler */
/* unused harmony export MdProgressSpinner */
/* unused harmony export MdSpinner */
/* unused harmony export MdRadioModule */
/* unused harmony export MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR */
/* unused harmony export MdRadioChange */
/* unused harmony export MdRadioGroup */
/* unused harmony export MdRadioButton */
/* unused harmony export MdSelectModule */
/* unused harmony export fadeInContent */
/* unused harmony export transformPanel */
/* unused harmony export transformPlaceholder */
/* unused harmony export SELECT_OPTION_HEIGHT */
/* unused harmony export SELECT_PANEL_MAX_HEIGHT */
/* unused harmony export SELECT_MAX_OPTIONS_DISPLAYED */
/* unused harmony export SELECT_TRIGGER_HEIGHT */
/* unused harmony export SELECT_OPTION_HEIGHT_ADJUSTMENT */
/* unused harmony export SELECT_PANEL_PADDING_X */
/* unused harmony export SELECT_MULTIPLE_PANEL_PADDING_X */
/* unused harmony export SELECT_PANEL_PADDING_Y */
/* unused harmony export SELECT_PANEL_VIEWPORT_PADDING */
/* unused harmony export MdSelectChange */
/* unused harmony export MdSelect */
/* unused harmony export MdSidenavModule */
/* unused harmony export MdDuplicatedSidenavError */
/* unused harmony export MdSidenavToggleResult */
/* unused harmony export MdSidenav */
/* unused harmony export MdSidenavContainer */
/* unused harmony export MdSliderModule */
/* unused harmony export MD_SLIDER_VALUE_ACCESSOR */
/* unused harmony export MdSliderChange */
/* unused harmony export MdSlider */
/* unused harmony export SliderRenderer */
/* unused harmony export MdSlideToggleModule */
/* unused harmony export MD_SLIDE_TOGGLE_VALUE_ACCESSOR */
/* unused harmony export MdSlideToggleChange */
/* unused harmony export MdSlideToggle */
/* unused harmony export MdSnackBarModule */
/* unused harmony export MdSnackBar */
/* unused harmony export SHOW_ANIMATION */
/* unused harmony export HIDE_ANIMATION */
/* unused harmony export MdSnackBarContainer */
/* unused harmony export MdSnackBarConfig */
/* unused harmony export MdSnackBarRef */
/* unused harmony export SimpleSnackBar */
/* unused harmony export MdTabsModule */
/* unused harmony export MdInkBar */
/* unused harmony export MdTabBody */
/* unused harmony export MdTabHeader */
/* unused harmony export MdTabLabelWrapper */
/* unused harmony export MdTab */
/* unused harmony export MdTabLabel */
/* unused harmony export MdTabChangeEvent */
/* unused harmony export MdTabGroup */
/* unused harmony export MdTabNavBar */
/* unused harmony export MdTabLink */
/* unused harmony export MdTabLinkRipple */
/* unused harmony export MdToolbarModule */
/* unused harmony export MdToolbarRow */
/* unused harmony export MdToolbar */
/* unused harmony export MdTooltipModule */
/* unused harmony export TOUCHEND_HIDE_DELAY */
/* unused harmony export SCROLL_THROTTLE_MS */
/* unused harmony export MdTooltip */
/* unused harmony export TooltipComponent */
/* unused harmony export ɵf */
/* unused harmony export ɵg */
/* unused harmony export ɵb */
/* unused harmony export ɵa */
/* unused harmony export ɵk */
/* unused harmony export ɵj */
/* unused harmony export ɵi */
/* unused harmony export ɵh */
/* unused harmony export ɵd */
/* unused harmony export ɵc */
/* unused harmony export ɵl */
/* unused harmony export ɵe */
/* unused harmony export ɵo */
/* unused harmony export ɵm */
/* unused harmony export ɵq */
/* unused harmony export ɵp */
/* unused harmony export ɵn */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
  * @license Angular Material v2.0.0-beta.3
  * Copyright (c) 2017 Google, Inc. https://material.angular.io/
  * License: MIT
  */























/** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */
var hasDoneGlobalChecks = false;
var MATERIAL_COMPATIBILITY_MODE = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["d" /* OpaqueToken */]('md-compatibility-mode');
/** Selector that matches all elements that may have style collisions with AngularJS Material. */
var MAT_ELEMENTS_SELECTOR = "\n  [mat-button],\n  [mat-dialog-actions],\n  [mat-dialog-close],\n  [mat-dialog-content],\n  [mat-dialog-title],\n  [mat-fab],\n  [mat-icon-button],\n  [mat-menu-trigger-for],\n  [mat-mini-fab],\n  [mat-raised-button],\n  [mat-tab-label],\n  [mat-tab-link],\n  [mat-tab-nav-bar],\n  [matTooltip],\n  mat-autocomplete,\n  mat-button-toggle,\n  mat-button-toggle-group,\n  mat-button-toggle,\n  mat-card,\n  mat-card-actions,\n  mat-card-content,\n  mat-card-footer,\n  mat-card-header,\n  mat-card-subtitle,\n  mat-card-title,\n  mat-card-title-group,\n  mat-checkbox,\n  mat-chip,\n  mat-dialog-actions,\n  mat-dialog-container,\n  mat-dialog-content,\n  mat-divider,\n  mat-grid-list,\n  mat-grid-tile,\n  mat-grid-tile-footer,\n  mat-grid-tile-header,\n  mat-hint,\n  mat-icon,\n  mat-list,\n  mat-list-item,\n  mat-menu,\n  mat-nav-list,\n  mat-option,\n  mat-placeholder,\n  mat-progress-bar,\n  mat-pseudo-checkbox,\n  mat-radio-button,\n  mat-radio-group,\n  mat-select,\n  mat-sidenav,\n  mat-sidenav-container,\n  mat-slider,\n  mat-spinner,\n  mat-tab,\n  mat-tab-group,\n  mat-toolbar,\n  mat-error";
/** Selector that matches all elements that may have style collisions with AngularJS Material. */
var MD_ELEMENTS_SELECTOR = "\n  [md-button],\n  [md-dialog-actions],\n  [md-dialog-close],\n  [md-dialog-content],\n  [md-dialog-title],\n  [md-fab],\n  [md-icon-button],\n  [md-menu-trigger-for],\n  [md-mini-fab],\n  [md-raised-button],\n  [md-tab-label],\n  [md-tab-link],\n  [md-tab-nav-bar],\n  [mdTooltip],\n  md-autocomplete,\n  md-button-toggle,\n  md-button-toggle-group,\n  md-button-toggle,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-checkbox,\n  md-chip,\n  md-dialog-actions,\n  md-dialog-container,\n  md-dialog-content,\n  md-divider,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-hint,\n  md-icon,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-pseudo-checkbox,\n  md-radio-button,\n  md-radio-group,\n  md-select,\n  md-sidenav,\n  md-sidenav-container,\n  md-slider,\n  md-spinner,\n  md-tab,\n  md-tab-group,\n  md-toolbar,\n  md-error";
/**
 * Directive that enforces that the `mat-` prefix cannot be used.
 */
var MatPrefixRejector = (function () {
    /**
     * @param {?} isCompatibilityMode
     */
    function MatPrefixRejector(isCompatibilityMode) {
        if (!isCompatibilityMode) {
            throw Error('The "mat-" prefix cannot be used out of ng-material v1 compatibility mode.');
        }
    }
    return MatPrefixRejector;
}());
MatPrefixRejector.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: MAT_ELEMENTS_SELECTOR },] },
];
/**
 * @nocollapse
 */
MatPrefixRejector.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [MATERIAL_COMPATIBILITY_MODE,] },] },
]; };
/**
 * Directive that enforces that the `md-` prefix cannot be used.
 */
var MdPrefixRejector = (function () {
    /**
     * @param {?} isCompatibilityMode
     */
    function MdPrefixRejector(isCompatibilityMode) {
        if (isCompatibilityMode) {
            throw Error('The "md-" prefix cannot be used in ng-material v1 compatibility mode.');
        }
    }
    return MdPrefixRejector;
}());
MdPrefixRejector.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{ selector: MD_ELEMENTS_SELECTOR },] },
];
/**
 * @nocollapse
 */
MdPrefixRejector.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [MATERIAL_COMPATIBILITY_MODE,] },] },
]; };
/**
 * Module that enforces the default compatibility mode settings. When this module is loaded
 * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if
 * there are any uses of the `mat-` prefix.
 */
var CompatibilityModule = (function () {
    /**
     * @param {?} _document
     */
    function CompatibilityModule(_document) {
        this._document = _document;
        if (!hasDoneGlobalChecks && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])()) {
            this._checkDoctype();
            this._checkTheme();
            hasDoneGlobalChecks = true;
        }
    }
    /**
     * @return {?}
     */
    CompatibilityModule.forRoot = function () {
        return {
            ngModule: CompatibilityModule,
            providers: [],
        };
    };
    /**
     * @return {?}
     */
    CompatibilityModule.prototype._checkDoctype = function () {
        if (this._document && !this._document.doctype) {
            console.warn('Current document does not have a doctype. This may cause ' +
                'some Angular Material components not to behave as expected.');
        }
    };
    /**
     * @return {?}
     */
    CompatibilityModule.prototype._checkTheme = function () {
        if (this._document) {
            var /** @type {?} */ testElement = this._document.createElement('div');
            testElement.classList.add('mat-theme-loaded-marker');
            this._document.body.appendChild(testElement);
            if (getComputedStyle(testElement).display !== 'none') {
                console.warn('Could not find Angular Material core theme. Most Material ' +
                    'components may not work as expected. For more info refer ' +
                    'to the theming guide: https://material.angular.io/guide/theming');
            }
            this._document.body.removeChild(testElement);
        }
    };
    return CompatibilityModule;
}());
CompatibilityModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                declarations: [MatPrefixRejector, MdPrefixRejector],
                exports: [MatPrefixRejector, MdPrefixRejector],
            },] },
];
/**
 * @nocollapse
 */
CompatibilityModule.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["b" /* DOCUMENT */],] },] },
]; };
/**
 * Module that enforces "no-conflict" compatibility mode settings. When this module is loaded,
 * it will throw an error if there are any uses of the `md-` prefix.
 */
var NoConflictStyleCompatibilityMode = (function () {
    function NoConflictStyleCompatibilityMode() {
    }
    return NoConflictStyleCompatibilityMode;
}());
NoConflictStyleCompatibilityMode.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                providers: [{
                        provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,
                    }],
            },] },
];
/**
 * @nocollapse
 */
NoConflictStyleCompatibilityMode.ctorParameters = function () { return []; };
/**
 * Shared directive to count lines inside a text area, such as a list item.
 * Line elements can be extracted with a \@ContentChildren(MdLine) query, then
 * counted by checking the query list's length.
 */
var MdLine = (function () {
    function MdLine() {
    }
    return MdLine;
}());
MdLine.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-line], [mat-line]',
                host: {
                    '[class.mat-line]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdLine.ctorParameters = function () { return []; };
/**
 * Helper that takes a query list of lines and sets the correct class on the host.
 * \@docs-private
 */
var MdLineSetter = (function () {
    /**
     * @param {?} _lines
     * @param {?} _renderer
     * @param {?} _element
     */
    function MdLineSetter(_lines, _renderer, _element) {
        var _this = this;
        this._lines = _lines;
        this._renderer = _renderer;
        this._element = _element;
        this._setLineClass(this._lines.length);
        this._lines.changes.subscribe(function () {
            _this._setLineClass(_this._lines.length);
        });
    }
    /**
     * @param {?} count
     * @return {?}
     */
    MdLineSetter.prototype._setLineClass = function (count) {
        this._resetClasses();
        if (count === 2 || count === 3) {
            this._setClass("mat-" + count + "-line", true);
        }
        else if (count > 3) {
            this._setClass("mat-multi-line", true);
        }
    };
    /**
     * @return {?}
     */
    MdLineSetter.prototype._resetClasses = function () {
        this._setClass('mat-2-line', false);
        this._setClass('mat-3-line', false);
        this._setClass('mat-multi-line', false);
    };
    /**
     * @param {?} className
     * @param {?} bool
     * @return {?}
     */
    MdLineSetter.prototype._setClass = function (className, bool) {
        this._renderer.setElementClass(this._element.nativeElement, className, bool);
    };
    return MdLineSetter;
}());
var MdLineModule = (function () {
    function MdLineModule() {
    }
    return MdLineModule;
}());
MdLineModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [CompatibilityModule],
                exports: [MdLine, CompatibilityModule],
                declarations: [MdLine],
            },] },
];
/**
 * @nocollapse
 */
MdLineModule.ctorParameters = function () { return []; };
/**
 * Directive to listen for changes of direction of part of the DOM.
 *
 * Applications should use this directive instead of the native attribute so that Material
 * components can listen on changes of direction.
 */
var Dir = (function () {
    function Dir() {
        /** Layout direction of the element. */
        this._dir = 'ltr';
        /** Event emitted when the direction changes. */
        this.dirChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
    }
    Object.defineProperty(Dir.prototype, "dir", {
        /**
         * \@docs-private
         * @return {?}
         */
        get: function () {
            return this._dir;
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            var /** @type {?} */ old = this._dir;
            this._dir = v;
            if (old != this._dir) {
                this.dirChange.emit();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Dir.prototype, "value", {
        /**
         * Current layout direction of the element.
         * @return {?}
         */
        get: function () { return this.dir; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.dir = v; },
        enumerable: true,
        configurable: true
    });
    return Dir;
}());
Dir.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[dir]',
                // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.
                exportAs: '$implicit'
            },] },
];
/**
 * @nocollapse
 */
Dir.ctorParameters = function () { return []; };
Dir.propDecorators = {
    '_dir': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['dir',] },],
    'dirChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'dir': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['attr.dir',] },],
};
var RtlModule = (function () {
    function RtlModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    RtlModule.forRoot = function () {
        return {
            ngModule: RtlModule,
            providers: []
        };
    };
    return RtlModule;
}());
RtlModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                exports: [Dir],
                declarations: [Dir]
            },] },
];
/**
 * @nocollapse
 */
RtlModule.ctorParameters = function () { return []; };
/**
 * Directive that triggers a callback whenever the content of
 * its associated element has changed.
 */
var ObserveContent = (function () {
    /**
     * @param {?} _elementRef
     */
    function ObserveContent(_elementRef) {
        this._elementRef = _elementRef;
        /** Event emitted for each change in the element's content. */
        this.event = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
    }
    /**
     * @return {?}
     */
    ObserveContent.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._observer = new MutationObserver(function (mutations) { return mutations.forEach(function () { return _this.event.emit(); }); });
        this._observer.observe(this._elementRef.nativeElement, {
            characterData: true,
            childList: true,
            subtree: true
        });
    };
    /**
     * @return {?}
     */
    ObserveContent.prototype.ngOnDestroy = function () {
        if (this._observer) {
            this._observer.disconnect();
        }
    };
    return ObserveContent;
}());
ObserveContent.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdkObserveContent]'
            },] },
];
/**
 * @nocollapse
 */
ObserveContent.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
ObserveContent.propDecorators = {
    'event': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */], args: ['cdkObserveContent',] },],
};
var ObserveContentModule = (function () {
    function ObserveContentModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    ObserveContentModule.forRoot = function () {
        return {
            ngModule: ObserveContentModule,
            providers: []
        };
    };
    return ObserveContentModule;
}());
ObserveContentModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                exports: [ObserveContent],
                declarations: [ObserveContent]
            },] },
];
/**
 * @nocollapse
 */
ObserveContentModule.ctorParameters = function () { return []; };
// Due to a bug in the ChromeDriver, Angular keyboard events are not triggered by `sendKeys`
// during E2E tests when using dot notation such as `(keydown.rightArrow)`. To get around this,
// we are temporarily using a single (keydown) handler.
// See: https://github.com/angular/angular/issues/9419
var UP_ARROW = 38;
var DOWN_ARROW = 40;
var RIGHT_ARROW = 39;
var LEFT_ARROW = 37;
var PAGE_UP = 33;
var PAGE_DOWN = 34;
var HOME = 36;
var END = 35;
var ENTER = 13;
var SPACE = 32;
var TAB = 9;
var ESCAPE = 27;
var BACKSPACE = 8;
var DELETE = 46;
/**
 * Coerces a data-bound value (typically a string) to a boolean.
 * @param {?} value
 * @return {?}
 */
function coerceBooleanProperty(value) {
    return value != null && "" + value !== 'false';
}
var RippleState = {};
RippleState.FADING_IN = 0;
RippleState.VISIBLE = 1;
RippleState.FADING_OUT = 2;
RippleState.HIDDEN = 3;
RippleState[RippleState.FADING_IN] = "FADING_IN";
RippleState[RippleState.VISIBLE] = "VISIBLE";
RippleState[RippleState.FADING_OUT] = "FADING_OUT";
RippleState[RippleState.HIDDEN] = "HIDDEN";
/**
 * Reference to a previously launched ripple element.
 */
var RippleRef = (function () {
    /**
     * @param {?} _renderer
     * @param {?} element
     * @param {?} config
     */
    function RippleRef(_renderer, element, config) {
        this._renderer = _renderer;
        this.element = element;
        this.config = config;
        /** Current state of the ripple reference. */
        this.state = RippleState.HIDDEN;
    }
    /**
     * Fades out the ripple element.
     * @return {?}
     */
    RippleRef.prototype.fadeOut = function () {
        this._renderer.fadeOutRipple(this);
    };
    return RippleRef;
}());
/** Fade-in duration for the ripples. Can be modified with the speedFactor option. */
var RIPPLE_FADE_IN_DURATION = 450;
/** Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor. */
var RIPPLE_FADE_OUT_DURATION = 400;
/**
 * Helper service that performs DOM manipulations. Not intended to be used outside this module.
 * The constructor takes a reference to the ripple directive's host element and a map of DOM
 * event handlers to be installed on the element that triggers ripple animations.
 * This will eventually become a custom renderer once Angular support exists.
 * \@docs-private
 */
var RippleRenderer = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _ngZone
     * @param {?} _ruler
     */
    function RippleRenderer(_elementRef, _ngZone, _ruler) {
        this._ngZone = _ngZone;
        this._ruler = _ruler;
        this._isMousedown = false;
        this._triggerEvents = new Map();
        this._activeRipples = new Set();
        /** Ripple config for all ripples created by events. */
        this.rippleConfig = {};
        /** Whether mouse ripples should be created or not. */
        this.rippleDisabled = false;
        this._containerElement = _elementRef.nativeElement;
        // Specify events which need to be registered on the trigger.
        this._triggerEvents.set('mousedown', this.onMousedown.bind(this));
        this._triggerEvents.set('mouseup', this.onMouseup.bind(this));
        this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));
        // By default use the host element as trigger element.
        this.setTriggerElement(this._containerElement);
    }
    /**
     * Fades in a ripple at the given coordinates.
     * @param {?} pageX
     * @param {?} pageY
     * @param {?=} config
     * @return {?}
     */
    RippleRenderer.prototype.fadeInRipple = function (pageX, pageY, config) {
        var _this = this;
        if (config === void 0) { config = {}; }
        var /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();
        if (config.centered) {
            pageX = containerRect.left + containerRect.width / 2;
            pageY = containerRect.top + containerRect.height / 2;
        }
        else {
            // Subtract scroll values from the coordinates because calculations below
            // are always relative to the viewport rectangle.
            var /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();
            pageX -= scrollPosition.left;
            pageY -= scrollPosition.top;
        }
        var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);
        var /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));
        var /** @type {?} */ offsetX = pageX - containerRect.left;
        var /** @type {?} */ offsetY = pageY - containerRect.top;
        var /** @type {?} */ ripple = document.createElement('div');
        ripple.classList.add('mat-ripple-element');
        ripple.style.left = offsetX - radius + "px";
        ripple.style.top = offsetY - radius + "px";
        ripple.style.height = radius * 2 + "px";
        ripple.style.width = radius * 2 + "px";
        // If the color is not set, the default CSS color will be used.
        ripple.style.backgroundColor = config.color;
        ripple.style.transitionDuration = duration + "ms";
        this._containerElement.appendChild(ripple);
        // By default the browser does not recalculate the styles of dynamically created
        // ripple elements. This is critical because then the `scale` would not animate properly.
        enforceStyleRecalculation(ripple);
        ripple.style.transform = 'scale(1)';
        // Exposed reference to the ripple that will be returned.
        var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);
        rippleRef.state = RippleState.FADING_IN;
        // Add the ripple reference to the list of all active ripples.
        this._activeRipples.add(rippleRef);
        // Wait for the ripple element to be completely faded in.
        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.
        this.runTimeoutOutsideZone(function () {
            rippleRef.state = RippleState.VISIBLE;
            if (!config.persistent && !_this._isMousedown) {
                rippleRef.fadeOut();
            }
        }, duration);
        return rippleRef;
    };
    /**
     * Fades out a ripple reference.
     * @param {?} rippleRef
     * @return {?}
     */
    RippleRenderer.prototype.fadeOutRipple = function (rippleRef) {
        // For ripples that are not active anymore, don't re-un the fade-out animation.
        if (!this._activeRipples.delete(rippleRef)) {
            return;
        }
        var /** @type {?} */ rippleEl = rippleRef.element;
        rippleEl.style.transitionDuration = RIPPLE_FADE_OUT_DURATION + "ms";
        rippleEl.style.opacity = '0';
        rippleRef.state = RippleState.FADING_OUT;
        // Once the ripple faded out, the ripple can be safely removed from the DOM.
        this.runTimeoutOutsideZone(function () {
            rippleRef.state = RippleState.HIDDEN;
            rippleEl.parentNode.removeChild(rippleEl);
        }, RIPPLE_FADE_OUT_DURATION);
    };
    /**
     * Fades out all currently active ripples.
     * @return {?}
     */
    RippleRenderer.prototype.fadeOutAll = function () {
        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });
    };
    /**
     * Sets the trigger element and registers the mouse events.
     * @param {?} element
     * @return {?}
     */
    RippleRenderer.prototype.setTriggerElement = function (element) {
        var _this = this;
        // Remove all previously register event listeners from the trigger element.
        if (this._triggerElement) {
            this._triggerEvents.forEach(function (fn, type) { return _this._triggerElement.removeEventListener(type, fn); });
        }
        if (element) {
            // If the element is not null, register all event listeners on the trigger element.
            this._ngZone.runOutsideAngular(function () {
                _this._triggerEvents.forEach(function (fn, type) { return element.addEventListener(type, fn); });
            });
        }
        this._triggerElement = element;
    };
    /**
     * Listener being called on mousedown event.
     * @param {?} event
     * @return {?}
     */
    RippleRenderer.prototype.onMousedown = function (event) {
        if (!this.rippleDisabled) {
            this._isMousedown = true;
            this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);
        }
    };
    /**
     * Listener being called on mouseup event.
     * @return {?}
     */
    RippleRenderer.prototype.onMouseup = function () {
        this._isMousedown = false;
        // Fade-out all ripples that are completely visible and not persistent.
        this._activeRipples.forEach(function (ripple) {
            if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {
                ripple.fadeOut();
            }
        });
    };
    /**
     * Listener being called on mouseleave event.
     * @return {?}
     */
    RippleRenderer.prototype.onMouseLeave = function () {
        if (this._isMousedown) {
            this.onMouseup();
        }
    };
    /**
     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.
     * @param {?} fn
     * @param {?=} delay
     * @return {?}
     */
    RippleRenderer.prototype.runTimeoutOutsideZone = function (fn, delay) {
        if (delay === void 0) { delay = 0; }
        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });
    };
    return RippleRenderer;
}());
/**
 * @param {?} element
 * @return {?}
 */
function enforceStyleRecalculation(element) {
    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.
    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.
    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a
    window.getComputedStyle(element).getPropertyValue('opacity');
}
/**
 * Returns the distance from the point (x, y) to the furthest corner of a rectangle.
 * @param {?} x
 * @param {?} y
 * @param {?} rect
 * @return {?}
 */
function distanceToFurthestCorner(x, y, rect) {
    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));
    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));
    return Math.sqrt(distX * distX + distY * distY);
}
/** Time in ms to throttle the scrolling events by default. */
var DEFAULT_SCROLL_TIME = 20;
/**
 * Service contained all registered Scrollable references and emits an event when any one of the
 * Scrollable references emit a scrolled event.
 */
var ScrollDispatcher = (function () {
    /**
     * @param {?} _ngZone
     */
    function ScrollDispatcher(_ngZone) {
        this._ngZone = _ngZone;
        /** Subject for notifying that a registered scrollable reference element has been scrolled. */
        this._scrolled = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        /** Keeps track of the global `scroll` and `resize` subscriptions. */
        this._globalSubscription = null;
        this._scrolledCount = 0;
        /**
         * Map of all the scrollable references that are registered with the service and their
         * scroll event subscriptions.
         */
        this.scrollableReferences = new Map();
    }
    /**
     * Registers a Scrollable with the service and listens for its scrolled events. When the
     * scrollable is scrolled, the service emits the event in its scrolled observable.
     * @param {?} scrollable Scrollable instance to be registered.
     * @return {?}
     */
    ScrollDispatcher.prototype.register = function (scrollable) {
        var _this = this;
        var /** @type {?} */ scrollSubscription = scrollable.elementScrolled().subscribe(function () { return _this._notify(); });
        this.scrollableReferences.set(scrollable, scrollSubscription);
    };
    /**
     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.
     * @param {?} scrollable Scrollable instance to be deregistered.
     * @return {?}
     */
    ScrollDispatcher.prototype.deregister = function (scrollable) {
        if (this.scrollableReferences.has(scrollable)) {
            this.scrollableReferences.get(scrollable).unsubscribe();
            this.scrollableReferences.delete(scrollable);
        }
    };
    /**
     * Subscribes to an observable that emits an event whenever any of the registered Scrollable
     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms
     * to override the default "throttle" time.
     * @param {?=} auditTimeInMs
     * @param {?=} callback
     * @return {?}
     */
    ScrollDispatcher.prototype.scrolled = function (auditTimeInMs, callback) {
        var _this = this;
        if (auditTimeInMs === void 0) { auditTimeInMs = DEFAULT_SCROLL_TIME; }
        // In the case of a 0ms delay, use an observable without auditTime
        // since it does add a perceptible delay in processing overhead.
        var /** @type {?} */ observable = auditTimeInMs > 0 ?
            this._scrolled.asObservable().auditTime(auditTimeInMs) :
            this._scrolled.asObservable();
        this._scrolledCount++;
        if (!this._globalSubscription) {
            this._globalSubscription = this._ngZone.runOutsideAngular(function () {
                return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].merge(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].fromEvent(window.document, 'scroll'), __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].fromEvent(window, 'resize')).subscribe(function () { return _this._notify(); });
            });
        }
        // Note that we need to do the subscribing from here, in order to be able to remove
        // the global event listeners once there are no more subscriptions.
        var /** @type {?} */ subscription = observable.subscribe(callback);
        subscription.add(function () {
            _this._scrolledCount--;
            if (_this._globalSubscription && !_this.scrollableReferences.size && !_this._scrolledCount) {
                _this._globalSubscription.unsubscribe();
                _this._globalSubscription = null;
            }
        });
        return subscription;
    };
    /**
     * Returns all registered Scrollables that contain the provided element.
     * @param {?} elementRef
     * @return {?}
     */
    ScrollDispatcher.prototype.getScrollContainers = function (elementRef) {
        var _this = this;
        var /** @type {?} */ scrollingContainers = [];
        this.scrollableReferences.forEach(function (subscription, scrollable) {
            if (_this.scrollableContainsElement(scrollable, elementRef)) {
                scrollingContainers.push(scrollable);
            }
        });
        return scrollingContainers;
    };
    /**
     * Returns true if the element is contained within the provided Scrollable.
     * @param {?} scrollable
     * @param {?} elementRef
     * @return {?}
     */
    ScrollDispatcher.prototype.scrollableContainsElement = function (scrollable, elementRef) {
        var /** @type {?} */ element = elementRef.nativeElement;
        var /** @type {?} */ scrollableElement = scrollable.getElementRef().nativeElement;
        // Traverse through the element parents until we reach null, checking if any of the elements
        // are the scrollable's element.
        do {
            if (element == scrollableElement) {
                return true;
            }
        } while (element = element.parentElement);
    };
    /**
     * Sends a notification that a scroll event has been fired.
     * @return {?}
     */
    ScrollDispatcher.prototype._notify = function () {
        this._scrolled.next();
    };
    return ScrollDispatcher;
}());
ScrollDispatcher.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
ScrollDispatcher.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
]; };
/**
 * @param {?} parentDispatcher
 * @param {?} ngZone
 * @return {?}
 */
function SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone) {
    return parentDispatcher || new ScrollDispatcher(ngZone);
}
var SCROLL_DISPATCHER_PROVIDER = {
    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.
    provide: ScrollDispatcher,
    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */](), ScrollDispatcher], __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */]],
    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY
};
/**
 * Simple utility for getting the bounds of the browser viewport.
 * \@docs-private
 */
var ViewportRuler = (function () {
    /**
     * @param {?} scrollDispatcher
     */
    function ViewportRuler(scrollDispatcher) {
        var _this = this;
        // Initially cache the document rectangle.
        this._cacheViewportGeometry();
        // Subscribe to scroll and resize events and update the document rectangle on changes.
        scrollDispatcher.scrolled(null, function () { return _this._cacheViewportGeometry(); });
    }
    /**
     * Gets a ClientRect for the viewport's bounds.
     * @param {?=} documentRect
     * @return {?}
     */
    ViewportRuler.prototype.getViewportRect = function (documentRect) {
        if (documentRect === void 0) { documentRect = this._documentRect; }
        // Use the document element's bounding rect rather than the window scroll properties
        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll
        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different
        // conceptual viewports. Under most circumstances these viewports are equivalent, but they
        // can disagree when the page is pinch-zoomed (on devices that support touch).
        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4
        // We use the documentElement instead of the body because, by default (without a css reset)
        // browsers typically give the document body an 8px margin, which is not included in
        // getBoundingClientRect().
        var /** @type {?} */ scrollPosition = this.getViewportScrollPosition(documentRect);
        var /** @type {?} */ height = window.innerHeight;
        var /** @type {?} */ width = window.innerWidth;
        return {
            top: scrollPosition.top,
            left: scrollPosition.left,
            bottom: scrollPosition.top + height,
            right: scrollPosition.left + width,
            height: height,
            width: width,
        };
    };
    /**
     * Gets the (top, left) scroll position of the viewport.
     * @param {?=} documentRect
     * @return {?}
     */
    ViewportRuler.prototype.getViewportScrollPosition = function (documentRect) {
        if (documentRect === void 0) { documentRect = this._documentRect; }
        // The top-left-corner of the viewport is determined by the scroll position of the document
        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about
        // whether `document.body` or `document.documentElement` is the scrolled element, so reading
        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of
        // `document.documentElement` works consistently, where the `top` and `left` values will
        // equal negative the scroll position.
        var /** @type {?} */ top = -documentRect.top || document.body.scrollTop || window.scrollY || 0;
        var /** @type {?} */ left = -documentRect.left || document.body.scrollLeft || window.scrollX || 0;
        return { top: top, left: left };
    };
    /**
     * Caches the latest client rectangle of the document element.
     * @return {?}
     */
    ViewportRuler.prototype._cacheViewportGeometry = function () {
        this._documentRect = document.documentElement.getBoundingClientRect();
    };
    return ViewportRuler;
}());
ViewportRuler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
ViewportRuler.ctorParameters = function () { return [
    { type: ScrollDispatcher, },
]; };
/**
 * @param {?} parentRuler
 * @param {?} scrollDispatcher
 * @return {?}
 */
function VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, scrollDispatcher) {
    return parentRuler || new ViewportRuler(scrollDispatcher);
}
var VIEWPORT_RULER_PROVIDER = {
    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.
    provide: ViewportRuler,
    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */](), ViewportRuler], ScrollDispatcher],
    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY
};
/** OpaqueToken that can be used to specify the global ripple options. */
var MD_RIPPLE_GLOBAL_OPTIONS = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["d" /* OpaqueToken */]('md-ripple-global-options');
var MdRipple = (function () {
    /**
     * @param {?} elementRef
     * @param {?} ngZone
     * @param {?} ruler
     * @param {?} globalOptions
     */
    function MdRipple(elementRef, ngZone, ruler, 
        // Type needs to be `any` because of https://github.com/angular/angular/issues/12631
        globalOptions) {
        /**
         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius
         * will be the distance from the center of the ripple to the furthest corner of the host element's
         * bounding rectangle.
         */
        this.radius = 0;
        /**
         * If set, the normal duration of ripple animations is divided by this value. For example,
         * setting it to 0.5 will cause the animations to take twice as long.
         * A changed speedFactor will not modify the fade-out duration of the ripples.
         */
        this.speedFactor = 1;
        this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler);
        this._globalOptions = globalOptions ? globalOptions : {};
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    MdRipple.prototype.ngOnChanges = function (changes) {
        if (changes['trigger'] && this.trigger) {
            this._rippleRenderer.setTriggerElement(this.trigger);
        }
        this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;
        this._rippleRenderer.rippleConfig = this.rippleConfig;
    };
    /**
     * @return {?}
     */
    MdRipple.prototype.ngOnDestroy = function () {
        // Set the trigger element to null to cleanup all listeners.
        this._rippleRenderer.setTriggerElement(null);
    };
    /**
     * Launches a manual ripple at the specified position.
     * @param {?} pageX
     * @param {?} pageY
     * @param {?=} config
     * @return {?}
     */
    MdRipple.prototype.launch = function (pageX, pageY, config) {
        if (config === void 0) { config = this.rippleConfig; }
        return this._rippleRenderer.fadeInRipple(pageX, pageY, config);
    };
    /**
     * Fades out all currently showing ripple elements.
     * @return {?}
     */
    MdRipple.prototype.fadeOutAll = function () {
        this._rippleRenderer.fadeOutAll();
    };
    Object.defineProperty(MdRipple.prototype, "rippleConfig", {
        /**
         * Ripple configuration from the directive's input values.
         * @return {?}
         */
        get: function () {
            return {
                centered: this.centered,
                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),
                radius: this.radius,
                color: this.color
            };
        },
        enumerable: true,
        configurable: true
    });
    return MdRipple;
}());
MdRipple.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',
                exportAs: 'mdRipple',
                host: {
                    '[class.mat-ripple]': 'true',
                    '[class.mat-ripple-unbounded]': 'unbounded'
                }
            },] },
];
/**
 * @nocollapse
 */
MdRipple.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: ViewportRuler, },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [MD_RIPPLE_GLOBAL_OPTIONS,] },] },
]; };
MdRipple.propDecorators = {
    'trigger': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdRippleTrigger',] },],
    'centered': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdRippleCentered',] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdRippleDisabled',] },],
    'radius': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdRippleRadius',] },],
    'speedFactor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdRippleSpeedFactor',] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdRippleColor',] },],
    'unbounded': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdRippleUnbounded',] },],
};
var MdRippleModule = (function () {
    function MdRippleModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdRippleModule.forRoot = function () {
        return {
            ngModule: MdRippleModule,
            providers: []
        };
    };
    return MdRippleModule;
}());
MdRippleModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [CompatibilityModule],
                exports: [MdRipple, CompatibilityModule],
                declarations: [MdRipple],
                providers: [VIEWPORT_RULER_PROVIDER, SCROLL_DISPATCHER_PROVIDER],
            },] },
];
/**
 * @nocollapse
 */
MdRippleModule.ctorParameters = function () { return []; };
/**
 * Component that shows a simplified checkbox without including any kind of "real" checkbox.
 * Meant to be used when the checkbox is purely decorative and a large number of them will be
 * included, such as for the options in a multi-select. Uses no SVGs or complex animations.
 *
 * Note that this component will be completely invisible to screen-reader users. This is *not*
 * interchangeable with <md-checkbox> and should *not* be used if the user would directly interact
 * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of
 * more complex components that appropriately handle selected / checked state.
 * \@docs-private
 */
var MdPseudoCheckbox = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _renderer
     */
    function MdPseudoCheckbox(_elementRef, _renderer) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        /** Display state of the checkbox. */
        this.state = 'unchecked';
        /** Whether the checkbox is disabled. */
        this.disabled = false;
        this.color = 'accent';
    }
    Object.defineProperty(MdPseudoCheckbox.prototype, "color", {
        /**
         * Color of the checkbox.
         * @return {?}
         */
        get: function () { return this._color; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (value) {
                var /** @type {?} */ nativeElement = this._elementRef.nativeElement;
                this._renderer.setElementClass(nativeElement, "mat-" + this.color, false);
                this._renderer.setElementClass(nativeElement, "mat-" + value, true);
                this._color = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    return MdPseudoCheckbox;
}());
MdPseudoCheckbox.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',
                styles: [".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:9px;left:2px;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:5px;left:3px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1} /*# sourceMappingURL=pseudo-checkbox.css.map */ "],
                template: '',
                host: {
                    '[class.mat-pseudo-checkbox]': 'true',
                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === "indeterminate"',
                    '[class.mat-pseudo-checkbox-checked]': 'state === "checked"',
                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',
                },
            },] },
];
/**
 * @nocollapse
 */
MdPseudoCheckbox.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
MdPseudoCheckbox.propDecorators = {
    'state': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
var MdSelectionModule = (function () {
    function MdSelectionModule() {
    }
    return MdSelectionModule;
}());
MdSelectionModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                exports: [MdPseudoCheckbox],
                declarations: [MdPseudoCheckbox]
            },] },
];
/**
 * @nocollapse
 */
MdSelectionModule.ctorParameters = function () { return []; };
/**
 * Option IDs need to be unique across components, so this counter exists outside of
 * the component definition.
 */
var _uniqueIdCounter = 0;
/**
 * Event object emitted by MdOption when selected or deselected.
 */
var MdOptionSelectionChange = (function () {
    /**
     * @param {?} source
     * @param {?=} isUserInput
     */
    function MdOptionSelectionChange(source, isUserInput) {
        if (isUserInput === void 0) { isUserInput = false; }
        this.source = source;
        this.isUserInput = isUserInput;
    }
    return MdOptionSelectionChange;
}());
/**
 * Single option inside of a `<md-select>` element.
 */
var MdOption = (function () {
    /**
     * @param {?} _element
     * @param {?} _renderer
     * @param {?} _isCompatibilityMode
     */
    function MdOption(_element, _renderer, _isCompatibilityMode) {
        this._element = _element;
        this._renderer = _renderer;
        this._isCompatibilityMode = _isCompatibilityMode;
        this._selected = false;
        this._active = false;
        this._disabled = false;
        this._id = "md-option-" + _uniqueIdCounter++;
        /** Whether the wrapping component is in multiple selection mode. */
        this.multiple = false;
        /** Event emitted when the option is selected or deselected. */
        this.onSelectionChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
    }
    Object.defineProperty(MdOption.prototype, "id", {
        /**
         * The unique ID of the option.
         * @return {?}
         */
        get: function () { return this._id; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdOption.prototype, "selected", {
        /**
         * Whether or not the option is currently selected.
         * @return {?}
         */
        get: function () { return this._selected; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdOption.prototype, "disabled", {
        /**
         * Whether the option is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdOption.prototype, "active", {
        /**
         * Whether or not the option is currently active and ready to be selected.
         * An active option displays styles as if it is focused, but the
         * focus is actually retained somewhere else. This comes in handy
         * for components like autocomplete where focus must remain on the input.
         * @return {?}
         */
        get: function () {
            return this._active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdOption.prototype, "viewValue", {
        /**
         * The displayed value of the option. It is necessary to show the selected option in the
         * select's trigger.
         * @return {?}
         */
        get: function () {
            // TODO(kara): Add input property alternative for node envs.
            return this._getHostElement().textContent.trim();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Selects the option.
     * @return {?}
     */
    MdOption.prototype.select = function () {
        this._selected = true;
        this._emitSelectionChangeEvent();
    };
    /**
     * Deselects the option.
     * @return {?}
     */
    MdOption.prototype.deselect = function () {
        this._selected = false;
        this._emitSelectionChangeEvent();
    };
    /**
     * Sets focus onto this option.
     * @return {?}
     */
    MdOption.prototype.focus = function () {
        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');
    };
    /**
     * This method sets display styles on the option to make it appear
     * active. This is used by the ActiveDescendantKeyManager so key
     * events will display the proper options as active on arrow key events.
     * @return {?}
     */
    MdOption.prototype.setActiveStyles = function () {
        this._active = true;
    };
    /**
     * This method removes display styles on the option that made it appear
     * active. This is used by the ActiveDescendantKeyManager so key
     * events will display the proper options as active on arrow key events.
     * @return {?}
     */
    MdOption.prototype.setInactiveStyles = function () {
        this._active = false;
    };
    /**
     * Ensures the option is selected when activated from the keyboard.
     * @param {?} event
     * @return {?}
     */
    MdOption.prototype._handleKeydown = function (event) {
        if (event.keyCode === ENTER || event.keyCode === SPACE) {
            this._selectViaInteraction();
        }
    };
    /**
     * Selects the option while indicating the selection came from the user. Used to
     * determine if the select's view -> model callback should be invoked.
     * @return {?}
     */
    MdOption.prototype._selectViaInteraction = function () {
        if (!this.disabled) {
            this._selected = this.multiple ? !this._selected : true;
            this._emitSelectionChangeEvent(true);
        }
    };
    /**
     * Returns the correct tabindex for the option depending on disabled state.
     * @return {?}
     */
    MdOption.prototype._getTabIndex = function () {
        return this.disabled ? '-1' : '0';
    };
    /**
     * Fetches the host DOM element.
     * @return {?}
     */
    MdOption.prototype._getHostElement = function () {
        return this._element.nativeElement;
    };
    /**
     * Emits the selection change event.
     * @param {?=} isUserInput
     * @return {?}
     */
    MdOption.prototype._emitSelectionChangeEvent = function (isUserInput) {
        if (isUserInput === void 0) { isUserInput = false; }
        this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));
    };
    ;
    return MdOption;
}());
MdOption.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-option, mat-option',
                host: {
                    'role': 'option',
                    '[attr.tabindex]': '_getTabIndex()',
                    '[class.mat-selected]': 'selected',
                    '[class.mat-option-multiple]': 'multiple',
                    '[class.mat-active]': 'active',
                    '[id]': 'id',
                    '[attr.aria-selected]': 'selected.toString()',
                    '[attr.aria-disabled]': 'disabled.toString()',
                    '[class.mat-option-disabled]': 'disabled',
                    '(click)': '_selectViaInteraction()',
                    '(keydown)': '_handleKeydown($event)',
                    '[class.mat-option]': 'true',
                },
                template: "<span [ngSwitch]=\"_isCompatibilityMode\" *ngIf=\"multiple\"> <mat-pseudo-checkbox class=\"mat-option-pseudo-checkbox\" *ngSwitchCase=\"true\" [state]=\"selected ? 'checked' : ''\" color=\"primary\"></mat-pseudo-checkbox> <md-pseudo-checkbox class=\"mat-option-pseudo-checkbox\" *ngSwitchDefault [state]=\"selected ? 'checked' : ''\" color=\"primary\"></md-pseudo-checkbox> </span> <ng-content></ng-content> <div class=\"mat-option-ripple\" *ngIf=\"!disabled\" md-ripple [mdRippleTrigger]=\"_getHostElement()\"> </div> ",
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None
            },] },
];
/**
 * @nocollapse
 */
MdOption.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [MATERIAL_COMPATIBILITY_MODE,] },] },
]; };
MdOption.propDecorators = {
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'onSelectionChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
var MdOptionModule = (function () {
    function MdOptionModule() {
    }
    /**
     * @return {?}
     */
    MdOptionModule.forRoot = function () {
        return {
            ngModule: MdOptionModule,
            providers: []
        };
    };
    return MdOptionModule;
}());
MdOptionModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [MdRippleModule, __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */], MdSelectionModule],
                exports: [MdOption],
                declarations: [MdOption]
            },] },
];
/**
 * @nocollapse
 */
MdOptionModule.ctorParameters = function () { return []; };
/**
 * Wrapper around Error that sets the error message.
 * \@docs-private
 */
var MdError = (function (_super) {
    __extends(MdError, _super);
    /**
     * @param {?} value
     */
    function MdError(value) {
        var _this = _super.call(this) || this;
        _this.message = value;
        return _this;
    }
    return MdError;
}(Error));
/**
 * Exception thrown when attempting to attach a null portal to a host.
 * \@docs-private
 */
var NullPortalError = (function (_super) {
    __extends(NullPortalError, _super);
    function NullPortalError() {
        return _super.call(this, 'Must provide a portal to attach') || this;
    }
    return NullPortalError;
}(MdError));
/**
 * Exception thrown when attempting to attach a portal to a host that is already attached.
 * \@docs-private
 */
var PortalAlreadyAttachedError = (function (_super) {
    __extends(PortalAlreadyAttachedError, _super);
    function PortalAlreadyAttachedError() {
        return _super.call(this, 'Host already has a portal attached') || this;
    }
    return PortalAlreadyAttachedError;
}(MdError));
/**
 * Exception thrown when attempting to attach a portal to an already-disposed host.
 * \@docs-private
 */
var PortalHostAlreadyDisposedError = (function (_super) {
    __extends(PortalHostAlreadyDisposedError, _super);
    function PortalHostAlreadyDisposedError() {
        return _super.call(this, 'This PortalHost has already been disposed') || this;
    }
    return PortalHostAlreadyDisposedError;
}(MdError));
/**
 * Exception thrown when attempting to attach an unknown portal type.
 * \@docs-private
 */
var UnknownPortalTypeError = (function (_super) {
    __extends(UnknownPortalTypeError, _super);
    function UnknownPortalTypeError() {
        return _super.call(this, 'Attempting to attach an unknown Portal type. ' +
            'BasePortalHost accepts either a ComponentPortal or a TemplatePortal.') || this;
    }
    return UnknownPortalTypeError;
}(MdError));
/**
 * Exception thrown when attempting to attach a portal to a null host.
 * \@docs-private
 */
var NullPortalHostError = (function (_super) {
    __extends(NullPortalHostError, _super);
    function NullPortalHostError() {
        return _super.call(this, 'Attempting to attach a portal to a null PortalHost') || this;
    }
    return NullPortalHostError;
}(MdError));
/**
 * Exception thrown when attempting to detach a portal that is not attached.
 * \@docs-private
 */
var NoPortalAttachedError = (function (_super) {
    __extends(NoPortalAttachedError, _super);
    function NoPortalAttachedError() {
        return _super.call(this, 'Attempting to detach a portal that is not attached to a host') || this;
    }
    return NoPortalAttachedError;
}(MdError));
/**
 * A `Portal` is something that you want to render somewhere else.
 * It can be attach to / detached from a `PortalHost`.
 * @abstract
 */
var Portal = (function () {
    function Portal() {
    }
    /**
     * Attach this portal to a host.
     * @param {?} host
     * @return {?}
     */
    Portal.prototype.attach = function (host) {
        if (host == null) {
            throw new NullPortalHostError();
        }
        if (host.hasAttached()) {
            throw new PortalAlreadyAttachedError();
        }
        this._attachedHost = host;
        return (host.attach(this));
    };
    /**
     * Detach this portal from its host
     * @return {?}
     */
    Portal.prototype.detach = function () {
        var /** @type {?} */ host = this._attachedHost;
        if (host == null) {
            throw new NoPortalAttachedError();
        }
        this._attachedHost = null;
        return host.detach();
    };
    Object.defineProperty(Portal.prototype, "isAttached", {
        /**
         * Whether this portal is attached to a host.
         * @return {?}
         */
        get: function () {
            return this._attachedHost != null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the PortalHost reference without performing `attach()`. This is used directly by
     * the PortalHost when it is performing an `attach()` or `detach()`.
     * @param {?} host
     * @return {?}
     */
    Portal.prototype.setAttachedHost = function (host) {
        this._attachedHost = host;
    };
    return Portal;
}());
/**
 * A `ComponentPortal` is a portal that instantiates some Component upon attachment.
 */
var ComponentPortal = (function (_super) {
    __extends(ComponentPortal, _super);
    /**
     * @param {?} component
     * @param {?=} viewContainerRef
     * @param {?=} injector
     */
    function ComponentPortal(component, viewContainerRef, injector) {
        if (viewContainerRef === void 0) { viewContainerRef = null; }
        if (injector === void 0) { injector = null; }
        var _this = _super.call(this) || this;
        _this.component = component;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        return _this;
    }
    return ComponentPortal;
}(Portal));
/**
 * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).
 */
var TemplatePortal = (function (_super) {
    __extends(TemplatePortal, _super);
    /**
     * @param {?} template
     * @param {?} viewContainerRef
     */
    function TemplatePortal(template, viewContainerRef) {
        var _this = _super.call(this) || this;
        /**
         * Additional locals for the instantiated embedded view.
         * These locals can be seen as "exports" for the template, such as how ngFor has
         * index / event / odd.
         * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html
         */
        _this.locals = new Map();
        _this.templateRef = template;
        _this.viewContainerRef = viewContainerRef;
        return _this;
    }
    Object.defineProperty(TemplatePortal.prototype, "origin", {
        /**
         * @return {?}
         */
        get: function () {
            return this.templateRef.elementRef;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} host
     * @param {?=} locals
     * @return {?}
     */
    TemplatePortal.prototype.attach = function (host, locals) {
        this.locals = locals == null ? new Map() : locals;
        return _super.prototype.attach.call(this, host);
    };
    /**
     * @return {?}
     */
    TemplatePortal.prototype.detach = function () {
        this.locals = new Map();
        return _super.prototype.detach.call(this);
    };
    return TemplatePortal;
}(Portal));
/**
 * Partial implementation of PortalHost that only deals with attaching either a
 * ComponentPortal or a TemplatePortal.
 * @abstract
 */
var BasePortalHost = (function () {
    function BasePortalHost() {
        this._isDisposed = false;
    }
    /**
     * Whether this host has an attached portal.
     * @return {?}
     */
    BasePortalHost.prototype.hasAttached = function () {
        return !!this._attachedPortal;
    };
    /**
     * @param {?} portal
     * @return {?}
     */
    BasePortalHost.prototype.attach = function (portal) {
        if (!portal) {
            throw new NullPortalError();
        }
        if (this.hasAttached()) {
            throw new PortalAlreadyAttachedError();
        }
        if (this._isDisposed) {
            throw new PortalHostAlreadyDisposedError();
        }
        if (portal instanceof ComponentPortal) {
            this._attachedPortal = portal;
            return this.attachComponentPortal(portal);
        }
        else if (portal instanceof TemplatePortal) {
            this._attachedPortal = portal;
            return this.attachTemplatePortal(portal);
        }
        throw new UnknownPortalTypeError();
    };
    /**
     * @abstract
     * @template T
     * @param {?} portal
     * @return {?}
     */
    BasePortalHost.prototype.attachComponentPortal = function (portal) { };
    /**
     * @abstract
     * @param {?} portal
     * @return {?}
     */
    BasePortalHost.prototype.attachTemplatePortal = function (portal) { };
    /**
     * @return {?}
     */
    BasePortalHost.prototype.detach = function () {
        if (this._attachedPortal) {
            this._attachedPortal.setAttachedHost(null);
            this._attachedPortal = null;
        }
        this._invokeDisposeFn();
    };
    /**
     * @return {?}
     */
    BasePortalHost.prototype.dispose = function () {
        if (this.hasAttached()) {
            this.detach();
        }
        this._invokeDisposeFn();
        this._isDisposed = true;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    BasePortalHost.prototype.setDisposeFn = function (fn) {
        this._disposeFn = fn;
    };
    /**
     * @return {?}
     */
    BasePortalHost.prototype._invokeDisposeFn = function () {
        if (this._disposeFn) {
            this._disposeFn();
            this._disposeFn = null;
        }
    };
    return BasePortalHost;
}());
/**
 * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,
 * the directive instance itself can be attached to a host, enabling declarative use of portals.
 *
 * Usage:
 * <ng-template portal #greeting>
 *   <p> Hello {{name}} </p>
 * </ng-template>
 */
var TemplatePortalDirective = (function (_super) {
    __extends(TemplatePortalDirective, _super);
    /**
     * @param {?} templateRef
     * @param {?} viewContainerRef
     */
    function TemplatePortalDirective(templateRef, viewContainerRef) {
        return _super.call(this, templateRef, viewContainerRef) || this;
    }
    return TemplatePortalDirective;
}(TemplatePortal));
TemplatePortalDirective.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdk-portal], [portal]',
                exportAs: 'cdkPortal',
            },] },
];
/**
 * @nocollapse
 */
TemplatePortalDirective.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
]; };
/**
 * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be
 * directly attached to it, enabling declarative use.
 *
 * Usage:
 * <ng-template [cdkPortalHost]="greeting"></ng-template>
 */
var PortalHostDirective = (function (_super) {
    __extends(PortalHostDirective, _super);
    /**
     * @param {?} _componentFactoryResolver
     * @param {?} _viewContainerRef
     */
    function PortalHostDirective(_componentFactoryResolver, _viewContainerRef) {
        var _this = _super.call(this) || this;
        _this._componentFactoryResolver = _componentFactoryResolver;
        _this._viewContainerRef = _viewContainerRef;
        return _this;
    }
    Object.defineProperty(PortalHostDirective.prototype, "_deprecatedPortal", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this.portal; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.portal = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PortalHostDirective.prototype, "portal", {
        /**
         * Portal associated with the Portal host.
         * @return {?}
         */
        get: function () {
            return this._portal;
        },
        /**
         * @param {?} portal
         * @return {?}
         */
        set: function (portal) {
            if (this.hasAttached()) {
                _super.prototype.detach.call(this);
            }
            if (portal) {
                _super.prototype.attach.call(this, portal);
            }
            this._portal = portal;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PortalHostDirective.prototype.ngOnDestroy = function () {
        _super.prototype.dispose.call(this);
        this._portal = null;
    };
    /**
     * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.
     *
     * @template T
     * @param {?} portal Portal to be attached to the portal host.
     * @return {?}
     */
    PortalHostDirective.prototype.attachComponentPortal = function (portal) {
        portal.setAttachedHost(this);
        // If the portal specifies an origin, use that as the logical location of the component
        // in the application tree. Otherwise use the location of this PortalHost.
        var /** @type {?} */ viewContainerRef = portal.viewContainerRef != null ?
            portal.viewContainerRef :
            this._viewContainerRef;
        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);
        var /** @type {?} */ ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.parentInjector);
        _super.prototype.setDisposeFn.call(this, function () { return ref.destroy(); });
        this._portal = portal;
        return ref;
    };
    /**
     * Attach the given TemplatePortal to this PortlHost as an embedded View.
     * @param {?} portal Portal to be attached.
     * @return {?}
     */
    PortalHostDirective.prototype.attachTemplatePortal = function (portal) {
        var _this = this;
        portal.setAttachedHost(this);
        this._viewContainerRef.createEmbeddedView(portal.templateRef);
        _super.prototype.setDisposeFn.call(this, function () { return _this._viewContainerRef.clear(); });
        this._portal = portal;
        // TODO(jelbourn): return locals from view
        return new Map();
    };
    return PortalHostDirective;
}(BasePortalHost));
PortalHostDirective.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdkPortalHost], [portalHost]',
                inputs: ['portal: cdkPortalHost']
            },] },
];
/**
 * @nocollapse
 */
PortalHostDirective.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["v" /* ComponentFactoryResolver */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
]; };
PortalHostDirective.propDecorators = {
    '_deprecatedPortal': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['portalHost',] },],
};
var PortalModule = (function () {
    function PortalModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    PortalModule.forRoot = function () {
        return {
            ngModule: PortalModule,
            providers: []
        };
    };
    return PortalModule;
}());
PortalModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                exports: [TemplatePortalDirective, PortalHostDirective],
                declarations: [TemplatePortalDirective, PortalHostDirective],
            },] },
];
/**
 * @nocollapse
 */
PortalModule.ctorParameters = function () { return []; };
/**
 * OverlayState is a bag of values for either the initial configuration or current state of an
 * overlay.
 */
var OverlayState = (function () {
    function OverlayState() {
        /** Whether the overlay has a backdrop. */
        this.hasBackdrop = false;
        /** Custom class to add to the backdrop **/
        this.backdropClass = 'cdk-overlay-dark-backdrop';
        /** The direction of the text in the overlay panel. */
        this.direction = 'ltr';
        // TODO(jelbourn): configuration still to add
        // - focus trap
        // - disable pointer events
        // - z-index
    }
    return OverlayState;
}());
/**
 * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular
 * application context.
 *
 * This is the only part of the portal core that directly touches the DOM.
 */
var DomPortalHost = (function (_super) {
    __extends(DomPortalHost, _super);
    /**
     * @param {?} _hostDomElement
     * @param {?} _componentFactoryResolver
     * @param {?} _appRef
     * @param {?} _defaultInjector
     */
    function DomPortalHost(_hostDomElement, _componentFactoryResolver, _appRef, _defaultInjector) {
        var _this = _super.call(this) || this;
        _this._hostDomElement = _hostDomElement;
        _this._componentFactoryResolver = _componentFactoryResolver;
        _this._appRef = _appRef;
        _this._defaultInjector = _defaultInjector;
        return _this;
    }
    /**
     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.
     * @template T
     * @param {?} portal Portal to be attached
     * @return {?}
     */
    DomPortalHost.prototype.attachComponentPortal = function (portal) {
        var _this = this;
        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);
        var /** @type {?} */ componentRef;
        // If the portal specifies a ViewContainerRef, we will use that as the attachment point
        // for the component (in terms of Angular's component tree, not rendering).
        // When the ViewContainerRef is missing, we use the factory to create the component directly
        // and then manually attach the view to the application.
        if (portal.viewContainerRef) {
            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.parentInjector);
            this.setDisposeFn(function () { return componentRef.destroy(); });
        }
        else {
            componentRef = componentFactory.create(portal.injector || this._defaultInjector);
            this._appRef.attachView(componentRef.hostView);
            this.setDisposeFn(function () {
                _this._appRef.detachView(componentRef.hostView);
                componentRef.destroy();
            });
        }
        // At this point the component has been instantiated, so we move it to the location in the DOM
        // where we want it to be rendered.
        this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));
        return componentRef;
    };
    /**
     * Attaches a template portal to the DOM as an embedded view.
     * @param {?} portal Portal to be attached.
     * @return {?}
     */
    DomPortalHost.prototype.attachTemplatePortal = function (portal) {
        var _this = this;
        var /** @type {?} */ viewContainer = portal.viewContainerRef;
        var /** @type {?} */ viewRef = viewContainer.createEmbeddedView(portal.templateRef);
        // The method `createEmbeddedView` will add the view as a child of the viewContainer.
        // But for the DomPortalHost the view can be added everywhere in the DOM (e.g Overlay Container)
        // To move the view to the specified host element. We just re-append the existing root nodes.
        viewRef.rootNodes.forEach(function (rootNode) { return _this._hostDomElement.appendChild(rootNode); });
        this.setDisposeFn((function () {
            var /** @type {?} */ index = viewContainer.indexOf(viewRef);
            if (index !== -1) {
                viewContainer.remove(index);
            }
        }));
        // TODO(jelbourn): Return locals from view.
        return new Map();
    };
    /**
     * Clears out a portal from the DOM.
     * @return {?}
     */
    DomPortalHost.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this._hostDomElement.parentNode != null) {
            this._hostDomElement.parentNode.removeChild(this._hostDomElement);
        }
    };
    /**
     * Gets the root HTMLElement for an instantiated component.
     * @param {?} componentRef
     * @return {?}
     */
    DomPortalHost.prototype._getComponentRootNode = function (componentRef) {
        return (((componentRef.hostView)).rootNodes[0]);
    };
    return DomPortalHost;
}(BasePortalHost));
/**
 * Reference to an overlay that has been created with the Overlay service.
 * Used to manipulate or dispose of said overlay.
 */
var OverlayRef = (function () {
    /**
     * @param {?} _portalHost
     * @param {?} _pane
     * @param {?} _state
     * @param {?} _ngZone
     */
    function OverlayRef(_portalHost, _pane, _state, _ngZone) {
        this._portalHost = _portalHost;
        this._pane = _pane;
        this._state = _state;
        this._ngZone = _ngZone;
        this._backdropElement = null;
        this._backdropClick = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
    }
    Object.defineProperty(OverlayRef.prototype, "overlayElement", {
        /**
         * The overlay's HTML element
         * @return {?}
         */
        get: function () {
            return this._pane;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Attaches the overlay to a portal instance and adds the backdrop.
     * @param {?} portal Portal instance to which to attach the overlay.
     * @return {?} The portal attachment result.
     */
    OverlayRef.prototype.attach = function (portal) {
        var /** @type {?} */ attachResult = this._portalHost.attach(portal);
        // Update the pane element with the given state configuration.
        this._updateStackingOrder();
        this.updateSize();
        this.updateDirection();
        this.updatePosition();
        // Enable pointer events for the overlay pane element.
        this._togglePointerEvents(true);
        if (this._state.hasBackdrop) {
            this._attachBackdrop();
        }
        return attachResult;
    };
    /**
     * Detaches an overlay from a portal.
     * @return {?} Resolves when the overlay has been detached.
     */
    OverlayRef.prototype.detach = function () {
        this.detachBackdrop();
        // When the overlay is detached, the pane element should disable pointer events.
        // This is necessary because otherwise the pane element will cover the page and disable
        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.
        this._togglePointerEvents(false);
        return this._portalHost.detach();
    };
    /**
     * Cleans up the overlay from the DOM.
     * @return {?}
     */
    OverlayRef.prototype.dispose = function () {
        if (this._state.positionStrategy) {
            this._state.positionStrategy.dispose();
        }
        this.detachBackdrop();
        this._portalHost.dispose();
    };
    /**
     * Checks whether the overlay has been attached.
     * @return {?}
     */
    OverlayRef.prototype.hasAttached = function () {
        return this._portalHost.hasAttached();
    };
    /**
     * Returns an observable that emits when the backdrop has been clicked.
     * @return {?}
     */
    OverlayRef.prototype.backdropClick = function () {
        return this._backdropClick.asObservable();
    };
    /**
     * Gets the current state config of the overlay.
     * @return {?}
     */
    OverlayRef.prototype.getState = function () {
        return this._state;
    };
    /**
     * Updates the position of the overlay based on the position strategy.
     * @return {?}
     */
    OverlayRef.prototype.updatePosition = function () {
        if (this._state.positionStrategy) {
            this._state.positionStrategy.apply(this._pane);
        }
    };
    /**
     * Updates the text direction of the overlay panel. *
     * @return {?}
     */
    OverlayRef.prototype.updateDirection = function () {
        this._pane.setAttribute('dir', this._state.direction);
    };
    /**
     * Updates the size of the overlay based on the overlay config.
     * @return {?}
     */
    OverlayRef.prototype.updateSize = function () {
        if (this._state.width || this._state.width === 0) {
            this._pane.style.width = formatCssUnit(this._state.width);
        }
        if (this._state.height || this._state.height === 0) {
            this._pane.style.height = formatCssUnit(this._state.height);
        }
        if (this._state.minWidth || this._state.minWidth === 0) {
            this._pane.style.minWidth = formatCssUnit(this._state.minWidth);
        }
        if (this._state.minHeight || this._state.minHeight === 0) {
            this._pane.style.minHeight = formatCssUnit(this._state.minHeight);
        }
    };
    /**
     * Toggles the pointer events for the overlay pane element.
     * @param {?} enablePointer
     * @return {?}
     */
    OverlayRef.prototype._togglePointerEvents = function (enablePointer) {
        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';
    };
    /**
     * Attaches a backdrop for this overlay.
     * @return {?}
     */
    OverlayRef.prototype._attachBackdrop = function () {
        var _this = this;
        this._backdropElement = document.createElement('div');
        this._backdropElement.classList.add('cdk-overlay-backdrop');
        this._backdropElement.classList.add(this._state.backdropClass);
        // Insert the backdrop before the pane in the DOM order,
        // in order to handle stacked overlays properly.
        this._pane.parentElement.insertBefore(this._backdropElement, this._pane);
        // Forward backdrop clicks such that the consumer of the overlay can perform whatever
        // action desired when such a click occurs (usually closing the overlay).
        this._backdropElement.addEventListener('click', function () { return _this._backdropClick.next(null); });
        // Add class to fade-in the backdrop after one frame.
        requestAnimationFrame(function () {
            if (_this._backdropElement) {
                _this._backdropElement.classList.add('cdk-overlay-backdrop-showing');
            }
        });
    };
    /**
     * Updates the stacking order of the element, moving it to the top if necessary.
     * This is required in cases where one overlay was detached, while another one,
     * that should be behind it, was destroyed. The next time both of them are opened,
     * the stacking will be wrong, because the detached element's pane will still be
     * in its original DOM position.
     * @return {?}
     */
    OverlayRef.prototype._updateStackingOrder = function () {
        if (this._pane.nextSibling) {
            this._pane.parentNode.appendChild(this._pane);
        }
    };
    /**
     * Detaches the backdrop (if any) associated with the overlay.
     * @return {?}
     */
    OverlayRef.prototype.detachBackdrop = function () {
        var _this = this;
        var /** @type {?} */ backdropToDetach = this._backdropElement;
        if (backdropToDetach) {
            var /** @type {?} */ finishDetach_1 = function () {
                // It may not be attached to anything in certain cases (e.g. unit tests).
                if (backdropToDetach && backdropToDetach.parentNode) {
                    backdropToDetach.parentNode.removeChild(backdropToDetach);
                }
                // It is possible that a new portal has been attached to this overlay since we started
                // removing the backdrop. If that is the case, only clear the backdrop reference if it
                // is still the same instance that we started to remove.
                if (_this._backdropElement == backdropToDetach) {
                    _this._backdropElement = null;
                }
            };
            backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');
            backdropToDetach.classList.remove(this._state.backdropClass);
            backdropToDetach.addEventListener('transitionend', finishDetach_1);
            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.
            // In this case we make it unclickable and we try to remove it after a delay.
            backdropToDetach.style.pointerEvents = 'none';
            // Run this outside the Angular zone because there's nothing that Angular cares about.
            // If it were to run inside the Angular zone, every test that used Overlay would have to be
            // either async or fakeAsync.
            this._ngZone.runOutsideAngular(function () {
                setTimeout(finishDetach_1, 500);
            });
        }
    };
    return OverlayRef;
}());
/**
 * @param {?} value
 * @return {?}
 */
function formatCssUnit(value) {
    return typeof value === 'string' ? (value) : value + "px";
}
/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */
/**
 * The points of the origin element and the overlay element to connect.
 */
var ConnectionPositionPair = (function () {
    /**
     * @param {?} origin
     * @param {?} overlay
     */
    function ConnectionPositionPair(origin, overlay) {
        this.originX = origin.originX;
        this.originY = origin.originY;
        this.overlayX = overlay.overlayX;
        this.overlayY = overlay.overlayY;
    }
    return ConnectionPositionPair;
}());
/**
 * Set of properties regarding the position of the origin and overlay relative to the viewport
 * with respect to the containing Scrollable elements.
 *
 * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the
 * bounds of any one of the strategy's Scrollable's bounding client rectangle.
 *
 * The overlay and origin are outside view if there is no overlap between their bounding client
 * rectangle and any one of the strategy's Scrollable's bounding client rectangle.
 *
 *       -----------                    -----------
 *       | outside |                    | clipped |
 *       |  view   |              --------------------------
 *       |         |              |     |         |        |
 *       ----------               |     -----------        |
 *  --------------------------    |                        |
 *  |                        |    |      Scrollable        |
 *  |                        |    |                        |
 *  |                        |     --------------------------
 *  |      Scrollable        |
 *  |                        |
 *  --------------------------
 */
var ScrollableViewProperties = (function () {
    function ScrollableViewProperties() {
    }
    return ScrollableViewProperties;
}());
/**
 * The change event emitted by the strategy when a fallback position is used.
 */
var ConnectedOverlayPositionChange = (function () {
    /**
     * @param {?} connectionPair
     * @param {?} scrollableViewProperties
     */
    function ConnectedOverlayPositionChange(connectionPair, scrollableViewProperties) {
        this.connectionPair = connectionPair;
        this.scrollableViewProperties = scrollableViewProperties;
    }
    return ConnectedOverlayPositionChange;
}());
/**
 * @nocollapse
 */
ConnectedOverlayPositionChange.ctorParameters = function () { return [
    { type: ConnectionPositionPair, },
    { type: ScrollableViewProperties, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
/**
 * A strategy for positioning overlays. Using this strategy, an overlay is given an
 * implicit position relative some origin element. The relative position is defined in terms of
 * a point on the origin element that is connected to a point on the overlay element. For example,
 * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner
 * of the overlay.
 */
var ConnectedPositionStrategy = (function () {
    /**
     * @param {?} _connectedTo
     * @param {?} _originPos
     * @param {?} _overlayPos
     * @param {?} _viewportRuler
     */
    function ConnectedPositionStrategy(_connectedTo, _originPos, _overlayPos, _viewportRuler) {
        this._connectedTo = _connectedTo;
        this._originPos = _originPos;
        this._overlayPos = _overlayPos;
        this._viewportRuler = _viewportRuler;
        this._dir = 'ltr';
        this._offsetX = 0;
        this._offsetY = 0;
        this.scrollables = [];
        /** Ordered list of preferred positions, from most to least desirable. */
        this._preferredPositions = [];
        this._onPositionChange = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        this._origin = this._connectedTo.nativeElement;
        this.withFallbackPosition(_originPos, _overlayPos);
    }
    Object.defineProperty(ConnectedPositionStrategy.prototype, "_isRtl", {
        /**
         * Whether the we're dealing with an RTL context
         * @return {?}
         */
        get: function () {
            return this._dir === 'rtl';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConnectedPositionStrategy.prototype, "onPositionChange", {
        /**
         * Emits an event when the connection point changes.
         * @return {?}
         */
        get: function () {
            return this._onPositionChange.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConnectedPositionStrategy.prototype, "positions", {
        /**
         * Ordered list of preferred positions, from most to least desirable.
         * @return {?}
         */
        get: function () {
            return this._preferredPositions;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * To be used to for any cleanup after the element gets destroyed.
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.dispose = function () { };
    /**
     * Updates the position of the overlay element, using whichever preferred position relative
     * to the origin fits on-screen.
     * \@docs-private
     *
     * @param {?} element Element to which to apply the CSS styles.
     * @return {?} Resolves when the styles have been applied.
     */
    ConnectedPositionStrategy.prototype.apply = function (element) {
        // Cache the overlay pane element in case re-calculating position is necessary
        this._pane = element;
        // We need the bounding rects for the origin and the overlay to determine how to position
        // the overlay relative to the origin.
        var /** @type {?} */ originRect = this._origin.getBoundingClientRect();
        var /** @type {?} */ overlayRect = element.getBoundingClientRect();
        // We use the viewport rect to determine whether a position would go off-screen.
        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();
        // Fallback point if none of the fallbacks fit into the viewport.
        var /** @type {?} */ fallbackPoint = null;
        // We want to place the overlay in the first of the preferred positions such that the
        // overlay fits on-screen.
        for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {
            var pos = _a[_i];
            // Get the (x, y) point of connection on the origin, and then use that to get the
            // (top, left) coordinate for the overlay at `pos`.
            var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, pos);
            var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, pos);
            // If the overlay in the calculated position fits on-screen, put it there and we're done.
            if (overlayPoint.fitsInViewport) {
                this._setElementPosition(element, overlayPoint);
                // Save the last connected position in case the position needs to be re-calculated.
                this._lastConnectedPosition = pos;
                // Notify that the position has been changed along with its change properties.
                var /** @type {?} */ scrollableViewProperties = this.getScrollableViewProperties(element);
                var /** @type {?} */ positionChange = new ConnectedOverlayPositionChange(pos, scrollableViewProperties);
                this._onPositionChange.next(positionChange);
                return Promise.resolve(null);
            }
            else if (!fallbackPoint || fallbackPoint.visibleArea < overlayPoint.visibleArea) {
                fallbackPoint = overlayPoint;
            }
        }
        // If none of the preferred positions were in the viewport, take the one
        // with the largest visible area.
        this._setElementPosition(element, fallbackPoint);
        return Promise.resolve(null);
    };
    /**
     * This re-aligns the overlay element with the trigger in its last calculated position,
     * even if a position higher in the "preferred positions" list would now fit. This
     * allows one to re-align the panel without changing the orientation of the panel.
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.recalculateLastPosition = function () {
        var /** @type {?} */ originRect = this._origin.getBoundingClientRect();
        var /** @type {?} */ overlayRect = this._pane.getBoundingClientRect();
        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();
        var /** @type {?} */ lastPosition = this._lastConnectedPosition || this._preferredPositions[0];
        var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, lastPosition);
        var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, lastPosition);
        this._setElementPosition(this._pane, overlayPoint);
    };
    /**
     * Sets the list of Scrollable containers that host the origin element so that
     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every
     * Scrollable must be an ancestor element of the strategy's origin element.
     * @param {?} scrollables
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.withScrollableContainers = function (scrollables) {
        this.scrollables = scrollables;
    };
    /**
     * Adds a new preferred fallback position.
     * @param {?} originPos
     * @param {?} overlayPos
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.withFallbackPosition = function (originPos, overlayPos) {
        this._preferredPositions.push(new ConnectionPositionPair(originPos, overlayPos));
        return this;
    };
    /**
     * Sets the layout direction so the overlay's position can be adjusted to match.
     * @param {?} dir New layout direction.
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.withDirection = function (dir) {
        this._dir = dir;
        return this;
    };
    /**
     * Sets an offset for the overlay's connection point on the x-axis
     * @param {?} offset New offset in the X axis.
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.withOffsetX = function (offset) {
        this._offsetX = offset;
        return this;
    };
    /**
     * Sets an offset for the overlay's connection point on the y-axis
     * @param {?} offset New offset in the Y axis.
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.withOffsetY = function (offset) {
        this._offsetY = offset;
        return this;
    };
    /**
     * Gets the horizontal (x) "start" dimension based on whether the overlay is in an RTL context.
     * @param {?} rect
     * @return {?}
     */
    ConnectedPositionStrategy.prototype._getStartX = function (rect) {
        return this._isRtl ? rect.right : rect.left;
    };
    /**
     * Gets the horizontal (x) "end" dimension based on whether the overlay is in an RTL context.
     * @param {?} rect
     * @return {?}
     */
    ConnectedPositionStrategy.prototype._getEndX = function (rect) {
        return this._isRtl ? rect.left : rect.right;
    };
    /**
     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.
     * @param {?} originRect
     * @param {?} pos
     * @return {?}
     */
    ConnectedPositionStrategy.prototype._getOriginConnectionPoint = function (originRect, pos) {
        var /** @type {?} */ originStartX = this._getStartX(originRect);
        var /** @type {?} */ originEndX = this._getEndX(originRect);
        var /** @type {?} */ x;
        if (pos.originX == 'center') {
            x = originStartX + (originRect.width / 2);
        }
        else {
            x = pos.originX == 'start' ? originStartX : originEndX;
        }
        var /** @type {?} */ y;
        if (pos.originY == 'center') {
            y = originRect.top + (originRect.height / 2);
        }
        else {
            y = pos.originY == 'top' ? originRect.top : originRect.bottom;
        }
        return { x: x, y: y };
    };
    /**
     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and
     * origin point to which the overlay should be connected, as well as how much of the element
     * would be inside the viewport at that position.
     * @param {?} originPoint
     * @param {?} overlayRect
     * @param {?} viewportRect
     * @param {?} pos
     * @return {?}
     */
    ConnectedPositionStrategy.prototype._getOverlayPoint = function (originPoint, overlayRect, viewportRect, pos) {
        // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position
        // relative to the origin point.
        var /** @type {?} */ overlayStartX;
        if (pos.overlayX == 'center') {
            overlayStartX = -overlayRect.width / 2;
        }
        else if (pos.overlayX === 'start') {
            overlayStartX = this._isRtl ? -overlayRect.width : 0;
        }
        else {
            overlayStartX = this._isRtl ? 0 : -overlayRect.width;
        }
        var /** @type {?} */ overlayStartY;
        if (pos.overlayY == 'center') {
            overlayStartY = -overlayRect.height / 2;
        }
        else {
            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;
        }
        // The (x, y) coordinates of the overlay.
        var /** @type {?} */ x = originPoint.x + overlayStartX + this._offsetX;
        var /** @type {?} */ y = originPoint.y + overlayStartY + this._offsetY;
        // How much the overlay would overflow at this position, on each side.
        var /** @type {?} */ leftOverflow = 0 - x;
        var /** @type {?} */ rightOverflow = (x + overlayRect.width) - viewportRect.width;
        var /** @type {?} */ topOverflow = 0 - y;
        var /** @type {?} */ bottomOverflow = (y + overlayRect.height) - viewportRect.height;
        // Visible parts of the element on each axis.
        var /** @type {?} */ visibleWidth = this._subtractOverflows(overlayRect.width, leftOverflow, rightOverflow);
        var /** @type {?} */ visibleHeight = this._subtractOverflows(overlayRect.height, topOverflow, bottomOverflow);
        // The area of the element that's within the viewport.
        var /** @type {?} */ visibleArea = visibleWidth * visibleHeight;
        var /** @type {?} */ fitsInViewport = (overlayRect.width * overlayRect.height) === visibleArea;
        return { x: x, y: y, fitsInViewport: fitsInViewport, visibleArea: visibleArea };
    };
    /**
     * Gets the view properties of the trigger and overlay, including whether they are clipped
     * or completely outside the view of any of the strategy's scrollables.
     * @param {?} overlay
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.getScrollableViewProperties = function (overlay) {
        var _this = this;
        var /** @type {?} */ originBounds = this._getElementBounds(this._origin);
        var /** @type {?} */ overlayBounds = this._getElementBounds(overlay);
        var /** @type {?} */ scrollContainerBounds = this.scrollables.map(function (scrollable) {
            return _this._getElementBounds(scrollable.getElementRef().nativeElement);
        });
        return {
            isOriginClipped: this.isElementClipped(originBounds, scrollContainerBounds),
            isOriginOutsideView: this.isElementOutsideView(originBounds, scrollContainerBounds),
            isOverlayClipped: this.isElementClipped(overlayBounds, scrollContainerBounds),
            isOverlayOutsideView: this.isElementOutsideView(overlayBounds, scrollContainerBounds),
        };
    };
    /**
     * Whether the element is completely out of the view of any of the containers.
     * @param {?} elementBounds
     * @param {?} containersBounds
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.isElementOutsideView = function (elementBounds, containersBounds) {
        return containersBounds.some(function (containerBounds) {
            var /** @type {?} */ outsideAbove = elementBounds.bottom < containerBounds.top;
            var /** @type {?} */ outsideBelow = elementBounds.top > containerBounds.bottom;
            var /** @type {?} */ outsideLeft = elementBounds.right < containerBounds.left;
            var /** @type {?} */ outsideRight = elementBounds.left > containerBounds.right;
            return outsideAbove || outsideBelow || outsideLeft || outsideRight;
        });
    };
    /**
     * Whether the element is clipped by any of the containers.
     * @param {?} elementBounds
     * @param {?} containersBounds
     * @return {?}
     */
    ConnectedPositionStrategy.prototype.isElementClipped = function (elementBounds, containersBounds) {
        return containersBounds.some(function (containerBounds) {
            var /** @type {?} */ clippedAbove = elementBounds.top < containerBounds.top;
            var /** @type {?} */ clippedBelow = elementBounds.bottom > containerBounds.bottom;
            var /** @type {?} */ clippedLeft = elementBounds.left < containerBounds.left;
            var /** @type {?} */ clippedRight = elementBounds.right > containerBounds.right;
            return clippedAbove || clippedBelow || clippedLeft || clippedRight;
        });
    };
    /**
     * Physically positions the overlay element to the given coordinate.
     * @param {?} element
     * @param {?} overlayPoint
     * @return {?}
     */
    ConnectedPositionStrategy.prototype._setElementPosition = function (element, overlayPoint) {
        element.style.left = overlayPoint.x + 'px';
        element.style.top = overlayPoint.y + 'px';
    };
    /**
     * Returns the bounding positions of the provided element with respect to the viewport.
     * @param {?} element
     * @return {?}
     */
    ConnectedPositionStrategy.prototype._getElementBounds = function (element) {
        var /** @type {?} */ boundingClientRect = element.getBoundingClientRect();
        return {
            top: boundingClientRect.top,
            right: boundingClientRect.left + boundingClientRect.width,
            bottom: boundingClientRect.top + boundingClientRect.height,
            left: boundingClientRect.left
        };
    };
    /**
     * Subtracts the amount that an element is overflowing on an axis from it's length.
     * @param {?} length
     * @param {...?} overflows
     * @return {?}
     */
    ConnectedPositionStrategy.prototype._subtractOverflows = function (length) {
        var overflows = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            overflows[_i - 1] = arguments[_i];
        }
        return overflows.reduce(function (currentValue, currentOverflow) {
            return currentValue - Math.max(currentOverflow, 0);
        }, length);
    };
    return ConnectedPositionStrategy;
}());
/**
 * A strategy for positioning overlays. Using this strategy, an overlay is given an
 * explicit position relative to the browser's viewport. We use flexbox, instead of
 * transforms, in order to avoid issues with subpixel rendering which can cause the
 * element to become blurry.
 */
var GlobalPositionStrategy = (function () {
    function GlobalPositionStrategy() {
        this._cssPosition = 'static';
        this._topOffset = '';
        this._bottomOffset = '';
        this._leftOffset = '';
        this._rightOffset = '';
        this._alignItems = '';
        this._justifyContent = '';
        this._width = '';
        this._height = '';
    }
    /**
     * Sets the top position of the overlay. Clears any previously set vertical position.
     * @param {?} value New top offset.
     * @return {?}
     */
    GlobalPositionStrategy.prototype.top = function (value) {
        this._bottomOffset = '';
        this._topOffset = value;
        this._alignItems = 'flex-start';
        return this;
    };
    /**
     * Sets the left position of the overlay. Clears any previously set horizontal position.
     * @param {?} value New left offset.
     * @return {?}
     */
    GlobalPositionStrategy.prototype.left = function (value) {
        this._rightOffset = '';
        this._leftOffset = value;
        this._justifyContent = 'flex-start';
        return this;
    };
    /**
     * Sets the bottom position of the overlay. Clears any previously set vertical position.
     * @param {?} value New bottom offset.
     * @return {?}
     */
    GlobalPositionStrategy.prototype.bottom = function (value) {
        this._topOffset = '';
        this._bottomOffset = value;
        this._alignItems = 'flex-end';
        return this;
    };
    /**
     * Sets the right position of the overlay. Clears any previously set horizontal position.
     * @param {?} value New right offset.
     * @return {?}
     */
    GlobalPositionStrategy.prototype.right = function (value) {
        this._leftOffset = '';
        this._rightOffset = value;
        this._justifyContent = 'flex-end';
        return this;
    };
    /**
     * Sets the overlay width and clears any previously set width.
     * @param {?} value New width for the overlay
     * @return {?}
     */
    GlobalPositionStrategy.prototype.width = function (value) {
        this._width = value;
        // When the width is 100%, we should reset the `left` and the offset,
        // in order to ensure that the element is flush against the viewport edge.
        if (value === '100%') {
            this.left('0px');
        }
        return this;
    };
    /**
     * Sets the overlay height and clears any previously set height.
     * @param {?} value New height for the overlay
     * @return {?}
     */
    GlobalPositionStrategy.prototype.height = function (value) {
        this._height = value;
        // When the height is 100%, we should reset the `top` and the offset,
        // in order to ensure that the element is flush against the viewport edge.
        if (value === '100%') {
            this.top('0px');
        }
        return this;
    };
    /**
     * Centers the overlay horizontally with an optional offset.
     * Clears any previously set horizontal position.
     *
     * @param {?=} offset Overlay offset from the horizontal center.
     * @return {?}
     */
    GlobalPositionStrategy.prototype.centerHorizontally = function (offset) {
        if (offset === void 0) { offset = ''; }
        this.left(offset);
        this._justifyContent = 'center';
        return this;
    };
    /**
     * Centers the overlay vertically with an optional offset.
     * Clears any previously set vertical position.
     *
     * @param {?=} offset Overlay offset from the vertical center.
     * @return {?}
     */
    GlobalPositionStrategy.prototype.centerVertically = function (offset) {
        if (offset === void 0) { offset = ''; }
        this.top(offset);
        this._alignItems = 'center';
        return this;
    };
    /**
     * Apply the position to the element.
     * \@docs-private
     *
     * @param {?} element Element to which to apply the CSS.
     * @return {?} Resolved when the styles have been applied.
     */
    GlobalPositionStrategy.prototype.apply = function (element) {
        if (!this._wrapper) {
            this._wrapper = document.createElement('div');
            this._wrapper.classList.add('cdk-global-overlay-wrapper');
            element.parentNode.insertBefore(this._wrapper, element);
            this._wrapper.appendChild(element);
        }
        var /** @type {?} */ styles = element.style;
        var /** @type {?} */ parentStyles = ((element.parentNode)).style;
        styles.position = this._cssPosition;
        styles.marginTop = this._topOffset;
        styles.marginLeft = this._leftOffset;
        styles.marginBottom = this._bottomOffset;
        styles.marginRight = this._rightOffset;
        styles.width = this._width;
        styles.height = this._height;
        parentStyles.justifyContent = this._justifyContent;
        parentStyles.alignItems = this._alignItems;
        return Promise.resolve(null);
    };
    /**
     * Removes the wrapper element from the DOM.
     * @return {?}
     */
    GlobalPositionStrategy.prototype.dispose = function () {
        if (this._wrapper && this._wrapper.parentNode) {
            this._wrapper.parentNode.removeChild(this._wrapper);
            this._wrapper = null;
        }
    };
    return GlobalPositionStrategy;
}());
/**
 * Builder for overlay position strategy.
 */
var OverlayPositionBuilder = (function () {
    /**
     * @param {?} _viewportRuler
     */
    function OverlayPositionBuilder(_viewportRuler) {
        this._viewportRuler = _viewportRuler;
    }
    /**
     * Creates a global position strategy.
     * @return {?}
     */
    OverlayPositionBuilder.prototype.global = function () {
        return new GlobalPositionStrategy();
    };
    /**
     * Creates a relative position strategy.
     * @param {?} elementRef
     * @param {?} originPos
     * @param {?} overlayPos
     * @return {?}
     */
    OverlayPositionBuilder.prototype.connectedTo = function (elementRef, originPos, overlayPos) {
        return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);
    };
    return OverlayPositionBuilder;
}());
OverlayPositionBuilder.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
OverlayPositionBuilder.ctorParameters = function () { return [
    { type: ViewportRuler, },
]; };
/**
 * The OverlayContainer is the container in which all overlays will load.
 * It should be provided in the root component to ensure it is properly shared.
 */
var OverlayContainer = (function () {
    function OverlayContainer() {
    }
    Object.defineProperty(OverlayContainer.prototype, "themeClass", {
        /**
         * Base theme to be applied to all overlay-based components.
         * @return {?}
         */
        get: function () { return this._themeClass; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (this._containerElement) {
                this._containerElement.classList.remove(this._themeClass);
                if (value) {
                    this._containerElement.classList.add(value);
                }
            }
            this._themeClass = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * This method returns the overlay container element.  It will lazily
     * create the element the first time  it is called to facilitate using
     * the container in non-browser environments.
     * @return {?} the container element
     */
    OverlayContainer.prototype.getContainerElement = function () {
        if (!this._containerElement) {
            this._createContainer();
        }
        return this._containerElement;
    };
    /**
     * Create the overlay container element, which is simply a div
     * with the 'cdk-overlay-container' class on the document body.
     * @return {?}
     */
    OverlayContainer.prototype._createContainer = function () {
        var /** @type {?} */ container = document.createElement('div');
        container.classList.add('cdk-overlay-container');
        if (this._themeClass) {
            container.classList.add(this._themeClass);
        }
        document.body.appendChild(container);
        this._containerElement = container;
    };
    return OverlayContainer;
}());
OverlayContainer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
OverlayContainer.ctorParameters = function () { return []; };
/**
 * @param {?} parentContainer
 * @return {?}
 */
function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer) {
    return parentContainer || new OverlayContainer();
}
var OVERLAY_CONTAINER_PROVIDER = {
    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.
    provide: OverlayContainer,
    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */](), OverlayContainer]],
    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY
};
/** Next overlay unique ID. */
var nextUniqueId = 0;
/** The default state for newly created overlays. */
var defaultState = new OverlayState();
/**
 * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be
 * used as a low-level building building block for other components. Dialogs, tooltips, menus,
 * selects, etc. can all be built using overlays. The service should primarily be used by authors
 * of re-usable components rather than developers building end-user applications.
 *
 * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.
 */
var Overlay = (function () {
    /**
     * @param {?} _overlayContainer
     * @param {?} _componentFactoryResolver
     * @param {?} _positionBuilder
     * @param {?} _appRef
     * @param {?} _injector
     * @param {?} _ngZone
     */
    function Overlay(_overlayContainer, _componentFactoryResolver, _positionBuilder, _appRef, _injector, _ngZone) {
        this._overlayContainer = _overlayContainer;
        this._componentFactoryResolver = _componentFactoryResolver;
        this._positionBuilder = _positionBuilder;
        this._appRef = _appRef;
        this._injector = _injector;
        this._ngZone = _ngZone;
    }
    /**
     * Creates an overlay.
     * @param {?=} state State to apply to the overlay.
     * @return {?} Reference to the created overlay.
     */
    Overlay.prototype.create = function (state$$1) {
        if (state$$1 === void 0) { state$$1 = defaultState; }
        return this._createOverlayRef(this._createPaneElement(), state$$1);
    };
    /**
     * Returns a position builder that can be used, via fluent API,
     * to construct and configure a position strategy.
     * @return {?}
     */
    Overlay.prototype.position = function () {
        return this._positionBuilder;
    };
    /**
     * Creates the DOM element for an overlay and appends it to the overlay container.
     * @return {?} Newly-created pane element
     */
    Overlay.prototype._createPaneElement = function () {
        var /** @type {?} */ pane = document.createElement('div');
        pane.id = "cdk-overlay-" + nextUniqueId++;
        pane.classList.add('cdk-overlay-pane');
        this._overlayContainer.getContainerElement().appendChild(pane);
        return pane;
    };
    /**
     * Create a DomPortalHost into which the overlay content can be loaded.
     * @param {?} pane The DOM element to turn into a portal host.
     * @return {?} A portal host for the given DOM element.
     */
    Overlay.prototype._createPortalHost = function (pane) {
        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef, this._injector);
    };
    /**
     * Creates an OverlayRef for an overlay in the given DOM element.
     * @param {?} pane DOM element for the overlay
     * @param {?} state
     * @return {?}
     */
    Overlay.prototype._createOverlayRef = function (pane, state$$1) {
        return new OverlayRef(this._createPortalHost(pane), pane, state$$1, this._ngZone);
    };
    return Overlay;
}());
Overlay.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
Overlay.ctorParameters = function () { return [
    { type: OverlayContainer, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["v" /* ComponentFactoryResolver */], },
    { type: OverlayPositionBuilder, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["w" /* ApplicationRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["x" /* Injector */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
]; };
/** Providers for Overlay and its related injectables. */
var OVERLAY_PROVIDERS = [
    Overlay,
    OverlayPositionBuilder,
    VIEWPORT_RULER_PROVIDER,
    SCROLL_DISPATCHER_PROVIDER,
    OVERLAY_CONTAINER_PROVIDER,
];
/**
 * Sends an event when the directive's element is scrolled. Registers itself with the
 * ScrollDispatcher service to include itself as part of its collection of scrolling events that it
 * can be listened to through the service.
 */
var Scrollable = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _scroll
     * @param {?} _ngZone
     * @param {?} _renderer
     */
    function Scrollable(_elementRef, _scroll, _ngZone, _renderer) {
        this._elementRef = _elementRef;
        this._scroll = _scroll;
        this._ngZone = _ngZone;
        this._renderer = _renderer;
        this._elementScrolled = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
    }
    /**
     * @return {?}
     */
    Scrollable.prototype.ngOnInit = function () {
        var _this = this;
        this._scrollListener = this._ngZone.runOutsideAngular(function () {
            return _this._renderer.listen(_this.getElementRef().nativeElement, 'scroll', function (event) {
                _this._elementScrolled.next(event);
            });
        });
        this._scroll.register(this);
    };
    /**
     * @return {?}
     */
    Scrollable.prototype.ngOnDestroy = function () {
        this._scroll.deregister(this);
        if (this._scrollListener) {
            this._scrollListener();
            this._scrollListener = null;
        }
    };
    /**
     * Returns observable that emits when a scroll event is fired on the host element.
     * @return {?}
     */
    Scrollable.prototype.elementScrolled = function () {
        return this._elementScrolled.asObservable();
    };
    /**
     * @return {?}
     */
    Scrollable.prototype.getElementRef = function () {
        return this._elementRef;
    };
    return Scrollable;
}());
Scrollable.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdk-scrollable]'
            },] },
];
/**
 * @nocollapse
 */
Scrollable.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: ScrollDispatcher, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
/** Default set of positions for the overlay. Follows the behavior of a dropdown. */
var defaultPositionList = [
    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),
    new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),
];
/**
 * Directive applied to an element to make it usable as an origin for an Overlay using a
 * ConnectedPositionStrategy.
 */
var OverlayOrigin = (function () {
    /**
     * @param {?} elementRef
     */
    function OverlayOrigin(elementRef) {
        this.elementRef = elementRef;
    }
    return OverlayOrigin;
}());
OverlayOrigin.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdk-overlay-origin], [overlay-origin]',
                exportAs: 'cdkOverlayOrigin',
            },] },
];
/**
 * @nocollapse
 */
OverlayOrigin.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
/**
 * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.
 */
var ConnectedOverlayDirective = (function () {
    /**
     * @param {?} _overlay
     * @param {?} templateRef
     * @param {?} viewContainerRef
     * @param {?} _dir
     */
    function ConnectedOverlayDirective(_overlay, templateRef, viewContainerRef, _dir) {
        this._overlay = _overlay;
        this._dir = _dir;
        this._open = false;
        this._hasBackdrop = false;
        this._offsetX = 0;
        this._offsetY = 0;
        /** Event emitted when the backdrop is clicked. */
        this.backdropClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the position has changed. */
        this.positionChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the overlay has been attached. */
        this.attach = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the overlay has been detached. */
        this.detach = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);
    }
    Object.defineProperty(ConnectedOverlayDirective.prototype, "offsetX", {
        /**
         * The offset in pixels for the overlay connection point on the x-axis
         * @return {?}
         */
        get: function () {
            return this._offsetX;
        },
        /**
         * @param {?} offsetX
         * @return {?}
         */
        set: function (offsetX) {
            this._offsetX = offsetX;
            if (this._position) {
                this._position.withOffsetX(offsetX);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConnectedOverlayDirective.prototype, "offsetY", {
        /**
         * The offset in pixels for the overlay connection point on the y-axis
         * @return {?}
         */
        get: function () {
            return this._offsetY;
        },
        /**
         * @param {?} offsetY
         * @return {?}
         */
        set: function (offsetY) {
            this._offsetY = offsetY;
            if (this._position) {
                this._position.withOffsetY(offsetY);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConnectedOverlayDirective.prototype, "hasBackdrop", {
        /**
         * Whether or not the overlay should attach a backdrop.
         * @return {?}
         */
        get: function () {
            return this._hasBackdrop;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._hasBackdrop = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConnectedOverlayDirective.prototype, "open", {
        /**
         * @return {?}
         */
        get: function () {
            return this._open;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            value ? this._attachOverlay() : this._detachOverlay();
            this._open = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConnectedOverlayDirective.prototype, "overlayRef", {
        /**
         * The associated overlay reference.
         * @return {?}
         */
        get: function () {
            return this._overlayRef;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConnectedOverlayDirective.prototype, "dir", {
        /**
         * The element's layout direction.
         * @return {?}
         */
        get: function () {
            return this._dir ? this._dir.value : 'ltr';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ConnectedOverlayDirective.prototype.ngOnDestroy = function () {
        this._destroyOverlay();
    };
    /**
     * Creates an overlay
     * @return {?}
     */
    ConnectedOverlayDirective.prototype._createOverlay = function () {
        if (!this.positions || !this.positions.length) {
            this.positions = defaultPositionList;
        }
        this._overlayRef = this._overlay.create(this._buildConfig());
    };
    /**
     * Builds the overlay config based on the directive's inputs
     * @return {?}
     */
    ConnectedOverlayDirective.prototype._buildConfig = function () {
        var /** @type {?} */ overlayConfig = new OverlayState();
        if (this.width || this.width === 0) {
            overlayConfig.width = this.width;
        }
        if (this.height || this.height === 0) {
            overlayConfig.height = this.height;
        }
        if (this.minWidth || this.minWidth === 0) {
            overlayConfig.minWidth = this.minWidth;
        }
        if (this.minHeight || this.minHeight === 0) {
            overlayConfig.minHeight = this.minHeight;
        }
        overlayConfig.hasBackdrop = this.hasBackdrop;
        if (this.backdropClass) {
            overlayConfig.backdropClass = this.backdropClass;
        }
        this._position = (this._createPositionStrategy());
        overlayConfig.positionStrategy = this._position;
        return overlayConfig;
    };
    /**
     * Returns the position strategy of the overlay to be set on the overlay config
     * @return {?}
     */
    ConnectedOverlayDirective.prototype._createPositionStrategy = function () {
        var /** @type {?} */ pos = this.positions[0];
        var /** @type {?} */ originPoint = { originX: pos.originX, originY: pos.originY };
        var /** @type {?} */ overlayPoint = { overlayX: pos.overlayX, overlayY: pos.overlayY };
        var /** @type {?} */ strategy = this._overlay.position()
            .connectedTo(this.origin.elementRef, originPoint, overlayPoint)
            .withOffsetX(this.offsetX)
            .withOffsetY(this.offsetY);
        this._handlePositionChanges(strategy);
        return strategy;
    };
    /**
     * @param {?} strategy
     * @return {?}
     */
    ConnectedOverlayDirective.prototype._handlePositionChanges = function (strategy) {
        var _this = this;
        for (var /** @type {?} */ i = 1; i < this.positions.length; i++) {
            strategy.withFallbackPosition({ originX: this.positions[i].originX, originY: this.positions[i].originY }, { overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY });
        }
        this._positionSubscription =
            strategy.onPositionChange.subscribe(function (pos) { return _this.positionChange.emit(pos); });
    };
    /**
     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists
     * @return {?}
     */
    ConnectedOverlayDirective.prototype._attachOverlay = function () {
        var _this = this;
        if (!this._overlayRef) {
            this._createOverlay();
        }
        this._position.withDirection(this.dir);
        this._overlayRef.getState().direction = this.dir;
        if (!this._overlayRef.hasAttached()) {
            this._overlayRef.attach(this._templatePortal);
            this.attach.emit();
        }
        if (this.hasBackdrop) {
            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {
                _this.backdropClick.emit();
            });
        }
    };
    /**
     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists
     * @return {?}
     */
    ConnectedOverlayDirective.prototype._detachOverlay = function () {
        if (this._overlayRef) {
            this._overlayRef.detach();
            this.detach.emit();
        }
        if (this._backdropSubscription) {
            this._backdropSubscription.unsubscribe();
            this._backdropSubscription = null;
        }
    };
    /**
     * Destroys the overlay created by this directive.
     * @return {?}
     */
    ConnectedOverlayDirective.prototype._destroyOverlay = function () {
        if (this._overlayRef) {
            this._overlayRef.dispose();
        }
        if (this._backdropSubscription) {
            this._backdropSubscription.unsubscribe();
        }
        if (this._positionSubscription) {
            this._positionSubscription.unsubscribe();
        }
    };
    return ConnectedOverlayDirective;
}());
ConnectedOverlayDirective.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdk-connected-overlay], [connected-overlay]',
                exportAs: 'cdkConnectedOverlay'
            },] },
];
/**
 * @nocollapse
 */
ConnectedOverlayDirective.ctorParameters = function () { return [
    { type: Overlay, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
ConnectedOverlayDirective.propDecorators = {
    'origin': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'positions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'offsetX': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'offsetY': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'width': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'height': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'minWidth': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'minHeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'backdropClass': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'hasBackdrop': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'open': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'backdropClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'positionChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'attach': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'detach': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
var OverlayModule = (function () {
    function OverlayModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    OverlayModule.forRoot = function () {
        return {
            ngModule: OverlayModule,
            providers: [],
        };
    };
    return OverlayModule;
}());
OverlayModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [PortalModule],
                exports: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],
                declarations: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],
                providers: [OVERLAY_PROVIDERS],
            },] },
];
/**
 * @nocollapse
 */
OverlayModule.ctorParameters = function () { return []; };
// Whether the current platform supports the V8 Break Iterator. The V8 check
// is necessary to detect all Blink based browsers.
var hasV8BreakIterator = typeof (window) !== 'undefined' ?
    (window.Intl && ((window.Intl)).v8BreakIterator) :
    (typeof (Intl) !== 'undefined' && ((Intl)).v8BreakIterator);
/**
 * Service to detect the current platform by comparing the userAgent strings and
 * checking browser-specific global properties.
 * \@docs-private
 */
var Platform = (function () {
    function Platform() {
        /** Layout Engines */
        this.EDGE = /(edge)/i.test(navigator.userAgent);
        this.TRIDENT = /(msie|trident)/i.test(navigator.userAgent);
        // EdgeHTML and Trident mock Blink specific things and need to excluded from this check.
        this.BLINK = !!(window.chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT;
        // Webkit is part of the userAgent in EdgeHTML Blink and Trident, so we need to
        // ensure that Webkit runs standalone and is not use as another engines base.
        this.WEBKIT = /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;
        /** Browsers and Platform Types */
        this.IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
        // It's difficult to detect the plain Gecko engine, because most of the browsers identify
        // them self as Gecko-like browsers and modify the userAgent's according to that.
        // Since we only cover one explicit Firefox case, we can simply check for Firefox
        // instead of having an unstable check for Gecko.
        this.FIREFOX = /(firefox|minefield)/i.test(navigator.userAgent);
        // Trident on mobile adds the android platform to the userAgent to trick detections.
        this.ANDROID = /android/i.test(navigator.userAgent) && !this.TRIDENT;
    }
    return Platform;
}());
Platform.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
Platform.ctorParameters = function () { return []; };
/**
 * Utility for checking the interactivity of an element, such as whether is is focusable or
 * tabbable.
 */
var InteractivityChecker = (function () {
    /**
     * @param {?} _platform
     */
    function InteractivityChecker(_platform) {
        this._platform = _platform;
    }
    /**
     * Gets whether an element is disabled.
     *
     * @param {?} element Element to be checked.
     * @return {?} Whether the element is disabled.
     */
    InteractivityChecker.prototype.isDisabled = function (element) {
        // This does not capture some cases, such as a non-form control with a disabled attribute or
        // a form control inside of a disabled form, but should capture the most common cases.
        return element.hasAttribute('disabled');
    };
    /**
     * Gets whether an element is visible for the purposes of interactivity.
     *
     * This will capture states like `display: none` and `visibility: hidden`, but not things like
     * being clipped by an `overflow: hidden` parent or being outside the viewport.
     *
     * @param {?} element
     * @return {?} Whether the element is visible.
     */
    InteractivityChecker.prototype.isVisible = function (element) {
        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';
    };
    /**
     * Gets whether an element can be reached via Tab key.
     * Assumes that the element has already been checked with isFocusable.
     *
     * @param {?} element Element to be checked.
     * @return {?} Whether the element is tabbable.
     */
    InteractivityChecker.prototype.isTabbable = function (element) {
        var /** @type {?} */ frameElement = (getWindow(element).frameElement);
        if (frameElement) {
            var /** @type {?} */ frameType = frameElement && frameElement.nodeName.toLowerCase();
            // Frame elements inherit their tabindex onto all child elements.
            if (getTabIndexValue(frameElement) === -1) {
                return false;
            }
            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.
            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {
                return false;
            }
            // Webkit and Blink disable tabbing to an element inside of an invisible frame.
            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {
                return false;
            }
        }
        var /** @type {?} */ nodeName = element.nodeName.toLowerCase();
        var /** @type {?} */ tabIndexValue = getTabIndexValue(element);
        if (element.hasAttribute('contenteditable')) {
            return tabIndexValue !== -1;
        }
        if (nodeName === 'iframe') {
            // The frames may be tabbable depending on content, but it's not possibly to reliably
            // investigate the content of the frames.
            return false;
        }
        if (nodeName === 'audio') {
            if (!element.hasAttribute('controls')) {
                // By default an <audio> element without the controls enabled is not tabbable.
                return false;
            }
            else if (this._platform.BLINK) {
                // In Blink <audio controls> elements are always tabbable.
                return true;
            }
        }
        if (nodeName === 'video') {
            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {
                // In Trident a <video> element without the controls enabled is not tabbable.
                return false;
            }
            else if (this._platform.BLINK || this._platform.FIREFOX) {
                // In Chrome and Firefox <video controls> elements are always tabbable.
                return true;
            }
        }
        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {
            // In all Blink and WebKit based browsers <object> elements are never tabbable.
            return false;
        }
        // In iOS the browser only considers some specific elements as tabbable.
        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {
            return false;
        }
        return element.tabIndex >= 0;
    };
    /**
     * Gets whether an element can be focused by the user.
     *
     * @param {?} element Element to be checked.
     * @return {?} Whether the element is focusable.
     */
    InteractivityChecker.prototype.isFocusable = function (element) {
        // Perform checks in order of left to most expensive.
        // Again, naive approach that does not capture many edge cases and browser quirks.
        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);
    };
    return InteractivityChecker;
}());
InteractivityChecker.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
InteractivityChecker.ctorParameters = function () { return [
    { type: Platform, },
]; };
/**
 * Checks whether the specified element has any geometry / rectangles.
 * @param {?} element
 * @return {?}
 */
function hasGeometry(element) {
    // Use logic from jQuery to check for an invisible element.
    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12
    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);
}
/**
 * Gets whether an element's
 * @param {?} element
 * @return {?}
 */
function isNativeFormElement(element) {
    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();
    return nodeName === 'input' ||
        nodeName === 'select' ||
        nodeName === 'button' ||
        nodeName === 'textarea';
}
/**
 * Gets whether an element is an <input type="hidden">.
 * @param {?} element
 * @return {?}
 */
function isHiddenInput(element) {
    return isInputElement(element) && element.type == 'hidden';
}
/**
 * Gets whether an element is an anchor that has an href attribute.
 * @param {?} element
 * @return {?}
 */
function isAnchorWithHref(element) {
    return isAnchorElement(element) && element.hasAttribute('href');
}
/**
 * Gets whether an element is an input element.
 * @param {?} element
 * @return {?}
 */
function isInputElement(element) {
    return element.nodeName.toLowerCase() == 'input';
}
/**
 * Gets whether an element is an anchor element.
 * @param {?} element
 * @return {?}
 */
function isAnchorElement(element) {
    return element.nodeName.toLowerCase() == 'a';
}
/**
 * Gets whether an element has a valid tabindex.
 * @param {?} element
 * @return {?}
 */
function hasValidTabIndex(element) {
    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {
        return false;
    }
    var /** @type {?} */ tabIndex = element.getAttribute('tabindex');
    // IE11 parses tabindex="" as the value "-32768"
    if (tabIndex == '-32768') {
        return false;
    }
    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));
}
/**
 * Returns the parsed tabindex from the element attributes instead of returning the
 * evaluated tabindex from the browsers defaults.
 * @param {?} element
 * @return {?}
 */
function getTabIndexValue(element) {
    if (!hasValidTabIndex(element)) {
        return null;
    }
    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054
    var /** @type {?} */ tabIndex = parseInt(element.getAttribute('tabindex'), 10);
    return isNaN(tabIndex) ? -1 : tabIndex;
}
/**
 * Checks whether the specified element is potentially tabbable on iOS
 * @param {?} element
 * @return {?}
 */
function isPotentiallyTabbableIOS(element) {
    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();
    var /** @type {?} */ inputType = nodeName === 'input' && ((element)).type;
    return inputType === 'text'
        || inputType === 'password'
        || nodeName === 'select'
        || nodeName === 'textarea';
}
/**
 * Gets whether an element is potentially focusable without taking current visible/disabled state
 * into account.
 * @param {?} element
 * @return {?}
 */
function isPotentiallyFocusable(element) {
    // Inputs are potentially focusable *unless* they're type="hidden".
    if (isHiddenInput(element)) {
        return false;
    }
    return isNativeFormElement(element) ||
        isAnchorWithHref(element) ||
        element.hasAttribute('contenteditable') ||
        hasValidTabIndex(element);
}
/**
 * Gets the parent window of a DOM node with regards of being inside of an iframe.
 * @param {?} node
 * @return {?}
 */
function getWindow(node) {
    return node.ownerDocument.defaultView || window;
}
/**
 * Class that allows for trapping focus within a DOM element.
 *
 * NOTE: This class currently uses a very simple (naive) approach to focus trapping.
 * It assumes that the tab order is the same as DOM order, which is not necessarily true.
 * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.
 * This will be replaced with a more intelligent solution before the library is considered stable.
 */
var FocusTrap = (function () {
    /**
     * @param {?} _element
     * @param {?} _checker
     * @param {?} _ngZone
     * @param {?=} deferAnchors
     */
    function FocusTrap(_element, _checker, _ngZone, deferAnchors) {
        if (deferAnchors === void 0) { deferAnchors = false; }
        this._element = _element;
        this._checker = _checker;
        this._ngZone = _ngZone;
        this._enabled = true;
        if (!deferAnchors) {
            this.attachAnchors();
        }
    }
    Object.defineProperty(FocusTrap.prototype, "enabled", {
        /**
         * Whether the focus trap is active.
         * @return {?}
         */
        get: function () { return this._enabled; },
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) {
            this._enabled = val;
            if (this._startAnchor && this._endAnchor) {
                this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Destroys the focus trap by cleaning up the anchors.
     * @return {?}
     */
    FocusTrap.prototype.destroy = function () {
        if (this._startAnchor && this._startAnchor.parentNode) {
            this._startAnchor.parentNode.removeChild(this._startAnchor);
        }
        if (this._endAnchor && this._endAnchor.parentNode) {
            this._endAnchor.parentNode.removeChild(this._endAnchor);
        }
        this._startAnchor = this._endAnchor = null;
    };
    /**
     * Inserts the anchors into the DOM. This is usually done automatically
     * in the constructor, but can be deferred for cases like directives with `*ngIf`.
     * @return {?}
     */
    FocusTrap.prototype.attachAnchors = function () {
        var _this = this;
        if (!this._startAnchor) {
            this._startAnchor = this._createAnchor();
        }
        if (!this._endAnchor) {
            this._endAnchor = this._createAnchor();
        }
        this._ngZone.runOutsideAngular(function () {
            _this._startAnchor.addEventListener('focus', function () { return _this.focusLastTabbableElement(); });
            _this._endAnchor.addEventListener('focus', function () { return _this.focusFirstTabbableElement(); });
            _this._element.parentNode.insertBefore(_this._startAnchor, _this._element);
            _this._element.parentNode.insertBefore(_this._endAnchor, _this._element.nextSibling);
        });
    };
    /**
     * Waits for microtask queue to empty, then focuses
     * the first tabbable element within the focus trap region.
     * @return {?}
     */
    FocusTrap.prototype.focusFirstTabbableElementWhenReady = function () {
        var _this = this;
        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this.focusFirstTabbableElement(); });
    };
    /**
     * Waits for microtask queue to empty, then focuses
     * the last tabbable element within the focus trap region.
     * @return {?}
     */
    FocusTrap.prototype.focusLastTabbableElementWhenReady = function () {
        var _this = this;
        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this.focusLastTabbableElement(); });
    };
    /**
     * Focuses the first tabbable element within the focus trap region.
     * @return {?}
     */
    FocusTrap.prototype.focusFirstTabbableElement = function () {
        var /** @type {?} */ redirectToElement = (this._element.querySelector('[cdk-focus-start]')) ||
            this._getFirstTabbableElement(this._element);
        if (redirectToElement) {
            redirectToElement.focus();
        }
    };
    /**
     * Focuses the last tabbable element within the focus trap region.
     * @return {?}
     */
    FocusTrap.prototype.focusLastTabbableElement = function () {
        var /** @type {?} */ focusTargets = this._element.querySelectorAll('[cdk-focus-end]');
        var /** @type {?} */ redirectToElement = null;
        if (focusTargets.length) {
            redirectToElement = (focusTargets[focusTargets.length - 1]);
        }
        else {
            redirectToElement = this._getLastTabbableElement(this._element);
        }
        if (redirectToElement) {
            redirectToElement.focus();
        }
    };
    /**
     * Get the first tabbable element from a DOM subtree (inclusive).
     * @param {?} root
     * @return {?}
     */
    FocusTrap.prototype._getFirstTabbableElement = function (root) {
        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {
            return root;
        }
        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall
        // back to `childNodes` which includes text nodes, comments etc.
        var /** @type {?} */ children = root.children || root.childNodes;
        for (var /** @type {?} */ i = 0; i < children.length; i++) {
            var /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?
                this._getFirstTabbableElement(/** @type {?} */ (children[i])) :
                null;
            if (tabbableChild) {
                return tabbableChild;
            }
        }
        return null;
    };
    /**
     * Get the last tabbable element from a DOM subtree (inclusive).
     * @param {?} root
     * @return {?}
     */
    FocusTrap.prototype._getLastTabbableElement = function (root) {
        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {
            return root;
        }
        // Iterate in reverse DOM order.
        var /** @type {?} */ children = root.children || root.childNodes;
        for (var /** @type {?} */ i = children.length - 1; i >= 0; i--) {
            var /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?
                this._getLastTabbableElement(/** @type {?} */ (children[i])) :
                null;
            if (tabbableChild) {
                return tabbableChild;
            }
        }
        return null;
    };
    /**
     * Creates an anchor element.
     * @return {?}
     */
    FocusTrap.prototype._createAnchor = function () {
        var /** @type {?} */ anchor = document.createElement('div');
        anchor.tabIndex = this._enabled ? 0 : -1;
        anchor.classList.add('cdk-visually-hidden');
        anchor.classList.add('cdk-focus-trap-anchor');
        return anchor;
    };
    return FocusTrap;
}());
/**
 * Factory that allows easy instantiation of focus traps.
 */
var FocusTrapFactory = (function () {
    /**
     * @param {?} _checker
     * @param {?} _ngZone
     */
    function FocusTrapFactory(_checker, _ngZone) {
        this._checker = _checker;
        this._ngZone = _ngZone;
    }
    /**
     * @param {?} element
     * @param {?=} deferAnchors
     * @return {?}
     */
    FocusTrapFactory.prototype.create = function (element, deferAnchors) {
        if (deferAnchors === void 0) { deferAnchors = false; }
        return new FocusTrap(element, this._checker, this._ngZone, deferAnchors);
    };
    return FocusTrapFactory;
}());
FocusTrapFactory.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
FocusTrapFactory.ctorParameters = function () { return [
    { type: InteractivityChecker, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
]; };
/**
 * Directive for trapping focus within a region.
 * @deprecated
 */
var FocusTrapDeprecatedDirective = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _focusTrapFactory
     */
    function FocusTrapDeprecatedDirective(_elementRef, _focusTrapFactory) {
        this._elementRef = _elementRef;
        this._focusTrapFactory = _focusTrapFactory;
        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);
    }
    Object.defineProperty(FocusTrapDeprecatedDirective.prototype, "disabled", {
        /**
         * Whether the focus trap is active.
         * @return {?}
         */
        get: function () { return !this.focusTrap.enabled; },
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) {
            this.focusTrap.enabled = !coerceBooleanProperty(val);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FocusTrapDeprecatedDirective.prototype.ngOnDestroy = function () {
        this.focusTrap.destroy();
    };
    /**
     * @return {?}
     */
    FocusTrapDeprecatedDirective.prototype.ngAfterContentInit = function () {
        this.focusTrap.attachAnchors();
    };
    return FocusTrapDeprecatedDirective;
}());
FocusTrapDeprecatedDirective.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'cdk-focus-trap',
            },] },
];
/**
 * @nocollapse
 */
FocusTrapDeprecatedDirective.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: FocusTrapFactory, },
]; };
FocusTrapDeprecatedDirective.propDecorators = {
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * Directive for trapping focus within a region.
 */
var FocusTrapDirective = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _focusTrapFactory
     */
    function FocusTrapDirective(_elementRef, _focusTrapFactory) {
        this._elementRef = _elementRef;
        this._focusTrapFactory = _focusTrapFactory;
        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);
    }
    Object.defineProperty(FocusTrapDirective.prototype, "enabled", {
        /**
         * Whether the focus trap is active.
         * @return {?}
         */
        get: function () { return this.focusTrap.enabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this.focusTrap.enabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FocusTrapDirective.prototype.ngOnDestroy = function () {
        this.focusTrap.destroy();
    };
    /**
     * @return {?}
     */
    FocusTrapDirective.prototype.ngAfterContentInit = function () {
        this.focusTrap.attachAnchors();
    };
    return FocusTrapDirective;
}());
FocusTrapDirective.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdkTrapFocus]',
                exportAs: 'cdkTrapFocus',
            },] },
];
/**
 * @nocollapse
 */
FocusTrapDirective.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: FocusTrapFactory, },
]; };
FocusTrapDirective.propDecorators = {
    'enabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['cdkTrapFocus',] },],
};
var LIVE_ANNOUNCER_ELEMENT_TOKEN = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["d" /* OpaqueToken */]('liveAnnouncerElement');
var LiveAnnouncer = (function () {
    /**
     * @param {?} elementToken
     */
    function LiveAnnouncer(elementToken) {
        // We inject the live element as `any` because the constructor signature cannot reference
        // browser globals (HTMLElement) on non-browser environments, since having a class decorator
        // causes TypeScript to preserve the constructor signature types.
        this._liveElement = elementToken || this._createLiveElement();
    }
    /**
     * Announces a message to screenreaders.
     * @param {?} message Message to be announced to the screenreader
     * @param {?=} politeness The politeness of the announcer element
     * @return {?}
     */
    LiveAnnouncer.prototype.announce = function (message, politeness) {
        var _this = this;
        if (politeness === void 0) { politeness = 'polite'; }
        this._liveElement.textContent = '';
        // TODO: ensure changing the politeness works on all environments we support.
        this._liveElement.setAttribute('aria-live', politeness);
        // This 100ms timeout is necessary for some browser + screen-reader combinations:
        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.
        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a
        //   second time without clearing and then using a non-zero delay.
        // (using JAWS 17 at time of this writing).
        setTimeout(function () { return _this._liveElement.textContent = message; }, 100);
    };
    /**
     * Removes the aria-live element from the DOM.
     * @return {?}
     */
    LiveAnnouncer.prototype._removeLiveElement = function () {
        if (this._liveElement && this._liveElement.parentNode) {
            this._liveElement.parentNode.removeChild(this._liveElement);
        }
    };
    /**
     * @return {?}
     */
    LiveAnnouncer.prototype._createLiveElement = function () {
        var /** @type {?} */ liveEl = document.createElement('div');
        liveEl.classList.add('cdk-visually-hidden');
        liveEl.setAttribute('aria-atomic', 'true');
        liveEl.setAttribute('aria-live', 'polite');
        document.body.appendChild(liveEl);
        return liveEl;
    };
    return LiveAnnouncer;
}());
LiveAnnouncer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
LiveAnnouncer.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] },] },
]; };
/**
 * @param {?} parentDispatcher
 * @param {?} liveElement
 * @return {?}
 */
function LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher, liveElement) {
    return parentDispatcher || new LiveAnnouncer(liveElement);
}
var LIVE_ANNOUNCER_PROVIDER = {
    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.
    provide: LiveAnnouncer,
    deps: [
        [new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */](), LiveAnnouncer],
        [new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */](LIVE_ANNOUNCER_ELEMENT_TOKEN)]
    ],
    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY
};
var supportedInputTypes;
/**
 * @return {?} The input types supported by this browser.
 */
function getSupportedInputTypes() {
    if (!supportedInputTypes) {
        var /** @type {?} */ featureTestInput_1 = document.createElement('input');
        supportedInputTypes = new Set([
            // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after
            // first changing it to something else:
            // The specified value "" does not conform to the required format.
            // The format is "#rrggbb" where rr, gg, bb are two-digit hexadecimal numbers.
            'color',
            'button',
            'checkbox',
            'date',
            'datetime-local',
            'email',
            'file',
            'hidden',
            'image',
            'month',
            'number',
            'password',
            'radio',
            'range',
            'reset',
            'search',
            'submit',
            'tel',
            'text',
            'time',
            'url',
            'week',
        ].filter(function (value) {
            featureTestInput_1.setAttribute('type', value);
            return featureTestInput_1.type === value;
        }));
    }
    return supportedInputTypes;
}
var PlatformModule = (function () {
    function PlatformModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    PlatformModule.forRoot = function () {
        return {
            ngModule: PlatformModule,
            providers: [],
        };
    };
    return PlatformModule;
}());
PlatformModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                providers: [Platform]
            },] },
];
/**
 * @nocollapse
 */
PlatformModule.ctorParameters = function () { return []; };
var A11yModule = (function () {
    function A11yModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    A11yModule.forRoot = function () {
        return {
            ngModule: A11yModule,
            providers: [],
        };
    };
    return A11yModule;
}());
A11yModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */], PlatformModule],
                declarations: [FocusTrapDirective, FocusTrapDeprecatedDirective],
                exports: [FocusTrapDirective, FocusTrapDeprecatedDirective],
                providers: [InteractivityChecker, FocusTrapFactory, LIVE_ANNOUNCER_PROVIDER]
            },] },
];
/**
 * @nocollapse
 */
A11yModule.ctorParameters = function () { return []; };
/**
 * The FullscreenOverlayContainer is the alternative to OverlayContainer
 * that supports correct displaying of overlay elements in Fullscreen mode
 * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen
 * It should be provided in the root component that way:
 * providers: [
 *   {provide: OverlayContainer, useClass: FullscreenOverlayContainer}
 * ],
 */
var FullscreenOverlayContainer = (function (_super) {
    __extends(FullscreenOverlayContainer, _super);
    function FullscreenOverlayContainer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    FullscreenOverlayContainer.prototype._createContainer = function () {
        var _this = this;
        _super.prototype._createContainer.call(this);
        this._adjustParentForFullscreenChange();
        this._addFullscreenChangeListener(function () { return _this._adjustParentForFullscreenChange(); });
    };
    /**
     * @return {?}
     */
    FullscreenOverlayContainer.prototype._adjustParentForFullscreenChange = function () {
        if (!this._containerElement) {
            return;
        }
        var /** @type {?} */ fullscreenElement = this.getFullscreenElement();
        var /** @type {?} */ parent = fullscreenElement || document.body;
        parent.appendChild(this._containerElement);
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    FullscreenOverlayContainer.prototype._addFullscreenChangeListener = function (fn) {
        if (document.fullscreenEnabled) {
            document.addEventListener('fullscreenchange', fn);
        }
        else if (document.webkitFullscreenEnabled) {
            document.addEventListener('webkitfullscreenchange', fn);
        }
        else if (((document)).mozFullScreenEnabled) {
            document.addEventListener('mozfullscreenchange', fn);
        }
        else if (((document)).msFullscreenEnabled) {
            document.addEventListener('MSFullscreenChange', fn);
        }
    };
    /**
     * When the page is put into fullscreen mode, a specific element is specified.
     * Only that element and its children are visible when in fullscreen mode.
     * @return {?}
     */
    FullscreenOverlayContainer.prototype.getFullscreenElement = function () {
        return document.fullscreenElement ||
            document.webkitFullscreenElement ||
            ((document)).mozFullScreenElement ||
            ((document)).msFullscreenElement ||
            null;
    };
    return FullscreenOverlayContainer;
}(OverlayContainer));
FullscreenOverlayContainer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
FullscreenOverlayContainer.ctorParameters = function () { return []; };
var GestureConfig = (function (_super) {
    __extends(GestureConfig, _super);
    function GestureConfig() {
        var _this = _super.call(this) || this;
        _this._hammer = typeof window !== 'undefined' ? ((window)).Hammer : null;
        /* List of new event names to add to the gesture support list */
        _this.events = _this._hammer ? [
            'longpress',
            'slide',
            'slidestart',
            'slideend',
            'slideright',
            'slideleft'
        ] : [];
        if (!_this._hammer && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["h" /* isDevMode */])()) {
            console.warn('Could not find HammerJS. Certain Angular Material ' +
                'components may not work correctly.');
        }
        return _this;
    }
    /**
     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.
     *
     * Our gesture names come from the Material Design gestures spec:
     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics
     *
     * More information on default recognizers can be found in Hammer docs:
     * http://hammerjs.github.io/recognizer-pan/
     * http://hammerjs.github.io/recognizer-press/
     *
     * @param {?} element Element to which to assign the new HammerJS gestures.
     * @return {?} Newly-created HammerJS instance.
     */
    GestureConfig.prototype.buildHammer = function (element) {
        var /** @type {?} */ mc = new this._hammer(element);
        // Default Hammer Recognizers.
        var /** @type {?} */ pan = new this._hammer.Pan();
        var /** @type {?} */ swipe = new this._hammer.Swipe();
        var /** @type {?} */ press = new this._hammer.Press();
        // Notice that a HammerJS recognizer can only depend on one other recognizer once.
        // Otherwise the previous `recognizeWith` will be dropped.
        // TODO: Confirm threshold numbers with Material Design UX Team
        var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);
        var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });
        // Overwrite the default `pan` event to use the swipe event.
        pan.recognizeWith(swipe);
        // Add customized gestures to Hammer manager
        mc.add([swipe, press, pan, slide, longpress]);
        return (mc);
    };
    /**
     * Creates a new recognizer, without affecting the default recognizers of HammerJS
     * @param {?} base
     * @param {?} options
     * @param {...?} inheritances
     * @return {?}
     */
    GestureConfig.prototype._createRecognizer = function (base, options) {
        var inheritances = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            inheritances[_i - 2] = arguments[_i];
        }
        var /** @type {?} */ recognizer = new ((base.constructor))(options);
        inheritances.push(base);
        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });
        return recognizer;
    };
    return GestureConfig;
}(__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["c" /* HammerGestureConfig */]));
GestureConfig.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
GestureConfig.ctorParameters = function () { return []; };
/**
 * Class to be used to power selecting one or more options from a list.
 * \@docs-private
 */
var SelectionModel = (function () {
    /**
     * @param {?=} _isMulti
     * @param {?=} initiallySelectedValues
     * @param {?=} _emitChanges
     */
    function SelectionModel(_isMulti, initiallySelectedValues, _emitChanges) {
        if (_isMulti === void 0) { _isMulti = false; }
        if (_emitChanges === void 0) { _emitChanges = true; }
        var _this = this;
        this._isMulti = _isMulti;
        this._emitChanges = _emitChanges;
        this._selection = new Set();
        this._deselectedToEmit = [];
        this._selectedToEmit = [];
        /** Event emitted when the value has changed. */
        this.onChange = this._emitChanges ? new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]() : null;
        if (initiallySelectedValues) {
            if (_isMulti) {
                initiallySelectedValues.forEach(function (value) { return _this._markSelected(value); });
            }
            else {
                this._markSelected(initiallySelectedValues[0]);
            }
            // Clear the array in order to avoid firing the change event for preselected values.
            this._selectedToEmit.length = 0;
        }
    }
    Object.defineProperty(SelectionModel.prototype, "selected", {
        /**
         * Selected value(s).
         * @return {?}
         */
        get: function () {
            if (!this._selected) {
                this._selected = Array.from(this._selection.values());
            }
            return this._selected;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Selects a value or an array of values.
     * @param {?} value
     * @return {?}
     */
    SelectionModel.prototype.select = function (value) {
        this._markSelected(value);
        this._emitChangeEvent();
    };
    /**
     * Deselects a value or an array of values.
     * @param {?} value
     * @return {?}
     */
    SelectionModel.prototype.deselect = function (value) {
        this._unmarkSelected(value);
        this._emitChangeEvent();
    };
    /**
     * Toggles a value between selected and deselected.
     * @param {?} value
     * @return {?}
     */
    SelectionModel.prototype.toggle = function (value) {
        this.isSelected(value) ? this.deselect(value) : this.select(value);
    };
    /**
     * Clears all of the selected values.
     * @return {?}
     */
    SelectionModel.prototype.clear = function () {
        this._unmarkAll();
        this._emitChangeEvent();
    };
    /**
     * Determines whether a value is selected.
     * @param {?} value
     * @return {?}
     */
    SelectionModel.prototype.isSelected = function (value) {
        return this._selection.has(value);
    };
    /**
     * Determines whether the model does not have a value.
     * @return {?}
     */
    SelectionModel.prototype.isEmpty = function () {
        return this._selection.size === 0;
    };
    /**
     * Determines whether the model has a value.
     * @return {?}
     */
    SelectionModel.prototype.hasValue = function () {
        return !this.isEmpty();
    };
    /**
     * Sorts the selected values based on a predicate function.
     * @param {?=} predicate
     * @return {?}
     */
    SelectionModel.prototype.sort = function (predicate) {
        if (this._isMulti && this.selected) {
            this._selected.sort(predicate);
        }
    };
    /**
     * Emits a change event and clears the records of selected and deselected values.
     * @return {?}
     */
    SelectionModel.prototype._emitChangeEvent = function () {
        if (this._selectedToEmit.length || this._deselectedToEmit.length) {
            var /** @type {?} */ eventData = new SelectionChange(this._selectedToEmit, this._deselectedToEmit);
            this.onChange.next(eventData);
            this._deselectedToEmit = [];
            this._selectedToEmit = [];
        }
        this._selected = null;
    };
    /**
     * Selects a value.
     * @param {?} value
     * @return {?}
     */
    SelectionModel.prototype._markSelected = function (value) {
        if (!this.isSelected(value)) {
            if (!this._isMulti) {
                this._unmarkAll();
            }
            this._selection.add(value);
            if (this._emitChanges) {
                this._selectedToEmit.push(value);
            }
        }
    };
    /**
     * Deselects a value.
     * @param {?} value
     * @return {?}
     */
    SelectionModel.prototype._unmarkSelected = function (value) {
        if (this.isSelected(value)) {
            this._selection.delete(value);
            if (this._emitChanges) {
                this._deselectedToEmit.push(value);
            }
        }
    };
    /**
     * Clears out the selected values.
     * @return {?}
     */
    SelectionModel.prototype._unmarkAll = function () {
        var _this = this;
        if (!this.isEmpty()) {
            this._selection.forEach(function (value) { return _this._unmarkSelected(value); });
        }
    };
    return SelectionModel;
}());
/**
 * Describes an event emitted when the value of a MdSelectionModel has changed.
 * \@docs-private
 */
var SelectionChange = (function () {
    /**
     * @param {?=} added
     * @param {?=} removed
     */
    function SelectionChange(added, removed) {
        this.added = added;
        this.removed = removed;
    }
    return SelectionChange;
}());
/**
 * Screenreaders will often fire fake mousedown events when a focusable element
 * is activated using the keyboard. We can typically distinguish between these faked
 * mousedown events and real mousedown events using the "buttons" property. While
 * real mousedowns will indicate the mouse button that was pressed (e.g. "1" for
 * the left mouse button), faked mousedowns will usually set the property value to 0.
 * @param {?} event
 * @return {?}
 */
function isFakeMousedownFromScreenReader(event) {
    return event.buttons === 0;
}
/**
 * Class to coordinate unique selection based on name.
 * Intended to be consumed as an Angular service.
 * This service is needed because native radio change events are only fired on the item currently
 * being selected, and we still need to uncheck the previous selection.
 *
 * This service does not *store* any IDs and names because they may change at any time, so it is
 * less error-prone if they are simply passed through when the events occur.
 */
var UniqueSelectionDispatcher = (function () {
    function UniqueSelectionDispatcher() {
        this._listeners = [];
    }
    /**
     * Notify other items that selection for the given name has been set.
     * @param {?} id ID of the item.
     * @param {?} name Name of the item.
     * @return {?}
     */
    UniqueSelectionDispatcher.prototype.notify = function (id, name) {
        for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {
            var listener = _a[_i];
            listener(id, name);
        }
    };
    /**
     * Listen for future changes to item selection.
     * @param {?} listener
     * @return {?}
     */
    UniqueSelectionDispatcher.prototype.listen = function (listener) {
        this._listeners.push(listener);
    };
    return UniqueSelectionDispatcher;
}());
UniqueSelectionDispatcher.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
UniqueSelectionDispatcher.ctorParameters = function () { return []; };
/**
 * @param {?} parentDispatcher
 * @return {?}
 */
function UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(parentDispatcher) {
    return parentDispatcher || new UniqueSelectionDispatcher();
}
var UNIQUE_SELECTION_DISPATCHER_PROVIDER = {
    // If there is already a dispatcher available, use that. Otherwise, provide a new one.
    provide: UniqueSelectionDispatcher,
    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */](), UniqueSelectionDispatcher]],
    useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY
};
// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found
// that a value of around 650ms seems appropriate.
var TOUCH_BUFFER_MS = 650;
/**
 * Monitors mouse and keyboard events to determine the cause of focus events.
 */
var FocusOriginMonitor = (function () {
    /**
     * @param {?} _ngZone
     */
    function FocusOriginMonitor(_ngZone) {
        var _this = this;
        this._ngZone = _ngZone;
        this._origin = null;
        this._windowFocused = false;
        this._elementInfo = new WeakMap();
        this._ngZone.runOutsideAngular(function () { return _this._registerDocumentEvents(); });
    }
    /**
     * Monitors focus on an element and applies appropriate CSS classes.
     * @param {?} element The element to monitor
     * @param {?} renderer The renderer to use to apply CSS classes to the element.
     * @param {?} checkChildren Whether to count the element as focused when its children are focused.
     * @return {?} An observable that emits when the focus state of the element changes.
     *     When the element is blurred, null will be emitted.
     */
    FocusOriginMonitor.prototype.monitor = function (element, renderer, checkChildren) {
        var _this = this;
        // Check if we're already monitoring this element.
        if (this._elementInfo.has(element)) {
            var /** @type {?} */ info_1 = this._elementInfo.get(element);
            info_1.checkChildren = checkChildren;
            return info_1.subject.asObservable();
        }
        // Create monitored element info.
        var /** @type {?} */ info = {
            unlisten: null,
            checkChildren: checkChildren,
            renderer: renderer,
            subject: new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]()
        };
        this._elementInfo.set(element, info);
        // Start listening. We need to listen in capture phase since focus events don't bubble.
        var /** @type {?} */ focusListener = function (event) { return _this._onFocus(event, element); };
        var /** @type {?} */ blurListener = function (event) { return _this._onBlur(event, element); };
        this._ngZone.runOutsideAngular(function () {
            element.addEventListener('focus', focusListener, true);
            element.addEventListener('blur', blurListener, true);
        });
        // Create an unlisten function for later.
        info.unlisten = function () {
            element.removeEventListener('focus', focusListener, true);
            element.removeEventListener('blur', blurListener, true);
        };
        return info.subject.asObservable();
    };
    /**
     * Stops monitoring an element and removes all focus classes.
     * @param {?} element The element to stop monitoring.
     * @return {?}
     */
    FocusOriginMonitor.prototype.stopMonitoring = function (element) {
        var /** @type {?} */ elementInfo = this._elementInfo.get(element);
        if (elementInfo) {
            elementInfo.unlisten();
            elementInfo.subject.complete();
            this._setClasses(element, null);
            this._elementInfo.delete(element);
        }
    };
    /**
     * Focuses the element via the specified focus origin.
     * @param {?} element The element to focus.
     * @param {?} renderer The renderer to use to invoke the focus method on the element.
     * @param {?} origin The focus origin.
     * @return {?}
     */
    FocusOriginMonitor.prototype.focusVia = function (element, renderer, origin) {
        this._setOriginForCurrentEventQueue(origin);
        renderer.invokeElementMethod(element, 'focus');
    };
    /**
     * Register necessary event listeners on the document and window.
     * @return {?}
     */
    FocusOriginMonitor.prototype._registerDocumentEvents = function () {
        var _this = this;
        // Note: we listen to events in the capture phase so we can detect them even if the user stops
        // propagation.
        // On keydown record the origin and clear any touch event that may be in progress.
        document.addEventListener('keydown', function () {
            _this._lastTouchTarget = null;
            _this._setOriginForCurrentEventQueue('keyboard');
        }, true);
        // On mousedown record the origin only if there is not touch target, since a mousedown can
        // happen as a result of a touch event.
        document.addEventListener('mousedown', function () {
            if (!_this._lastTouchTarget) {
                _this._setOriginForCurrentEventQueue('mouse');
            }
        }, true);
        // When the touchstart event fires the focus event is not yet in the event queue. This means
        // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to
        // see if a focus happens.
        document.addEventListener('touchstart', function (event) {
            if (_this._touchTimeout != null) {
                clearTimeout(_this._touchTimeout);
            }
            _this._lastTouchTarget = event.target;
            _this._touchTimeout = setTimeout(function () { return _this._lastTouchTarget = null; }, TOUCH_BUFFER_MS);
        }, true);
        // Make a note of when the window regains focus, so we can restore the origin info for the
        // focused element.
        window.addEventListener('focus', function () {
            _this._windowFocused = true;
            setTimeout(function () { return _this._windowFocused = false; }, 0);
        });
    };
    /**
     * Sets the focus classes on the element based on the given focus origin.
     * @param {?} element The element to update the classes on.
     * @param {?} origin The focus origin.
     * @return {?}
     */
    FocusOriginMonitor.prototype._setClasses = function (element, origin) {
        var /** @type {?} */ renderer = this._elementInfo.get(element).renderer;
        renderer.setElementClass(element, 'cdk-focused', !!origin);
        renderer.setElementClass(element, 'cdk-touch-focused', origin === 'touch');
        renderer.setElementClass(element, 'cdk-keyboard-focused', origin === 'keyboard');
        renderer.setElementClass(element, 'cdk-mouse-focused', origin === 'mouse');
        renderer.setElementClass(element, 'cdk-program-focused', origin === 'program');
    };
    /**
     * Sets the origin and schedules an async function to clear it at the end of the event queue.
     * @param {?} origin The origin to set.
     * @return {?}
     */
    FocusOriginMonitor.prototype._setOriginForCurrentEventQueue = function (origin) {
        var _this = this;
        this._origin = origin;
        setTimeout(function () { return _this._origin = null; }, 0);
    };
    /**
     * Checks whether the given focus event was caused by a touchstart event.
     * @param {?} event The focus event to check.
     * @return {?} Whether the event was caused by a touch.
     */
    FocusOriginMonitor.prototype._wasCausedByTouch = function (event) {
        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.
        // Consider the following dom structure:
        //
        // <div #parent tabindex="0" cdkFocusClasses>
        //   <div #child (click)="#parent.focus()"></div>
        // </div>
        //
        // If the user touches the #child element and the #parent is programmatically focused as a
        // result, this code will still consider it to have been caused by the touch event and will
        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a
        // relatively small edge-case that can be worked around by using
        // focusVia(parentEl, renderer,  'program') to focus the parent element.
        //
        // If we decide that we absolutely must handle this case correctly, we can do so by listening
        // for the first focus event after the touchstart, and then the first blur event after that
        // focus event. When that blur event fires we know that whatever follows is not a result of the
        // touchstart.
        var /** @type {?} */ focusTarget = event.target;
        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&
            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));
    };
    /**
     * Handles focus events on a registered element.
     * @param {?} event The focus event.
     * @param {?} element The monitored element.
     * @return {?}
     */
    FocusOriginMonitor.prototype._onFocus = function (event, element) {
        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent
        // focus event affecting the monitored element. If we want to use the origin of the first event
        // instead we should check for the cdk-focused class here and return if the element already has
        // it. (This only matters for elements that have includesChildren = true).
        // If we are not counting child-element-focus as focused, make sure that the event target is the
        // monitored element itself.
        if (!this._elementInfo.get(element).checkChildren && element !== event.target) {
            return;
        }
        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:
        // 1) The window has just regained focus, in which case we want to restore the focused state of
        //    the element from before the window blurred.
        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.
        // 3) The element was programmatically focused, in which case we should mark the origin as
        //    'program'.
        if (!this._origin) {
            if (this._windowFocused && this._lastFocusOrigin) {
                this._origin = this._lastFocusOrigin;
            }
            else if (this._wasCausedByTouch(event)) {
                this._origin = 'touch';
            }
            else {
                this._origin = 'program';
            }
        }
        this._setClasses(element, this._origin);
        this._elementInfo.get(element).subject.next(this._origin);
        this._lastFocusOrigin = this._origin;
        this._origin = null;
    };
    /**
     * Handles blur events on a registered element.
     * @param {?} event The blur event.
     * @param {?} element The monitored element.
     * @return {?}
     */
    FocusOriginMonitor.prototype._onBlur = function (event, element) {
        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in
        // order to focus another child of the monitored element.
        if (this._elementInfo.get(element).checkChildren && event.relatedTarget instanceof Node &&
            element.contains(event.relatedTarget)) {
            return;
        }
        this._setClasses(element, null);
        this._elementInfo.get(element).subject.next(null);
    };
    return FocusOriginMonitor;
}());
FocusOriginMonitor.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
FocusOriginMonitor.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
]; };
/**
 * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or
 * programmatically) and adds corresponding classes to the element.
 *
 * There are two variants of this directive:
 * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is
 *    focused.
 * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.
 */
var CdkMonitorFocus = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _focusOriginMonitor
     * @param {?} renderer
     */
    function CdkMonitorFocus(_elementRef, _focusOriginMonitor, renderer) {
        var _this = this;
        this._elementRef = _elementRef;
        this._focusOriginMonitor = _focusOriginMonitor;
        this.cdkFocusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, renderer, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))
            .subscribe(function (origin) { return _this.cdkFocusChange.emit(origin); });
    }
    /**
     * @return {?}
     */
    CdkMonitorFocus.prototype.ngOnDestroy = function () {
        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);
    };
    return CdkMonitorFocus;
}());
CdkMonitorFocus.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',
            },] },
];
/**
 * @nocollapse
 */
CdkMonitorFocus.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: FocusOriginMonitor, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
CdkMonitorFocus.propDecorators = {
    'cdkFocusChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
/**
 * @param {?} parentDispatcher
 * @param {?} ngZone
 * @return {?}
 */
function FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone) {
    return parentDispatcher || new FocusOriginMonitor(ngZone);
}
var FOCUS_ORIGIN_MONITOR_PROVIDER = {
    // If there is already a FocusOriginMonitor available, use that. Otherwise, provide a new one.
    provide: FocusOriginMonitor,
    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */](), FocusOriginMonitor], __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */]],
    useFactory: FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY
};
/**
 * Applies a CSS transform to an element, including browser-prefixed properties.
 * @param {?} element
 * @param {?} transformValue
 * @return {?}
 */
function applyCssTransform(element, transformValue) {
    // It's important to trim the result, because the browser will ignore the set operation
    // if the string contains only whitespace.
    var /** @type {?} */ value = transformValue.trim();
    element.style.transform = value;
    element.style.webkitTransform = value;
}
var StyleModule = (function () {
    function StyleModule() {
    }
    return StyleModule;
}());
StyleModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                declarations: [CdkMonitorFocus],
                exports: [CdkMonitorFocus],
                providers: [FOCUS_ORIGIN_MONITOR_PROVIDER],
            },] },
];
/**
 * @nocollapse
 */
StyleModule.ctorParameters = function () { return []; };
/**
 * \@docs-private
 */
var AnimationCurves = (function () {
    function AnimationCurves() {
    }
    return AnimationCurves;
}());
AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';
AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';
AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';
AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';
/**
 * \@docs-private
 */
var AnimationDurations = (function () {
    function AnimationDurations() {
    }
    return AnimationDurations;
}());
AnimationDurations.COMPLEX = '375ms';
AnimationDurations.ENTERING = '225ms';
AnimationDurations.EXITING = '195ms';
/**
 * Coerces a data-bound value (typically a string) to a number.
 * @param {?} value
 * @param {?=} fallbackValue
 * @return {?}
 */
function coerceNumberProperty(value, fallbackValue) {
    if (fallbackValue === void 0) { fallbackValue = 0; }
    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,
    // and other non-number values as NaN, where Number just uses 0) but it considers the string
    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.
    return isNaN(parseFloat(/** @type {?} */ (value))) || isNaN(Number(value)) ? fallbackValue : Number(value);
}
var MdCoreModule = (function () {
    function MdCoreModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdCoreModule.forRoot = function () {
        return {
            ngModule: MdCoreModule,
            providers: [],
        };
    };
    return MdCoreModule;
}());
MdCoreModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    MdLineModule,
                    RtlModule,
                    MdRippleModule,
                    ObserveContentModule,
                    PortalModule,
                    OverlayModule,
                    A11yModule,
                    MdOptionModule,
                    MdSelectionModule,
                ],
                exports: [
                    MdLineModule,
                    RtlModule,
                    MdRippleModule,
                    ObserveContentModule,
                    PortalModule,
                    OverlayModule,
                    A11yModule,
                    MdOptionModule,
                    MdSelectionModule,
                ],
            },] },
];
/**
 * @nocollapse
 */
MdCoreModule.ctorParameters = function () { return []; };
/**
 * Provider Expression that allows md-button-toggle-group to register as a ControlValueAccessor.
 * This allows it to support [(ngModel)].
 * \@docs-private
 */
var MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["c" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdButtonToggleGroup; }),
    multi: true
};
var _uniqueIdCounter$1 = 0;
/**
 * Change event object emitted by MdButtonToggle.
 */
var MdButtonToggleChange = (function () {
    function MdButtonToggleChange() {
    }
    return MdButtonToggleChange;
}());
/**
 * Exclusive selection button toggle group that behaves like a radio-button group.
 */
var MdButtonToggleGroup = (function () {
    function MdButtonToggleGroup() {
        this._value = null;
        this._name = "md-button-toggle-group-" + _uniqueIdCounter$1++;
        this._disabled = null;
        this._vertical = false;
        this._selected = null;
        this._isInitialized = false;
        this._controlValueAccessorChangeFn = function (value) { };
        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */
        this.onTouched = function () { };
        /** Child button toggle buttons. */
        this._buttonToggles = null;
        this._change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
    }
    /**
     * @return {?}
     */
    MdButtonToggleGroup.prototype.ngAfterViewInit = function () {
        this._isInitialized = true;
    };
    Object.defineProperty(MdButtonToggleGroup.prototype, "name", {
        /**
         * `name` attribute for the underlying `input` element.
         * @return {?}
         */
        get: function () {
            return this._name;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._name = value;
            this._updateButtonToggleNames();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggleGroup.prototype, "disabled", {
        /**
         * Whether the toggle group is disabled.
         * @return {?}
         */
        get: function () {
            return this._disabled;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggleGroup.prototype, "vertical", {
        /**
         * Whether the toggle group is vertical.
         * @return {?}
         */
        get: function () {
            return this._vertical;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._vertical = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggleGroup.prototype, "value", {
        /**
         * Value of the toggle group.
         * @return {?}
         */
        get: function () {
            return this._value;
        },
        /**
         * @param {?} newValue
         * @return {?}
         */
        set: function (newValue) {
            if (this._value != newValue) {
                this._value = newValue;
                this._updateSelectedButtonToggleFromValue();
                // Only emit a change event if the view is completely initialized.
                // We don't want to emit a change event for the initial values.
                if (this._isInitialized) {
                    this._emitChangeEvent();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggleGroup.prototype, "selected", {
        /**
         * Whether the toggle group is selected.
         * @return {?}
         */
        get: function () {
            return this._selected;
        },
        /**
         * @param {?} selected
         * @return {?}
         */
        set: function (selected) {
            this._selected = selected;
            this.value = selected ? selected.value : null;
            if (selected && !selected.checked) {
                selected.checked = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggleGroup.prototype, "change", {
        /**
         * Event emitted when the group's value changes.
         * @return {?}
         */
        get: function () {
            return this._change.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdButtonToggleGroup.prototype._updateButtonToggleNames = function () {
        var _this = this;
        if (this._buttonToggles) {
            this._buttonToggles.forEach(function (toggle) {
                toggle.name = _this._name;
            });
        }
    };
    /**
     * @return {?}
     */
    MdButtonToggleGroup.prototype._updateSelectedButtonToggleFromValue = function () {
        var _this = this;
        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;
        if (this._buttonToggles != null && !isAlreadySelected) {
            var /** @type {?} */ matchingButtonToggle = this._buttonToggles.filter(function (buttonToggle) { return buttonToggle.value == _this._value; })[0];
            if (matchingButtonToggle) {
                this.selected = matchingButtonToggle;
            }
            else if (this.value == null) {
                this.selected = null;
                this._buttonToggles.forEach(function (buttonToggle) {
                    buttonToggle.checked = false;
                });
            }
        }
    };
    /**
     * Dispatch change event with current selection and group value.
     * @return {?}
     */
    MdButtonToggleGroup.prototype._emitChangeEvent = function () {
        var /** @type {?} */ event = new MdButtonToggleChange();
        event.source = this._selected;
        event.value = this._value;
        this._controlValueAccessorChangeFn(event.value);
        this._change.emit(event);
    };
    /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param {?} value Value to be set to the model.
     * @return {?}
     */
    MdButtonToggleGroup.prototype.writeValue = function (value) {
        this.value = value;
    };
    /**
     * Registers a callback that will be triggered when the value has changed.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn On change callback function.
     * @return {?}
     */
    MdButtonToggleGroup.prototype.registerOnChange = function (fn) {
        this._controlValueAccessorChangeFn = fn;
    };
    /**
     * Registers a callback that will be triggered when the control has been touched.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn On touch callback function.
     * @return {?}
     */
    MdButtonToggleGroup.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    /**
     * Toggles the disabled state of the component. Implemented as part of ControlValueAccessor.
     * @param {?} isDisabled Whether the component should be disabled.
     * @return {?}
     */
    MdButtonToggleGroup.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    return MdButtonToggleGroup;
}());
MdButtonToggleGroup.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-button-toggle-group:not([multiple]), mat-button-toggle-group:not([multiple])',
                providers: [MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],
                host: {
                    '[class.mat-button-toggle-group]': 'true',
                    'role': 'radiogroup',
                    '[class.mat-button-toggle-vertical]': 'vertical'
                },
                exportAs: 'mdButtonToggleGroup',
            },] },
];
/**
 * @nocollapse
 */
MdButtonToggleGroup.ctorParameters = function () { return []; };
MdButtonToggleGroup.propDecorators = {
    '_buttonToggles': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdButtonToggle; }),] },],
    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'vertical': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'selected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
/**
 * Multiple selection button-toggle group. `ngModel` is not supported in this mode.
 */
var MdButtonToggleGroupMultiple = (function () {
    function MdButtonToggleGroupMultiple() {
        this._disabled = null;
        this._vertical = false;
    }
    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, "disabled", {
        /**
         * Whether the toggle group is disabled.
         * @return {?}
         */
        get: function () {
            return this._disabled;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = (value != null && value !== false) ? true : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, "vertical", {
        /**
         * Whether the toggle group is vertical.
         * @return {?}
         */
        get: function () {
            return this._vertical;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._vertical = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    return MdButtonToggleGroupMultiple;
}());
MdButtonToggleGroupMultiple.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-button-toggle-group[multiple], mat-button-toggle-group[multiple]',
                exportAs: 'mdButtonToggleGroup',
                host: {
                    '[class.mat-button-toggle-group]': 'true',
                    '[class.mat-button-toggle-vertical]': 'vertical'
                }
            },] },
];
/**
 * @nocollapse
 */
MdButtonToggleGroupMultiple.ctorParameters = function () { return []; };
MdButtonToggleGroupMultiple.propDecorators = {
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'vertical': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * Single button inside of a toggle group.
 */
var MdButtonToggle = (function () {
    /**
     * @param {?} toggleGroup
     * @param {?} toggleGroupMultiple
     * @param {?} _buttonToggleDispatcher
     * @param {?} _renderer
     * @param {?} _elementRef
     * @param {?} _focusOriginMonitor
     */
    function MdButtonToggle(toggleGroup, toggleGroupMultiple, _buttonToggleDispatcher, _renderer, _elementRef, _focusOriginMonitor) {
        var _this = this;
        this._buttonToggleDispatcher = _buttonToggleDispatcher;
        this._renderer = _renderer;
        this._elementRef = _elementRef;
        this._focusOriginMonitor = _focusOriginMonitor;
        this._checked = false;
        this._disabled = null;
        this._value = null;
        this._isSingleSelector = null;
        this._change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        this.buttonToggleGroup = toggleGroup;
        this.buttonToggleGroupMultiple = toggleGroupMultiple;
        if (this.buttonToggleGroup) {
            _buttonToggleDispatcher.listen(function (id, name) {
                if (id != _this.id && name == _this.name) {
                    _this.checked = false;
                }
            });
            this._type = 'radio';
            this.name = this.buttonToggleGroup.name;
            this._isSingleSelector = true;
        }
        else {
            // Even if there is no group at all, treat the button toggle as a checkbox so it can be
            // toggled on or off.
            this._type = 'checkbox';
            this._isSingleSelector = false;
        }
    }
    Object.defineProperty(MdButtonToggle.prototype, "inputId", {
        /**
         * Unique ID for the underlying `input` element.
         * @return {?}
         */
        get: function () {
            return this.id + "-input";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggle.prototype, "checked", {
        /**
         * Whether the button is checked.
         * @return {?}
         */
        get: function () {
            return this._checked;
        },
        /**
         * @param {?} newCheckedState
         * @return {?}
         */
        set: function (newCheckedState) {
            if (this._isSingleSelector) {
                if (newCheckedState) {
                    // Notify all button toggles with the same name (in the same group) to un-check.
                    this._buttonToggleDispatcher.notify(this.id, this.name);
                }
            }
            this._checked = newCheckedState;
            if (newCheckedState && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {
                this.buttonToggleGroup.selected = this;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggle.prototype, "value", {
        /**
         * MdButtonToggleGroup reads this to assign its own value.
         * @return {?}
         */
        get: function () {
            return this._value;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (this._value != value) {
                if (this.buttonToggleGroup != null && this.checked) {
                    this.buttonToggleGroup.value = value;
                }
                this._value = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggle.prototype, "disabled", {
        /**
         * Whether the button is disabled.
         * @return {?}
         */
        get: function () {
            return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||
                (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = (value != null && value !== false) ? true : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButtonToggle.prototype, "change", {
        /**
         * @return {?}
         */
        get: function () {
            return this._change.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdButtonToggle.prototype.ngOnInit = function () {
        if (this.id == null) {
            this.id = "md-button-toggle-" + _uniqueIdCounter$1++;
        }
        if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {
            this._checked = true;
        }
        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);
    };
    /**
     * Focuses the button.
     * @return {?}
     */
    MdButtonToggle.prototype.focus = function () {
        this._renderer.invokeElementMethod(this._inputElement.nativeElement, 'focus');
    };
    /**
     * Toggle the state of the current button toggle.
     * @return {?}
     */
    MdButtonToggle.prototype._toggle = function () {
        this.checked = !this.checked;
    };
    /**
     * Checks the button toggle due to an interaction with the underlying native input.
     * @param {?} event
     * @return {?}
     */
    MdButtonToggle.prototype._onInputChange = function (event) {
        event.stopPropagation();
        if (this._isSingleSelector) {
            // Propagate the change one-way via the group, which will in turn mark this
            // button toggle as checked.
            this.checked = true;
            this.buttonToggleGroup.selected = this;
            this.buttonToggleGroup.onTouched();
        }
        else {
            this._toggle();
        }
        // Emit a change event when the native input does.
        this._emitChangeEvent();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdButtonToggle.prototype._onInputClick = function (event) {
        // We have to stop propagation for click events on the visual hidden input element.
        // By default, when a user clicks on a label element, a generated click event will be
        // dispatched on the associated input element. Since we are using a label element as our
        // root container, the click event on the `slide-toggle` will be executed twice.
        // The real click event will bubble up, and the generated click event also tries to bubble up.
        // This will lead to multiple click events.
        // Preventing bubbling for the second event will solve that issue.
        event.stopPropagation();
    };
    /**
     * Dispatch change event with current value.
     * @return {?}
     */
    MdButtonToggle.prototype._emitChangeEvent = function () {
        var /** @type {?} */ event = new MdButtonToggleChange();
        event.source = this;
        event.value = this._value;
        this._change.emit(event);
    };
    return MdButtonToggle;
}());
MdButtonToggle.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-button-toggle, mat-button-toggle',
                template: "<label [attr.for]=\"inputId\" class=\"mat-button-toggle-label\"> <input #input class=\"mat-button-toggle-input cdk-visually-hidden\" [type]=\"_type\" [id]=\"inputId\" [checked]=\"checked\" [disabled]=\"disabled\" [name]=\"name\" (change)=\"_onInputChange($event)\" (click)=\"_onInputClick($event)\"> <div class=\"mat-button-toggle-label-content\"> <ng-content></ng-content> </div> </label> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\"mat-button-toggle-focus-overlay\" (touchstart)=\"$event.preventDefault()\"></div> ",
                styles: [".mat-button-toggle-group{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);position:relative;display:inline-flex;flex-direction:row;border-radius:2px;cursor:pointer;white-space:nowrap}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle-disabled .mat-button-toggle-label-content{cursor:default}.mat-button-toggle{white-space:nowrap;font-family:Roboto,\"Helvetica Neue\",sans-serif;position:relative}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;cursor:pointer}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;position:absolute;top:0;left:0;right:0;bottom:0} /*# sourceMappingURL=button-toggle.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                host: {
                    '[class.mat-button-toggle]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdButtonToggle.ctorParameters = function () { return [
    { type: MdButtonToggleGroup, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: MdButtonToggleGroupMultiple, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: UniqueSelectionDispatcher, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: FocusOriginMonitor, },
]; };
MdButtonToggle.propDecorators = {
    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['input',] },],
    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['class.mat-button-toggle-checked',] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['class.mat-button-toggle-disabled',] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
var MdButtonToggleModule = (function () {
    function MdButtonToggleModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdButtonToggleModule.forRoot = function () {
        return {
            ngModule: MdButtonToggleModule,
            providers: []
        };
    };
    return MdButtonToggleModule;
}());
MdButtonToggleModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_8__angular_forms__["a" /* FormsModule */], CompatibilityModule],
                exports: [
                    MdButtonToggleGroup,
                    MdButtonToggleGroupMultiple,
                    MdButtonToggle,
                    CompatibilityModule,
                ],
                declarations: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],
                providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER, FocusOriginMonitor]
            },] },
];
/**
 * @nocollapse
 */
MdButtonToggleModule.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdButtonCssMatStyler = (function () {
    function MdButtonCssMatStyler() {
    }
    return MdButtonCssMatStyler;
}());
MdButtonCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'button[md-button], button[mat-button], a[md-button], a[mat-button]',
                host: {
                    '[class.mat-button]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdButtonCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdRaisedButtonCssMatStyler = (function () {
    function MdRaisedButtonCssMatStyler() {
    }
    return MdRaisedButtonCssMatStyler;
}());
MdRaisedButtonCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'button[md-raised-button], button[mat-raised-button], ' +
                    'a[md-raised-button], a[mat-raised-button]',
                host: {
                    '[class.mat-raised-button]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdRaisedButtonCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdIconButtonCssMatStyler = (function () {
    function MdIconButtonCssMatStyler() {
    }
    return MdIconButtonCssMatStyler;
}());
MdIconButtonCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'button[md-icon-button], button[mat-icon-button], a[md-icon-button], a[mat-icon-button]',
                host: {
                    '[class.mat-icon-button]': 'true',
                }
            },] },
];
/**
 * @nocollapse
 */
MdIconButtonCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdFabCssMatStyler = (function () {
    function MdFabCssMatStyler() {
    }
    return MdFabCssMatStyler;
}());
MdFabCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'button[md-fab], button[mat-fab], a[md-fab], a[mat-fab]',
                host: {
                    '[class.mat-fab]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdFabCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdMiniFabCssMatStyler = (function () {
    function MdMiniFabCssMatStyler() {
    }
    return MdMiniFabCssMatStyler;
}());
MdMiniFabCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'button[md-mini-fab], button[mat-mini-fab], a[md-mini-fab], a[mat-mini-fab]',
                host: {
                    '[class.mat-mini-fab]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdMiniFabCssMatStyler.ctorParameters = function () { return []; };
/**
 * Material design button.
 */
var MdButton = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _renderer
     * @param {?} _focusOriginMonitor
     */
    function MdButton(_elementRef, _renderer, _focusOriginMonitor) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._focusOriginMonitor = _focusOriginMonitor;
        /** Whether the button is round. */
        this._isRoundButton = this._hasAttributeWithPrefix('fab', 'mini-fab');
        /** Whether the button is icon button. */
        this._isIconButton = this._hasAttributeWithPrefix('icon-button');
        this._disableRipple = false;
        this._disabled = null;
        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);
    }
    Object.defineProperty(MdButton.prototype, "disableRipple", {
        /**
         * Whether the ripple effect for this button is disabled.
         * @return {?}
         */
        get: function () { return this._disableRipple; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this._disableRipple = coerceBooleanProperty(v); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdButton.prototype, "disabled", {
        /**
         * Whether the button is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disabled = coerceBooleanProperty(value) ? true : null; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdButton.prototype.ngOnDestroy = function () {
        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);
    };
    Object.defineProperty(MdButton.prototype, "color", {
        /**
         * The color of the button. Can be `primary`, `accent`, or `warn`.
         * @return {?}
         */
        get: function () { return this._color; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._updateColor(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} newColor
     * @return {?}
     */
    MdButton.prototype._updateColor = function (newColor) {
        this._setElementColor(this._color, false);
        this._setElementColor(newColor, true);
        this._color = newColor;
    };
    /**
     * @param {?} color
     * @param {?} isAdd
     * @return {?}
     */
    MdButton.prototype._setElementColor = function (color, isAdd) {
        if (color != null && color != '') {
            this._renderer.setElementClass(this._getHostElement(), "mat-" + color, isAdd);
        }
    };
    /**
     * Focuses the button.
     * @return {?}
     */
    MdButton.prototype.focus = function () {
        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');
    };
    /**
     * @return {?}
     */
    MdButton.prototype._getHostElement = function () {
        return this._elementRef.nativeElement;
    };
    /**
     * @return {?}
     */
    MdButton.prototype._isRippleDisabled = function () {
        return this.disableRipple || this.disabled;
    };
    /**
     * Gets whether the button has one of the given attributes
     * with either an 'md-' or 'mat-' prefix.
     * @param {...?} unprefixedAttributeNames
     * @return {?}
     */
    MdButton.prototype._hasAttributeWithPrefix = function () {
        var _this = this;
        var unprefixedAttributeNames = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            unprefixedAttributeNames[_i] = arguments[_i];
        }
        return unprefixedAttributeNames.some(function (suffix) {
            var /** @type {?} */ el = _this._getHostElement();
            return el.hasAttribute('md-' + suffix) || el.hasAttribute('mat-' + suffix);
        });
    };
    return MdButton;
}());
MdButton.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'button[md-button], button[md-raised-button], button[md-icon-button],' +
                    'button[md-fab], button[md-mini-fab],' +
                    'button[mat-button], button[mat-raised-button], button[mat-icon-button],' +
                    'button[mat-fab], button[mat-mini-fab]',
                host: {
                    '[disabled]': 'disabled',
                },
                template: "<span class=\"mat-button-wrapper\"><ng-content></ng-content></span> <div md-ripple *ngIf=\"!_isRippleDisabled()\" class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"_isRoundButton || _isIconButton\" [mdRippleCentered]=\"_isIconButton\" [mdRippleTrigger]=\"_getHostElement()\"></div> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\"mat-button-focus-overlay\" (touchstart)=\"$event.preventDefault()\"></div> ",
                styles: [".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;font-size:14px;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:500;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([disabled]):active,.mat-mini-fab:not([disabled]):active,.mat-raised-button:not([disabled]):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-icon,.mat-fab i{padding:16px 0;line-height:24px}.mat-mini-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-icon,.mat-mini-fab i{padding:8px 0;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{position:absolute;top:0;left:0;bottom:0;right:0}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;pointer-events:none;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}} /*# sourceMappingURL=button.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
            },] },
];
/**
 * @nocollapse
 */
MdButton.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: FocusOriginMonitor, },
]; };
MdButton.propDecorators = {
    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * Raised Material design button.
 */
var MdAnchor = (function (_super) {
    __extends(MdAnchor, _super);
    /**
     * @param {?} elementRef
     * @param {?} renderer
     * @param {?} focusOriginMonitor
     */
    function MdAnchor(elementRef, renderer, focusOriginMonitor) {
        return _super.call(this, elementRef, renderer, focusOriginMonitor) || this;
    }
    Object.defineProperty(MdAnchor.prototype, "tabIndex", {
        /**
         * \@docs-private
         * @return {?}
         */
        get: function () {
            return this.disabled ? -1 : 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdAnchor.prototype, "_isAriaDisabled", {
        /**
         * @return {?}
         */
        get: function () {
            return this.disabled ? 'true' : 'false';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    MdAnchor.prototype._haltDisabledEvents = function (event) {
        // A disabled button shouldn't apply any actions
        if (this.disabled) {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    };
    return MdAnchor;
}(MdButton));
MdAnchor.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: "a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]",
                host: {
                    '[attr.disabled]': 'disabled',
                    '[attr.aria-disabled]': '_isAriaDisabled',
                    '(click)': '_haltDisabledEvents($event)',
                },
                template: "<span class=\"mat-button-wrapper\"><ng-content></ng-content></span> <div md-ripple *ngIf=\"!_isRippleDisabled()\" class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"_isRoundButton || _isIconButton\" [mdRippleCentered]=\"_isIconButton\" [mdRippleTrigger]=\"_getHostElement()\"></div> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\"mat-button-focus-overlay\" (touchstart)=\"$event.preventDefault()\"></div> ",
                styles: [".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;font-size:14px;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:500;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([disabled]):active,.mat-mini-fab:not([disabled]):active,.mat-raised-button:not([disabled]):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-icon,.mat-fab i{padding:16px 0;line-height:24px}.mat-mini-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-icon,.mat-mini-fab i{padding:8px 0;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{position:absolute;top:0;left:0;bottom:0;right:0}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;pointer-events:none;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}} /*# sourceMappingURL=button.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None
            },] },
];
/**
 * @nocollapse
 */
MdAnchor.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: FocusOriginMonitor, },
]; };
MdAnchor.propDecorators = {
    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['tabIndex',] },],
};
var MdButtonModule = (function () {
    function MdButtonModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdButtonModule.forRoot = function () {
        return {
            ngModule: MdButtonModule,
            providers: []
        };
    };
    return MdButtonModule;
}());
MdButtonModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */],
                    MdRippleModule,
                    CompatibilityModule,
                    StyleModule,
                ],
                exports: [
                    MdButton,
                    MdAnchor,
                    CompatibilityModule,
                    MdButtonCssMatStyler,
                    MdRaisedButtonCssMatStyler,
                    MdIconButtonCssMatStyler,
                    MdFabCssMatStyler,
                    MdMiniFabCssMatStyler,
                ],
                declarations: [
                    MdButton,
                    MdAnchor,
                    MdButtonCssMatStyler,
                    MdRaisedButtonCssMatStyler,
                    MdIconButtonCssMatStyler,
                    MdFabCssMatStyler,
                    MdMiniFabCssMatStyler,
                ],
            },] },
];
/**
 * @nocollapse
 */
MdButtonModule.ctorParameters = function () { return []; };
/** Monotonically increasing integer used to auto-generate unique ids for checkbox components. */
var nextId = 0;
/**
 * Provider Expression that allows md-checkbox to register as a ControlValueAccessor.
 * This allows it to support [(ngModel)].
 * \@docs-private
 */
var MD_CHECKBOX_CONTROL_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["c" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdCheckbox; }),
    multi: true
};
var TransitionCheckState = {};
TransitionCheckState.Init = 0;
TransitionCheckState.Checked = 1;
TransitionCheckState.Unchecked = 2;
TransitionCheckState.Indeterminate = 3;
TransitionCheckState[TransitionCheckState.Init] = "Init";
TransitionCheckState[TransitionCheckState.Checked] = "Checked";
TransitionCheckState[TransitionCheckState.Unchecked] = "Unchecked";
TransitionCheckState[TransitionCheckState.Indeterminate] = "Indeterminate";
/**
 * Change event object emitted by MdCheckbox.
 */
var MdCheckboxChange = (function () {
    function MdCheckboxChange() {
    }
    return MdCheckboxChange;
}());
/**
 * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,
 * and exposes a similar API. A MdCheckbox can be either checked, unchecked, indeterminate, or
 * disabled. Note that all additional accessibility attributes are taken care of by the component,
 * so there is no need to provide them yourself. However, if you want to omit a label and still
 * have the checkbox be accessible, you may supply an [aria-label] input.
 * See: https://www.google.com/design/spec/components/selection-controls.html
 */
var MdCheckbox = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _elementRef
     * @param {?} _changeDetectorRef
     * @param {?} _focusOriginMonitor
     */
    function MdCheckbox(_renderer, _elementRef, _changeDetectorRef, _focusOriginMonitor) {
        this._renderer = _renderer;
        this._elementRef = _elementRef;
        this._changeDetectorRef = _changeDetectorRef;
        this._focusOriginMonitor = _focusOriginMonitor;
        /**
         * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will
         * take precedence so this may be omitted.
         */
        this.ariaLabel = '';
        /**
         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element
         */
        this.ariaLabelledby = null;
        /** A unique id for the checkbox. If one is not supplied, it is auto-generated. */
        this.id = "md-checkbox-" + ++nextId;
        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */
        this.labelPosition = 'after';
        this._disabled = false;
        /** Tabindex value that is passed to the underlying input element. */
        this.tabIndex = 0;
        /** Name value will be applied to the input element if present */
        this.name = null;
        /** Event emitted when the checkbox's `checked` value changes. */
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the checkbox's `indeterminate` value changes. */
        this.indeterminateChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /**
         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.
         * \@docs-private
         */
        this.onTouched = function () { };
        this._currentAnimationClass = '';
        this._currentCheckState = TransitionCheckState.Init;
        this._checked = false;
        this._indeterminate = false;
        this._controlValueAccessorChangeFn = function (value) { };
        this.color = 'accent';
    }
    Object.defineProperty(MdCheckbox.prototype, "disableRipple", {
        /**
         * Whether the ripple effect for this checkbox is disabled.
         * @return {?}
         */
        get: function () { return this._disableRipple; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdCheckbox.prototype, "inputId", {
        /**
         * ID of the native input element inside `<md-checkbox>`
         * @return {?}
         */
        get: function () {
            return "input-" + this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdCheckbox.prototype, "required", {
        /**
         * Whether the checkbox is required.
         * @return {?}
         */
        get: function () { return this._required; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._required = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdCheckbox.prototype, "align", {
        /**
         * Whether or not the checkbox should appear before or after the label.
         * @deprecated
         * @return {?}
         */
        get: function () {
            // align refers to the checkbox relative to the label, while labelPosition refers to the
            // label relative to the checkbox. As such, they are inverted.
            return this.labelPosition == 'after' ? 'start' : 'end';
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this.labelPosition = (v == 'start') ? 'after' : 'before';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdCheckbox.prototype, "disabled", {
        /**
         * Whether the checkbox is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdCheckbox.prototype.ngAfterViewInit = function () {
        var _this = this;
        this._focusedSubscription = this._focusOriginMonitor
            .monitor(this._inputElement.nativeElement, this._renderer, false)
            .subscribe(function (focusOrigin) {
            if (!_this._focusedRipple && (focusOrigin === 'keyboard' || focusOrigin === 'program')) {
                _this._focusedRipple = _this._ripple.launch(0, 0, { persistent: true, centered: true });
            }
        });
    };
    /**
     * @return {?}
     */
    MdCheckbox.prototype.ngOnDestroy = function () {
        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);
    };
    Object.defineProperty(MdCheckbox.prototype, "checked", {
        /**
         * Whether the checkbox is checked. Note that setting `checked` will immediately set
         * `indeterminate` to false.
         * @return {?}
         */
        get: function () {
            return this._checked;
        },
        /**
         * @param {?} checked
         * @return {?}
         */
        set: function (checked) {
            var _this = this;
            if (checked != this.checked) {
                if (this._indeterminate) {
                    Promise.resolve().then(function () {
                        _this._indeterminate = false;
                        _this.indeterminateChange.emit(_this._indeterminate);
                    });
                }
                this._checked = checked;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdCheckbox.prototype, "indeterminate", {
        /**
         * Whether the checkbox is indeterminate. This is also known as "mixed" mode and can be used to
         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of
         * checkable items. Note that whenever `checked` is set, indeterminate is immediately set to
         * false. This differs from the web platform in that indeterminate state on native
         * checkboxes is only remove when the user manually checks the checkbox (rather than setting the
         * `checked` property programmatically). However, we feel that this behavior is more accommodating
         * to the way consumers would envision using this component.
         * @return {?}
         */
        get: function () {
            return this._indeterminate;
        },
        /**
         * @param {?} indeterminate
         * @return {?}
         */
        set: function (indeterminate) {
            var /** @type {?} */ changed = indeterminate != this._indeterminate;
            this._indeterminate = indeterminate;
            if (changed) {
                if (this._indeterminate) {
                    this._transitionCheckState(TransitionCheckState.Indeterminate);
                }
                else {
                    this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);
                }
                this.indeterminateChange.emit(this._indeterminate);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdCheckbox.prototype, "color", {
        /**
         * The color of the button. Can be `primary`, `accent`, or `warn`.
         * @return {?}
         */
        get: function () { return this._color; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._updateColor(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} newColor
     * @return {?}
     */
    MdCheckbox.prototype._updateColor = function (newColor) {
        this._setElementColor(this._color, false);
        this._setElementColor(newColor, true);
        this._color = newColor;
    };
    /**
     * @param {?} color
     * @param {?} isAdd
     * @return {?}
     */
    MdCheckbox.prototype._setElementColor = function (color, isAdd) {
        if (color != null && color != '') {
            this._renderer.setElementClass(this._elementRef.nativeElement, "mat-" + color, isAdd);
        }
    };
    /**
     * @return {?}
     */
    MdCheckbox.prototype._isRippleDisabled = function () {
        return this.disableRipple || this.disabled;
    };
    /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param {?} value Value to be set to the model.
     * @return {?}
     */
    MdCheckbox.prototype.writeValue = function (value) {
        this.checked = !!value;
    };
    /**
     * Registers a callback to be triggered when the value has changed.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn Function to be called on change.
     * @return {?}
     */
    MdCheckbox.prototype.registerOnChange = function (fn) {
        this._controlValueAccessorChangeFn = fn;
    };
    /**
     * Registers a callback to be triggered when the control has been touched.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn Callback to be triggered when the checkbox is touched.
     * @return {?}
     */
    MdCheckbox.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    /**
     * Sets the checkbox's disabled state. Implemented as a part of ControlValueAccessor.
     * @param {?} isDisabled Whether the checkbox should be disabled.
     * @return {?}
     */
    MdCheckbox.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    /**
     * @param {?} newState
     * @return {?}
     */
    MdCheckbox.prototype._transitionCheckState = function (newState) {
        var /** @type {?} */ oldState = this._currentCheckState;
        var /** @type {?} */ renderer = this._renderer;
        var /** @type {?} */ elementRef = this._elementRef;
        if (oldState === newState) {
            return;
        }
        if (this._currentAnimationClass.length > 0) {
            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, false);
        }
        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);
        this._currentCheckState = newState;
        if (this._currentAnimationClass.length > 0) {
            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, true);
        }
    };
    /**
     * @return {?}
     */
    MdCheckbox.prototype._emitChangeEvent = function () {
        var /** @type {?} */ event = new MdCheckboxChange();
        event.source = this;
        event.checked = this.checked;
        this._controlValueAccessorChangeFn(this.checked);
        this.change.emit(event);
    };
    /**
     * Informs the component when we lose focus in order to style accordingly
     * @return {?}
     */
    MdCheckbox.prototype._onInputBlur = function () {
        this._removeFocusedRipple();
        this.onTouched();
    };
    /**
     * Toggles the `checked` state of the checkbox.
     * @return {?}
     */
    MdCheckbox.prototype.toggle = function () {
        this.checked = !this.checked;
    };
    /**
     * Event handler for checkbox input element.
     * Toggles checked state if element is not disabled.
     * Do not toggle on (change) event since IE doesn't fire change event when
     *   indeterminate checkbox is clicked.
     * @param {?} event
     * @return {?}
     */
    MdCheckbox.prototype._onInputClick = function (event) {
        // We have to stop propagation for click events on the visual hidden input element.
        // By default, when a user clicks on a label element, a generated click event will be
        // dispatched on the associated input element. Since we are using a label element as our
        // root container, the click event on the `checkbox` will be executed twice.
        // The real click event will bubble up, and the generated click event also tries to bubble up.
        // This will lead to multiple click events.
        // Preventing bubbling for the second event will solve that issue.
        event.stopPropagation();
        this._removeFocusedRipple();
        if (!this.disabled) {
            this.toggle();
            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);
            // Emit our custom change event if the native input emitted one.
            // It is important to only emit it, if the native input triggered one, because
            // we don't want to trigger a change event, when the `checked` variable changes for example.
            this._emitChangeEvent();
        }
    };
    /**
     * Focuses the checkbox.
     * @return {?}
     */
    MdCheckbox.prototype.focus = function () {
        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'program');
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdCheckbox.prototype._onInteractionEvent = function (event) {
        // We always have to stop propagation on the change event.
        // Otherwise the change event, from the input element, will bubble up and
        // emit its event object to the `change` output.
        event.stopPropagation();
    };
    /**
     * @param {?} oldState
     * @param {?} newState
     * @return {?}
     */
    MdCheckbox.prototype._getAnimationClassForCheckStateTransition = function (oldState, newState) {
        var /** @type {?} */ animSuffix;
        switch (oldState) {
            case TransitionCheckState.Init:
                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or
                // [checked] bound to it.
                if (newState === TransitionCheckState.Checked) {
                    animSuffix = 'unchecked-checked';
                }
                else if (newState == TransitionCheckState.Indeterminate) {
                    animSuffix = 'unchecked-indeterminate';
                }
                else {
                    return '';
                }
                break;
            case TransitionCheckState.Unchecked:
                animSuffix = newState === TransitionCheckState.Checked ?
                    'unchecked-checked' : 'unchecked-indeterminate';
                break;
            case TransitionCheckState.Checked:
                animSuffix = newState === TransitionCheckState.Unchecked ?
                    'checked-unchecked' : 'checked-indeterminate';
                break;
            case TransitionCheckState.Indeterminate:
                animSuffix = newState === TransitionCheckState.Checked ?
                    'indeterminate-checked' : 'indeterminate-unchecked';
        }
        return "mat-checkbox-anim-" + animSuffix;
    };
    /**
     * Fades out the focused state ripple.
     * @return {?}
     */
    MdCheckbox.prototype._removeFocusedRipple = function () {
        if (this._focusedRipple) {
            this._focusedRipple.fadeOut();
            this._focusedRipple = null;
        }
    };
    return MdCheckbox;
}());
MdCheckbox.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-checkbox, mat-checkbox',
                template: "<label class=\"mat-checkbox-layout\" #label> <div class=\"mat-checkbox-inner-container\"> <input #input class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\" [id]=\"inputId\" [required]=\"required\" [checked]=\"checked\" [value]=\"value\" [disabled]=\"disabled\" [name]=\"name\" [tabIndex]=\"tabIndex\" [indeterminate]=\"indeterminate\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" (blur)=\"_onInputBlur()\" (change)=\"_onInteractionEvent($event)\" (click)=\"_onInputClick($event)\"> <div md-ripple *ngIf=\"!_isRippleDisabled()\" class=\"mat-checkbox-ripple\" [mdRippleTrigger]=\"label\" [mdRippleCentered]=\"true\"></div> <div class=\"mat-checkbox-frame\"></div> <div class=\"mat-checkbox-background\"> <svg version=\"1.1\" class=\"mat-checkbox-checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" xml:space=\"preserve\"> <path class=\"mat-checkbox-checkmark-path\" fill=\"none\" stroke=\"white\" d=\"M4.1,12.7 9,17.6 20.3,6.3\"/> </svg> <!-- Element for rendering the indeterminate state checkbox. --> <div class=\"mat-checkbox-mixedmark\"></div> </div> </div> <span class=\"mat-checkbox-label\"> <ng-content></ng-content> </span> </label> ",
                styles: ["@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.91026}50%{animation-timing-function:cubic-bezier(0,0,.2,.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0,0,0,1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(.4,0,1,1);stroke-dashoffset:0}to{stroke-dashoffset:-22.91026}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}100%,32.8%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-checkmark,.mat-checkbox-frame{bottom:0;left:0;position:absolute;right:0;top:0}.mat-checkbox-checkmark,.mat-checkbox-mixedmark{width:calc(100% - 4px)}.mat-checkbox-background,.mat-checkbox-frame{border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{font-family:Roboto,\"Helvetica Neue\",sans-serif;transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-checkbox-label{cursor:pointer}.mat-checkbox-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex}.mat-checkbox-inner-container{display:inline-block;height:20px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:20px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0,0,.2,.1);border-width:2px;border-style:solid}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0,0,.2,.1),opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-checkbox-checkmark{width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.91026;stroke-dasharray:22.91026;stroke-width:2.66667px}.mat-checkbox-mixedmark{height:2px;opacity:0;transform:scaleX(0) rotate(0)}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0s mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0s mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:.3s linear 0s mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-ripple{position:absolute;left:-15px;top:-15px;right:-15px;bottom:-15px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=checkbox.css.map */ "],
                host: {
                    '[class.mat-checkbox]': 'true',
                    '[class.mat-checkbox-indeterminate]': 'indeterminate',
                    '[class.mat-checkbox-checked]': 'checked',
                    '[class.mat-checkbox-disabled]': 'disabled',
                    '[class.mat-checkbox-label-before]': 'labelPosition == "before"',
                },
                providers: [MD_CHECKBOX_CONTROL_VALUE_ACCESSOR],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush
            },] },
];
/**
 * @nocollapse
 */
MdCheckbox.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["C" /* ChangeDetectorRef */], },
    { type: FocusOriginMonitor, },
]; };
MdCheckbox.propDecorators = {
    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-label',] },],
    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-labelledby',] },],
    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'indeterminateChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['input',] },],
    '_ripple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [MdRipple,] },],
    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'indeterminate': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
var MdCheckboxModule = (function () {
    function MdCheckboxModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdCheckboxModule.forRoot = function () {
        return {
            ngModule: MdCheckboxModule,
            providers: []
        };
    };
    return MdCheckboxModule;
}());
MdCheckboxModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */], MdRippleModule, CompatibilityModule],
                exports: [MdCheckbox, CompatibilityModule],
                declarations: [MdCheckbox],
                providers: [FocusOriginMonitor]
            },] },
];
/**
 * @nocollapse
 */
MdCheckboxModule.ctorParameters = function () { return []; };
/**
 * Provider Expression that allows md-radio-group to register as a ControlValueAccessor. This
 * allows it to support [(ngModel)] and ngControl.
 * \@docs-private
 */
var MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["c" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdRadioGroup; }),
    multi: true
};
var _uniqueIdCounter$2 = 0;
/**
 * Change event object emitted by MdRadio and MdRadioGroup.
 */
var MdRadioChange = (function () {
    function MdRadioChange() {
    }
    return MdRadioChange;
}());
/**
 * A group of radio buttons. May contain one or more `<md-radio-button>` elements.
 */
var MdRadioGroup = (function () {
    function MdRadioGroup() {
        this._value = null;
        this._name = "md-radio-group-" + _uniqueIdCounter$2++;
        this._disabled = false;
        this._selected = null;
        this._isInitialized = false;
        /** The method to be called in order to update ngModel */
        this._controlValueAccessorChangeFn = function (value) { };
        /**
         * onTouch function registered via registerOnTouch (ControlValueAccessor).
         * \@docs-private
         */
        this.onTouched = function () { };
        /**
         * Event emitted when the group value changes.
         * Change events are only emitted when the value changes due to user interaction with
         * a radio button (the same behavior as `<input type-"radio">`).
         */
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Child radio buttons. */
        this._radios = null;
        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */
        this.labelPosition = 'after';
    }
    Object.defineProperty(MdRadioGroup.prototype, "name", {
        /**
         * Name of the radio button group. All radio buttons inside this group will use this name.
         * @return {?}
         */
        get: function () { return this._name; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._name = value;
            this._updateRadioButtonNames();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioGroup.prototype, "align", {
        /**
         * Alignment of the radio-buttons relative to their labels. Can be 'before' or 'after'.
         * @deprecated
         * @return {?}
         */
        get: function () {
            // align refers to the checkbox relative to the label, while labelPosition refers to the
            // label relative to the checkbox. As such, they are inverted.
            return this.labelPosition == 'after' ? 'start' : 'end';
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this.labelPosition = (v == 'start') ? 'after' : 'before';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioGroup.prototype, "disabled", {
        /**
         * Whether the radio button is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            // The presence of *any* disabled value makes the component disabled, *except* for false.
            this._disabled = (value != null && value !== false) ? true : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioGroup.prototype, "value", {
        /**
         * Value of the radio button.
         * @return {?}
         */
        get: function () { return this._value; },
        /**
         * @param {?} newValue
         * @return {?}
         */
        set: function (newValue) {
            if (this._value != newValue) {
                // Set this before proceeding to ensure no circular loop occurs with selection.
                this._value = newValue;
                this._updateSelectedRadioFromValue();
                this._checkSelectedRadioButton();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdRadioGroup.prototype._checkSelectedRadioButton = function () {
        if (this.selected && !this._selected.checked) {
            this._selected.checked = true;
        }
    };
    Object.defineProperty(MdRadioGroup.prototype, "selected", {
        /**
         * Whether the radio button is selected.
         * @return {?}
         */
        get: function () { return this._selected; },
        /**
         * @param {?} selected
         * @return {?}
         */
        set: function (selected) {
            this._selected = selected;
            this.value = selected ? selected.value : null;
            this._checkSelectedRadioButton();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Initialize properties once content children are available.
     * This allows us to propagate relevant attributes to associated buttons.
     * @return {?}
     */
    MdRadioGroup.prototype.ngAfterContentInit = function () {
        // Mark this component as initialized in AfterContentInit because the initial value can
        // possibly be set by NgModel on MdRadioGroup, and it is possible that the OnInit of the
        // NgModel occurs *after* the OnInit of the MdRadioGroup.
        this._isInitialized = true;
    };
    /**
     * Mark this group as being "touched" (for ngModel). Meant to be called by the contained
     * radio buttons upon their blur.
     * @return {?}
     */
    MdRadioGroup.prototype._touch = function () {
        if (this.onTouched) {
            this.onTouched();
        }
    };
    /**
     * @return {?}
     */
    MdRadioGroup.prototype._updateRadioButtonNames = function () {
        var _this = this;
        if (this._radios) {
            this._radios.forEach(function (radio) {
                radio.name = _this.name;
            });
        }
    };
    /**
     * Updates the `selected` radio button from the internal _value state.
     * @return {?}
     */
    MdRadioGroup.prototype._updateSelectedRadioFromValue = function () {
        var _this = this;
        // If the value already matches the selected radio, do nothing.
        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;
        if (this._radios != null && !isAlreadySelected) {
            this._selected = null;
            this._radios.forEach(function (radio) {
                radio.checked = _this.value == radio.value;
                if (radio.checked) {
                    _this._selected = radio;
                }
            });
        }
    };
    /**
     * Dispatch change event with current selection and group value.
     * @return {?}
     */
    MdRadioGroup.prototype._emitChangeEvent = function () {
        if (this._isInitialized) {
            var /** @type {?} */ event = new MdRadioChange();
            event.source = this._selected;
            event.value = this._value;
            this.change.emit(event);
        }
    };
    /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param {?} value
     * @return {?}
     */
    MdRadioGroup.prototype.writeValue = function (value) {
        this.value = value;
    };
    /**
     * Registers a callback to be triggered when the model value changes.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn Callback to be registered.
     * @return {?}
     */
    MdRadioGroup.prototype.registerOnChange = function (fn) {
        this._controlValueAccessorChangeFn = fn;
    };
    /**
     * Registers a callback to be triggered when the control is touched.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn Callback to be registered.
     * @return {?}
     */
    MdRadioGroup.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    /**
     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.
     * @param {?} isDisabled Whether the control should be disabled.
     * @return {?}
     */
    MdRadioGroup.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    return MdRadioGroup;
}());
MdRadioGroup.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-radio-group, mat-radio-group',
                providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],
                host: {
                    'role': 'radiogroup',
                    '[class.mat-radio-group]': 'true',
                },
            },] },
];
/**
 * @nocollapse
 */
MdRadioGroup.ctorParameters = function () { return []; };
MdRadioGroup.propDecorators = {
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    '_radios': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdRadioButton; }),] },],
    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'selected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * A radio-button. May be inside of
 */
var MdRadioButton = (function () {
    /**
     * @param {?} radioGroup
     * @param {?} _elementRef
     * @param {?} _renderer
     * @param {?} _focusOriginMonitor
     * @param {?} _radioDispatcher
     */
    function MdRadioButton(radioGroup, _elementRef, _renderer, _focusOriginMonitor, _radioDispatcher) {
        var _this = this;
        // Assertions. Ideally these should be stripped out by the compiler.
        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._focusOriginMonitor = _focusOriginMonitor;
        this._radioDispatcher = _radioDispatcher;
        /** The unique ID for the radio button. */
        this.id = "md-radio-" + _uniqueIdCounter$2++;
        /**
         * Event emitted when the checked state of this radio button changes.
         * Change events are only emitted when the value changes due to user interaction with
         * the radio button (the same behavior as `<input type-"radio">`).
         */
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        this._checked = false;
        this._value = null;
        this.radioGroup = radioGroup;
        _radioDispatcher.listen(function (id, name) {
            if (id != _this.id && name == _this.name) {
                _this.checked = false;
            }
        });
    }
    Object.defineProperty(MdRadioButton.prototype, "disableRipple", {
        /**
         * Whether the ripple effect for this radio button is disabled.
         * @return {?}
         */
        get: function () { return this._disableRipple; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioButton.prototype, "checked", {
        /**
         * Whether this radio button is checked.
         * @return {?}
         */
        get: function () {
            return this._checked;
        },
        /**
         * @param {?} newCheckedState
         * @return {?}
         */
        set: function (newCheckedState) {
            if (this._checked != newCheckedState) {
                this._checked = newCheckedState;
                if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {
                    this.radioGroup.selected = this;
                }
                else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {
                    // When unchecking the selected radio button, update the selected radio
                    // property on the group.
                    this.radioGroup.selected = null;
                }
                if (newCheckedState) {
                    // Notify all radio buttons with the same name to un-check.
                    this._radioDispatcher.notify(this.id, this.name);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioButton.prototype, "value", {
        /**
         * The value of this radio button.
         * @return {?}
         */
        get: function () {
            return this._value;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (this._value != value) {
                this._value = value;
                if (this.radioGroup != null) {
                    if (!this.checked) {
                        // Update checked when the value changed to match the radio group's value
                        this.checked = this.radioGroup.value == value;
                    }
                    if (this.checked) {
                        this.radioGroup.selected = this;
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioButton.prototype, "align", {
        /**
         * Whether or not the radio-button should appear before or after the label.
         * @deprecated
         * @return {?}
         */
        get: function () {
            // align refers to the checkbox relative to the label, while labelPosition refers to the
            // label relative to the checkbox. As such, they are inverted.
            return this.labelPosition == 'after' ? 'start' : 'end';
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this.labelPosition = (v == 'start') ? 'after' : 'before';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioButton.prototype, "labelPosition", {
        /**
         * Whether the label should appear after or before the radio button. Defaults to 'after'
         * @return {?}
         */
        get: function () {
            return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._labelPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioButton.prototype, "disabled", {
        /**
         * Whether the radio button is disabled.
         * @return {?}
         */
        get: function () {
            return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            // The presence of *any* disabled value makes the component disabled, *except* for false.
            this._disabled = (value != null && value !== false) ? true : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioButton.prototype, "inputId", {
        /**
         * ID of the native input element inside `<md-radio-button>`
         * @return {?}
         */
        get: function () {
            return this.id + "-input";
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Focuses the radio button.
     * @return {?}
     */
    MdRadioButton.prototype.focus = function () {
        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'keyboard');
    };
    /**
     * @return {?}
     */
    MdRadioButton.prototype.ngOnInit = function () {
        if (this.radioGroup) {
            // If the radio is inside a radio group, determine if it should be checked
            this.checked = this.radioGroup.value === this._value;
            // Copy name from parent radio group
            this.name = this.radioGroup.name;
        }
    };
    /**
     * @return {?}
     */
    MdRadioButton.prototype.ngAfterViewInit = function () {
        var _this = this;
        this._focusOriginMonitorSubscription = this._focusOriginMonitor
            .monitor(this._inputElement.nativeElement, this._renderer, false)
            .subscribe(function (focusOrigin) {
            if (focusOrigin === 'keyboard' && !_this._focusedRippleRef) {
                _this._focusedRippleRef = _this._ripple.launch(0, 0, { persistent: true, centered: true });
            }
        });
    };
    /**
     * @return {?}
     */
    MdRadioButton.prototype.ngOnDestroy = function () {
        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);
    };
    /**
     * Dispatch change event with current value.
     * @return {?}
     */
    MdRadioButton.prototype._emitChangeEvent = function () {
        var /** @type {?} */ event = new MdRadioChange();
        event.source = this;
        event.value = this._value;
        this.change.emit(event);
    };
    /**
     * @return {?}
     */
    MdRadioButton.prototype._isRippleDisabled = function () {
        return this.disableRipple || this.disabled;
    };
    /**
     * @return {?}
     */
    MdRadioButton.prototype._onInputBlur = function () {
        if (this._focusedRippleRef) {
            this._focusedRippleRef.fadeOut();
            this._focusedRippleRef = null;
        }
        if (this.radioGroup) {
            this.radioGroup._touch();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdRadioButton.prototype._onInputClick = function (event) {
        // We have to stop propagation for click events on the visual hidden input element.
        // By default, when a user clicks on a label element, a generated click event will be
        // dispatched on the associated input element. Since we are using a label element as our
        // root container, the click event on the `radio-button` will be executed twice.
        // The real click event will bubble up, and the generated click event also tries to bubble up.
        // This will lead to multiple click events.
        // Preventing bubbling for the second event will solve that issue.
        event.stopPropagation();
    };
    /**
     * Triggered when the radio button received a click or the input recognized any change.
     * Clicking on a label element, will trigger a change event on the associated input.
     * @param {?} event
     * @return {?}
     */
    MdRadioButton.prototype._onInputChange = function (event) {
        // We always have to stop propagation on the change event.
        // Otherwise the change event, from the input element, will bubble up and
        // emit its event object to the `change` output.
        event.stopPropagation();
        var /** @type {?} */ groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;
        this.checked = true;
        this._emitChangeEvent();
        if (this.radioGroup) {
            this.radioGroup._controlValueAccessorChangeFn(this.value);
            this.radioGroup._touch();
            if (groupValueChanged) {
                this.radioGroup._emitChangeEvent();
            }
        }
    };
    return MdRadioButton;
}());
MdRadioButton.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-radio-button, mat-radio-button',
                template: "<!-- TODO(jelbourn): render the radio on either side of the content --> <!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. --> <label [attr.for]=\"inputId\" class=\"mat-radio-label\" #label> <!-- The actual 'radio' part of the control. --> <div class=\"mat-radio-container\"> <div class=\"mat-radio-outer-circle\"></div> <div class=\"mat-radio-inner-circle\"></div> <div md-ripple *ngIf=\"!_isRippleDisabled()\" class=\"mat-radio-ripple\" [mdRippleTrigger]=\"label\" [mdRippleCentered]=\"true\"></div> </div> <input #input class=\"mat-radio-input cdk-visually-hidden\" type=\"radio\" [id]=\"inputId\" [checked]=\"checked\" [disabled]=\"disabled\" [name]=\"name\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" (change)=\"_onInputChange($event)\" (blur)=\"_onInputBlur()\" (click)=\"_onInputClick($event)\"> <!-- The label content for radio control. --> <div class=\"mat-radio-label-content\" [class.mat-radio-label-before]=\"labelPosition == 'before'\"> <ng-content></ng-content> </div> </label> ",
                styles: [".mat-radio-button{display:inline-block;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-radio-label{cursor:pointer;display:inline-flex;align-items:baseline;white-space:nowrap}.mat-radio-container{box-sizing:border-box;display:inline-block;height:20px;position:relative;width:20px;top:2px}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;transform:scale(0);width:20px}.mat-radio-checked .mat-radio-inner-circle{transform:scale(.5)}.mat-radio-label-content{display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-ripple{position:absolute;left:-15px;top:-15px;right:-15px;bottom:-15px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=radio.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                host: {
                    '[class.mat-radio-button]': 'true',
                    '[class.mat-radio-checked]': 'checked',
                    '[class.mat-radio-disabled]': 'disabled',
                    '[attr.id]': 'id',
                }
            },] },
];
/**
 * @nocollapse
 */
MdRadioButton.ctorParameters = function () { return [
    { type: MdRadioGroup, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: FocusOriginMonitor, },
    { type: UniqueSelectionDispatcher, },
]; };
MdRadioButton.propDecorators = {
    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-label',] },],
    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-labelledby',] },],
    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    '_ripple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [MdRipple,] },],
    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['input',] },],
};
var MdRadioModule = (function () {
    function MdRadioModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdRadioModule.forRoot = function () {
        return {
            ngModule: MdRadioModule,
            providers: [],
        };
    };
    return MdRadioModule;
}());
MdRadioModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */], MdRippleModule, CompatibilityModule],
                exports: [MdRadioGroup, MdRadioButton, CompatibilityModule],
                providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER, VIEWPORT_RULER_PROVIDER, FocusOriginMonitor],
                declarations: [MdRadioGroup, MdRadioButton],
            },] },
];
/**
 * @nocollapse
 */
MdRadioModule.ctorParameters = function () { return []; };
/**
 * This class manages keyboard events for selectable lists. If you pass it a query list
 * of items, it will set the active item correctly when arrow events occur.
 */
var ListKeyManager = (function () {
    /**
     * @param {?} _items
     */
    function ListKeyManager(_items) {
        this._items = _items;
        this._activeItemIndex = null;
        this._tabOut = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        this._wrap = false;
    }
    /**
     * Turns on wrapping mode, which ensures that the active item will wrap to
     * the other end of list when there are no more items in the given direction.
     *
     * @return {?} The ListKeyManager that the method was called on.
     */
    ListKeyManager.prototype.withWrap = function () {
        this._wrap = true;
        return this;
    };
    /**
     * Sets the active item to the item at the index specified.
     *
     * @param {?} index The index of the item to be set as active.
     * @return {?}
     */
    ListKeyManager.prototype.setActiveItem = function (index) {
        this._activeItemIndex = index;
        this._activeItem = this._items.toArray()[index];
    };
    /**
     * Sets the active item depending on the key event passed in.
     * @param {?} event Keyboard event to be used for determining which element should be active.
     * @return {?}
     */
    ListKeyManager.prototype.onKeydown = function (event) {
        switch (event.keyCode) {
            case DOWN_ARROW:
                this.setNextItemActive();
                break;
            case UP_ARROW:
                this.setPreviousItemActive();
                break;
            case HOME:
                this.setFirstItemActive();
                break;
            case END:
                this.setLastItemActive();
                break;
            case TAB:
                // Note that we shouldn't prevent the default action on tab.
                this._tabOut.next(null);
                return;
            default:
                return;
        }
        event.preventDefault();
    };
    Object.defineProperty(ListKeyManager.prototype, "activeItemIndex", {
        /**
         * Returns the index of the currently active item.
         * @return {?}
         */
        get: function () {
            return this._activeItemIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListKeyManager.prototype, "activeItem", {
        /**
         * Returns the currently active item.
         * @return {?}
         */
        get: function () {
            return this._activeItem;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the active item to the first enabled item in the list.
     * @return {?}
     */
    ListKeyManager.prototype.setFirstItemActive = function () {
        this._setActiveItemByIndex(0, 1);
    };
    /**
     * Sets the active item to the last enabled item in the list.
     * @return {?}
     */
    ListKeyManager.prototype.setLastItemActive = function () {
        this._setActiveItemByIndex(this._items.length - 1, -1);
    };
    /**
     * Sets the active item to the next enabled item in the list.
     * @return {?}
     */
    ListKeyManager.prototype.setNextItemActive = function () {
        this._activeItemIndex === null ? this.setFirstItemActive() : this._setActiveItemByDelta(1);
    };
    /**
     * Sets the active item to a previous enabled item in the list.
     * @return {?}
     */
    ListKeyManager.prototype.setPreviousItemActive = function () {
        this._activeItemIndex === null && this._wrap ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
    };
    /**
     * Allows setting of the activeItemIndex without any other effects.
     * @param {?} index The new activeItemIndex.
     * @return {?}
     */
    ListKeyManager.prototype.updateActiveItemIndex = function (index) {
        this._activeItemIndex = index;
    };
    Object.defineProperty(ListKeyManager.prototype, "tabOut", {
        /**
         * Observable that emits any time the TAB key is pressed, so components can react
         * when focus is shifted off of the list.
         * @return {?}
         */
        get: function () {
            return this._tabOut.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * This method sets the active item, given a list of items and the delta between the
     * currently active item and the new active item. It will calculate differently
     * depending on whether wrap mode is turned on.
     * @param {?} delta
     * @param {?=} items
     * @return {?}
     */
    ListKeyManager.prototype._setActiveItemByDelta = function (delta, items) {
        if (items === void 0) { items = this._items.toArray(); }
        this._wrap ? this._setActiveInWrapMode(delta, items)
            : this._setActiveInDefaultMode(delta, items);
    };
    /**
     * Sets the active item properly given "wrap" mode. In other words, it will continue to move
     * down the list until it finds an item that is not disabled, and it will wrap if it
     * encounters either end of the list.
     * @param {?} delta
     * @param {?} items
     * @return {?}
     */
    ListKeyManager.prototype._setActiveInWrapMode = function (delta, items) {
        // when active item would leave menu, wrap to beginning or end
        this._activeItemIndex =
            (this._activeItemIndex + delta + items.length) % items.length;
        // skip all disabled menu items recursively until an enabled one is reached
        if (items[this._activeItemIndex].disabled) {
            this._setActiveInWrapMode(delta, items);
        }
        else {
            this.setActiveItem(this._activeItemIndex);
        }
    };
    /**
     * Sets the active item properly given the default mode. In other words, it will
     * continue to move down the list until it finds an item that is not disabled. If
     * it encounters either end of the list, it will stop and not wrap.
     * @param {?} delta
     * @param {?} items
     * @return {?}
     */
    ListKeyManager.prototype._setActiveInDefaultMode = function (delta, items) {
        this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);
    };
    /**
     * Sets the active item to the first enabled item starting at the index specified. If the
     * item is disabled, it will move in the fallbackDelta direction until it either
     * finds an enabled item or encounters the end of the list.
     * @param {?} index
     * @param {?} fallbackDelta
     * @param {?=} items
     * @return {?}
     */
    ListKeyManager.prototype._setActiveItemByIndex = function (index, fallbackDelta, items) {
        if (items === void 0) { items = this._items.toArray(); }
        if (!items[index]) {
            return;
        }
        while (items[index].disabled) {
            index += fallbackDelta;
            if (!items[index]) {
                return;
            }
        }
        this.setActiveItem(index);
    };
    return ListKeyManager;
}());
var FocusKeyManager = (function (_super) {
    __extends(FocusKeyManager, _super);
    /**
     * @param {?} items
     */
    function FocusKeyManager(items) {
        return _super.call(this, items) || this;
    }
    /**
     * This method sets the active item to the item at the specified index.
     * It also adds focuses the newly active item.
     * @param {?} index
     * @return {?}
     */
    FocusKeyManager.prototype.setActiveItem = function (index) {
        _super.prototype.setActiveItem.call(this, index);
        this.activeItem.focus();
    };
    return FocusKeyManager;
}(ListKeyManager));
/**
 * The following are all the animations for the md-select component, with each
 * const containing the metadata for one animation.
 *
 * The values below match the implementation of the AngularJS Material md-select animation.
 */
/**
 * This animation shrinks the placeholder text to 75% of its normal size and translates
 * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,
 * depending on the text direction of the application.
 */
var transformPlaceholder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('transformPlaceholder', [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('floating-ltr', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({
        top: '-22px',
        left: '-2px',
        transform: "scale(0.75)"
    })),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('floating-rtl', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({
        top: '-22px',
        left: '2px',
        transform: "scale(0.75)"
    })),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('* => *', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])("400ms cubic-bezier(0.25, 0.8, 0.25, 1)"))
]);
/**
 * This animation transforms the select's overlay panel on and off the page.
 *
 * When the panel is attached to the DOM, it expands its width 32px, scales it up to
 * 100% on the Y axis, fades in its border, and translates slightly up and to the
 * side to ensure the option text correctly overlaps the trigger text.
 *
 * When the panel is removed from the DOM, it simply fades out linearly.
 */
var transformPanel = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('transformPanel', [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({
        opacity: 1,
        minWidth: 'calc(100% + 32px)',
        transform: "scaleY(1)"
    })),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('void => *', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({
            opacity: 0,
            minWidth: '100%',
            transform: "scaleY(0)"
        }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])("150ms cubic-bezier(0.25, 0.8, 0.25, 1)")
    ]),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('* => void', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('250ms 100ms linear', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 0 }))
    ])
]);
/**
 * This animation fades in the background color and text content of the
 * select's options. It is time delayed to occur 100ms after the overlay
 * panel has transformed in.
 */
var fadeInContent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('fadeInContent', [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 1 })),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('void => showing', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 0 }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])("150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")
    ])
]);
/**
 * Exception thrown when attempting to change a select's `multiple` option after initialization.
 * \@docs-private
 */
var MdSelectDynamicMultipleError = (function (_super) {
    __extends(MdSelectDynamicMultipleError, _super);
    function MdSelectDynamicMultipleError() {
        return _super.call(this, 'Cannot change `multiple` mode of select after initialization.') || this;
    }
    return MdSelectDynamicMultipleError;
}(MdError));
/**
 * Exception thrown when attempting to assign a non-array value to a select in `multiple` mode.
 * Note that `undefined` and `null` are still valid values to allow for resetting the value.
 * \@docs-private
 */
var MdSelectNonArrayValueError = (function (_super) {
    __extends(MdSelectNonArrayValueError, _super);
    function MdSelectNonArrayValueError() {
        return _super.call(this, 'Cannot assign truthy non-array value to select in `multiple` mode.') || this;
    }
    return MdSelectNonArrayValueError;
}(MdError));
/**
 * The following style constants are necessary to save here in order
 * to properly calculate the alignment of the selected option over
 * the trigger element.
 */
/** The fixed height of every option element. */
var SELECT_OPTION_HEIGHT = 48;
/** The max height of the select's overlay panel */
var SELECT_PANEL_MAX_HEIGHT = 256;
/** The max number of options visible at once in the select panel. */
var SELECT_MAX_OPTIONS_DISPLAYED = 5;
/** The fixed height of the select's trigger element. */
var SELECT_TRIGGER_HEIGHT = 30;
/**
 * Must adjust for the difference in height between the option and the trigger,
 * so the text will align on the y axis.
 * (SELECT_OPTION_HEIGHT (48) - SELECT_TRIGGER_HEIGHT (30)) / 2 = 9
 */
var SELECT_OPTION_HEIGHT_ADJUSTMENT = 9;
/** The panel's padding on the x-axis */
var SELECT_PANEL_PADDING_X = 16;
/**
 * Distance between the panel edge and the option text in
 * multi-selection mode.
 *
 * (SELECT_PADDING * 1.75) + 20 = 48
 * The padding is multiplied by 1.75 because the checkbox's margin is half the padding, and
 * the browser adds ~4px, because we're using inline elements.
 * The checkbox width is 20px.
 */
var SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.75 + 20;
/**
 * The panel's padding on the y-axis. This padding indicates there are more
 * options available if you scroll.
 */
var SELECT_PANEL_PADDING_Y = 16;
/**
 * The select panel will only "fit" inside the viewport if it is positioned at
 * this value or more away from the viewport boundary.
 */
var SELECT_PANEL_VIEWPORT_PADDING = 8;
/**
 * Change event object that is emitted when the select value has changed.
 */
var MdSelectChange = (function () {
    /**
     * @param {?} source
     * @param {?} value
     */
    function MdSelectChange(source, value) {
        this.source = source;
        this.value = value;
    }
    return MdSelectChange;
}());
var MdSelect = (function () {
    /**
     * @param {?} _element
     * @param {?} _renderer
     * @param {?} _viewportRuler
     * @param {?} _changeDetectorRef
     * @param {?} _dir
     * @param {?} _control
     * @param {?} tabIndex
     */
    function MdSelect(_element, _renderer, _viewportRuler, _changeDetectorRef, _dir, _control, tabIndex) {
        this._element = _element;
        this._renderer = _renderer;
        this._viewportRuler = _viewportRuler;
        this._changeDetectorRef = _changeDetectorRef;
        this._dir = _dir;
        this._control = _control;
        this._panelOpen = false;
        this._required = false;
        this._disabled = false;
        this._scrollTop = 0;
        this._multiple = false;
        this._placeholderState = '';
        /** View -> model callback called when value changes */
        this._onChange = function (value) { };
        /** View -> model callback called when select has been touched */
        this._onTouched = function () { };
        /** The IDs of child options to be passed to the aria-owns attribute. */
        this._optionIds = '';
        /** The value of the select panel's transform-origin property. */
        this._transformOrigin = 'top';
        /** Whether the panel's animation is done. */
        this._panelDoneAnimating = false;
        /**
         * The x-offset of the overlay panel in relation to the trigger's top start corner.
         * This must be adjusted to align the selected option text over the trigger text when
         * the panel opens. Will change based on LTR or RTL text direction.
         */
        this._offsetX = 0;
        /**
         * The y-offset of the overlay panel in relation to the trigger's top start corner.
         * This must be adjusted to align the selected option text over the trigger text.
         * when the panel opens. Will change based on the y-position of the selected option.
         */
        this._offsetY = 0;
        /**
         * This position config ensures that the top "start" corner of the overlay
         * is aligned with with the top "start" of the origin by default (overlapping
         * the trigger completely). If the panel cannot fit below the trigger, it
         * will fall back to a position above the trigger.
         */
        this._positions = [
            {
                originX: 'start',
                originY: 'top',
                overlayX: 'start',
                overlayY: 'top',
            },
            {
                originX: 'start',
                originY: 'bottom',
                overlayX: 'start',
                overlayY: 'bottom',
            },
        ];
        this._floatPlaceholder = 'auto';
        /** Aria label of the select. If not specified, the placeholder will be used as label. */
        this.ariaLabel = '';
        /** Input that can be used to specify the `aria-labelledby` attribute. */
        this.ariaLabelledby = '';
        /** Event emitted when the select has been opened. */
        this.onOpen = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the select has been closed. */
        this.onClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the selected value has been changed by the user. */
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        if (this._control) {
            this._control.valueAccessor = this;
        }
        this._tabIndex = parseInt(tabIndex) || 0;
    }
    Object.defineProperty(MdSelect.prototype, "placeholder", {
        /**
         * Placeholder to be shown if no value has been selected.
         * @return {?}
         */
        get: function () { return this._placeholder; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            var _this = this;
            this._placeholder = value;
            // Must wait to record the trigger width to ensure placeholder width is included.
            Promise.resolve(null).then(function () { return _this._triggerWidth = _this._getWidth(); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "disabled", {
        /**
         * Whether the component is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "required", {
        /**
         * Whether the component is required.
         * @return {?}
         */
        get: function () { return this._required; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._required = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "multiple", {
        /**
         * Whether the user should be allowed to select multiple options.
         * @return {?}
         */
        get: function () { return this._multiple; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (this._selectionModel) {
                throw new MdSelectDynamicMultipleError();
            }
            this._multiple = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "floatPlaceholder", {
        /**
         * Whether to float the placeholder text.
         * @return {?}
         */
        get: function () { return this._floatPlaceholder; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._floatPlaceholder = value || 'auto';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "tabIndex", {
        /**
         * Tab index for the select element.
         * @return {?}
         */
        get: function () { return this._disabled ? -1 : this._tabIndex; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (typeof value !== 'undefined') {
                this._tabIndex = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "optionSelectionChanges", {
        /**
         * Combined stream of all of the child options' change events.
         * @return {?}
         */
        get: function () {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].merge.apply(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"], this.options.map(function (option) { return option.onSelectionChange; }));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdSelect.prototype.ngOnInit = function () {
        this._selectionModel = new SelectionModel(this.multiple, null, false);
    };
    /**
     * @return {?}
     */
    MdSelect.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._initKeyManager();
        this._changeSubscription = this.options.changes.startWith(null).subscribe(function () {
            _this._resetOptions();
            if (_this._control) {
                // Defer setting the value in order to avoid the "Expression
                // has changed after it was checked" errors from Angular.
                Promise.resolve(null).then(function () { return _this._setSelectionByValue(_this._control.value); });
            }
        });
    };
    /**
     * @return {?}
     */
    MdSelect.prototype.ngOnDestroy = function () {
        this._dropSubscriptions();
        if (this._changeSubscription) {
            this._changeSubscription.unsubscribe();
        }
        if (this._tabSubscription) {
            this._tabSubscription.unsubscribe();
        }
    };
    /**
     * Toggles the overlay panel open or closed.
     * @return {?}
     */
    MdSelect.prototype.toggle = function () {
        this.panelOpen ? this.close() : this.open();
    };
    /**
     * Opens the overlay panel.
     * @return {?}
     */
    MdSelect.prototype.open = function () {
        if (this.disabled || !this.options.length) {
            return;
        }
        this._calculateOverlayPosition();
        this._placeholderState = this._floatPlaceholderState();
        this._panelOpen = true;
    };
    /**
     * Closes the overlay panel and focuses the host element.
     * @return {?}
     */
    MdSelect.prototype.close = function () {
        if (this._panelOpen) {
            this._panelOpen = false;
            if (this._selectionModel.isEmpty()) {
                this._placeholderState = '';
            }
            this._focusHost();
        }
    };
    /**
     * Sets the select's value. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param {?} value New value to be written to the model.
     * @return {?}
     */
    MdSelect.prototype.writeValue = function (value) {
        if (this.options) {
            this._setSelectionByValue(value);
        }
    };
    /**
     * Saves a callback function to be invoked when the select's value
     * changes from user input. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the value changes.
     * @return {?}
     */
    MdSelect.prototype.registerOnChange = function (fn) {
        this._onChange = fn;
    };
    /**
     * Saves a callback function to be invoked when the select is blurred
     * by the user. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the component has been touched.
     * @return {?}
     */
    MdSelect.prototype.registerOnTouched = function (fn) {
        this._onTouched = fn;
    };
    /**
     * Disables the select. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param {?} isDisabled Sets whether the component is disabled.
     * @return {?}
     */
    MdSelect.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    Object.defineProperty(MdSelect.prototype, "panelOpen", {
        /**
         * Whether or not the overlay panel is open.
         * @return {?}
         */
        get: function () {
            return this._panelOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "selected", {
        /**
         * The currently selected option.
         * @return {?}
         */
        get: function () {
            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSelect.prototype, "triggerValue", {
        /**
         * The value displayed in the trigger.
         * @return {?}
         */
        get: function () {
            if (this._multiple) {
                var /** @type {?} */ selectedOptions = this._selectionModel.selected.map(function (option) { return option.viewValue; });
                if (this._isRtl()) {
                    selectedOptions.reverse();
                }
                // TODO(crisbeto): delimiter should be configurable for proper localization.
                return selectedOptions.join(', ');
            }
            return this._selectionModel.selected[0].viewValue;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Whether the element is in RTL mode.
     * @return {?}
     */
    MdSelect.prototype._isRtl = function () {
        return this._dir ? this._dir.value === 'rtl' : false;
    };
    /**
     * The width of the trigger element. This is necessary to match
     * the overlay width to the trigger width.
     * @return {?}
     */
    MdSelect.prototype._getWidth = function () {
        return this._getTriggerRect().width;
    };
    /**
     * Ensures the panel opens if activated by the keyboard.
     * @param {?} event
     * @return {?}
     */
    MdSelect.prototype._handleKeydown = function (event) {
        if (event.keyCode === ENTER || event.keyCode === SPACE) {
            this.open();
        }
    };
    /**
     * When the panel element is finished transforming in (though not fading in), it
     * emits an event and focuses an option if the panel is open.
     * @return {?}
     */
    MdSelect.prototype._onPanelDone = function () {
        if (this.panelOpen) {
            this._focusCorrectOption();
            this.onOpen.emit();
        }
        else {
            this.onClose.emit();
            this._panelDoneAnimating = false;
        }
    };
    /**
     * When the panel content is done fading in, the _panelDoneAnimating property is
     * set so the proper class can be added to the panel.
     * @return {?}
     */
    MdSelect.prototype._onFadeInDone = function () {
        this._panelDoneAnimating = this.panelOpen;
    };
    /**
     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will
     * "blur" to the panel when it opens, causing a false positive.
     * @return {?}
     */
    MdSelect.prototype._onBlur = function () {
        if (!this.panelOpen) {
            this._onTouched();
        }
    };
    /**
     * Sets the scroll position of the scroll container. This must be called after
     * the overlay pane is attached or the scroll container element will not yet be
     * present in the DOM.
     * @return {?}
     */
    MdSelect.prototype._setScrollTop = function () {
        var /** @type {?} */ scrollContainer = this.overlayDir.overlayRef.overlayElement.querySelector('.mat-select-panel');
        scrollContainer.scrollTop = this._scrollTop;
    };
    /**
     * Sets the selected option based on a value. If no option can be
     * found with the designated value, the select trigger is cleared.
     * @param {?} value
     * @return {?}
     */
    MdSelect.prototype._setSelectionByValue = function (value) {
        var _this = this;
        var /** @type {?} */ isArray = Array.isArray(value);
        if (this.multiple && value && !isArray) {
            throw new MdSelectNonArrayValueError();
        }
        if (isArray) {
            this._clearSelection();
            value.forEach(function (currentValue) { return _this._selectValue(currentValue); });
            this._sortValues();
        }
        else if (!this._selectValue(value)) {
            this._clearSelection();
        }
        this._setValueWidth();
        if (this._selectionModel.isEmpty()) {
            this._placeholderState = '';
        }
        this._changeDetectorRef.markForCheck();
    };
    /**
     * Finds and selects and option based on its value.
     * @param {?} value
     * @return {?} Option that has the corresponding value.
     */
    MdSelect.prototype._selectValue = function (value) {
        var /** @type {?} */ correspondingOption = this.options.find(function (option) { return option.value === value; });
        if (correspondingOption) {
            correspondingOption.select();
            this._selectionModel.select(correspondingOption);
        }
        return correspondingOption;
    };
    /**
     * Clears the select trigger and deselects every option in the list.
     * @param {?=} skip Option that should not be deselected.
     * @return {?}
     */
    MdSelect.prototype._clearSelection = function (skip) {
        this._selectionModel.clear();
        this.options.forEach(function (option) {
            if (option !== skip) {
                option.deselect();
            }
        });
    };
    /**
     * @return {?}
     */
    MdSelect.prototype._getTriggerRect = function () {
        return this.trigger.nativeElement.getBoundingClientRect();
    };
    /**
     * Sets up a key manager to listen to keyboard events on the overlay panel.
     * @return {?}
     */
    MdSelect.prototype._initKeyManager = function () {
        var _this = this;
        this._keyManager = new FocusKeyManager(this.options);
        this._tabSubscription = this._keyManager.tabOut.subscribe(function () { return _this.close(); });
    };
    /**
     * Drops current option subscriptions and IDs and resets from scratch.
     * @return {?}
     */
    MdSelect.prototype._resetOptions = function () {
        this._dropSubscriptions();
        this._listenToOptions();
        this._setOptionIds();
        this._setOptionMultiple();
    };
    /**
     * Listens to user-generated selection events on each option.
     * @return {?}
     */
    MdSelect.prototype._listenToOptions = function () {
        var _this = this;
        this._optionSubscription = this.optionSelectionChanges
            .filter(function (event) { return event.isUserInput; })
            .subscribe(function (event) {
            _this._onSelect(event.source);
            _this._setValueWidth();
            if (!_this.multiple) {
                _this.close();
            }
        });
    };
    /**
     * Invoked when an option is clicked.
     * @param {?} option
     * @return {?}
     */
    MdSelect.prototype._onSelect = function (option) {
        var /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);
        if (this.multiple) {
            this._selectionModel.toggle(option);
            wasSelected ? option.deselect() : option.select();
            this._sortValues();
        }
        else {
            this._clearSelection(option);
            this._selectionModel.select(option);
        }
        if (wasSelected !== this._selectionModel.isSelected(option)) {
            this._propagateChanges();
        }
    };
    /**
     * Sorts the model values, ensuring that they keep the same
     * order that they have in the panel.
     * @return {?}
     */
    MdSelect.prototype._sortValues = function () {
        var _this = this;
        if (this._multiple) {
            this._selectionModel.clear();
            this.options.forEach(function (option) {
                if (option.selected) {
                    _this._selectionModel.select(option);
                }
            });
        }
    };
    /**
     * Unsubscribes from all option subscriptions.
     * @return {?}
     */
    MdSelect.prototype._dropSubscriptions = function () {
        if (this._optionSubscription) {
            this._optionSubscription.unsubscribe();
            this._optionSubscription = null;
        }
    };
    /**
     * Emits change event to set the model value.
     * @return {?}
     */
    MdSelect.prototype._propagateChanges = function () {
        var /** @type {?} */ valueToEmit = Array.isArray(this.selected) ?
            this.selected.map(function (option) { return option.value; }) :
            this.selected.value;
        this._onChange(valueToEmit);
        this.change.emit(new MdSelectChange(this, valueToEmit));
    };
    /**
     * Records option IDs to pass to the aria-owns property.
     * @return {?}
     */
    MdSelect.prototype._setOptionIds = function () {
        this._optionIds = this.options.map(function (option) { return option.id; }).join(' ');
    };
    /**
     * Sets the `multiple` property on each option. The promise is necessary
     * in order to avoid Angular errors when modifying the property after init.
     * TODO: there should be a better way of doing this.
     * @return {?}
     */
    MdSelect.prototype._setOptionMultiple = function () {
        var _this = this;
        if (this.multiple) {
            Promise.resolve(null).then(function () {
                _this.options.forEach(function (option) { return option.multiple = _this.multiple; });
            });
        }
    };
    /**
     * Must set the width of the selected option's value programmatically
     * because it is absolutely positioned and otherwise will not clip
     * overflow. The selection arrow is 9px wide, add 4px of padding = 13
     * @return {?}
     */
    MdSelect.prototype._setValueWidth = function () {
        this._selectedValueWidth = this._triggerWidth - 13;
    };
    /**
     * Focuses the selected item. If no option is selected, it will focus
     * the first item instead.
     * @return {?}
     */
    MdSelect.prototype._focusCorrectOption = function () {
        if (this._selectionModel.isEmpty()) {
            this._keyManager.setFirstItemActive();
        }
        else {
            this._keyManager.setActiveItem(this._getOptionIndex(this._selectionModel.selected[0]));
        }
    };
    /**
     * Focuses the host element when the panel closes.
     * @return {?}
     */
    MdSelect.prototype._focusHost = function () {
        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');
    };
    /**
     * Gets the index of the provided option in the option list.
     * @param {?} option
     * @return {?}
     */
    MdSelect.prototype._getOptionIndex = function (option) {
        return this.options.reduce(function (result, current, index) {
            return result === undefined ? (option === current ? index : undefined) : result;
        }, undefined);
    };
    /**
     * Calculates the scroll position and x- and y-offsets of the overlay panel.
     * @return {?}
     */
    MdSelect.prototype._calculateOverlayPosition = function () {
        this._offsetX = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X : SELECT_PANEL_PADDING_X;
        if (!this._isRtl()) {
            this._offsetX *= -1;
        }
        var /** @type {?} */ panelHeight = Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);
        var /** @type {?} */ scrollContainerHeight = this.options.length * SELECT_OPTION_HEIGHT;
        // The farthest the panel can be scrolled before it hits the bottom
        var /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;
        if (this._selectionModel.hasValue()) {
            var /** @type {?} */ selectedIndex = this._getOptionIndex(this._selectionModel.selected[0]);
            // We must maintain a scroll buffer so the selected option will be scrolled to the
            // center of the overlay panel rather than the top.
            var /** @type {?} */ scrollBuffer = panelHeight / 2;
            this._scrollTop = this._calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll);
            this._offsetY = this._calculateOverlayOffset(selectedIndex, scrollBuffer, maxScroll);
        }
        else {
            // If no option is selected, the panel centers on the first option. In this case,
            // we must only adjust for the height difference between the option element
            // and the trigger element, then multiply it by -1 to ensure the panel moves
            // in the correct direction up the page.
            this._offsetY = (SELECT_OPTION_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2 * -1;
        }
        this._checkOverlayWithinViewport(maxScroll);
    };
    /**
     * Calculates the scroll position of the select's overlay panel.
     *
     * Attempts to center the selected option in the panel. If the option is
     * too high or too low in the panel to be scrolled to the center, it clamps the
     * scroll position to the min or max scroll positions respectively.
     * @param {?} selectedIndex
     * @param {?} scrollBuffer
     * @param {?} maxScroll
     * @return {?}
     */
    MdSelect.prototype._calculateOverlayScroll = function (selectedIndex, scrollBuffer, maxScroll) {
        var /** @type {?} */ optionOffsetFromScrollTop = SELECT_OPTION_HEIGHT * selectedIndex;
        var /** @type {?} */ halfOptionHeight = SELECT_OPTION_HEIGHT / 2;
        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the
        // scroll container, then subtracts the scroll buffer to scroll the option down to
        // the center of the overlay panel. Half the option height must be re-added to the
        // scrollTop so the option is centered based on its middle, not its top edge.
        var /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;
        return clampValue(0, optimalScrollPosition, maxScroll);
    };
    /**
     * Figures out the appropriate animation state for the placeholder.
     * @return {?}
     */
    MdSelect.prototype._getPlaceholderAnimationState = function () {
        if (this.floatPlaceholder === 'never') {
            return '';
        }
        if (this.floatPlaceholder === 'always') {
            return this._floatPlaceholderState();
        }
        return this._placeholderState;
    };
    /**
     * Determines the CSS `visibility` of the placeholder element.
     * @return {?}
     */
    MdSelect.prototype._getPlaceholderVisibility = function () {
        return (this.floatPlaceholder !== 'never' || this._selectionModel.isEmpty()) ?
            'visible' : 'hidden';
    };
    Object.defineProperty(MdSelect.prototype, "_ariaLabel", {
        /**
         * Returns the aria-label of the select component.
         * @return {?}
         */
        get: function () {
            // If an ariaLabelledby value has been set, the select should not overwrite the
            // `aria-labelledby` value by setting the ariaLabel to the placeholder.
            return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Calculates the y-offset of the select's overlay panel in relation to the
     * top start corner of the trigger. It has to be adjusted in order for the
     * selected option to be aligned over the trigger when the panel opens.
     * @param {?} selectedIndex
     * @param {?} scrollBuffer
     * @param {?} maxScroll
     * @return {?}
     */
    MdSelect.prototype._calculateOverlayOffset = function (selectedIndex, scrollBuffer, maxScroll) {
        var /** @type {?} */ optionOffsetFromPanelTop;
        if (this._scrollTop === 0) {
            optionOffsetFromPanelTop = selectedIndex * SELECT_OPTION_HEIGHT;
        }
        else if (this._scrollTop === maxScroll) {
            var /** @type {?} */ firstDisplayedIndex = this.options.length - SELECT_MAX_OPTIONS_DISPLAYED;
            var /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;
            // Because the panel height is longer than the height of the options alone,
            // there is always extra padding at the top or bottom of the panel. When
            // scrolled to the very bottom, this padding is at the top of the panel and
            // must be added to the offset.
            optionOffsetFromPanelTop =
                selectedDisplayIndex * SELECT_OPTION_HEIGHT + SELECT_PANEL_PADDING_Y;
        }
        else {
            // If the option was scrolled to the middle of the panel using a scroll buffer,
            // its offset will be the scroll buffer minus the half height that was added to
            // center it.
            optionOffsetFromPanelTop = scrollBuffer - SELECT_OPTION_HEIGHT / 2;
        }
        // The final offset is the option's offset from the top, adjusted for the height
        // difference, multiplied by -1 to ensure that the overlay moves in the correct
        // direction up the page.
        return optionOffsetFromPanelTop * -1 - SELECT_OPTION_HEIGHT_ADJUSTMENT;
    };
    /**
     * Checks that the attempted overlay position will fit within the viewport.
     * If it will not fit, tries to adjust the scroll position and the associated
     * y-offset so the panel can open fully on-screen. If it still won't fit,
     * sets the offset back to 0 to allow the fallback position to take over.
     * @param {?} maxScroll
     * @return {?}
     */
    MdSelect.prototype._checkOverlayWithinViewport = function (maxScroll) {
        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();
        var /** @type {?} */ triggerRect = this._getTriggerRect();
        var /** @type {?} */ topSpaceAvailable = triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;
        var /** @type {?} */ bottomSpaceAvailable = viewportRect.height - triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;
        var /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);
        var /** @type {?} */ totalPanelHeight = Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);
        var /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - triggerRect.height;
        if (panelHeightBottom > bottomSpaceAvailable) {
            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);
        }
        else if (panelHeightTop > topSpaceAvailable) {
            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);
        }
        else {
            this._transformOrigin = this._getOriginBasedOnOption();
        }
    };
    /**
     * Adjusts the overlay panel up to fit in the viewport.
     * @param {?} panelHeightBottom
     * @param {?} bottomSpaceAvailable
     * @return {?}
     */
    MdSelect.prototype._adjustPanelUp = function (panelHeightBottom, bottomSpaceAvailable) {
        var /** @type {?} */ distanceBelowViewport = panelHeightBottom - bottomSpaceAvailable;
        // Scrolls the panel up by the distance it was extending past the boundary, then
        // adjusts the offset by that amount to move the panel up into the viewport.
        this._scrollTop -= distanceBelowViewport;
        this._offsetY -= distanceBelowViewport;
        this._transformOrigin = this._getOriginBasedOnOption();
        // If the panel is scrolled to the very top, it won't be able to fit the panel
        // by scrolling, so set the offset to 0 to allow the fallback position to take
        // effect.
        if (this._scrollTop <= 0) {
            this._scrollTop = 0;
            this._offsetY = 0;
            this._transformOrigin = "50% bottom 0px";
        }
    };
    /**
     * Adjusts the overlay panel down to fit in the viewport.
     * @param {?} panelHeightTop
     * @param {?} topSpaceAvailable
     * @param {?} maxScroll
     * @return {?}
     */
    MdSelect.prototype._adjustPanelDown = function (panelHeightTop, topSpaceAvailable, maxScroll) {
        var /** @type {?} */ distanceAboveViewport = panelHeightTop - topSpaceAvailable;
        // Scrolls the panel down by the distance it was extending past the boundary, then
        // adjusts the offset by that amount to move the panel down into the viewport.
        this._scrollTop += distanceAboveViewport;
        this._offsetY += distanceAboveViewport;
        this._transformOrigin = this._getOriginBasedOnOption();
        // If the panel is scrolled to the very bottom, it won't be able to fit the
        // panel by scrolling, so set the offset to 0 to allow the fallback position
        // to take effect.
        if (this._scrollTop >= maxScroll) {
            this._scrollTop = maxScroll;
            this._offsetY = 0;
            this._transformOrigin = "50% top 0px";
            return;
        }
    };
    /**
     * Sets the transform origin point based on the selected option.
     * @return {?}
     */
    MdSelect.prototype._getOriginBasedOnOption = function () {
        var /** @type {?} */ originY = Math.abs(this._offsetY) - SELECT_OPTION_HEIGHT_ADJUSTMENT + SELECT_OPTION_HEIGHT / 2;
        return "50% " + originY + "px 0px";
    };
    /**
     * Figures out the floating placeholder state value.
     * @return {?}
     */
    MdSelect.prototype._floatPlaceholderState = function () {
        return this._isRtl() ? 'floating-rtl' : 'floating-ltr';
    };
    return MdSelect;
}());
MdSelect.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-select, mat-select',
                template: "<div class=\"mat-select-trigger\" cdk-overlay-origin (click)=\"toggle()\" #origin=\"cdkOverlayOrigin\" #trigger> <span class=\"mat-select-placeholder\" [class.mat-floating-placeholder]=\"_selectionModel.hasValue()\" [@transformPlaceholder]=\"_getPlaceholderAnimationState()\" [style.visibility]=\"_getPlaceholderVisibility()\" [style.width.px]=\"_selectedValueWidth\"> {{ placeholder }} </span> <span class=\"mat-select-value\" *ngIf=\"_selectionModel.hasValue()\"> <span class=\"mat-select-value-text\">{{ triggerValue }}</span> </span> <span class=\"mat-select-arrow\"></span> <span class=\"mat-select-underline\"></span> </div> <ng-template cdk-connected-overlay [origin]=\"origin\" [open]=\"panelOpen\" hasBackdrop (backdropClick)=\"close()\" backdropClass=\"cdk-overlay-transparent-backdrop\" [positions]=\"_positions\" [minWidth]=\"_triggerWidth\" [offsetY]=\"_offsetY\" [offsetX]=\"_offsetX\" (attach)=\"_setScrollTop()\"> <div class=\"mat-select-panel\" [@transformPanel]=\"'showing'\" (@transformPanel.done)=\"_onPanelDone()\" (keydown)=\"_keyManager.onKeydown($event)\" [style.transformOrigin]=\"_transformOrigin\" [class.mat-select-panel-done-animating]=\"_panelDoneAnimating\"> <div class=\"mat-select-content\" [@fadeInContent]=\"'showing'\" (@fadeInContent.done)=\"_onFadeInDone()\"> <ng-content></ng-content> </div> </div> </ng-template> ",
                styles: [".mat-select{display:inline-block;outline:0;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-select-trigger{display:flex;align-items:center;height:30px;min-width:112px;cursor:pointer;position:relative;box-sizing:border-box;font-size:16px}[aria-disabled=true] .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-underline{position:absolute;bottom:0;left:0;right:0;height:1px}[aria-disabled=true] .mat-select-underline{background-image:linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background-size:4px 1px;background-repeat:repeat-x;background-color:transparent;background-position:0 bottom}.mat-select-placeholder{position:relative;padding:0 2px;transform-origin:left top;flex-grow:1}.mat-select-placeholder.mat-floating-placeholder{top:-22px;left:-2px;text-align:left;transform:scale(.75)}[dir=rtl] .mat-select-placeholder{transform-origin:right top}[dir=rtl] .mat-select-placeholder.mat-floating-placeholder{left:2px;text-align:right}[aria-required=true] .mat-select-placeholder::after{content:'*'}.mat-select-value{position:absolute;max-width:calc(100% - 18px);flex-grow:1;top:0;left:0;bottom:0;display:flex;align-items:center}[dir=rtl] .mat-select-value{left:auto;right:0}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:30px}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%}@media screen and (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}} /*# sourceMappingURL=select.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                host: {
                    'role': 'listbox',
                    '[attr.tabindex]': 'tabIndex',
                    '[attr.aria-label]': '_ariaLabel',
                    '[attr.aria-labelledby]': 'ariaLabelledby',
                    '[attr.aria-required]': 'required.toString()',
                    '[attr.aria-disabled]': 'disabled.toString()',
                    '[attr.aria-invalid]': '_control?.invalid || "false"',
                    '[attr.aria-owns]': '_optionIds',
                    '[class.mat-select-disabled]': 'disabled',
                    '[class.mat-select]': 'true',
                    '(keydown)': '_handleKeydown($event)',
                    '(blur)': '_onBlur()'
                },
                animations: [
                    transformPlaceholder,
                    transformPanel,
                    fadeInContent
                ],
                exportAs: 'mdSelect',
            },] },
];
/**
 * @nocollapse
 */
MdSelect.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: ViewportRuler, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["C" /* ChangeDetectorRef */], },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["d" /* NgControl */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */], args: ['tabindex',] },] },
]; };
MdSelect.propDecorators = {
    'trigger': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['trigger',] },],
    'overlayDir': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [ConnectedOverlayDirective,] },],
    'options': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdOption,] },],
    'placeholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'multiple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'floatPlaceholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-label',] },],
    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-labelledby',] },],
    'onOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'onClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
/**
 * Clamps a value n between min and max values.
 * @param {?} min
 * @param {?} n
 * @param {?} max
 * @return {?}
 */
function clampValue(min, n, max) {
    return Math.min(Math.max(min, n), max);
}
var MdSelectModule = (function () {
    function MdSelectModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdSelectModule.forRoot = function () {
        return {
            ngModule: MdSelectModule,
            providers: []
        };
    };
    return MdSelectModule;
}());
MdSelectModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */],
                    OverlayModule,
                    MdOptionModule,
                    CompatibilityModule,
                ],
                exports: [MdSelect, MdOptionModule, CompatibilityModule],
                declarations: [MdSelect],
            },] },
];
/**
 * @nocollapse
 */
MdSelectModule.ctorParameters = function () { return []; };
var MD_SLIDE_TOGGLE_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["c" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdSlideToggle; }),
    multi: true
};
var MdSlideToggleChange = (function () {
    function MdSlideToggleChange() {
    }
    return MdSlideToggleChange;
}());
// Increasing integer for generating unique ids for slide-toggle components.
var nextId$1 = 0;
/**
 * Two-state control, which can be also called `switch`.
 */
var MdSlideToggle = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _renderer
     * @param {?} _focusOriginMonitor
     */
    function MdSlideToggle(_elementRef, _renderer, _focusOriginMonitor) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._focusOriginMonitor = _focusOriginMonitor;
        this.onChange = function (_) { };
        this.onTouched = function () { };
        this._uniqueId = "md-slide-toggle-" + ++nextId$1;
        this._checked = false;
        this._isMousedown = false;
        this._slideRenderer = null;
        this._disabled = false;
        this._required = false;
        this._disableRipple = false;
        /** Name value will be applied to the input element if present */
        this.name = null;
        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */
        this.id = this._uniqueId;
        /** Used to specify the tabIndex value for the underlying input element. */
        this.tabIndex = 0;
        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after' */
        this.labelPosition = 'after';
        /** Used to set the aria-label attribute on the underlying input element. */
        this.ariaLabel = null;
        /** Used to set the aria-labelledby attribute on the underlying input element. */
        this.ariaLabelledby = null;
        this._change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** An event will be dispatched each time the slide-toggle changes its value. */
        this.change = this._change.asObservable();
    }
    Object.defineProperty(MdSlideToggle.prototype, "disabled", {
        /**
         * Whether the slide-toggle is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlideToggle.prototype, "required", {
        /**
         * Whether the slide-toggle is required.
         * @return {?}
         */
        get: function () { return this._required; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._required = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlideToggle.prototype, "disableRipple", {
        /**
         * Whether the ripple effect for this slide-toggle is disabled.
         * @return {?}
         */
        get: function () { return this._disableRipple; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlideToggle.prototype, "inputId", {
        /**
         * Returns the unique id for the visual hidden input.
         * @return {?}
         */
        get: function () { return (this.id || this._uniqueId) + "-input"; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdSlideToggle.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._slideRenderer = new SlideToggleRenderer(this._elementRef);
        this._focusOriginMonitor
            .monitor(this._inputElement.nativeElement, this._renderer, false)
            .subscribe(function (focusOrigin) { return _this._onInputFocusChange(focusOrigin); });
    };
    /**
     * @return {?}
     */
    MdSlideToggle.prototype.ngOnDestroy = function () {
        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);
    };
    /**
     * The onChangeEvent method will be also called on click.
     * This is because everything for the slide-toggle is wrapped inside of a label,
     * which triggers a onChange event on click.
     * @param {?} event
     * @return {?}
     */
    MdSlideToggle.prototype._onChangeEvent = function (event) {
        // We always have to stop propagation on the change event.
        // Otherwise the change event, from the input element, will bubble up and
        // emit its event object to the component's `change` output.
        event.stopPropagation();
        // Once a drag is currently in progress, we do not want to toggle the slide-toggle on a click.
        if (!this.disabled && !this._slideRenderer.dragging) {
            this.toggle();
            // Emit our custom change event if the native input emitted one.
            // It is important to only emit it, if the native input triggered one, because
            // we don't want to trigger a change event, when the `checked` variable changes for example.
            this._emitChangeEvent();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdSlideToggle.prototype._onInputClick = function (event) {
        this.onTouched();
        // We have to stop propagation for click events on the visual hidden input element.
        // By default, when a user clicks on a label element, a generated click event will be
        // dispatched on the associated input element. Since we are using a label element as our
        // root container, the click event on the `slide-toggle` will be executed twice.
        // The real click event will bubble up, and the generated click event also tries to bubble up.
        // This will lead to multiple click events.
        // Preventing bubbling for the second event will solve that issue.
        event.stopPropagation();
    };
    /**
     * @return {?}
     */
    MdSlideToggle.prototype._setMousedown = function () {
        var _this = this;
        // We only *show* the focus style when focus has come to the button via the keyboard.
        // The Material Design spec is silent on this topic, and without doing this, the
        // button continues to look :active after clicking.
        // @see http://marcysutton.com/button-focus-hell/
        this._isMousedown = true;
        setTimeout(function () { return _this._isMousedown = false; }, 100);
    };
    /**
     * Implemented as part of ControlValueAccessor.
     * @param {?} value
     * @return {?}
     */
    MdSlideToggle.prototype.writeValue = function (value) {
        this.checked = value;
    };
    /**
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn
     * @return {?}
     */
    MdSlideToggle.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    /**
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn
     * @return {?}
     */
    MdSlideToggle.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    /**
     * Implemented as a part of ControlValueAccessor.
     * @param {?} isDisabled
     * @return {?}
     */
    MdSlideToggle.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    /**
     * Focuses the slide-toggle.
     * @return {?}
     */
    MdSlideToggle.prototype.focus = function () {
        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'program');
    };
    Object.defineProperty(MdSlideToggle.prototype, "checked", {
        /**
         * Whether the slide-toggle is checked.
         * @return {?}
         */
        get: function () { return !!this._checked; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (this.checked !== !!value) {
                this._checked = value;
                this.onChange(this._checked);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlideToggle.prototype, "color", {
        /**
         * The color of the slide-toggle. Can be primary, accent, or warn.
         * @return {?}
         */
        get: function () { return this._color; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._updateColor(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Toggles the checked state of the slide-toggle.
     * @return {?}
     */
    MdSlideToggle.prototype.toggle = function () {
        this.checked = !this.checked;
    };
    /**
     * Function is called whenever the focus changes for the input element.
     * @param {?} focusOrigin
     * @return {?}
     */
    MdSlideToggle.prototype._onInputFocusChange = function (focusOrigin) {
        if (!this._focusRipple && focusOrigin === 'keyboard') {
            // For keyboard focus show a persistent ripple as focus indicator.
            this._focusRipple = this._ripple.launch(0, 0, { persistent: true, centered: true });
        }
        else if (!focusOrigin) {
            this.onTouched();
            // Fade out and clear the focus ripple if one is currently present.
            if (this._focusRipple) {
                this._focusRipple.fadeOut();
                this._focusRipple = null;
            }
        }
    };
    /**
     * @param {?} newColor
     * @return {?}
     */
    MdSlideToggle.prototype._updateColor = function (newColor) {
        this._setElementColor(this._color, false);
        this._setElementColor(newColor, true);
        this._color = newColor;
    };
    /**
     * @param {?} color
     * @param {?} isAdd
     * @return {?}
     */
    MdSlideToggle.prototype._setElementColor = function (color, isAdd) {
        if (color != null && color != '') {
            this._renderer.setElementClass(this._elementRef.nativeElement, "mat-" + color, isAdd);
        }
    };
    /**
     * Emits the change event to the `change` output EventEmitter
     * @return {?}
     */
    MdSlideToggle.prototype._emitChangeEvent = function () {
        var /** @type {?} */ event = new MdSlideToggleChange();
        event.source = this;
        event.checked = this.checked;
        this._change.emit(event);
    };
    /**
     * @return {?}
     */
    MdSlideToggle.prototype._onDragStart = function () {
        if (!this.disabled) {
            this._slideRenderer.startThumbDrag(this.checked);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdSlideToggle.prototype._onDrag = function (event) {
        if (this._slideRenderer.dragging) {
            this._slideRenderer.updateThumbPosition(event.deltaX);
        }
    };
    /**
     * @return {?}
     */
    MdSlideToggle.prototype._onDragEnd = function () {
        var _this = this;
        if (this._slideRenderer.dragging) {
            var /** @type {?} */ _previousChecked = this.checked;
            this.checked = this._slideRenderer.dragPercentage > 50;
            if (_previousChecked !== this.checked) {
                this._emitChangeEvent();
            }
            // The drag should be stopped outside of the current event handler, because otherwise the
            // click event will be fired before and will revert the drag change.
            setTimeout(function () { return _this._slideRenderer.stopThumbDrag(); });
        }
    };
    return MdSlideToggle;
}());
MdSlideToggle.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-slide-toggle, mat-slide-toggle',
                host: {
                    '[class.mat-slide-toggle]': 'true',
                    '[class.mat-checked]': 'checked',
                    '[class.mat-disabled]': 'disabled',
                    '[class.mat-slide-toggle-label-before]': 'labelPosition == "before"',
                    '(mousedown)': '_setMousedown()'
                },
                template: "<label class=\"mat-slide-toggle-label\" #label> <div class=\"mat-slide-toggle-bar\"> <input #input class=\"mat-slide-toggle-input cdk-visually-hidden\" type=\"checkbox\" [id]=\"inputId\" [required]=\"required\" [tabIndex]=\"tabIndex\" [checked]=\"checked\" [disabled]=\"disabled\" [attr.name]=\"name\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" (change)=\"_onChangeEvent($event)\" (click)=\"_onInputClick($event)\"> <div class=\"mat-slide-toggle-thumb-container\" (slidestart)=\"_onDragStart()\" (slide)=\"_onDrag($event)\" (slideend)=\"_onDragEnd()\"> <div class=\"mat-slide-toggle-thumb\"></div> <div class=\"mat-slide-toggle-ripple\" md-ripple [mdRippleTrigger]=\"label\" [mdRippleCentered]=\"true\" [mdRippleDisabled]=\"disableRipple || disabled\"> </div> </div> </div> <span class=\"mat-slide-toggle-content\"> <ng-content></ng-content> </span> </label> ",
                styles: [".mat-slide-toggle{display:inline-block;height:24px;line-height:24px;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px,0,0)}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-content{font-size:14px;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:500}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;cursor:pointer}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}.mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-right:8px;margin-left:0}.mat-slide-toggle-label-before .mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0,0,0);transition:all 80ms linear;transition-property:transform;cursor:-webkit-grab;cursor:grab}.mat-slide-toggle-thumb-container.mat-dragging{transition-duration:0s}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-slide-toggle-thumb{background:#fff;border:solid 1px #000}}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;border-radius:8px}@media screen and (-ms-high-contrast:active){.mat-slide-toggle-bar{background:#fff}}.mat-slide-toggle-input{bottom:0;left:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}.mat-slide-toggle-ripple{position:absolute;top:-13px;left:-13px;height:46px;width:46px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=slide-toggle.css.map */ "],
                providers: [MD_SLIDE_TOGGLE_VALUE_ACCESSOR],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush
            },] },
];
/**
 * @nocollapse
 */
MdSlideToggle.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: FocusOriginMonitor, },
]; };
MdSlideToggle.propDecorators = {
    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-label',] },],
    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-labelledby',] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['input',] },],
    '_ripple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [MdRipple,] },],
    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * Renderer for the Slide Toggle component, which separates DOM modification in its own class
 */
var SlideToggleRenderer = (function () {
    /**
     * @param {?} _elementRef
     */
    function SlideToggleRenderer(_elementRef) {
        this._elementRef = _elementRef;
        /** Whether the thumb is currently being dragged. */
        this.dragging = false;
        this._thumbEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-thumb-container');
        this._thumbBarEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-bar');
    }
    /**
     * Initializes the drag of the slide-toggle.
     * @param {?} checked
     * @return {?}
     */
    SlideToggleRenderer.prototype.startThumbDrag = function (checked) {
        if (this.dragging) {
            return;
        }
        this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;
        this._thumbEl.classList.add('mat-dragging');
        this._previousChecked = checked;
        this.dragging = true;
    };
    /**
     * Resets the current drag and returns the new checked value.
     * @return {?}
     */
    SlideToggleRenderer.prototype.stopThumbDrag = function () {
        if (!this.dragging) {
            return;
        }
        this.dragging = false;
        this._thumbEl.classList.remove('mat-dragging');
        // Reset the transform because the component will take care of the thumb position after drag.
        applyCssTransform(this._thumbEl, '');
        return this.dragPercentage > 50;
    };
    /**
     * Updates the thumb containers position from the specified distance.
     * @param {?} distance
     * @return {?}
     */
    SlideToggleRenderer.prototype.updateThumbPosition = function (distance) {
        this.dragPercentage = this._getDragPercentage(distance);
        // Calculate the moved distance based on the thumb bar width.
        var /** @type {?} */ dragX = (this.dragPercentage / 100) * this._thumbBarWidth;
        applyCssTransform(this._thumbEl, "translate3d(" + dragX + "px, 0, 0)");
    };
    /**
     * Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100.
     * @param {?} distance
     * @return {?}
     */
    SlideToggleRenderer.prototype._getDragPercentage = function (distance) {
        var /** @type {?} */ percentage = (distance / this._thumbBarWidth) * 100;
        // When the toggle was initially checked, then we have to start the drag at the end.
        if (this._previousChecked) {
            percentage += 100;
        }
        return Math.max(0, Math.min(percentage, 100));
    };
    return SlideToggleRenderer;
}());
var MdSlideToggleModule = (function () {
    function MdSlideToggleModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdSlideToggleModule.forRoot = function () {
        return {
            ngModule: MdSlideToggleModule,
            providers: []
        };
    };
    return MdSlideToggleModule;
}());
MdSlideToggleModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_8__angular_forms__["a" /* FormsModule */], MdRippleModule, CompatibilityModule],
                exports: [MdSlideToggle, CompatibilityModule],
                declarations: [MdSlideToggle],
                providers: [
                    FOCUS_ORIGIN_MONITOR_PROVIDER,
                    { provide: __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["d" /* HAMMER_GESTURE_CONFIG */], useClass: GestureConfig }
                ],
            },] },
];
/**
 * @nocollapse
 */
MdSlideToggleModule.ctorParameters = function () { return []; };
/**
 * Visually, a 30px separation between tick marks looks best. This is very subjective but it is
 * the default separation we chose.
 */
var MIN_AUTO_TICK_SEPARATION = 30;
/** The thumb gap size for a disabled slider. */
var DISABLED_THUMB_GAP = 7;
/** The thumb gap size for a non-active slider at its minimum value. */
var MIN_VALUE_NONACTIVE_THUMB_GAP = 7;
/** The thumb gap size for an active slider at its minimum value. */
var MIN_VALUE_ACTIVE_THUMB_GAP = 10;
/**
 * Provider Expression that allows md-slider to register as a ControlValueAccessor.
 * This allows it to support [(ngModel)] and [formControl].
 */
var MD_SLIDER_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["c" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdSlider; }),
    multi: true
};
/**
 * A simple change event emitted by the MdSlider component.
 */
var MdSliderChange = (function () {
    function MdSliderChange() {
    }
    return MdSliderChange;
}());
/**
 * Allows users to select from a range of values by moving the slider thumb. It is similar in
 * behavior to the native `<input type="range">` element.
 */
var MdSlider = (function () {
    /**
     * @param {?} renderer
     * @param {?} _elementRef
     * @param {?} _focusOriginMonitor
     * @param {?} _dir
     */
    function MdSlider(renderer, _elementRef, _focusOriginMonitor, _dir) {
        var _this = this;
        this._elementRef = _elementRef;
        this._focusOriginMonitor = _focusOriginMonitor;
        this._dir = _dir;
        this._disabled = false;
        this._invert = false;
        this._max = 100;
        this._min = 0;
        this._step = 1;
        this._thumbLabel = false;
        this._tickInterval = 0;
        this._value = null;
        this._vertical = false;
        this.color = 'accent';
        /** Event emitted when the slider value has changed. */
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the slider thumb moves. */
        this.input = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */
        this.onTouched = function () { };
        this._percent = 0;
        /**
         * Whether or not the thumb is sliding.
         * Used to determine if there should be a transition for the thumb and fill track.
         */
        this._isSliding = false;
        /**
         * Whether or not the slider is active (clicked or sliding).
         * Used to shrink and grow the thumb as according to the Material Design spec.
         */
        this._isActive = false;
        this._tickIntervalPercent = 0;
        this._renderer = null;
        this._sliderDimensions = null;
        this._controlValueAccessorChangeFn = function () { };
        this._lastChangeValue = null;
        this._lastInputValue = null;
        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, renderer, true)
            .subscribe(function (origin) { return _this._isActive = !!origin && origin !== 'keyboard'; });
        this._renderer = new SliderRenderer(this._elementRef);
    }
    Object.defineProperty(MdSlider.prototype, "disabled", {
        /**
         * Whether or not the slider is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "invert", {
        /**
         * Whether the slider is inverted.
         * @return {?}
         */
        get: function () { return this._invert; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._invert = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "max", {
        /**
         * The maximum value that the slider can have.
         * @return {?}
         */
        get: function () {
            return this._max;
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this._max = coerceNumberProperty(v, this._max);
            this._percent = this._calculatePercentage(this._value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "min", {
        /**
         * The minimum value that the slider can have.
         * @return {?}
         */
        get: function () {
            return this._min;
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this._min = coerceNumberProperty(v, this._min);
            // If the value wasn't explicitly set by the user, set it to the min.
            if (this._value === null) {
                this.value = this._min;
            }
            this._percent = this._calculatePercentage(this._value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "step", {
        /**
         * The values at which the thumb will snap.
         * @return {?}
         */
        get: function () { return this._step; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this._step = coerceNumberProperty(v, this._step);
            if (this._step % 1 !== 0) {
                this._roundLabelTo = this._step.toString().split('.').pop().length;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "thumbLabel", {
        /**
         * Whether or not to show the thumb label.
         * @return {?}
         */
        get: function () { return this._thumbLabel; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._thumbLabel = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_thumbLabelDeprecated", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this._thumbLabel; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._thumbLabel = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "tickInterval", {
        /**
         * How often to show ticks. Relative to the step so that a tick always appears on a step.
         * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).
         * @return {?}
         */
        get: function () { return this._tickInterval; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (value === 'auto') {
                this._tickInterval = 'auto';
            }
            else if (typeof value === 'number' || typeof value === 'string') {
                this._tickInterval = coerceNumberProperty(value, /** @type {?} */ (this._tickInterval));
            }
            else {
                this._tickInterval = 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_tickIntervalDeprecated", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this.tickInterval; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.tickInterval = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "value", {
        /**
         * Value of the slider.
         * @return {?}
         */
        get: function () {
            // If the value needs to be read and it is still uninitialized, initialize it to the min.
            if (this._value === null) {
                this.value = this._min;
            }
            return this._value;
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this._value = coerceNumberProperty(v, this._value);
            this._percent = this._calculatePercentage(this._value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "vertical", {
        /**
         * Whether the slider is vertical.
         * @return {?}
         */
        get: function () { return this._vertical; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._vertical = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "displayValue", {
        /**
         * The value to be used for display purposes.
         * @return {?}
         */
        get: function () {
            // Note that this could be improved further by rounding something like 0.999 to 1 or
            // 0.899 to 0.9, however it is very performance sensitive, because it gets called on
            // every change detection cycle.
            if (this._roundLabelTo && this.value % 1 !== 0) {
                return this.value.toFixed(this._roundLabelTo);
            }
            return this.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "percent", {
        /**
         * The percentage of the slider that coincides with the value.
         * @return {?}
         */
        get: function () { return this._clamp(this._percent); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_invertAxis", {
        /**
         * Whether the axis of the slider is inverted.
         * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).
         * @return {?}
         */
        get: function () {
            // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to
            // top. However from a y-axis standpoint this is inverted.
            return this.vertical ? !this.invert : this.invert;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_isMinValue", {
        /**
         * Whether the slider is at its minimum value.
         * @return {?}
         */
        get: function () {
            return this.percent === 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_thumbGap", {
        /**
         * The amount of space to leave between the slider thumb and the track fill & track background
         * elements.
         * @return {?}
         */
        get: function () {
            if (this.disabled) {
                return DISABLED_THUMB_GAP;
            }
            if (this._isMinValue && !this.thumbLabel) {
                return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_trackBackgroundStyles", {
        /**
         * CSS styles for the track background element.
         * @return {?}
         */
        get: function () {
            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';
            var /** @type {?} */ sign = this._invertMouseCoords ? '-' : '';
            return {
                'transform': "translate" + axis + "(" + sign + this._thumbGap + "px) scale" + axis + "(" + (1 - this.percent) + ")"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_trackFillStyles", {
        /**
         * CSS styles for the track fill element.
         * @return {?}
         */
        get: function () {
            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';
            var /** @type {?} */ sign = this._invertMouseCoords ? '' : '-';
            return {
                'transform': "translate" + axis + "(" + sign + this._thumbGap + "px) scale" + axis + "(" + this.percent + ")"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_ticksContainerStyles", {
        /**
         * CSS styles for the ticks container element.
         * @return {?}
         */
        get: function () {
            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';
            // For a horizontal slider in RTL languages we push the ticks container off the left edge
            // instead of the right edge to avoid causing a horizontal scrollbar to appear.
            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '' : '-';
            var /** @type {?} */ offset = this._tickIntervalPercent / 2 * 100;
            return {
                'transform': "translate" + axis + "(" + sign + offset + "%)"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_ticksStyles", {
        /**
         * CSS styles for the ticks element.
         * @return {?}
         */
        get: function () {
            var /** @type {?} */ tickSize = this._tickIntervalPercent * 100;
            var /** @type {?} */ backgroundSize = this.vertical ? "2px " + tickSize + "%" : tickSize + "% 2px";
            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';
            // Depending on the direction we pushed the ticks container, push the ticks the opposite
            // direction to re-center them but clip off the end edge. In RTL languages we need to flip the
            // ticks 180 degrees so we're really cutting off the end edge abd not the start.
            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '-' : '';
            var /** @type {?} */ rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';
            var /** @type {?} */ styles = {
                'backgroundSize': backgroundSize,
                // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.
                'transform': "translateZ(0) translate" + axis + "(" + sign + tickSize / 2 + "%)" + rotate
            };
            if (this._isMinValue && this._thumbGap) {
                var /** @type {?} */ side = this.vertical ?
                    (this._invertAxis ? 'Bottom' : 'Top') :
                    (this._invertAxis ? 'Right' : 'Left');
                styles["padding" + side] = this._thumbGap + "px";
            }
            return styles;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_thumbContainerStyles", {
        /**
         * @return {?}
         */
        get: function () {
            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';
            // For a horizontal slider in RTL languages we push the thumb container off the left edge
            // instead of the right edge to avoid causing a horizontal scrollbar to appear.
            var /** @type {?} */ invertOffset = (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;
            var /** @type {?} */ offset = (invertOffset ? this.percent : 1 - this.percent) * 100;
            return {
                'transform': "translate" + axis + "(-" + offset + "%)"
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_invertMouseCoords", {
        /**
         * Whether mouse events should be converted to a slider position by calculating their distance
         * from the right or bottom edge of the slider as opposed to the top or left.
         * @return {?}
         */
        get: function () {
            return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSlider.prototype, "_direction", {
        /**
         * The language direction for this slider element.
         * @return {?}
         */
        get: function () {
            return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdSlider.prototype.ngOnDestroy = function () {
        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);
    };
    /**
     * @return {?}
     */
    MdSlider.prototype._onMouseenter = function () {
        if (this.disabled) {
            return;
        }
        // We save the dimensions of the slider here so we can use them to update the spacing of the
        // ticks and determine where on the slider click and slide events happen.
        this._sliderDimensions = this._renderer.getSliderDimensions();
        this._updateTickIntervalPercent();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdSlider.prototype._onClick = function (event) {
        if (this.disabled) {
            return;
        }
        this._isSliding = false;
        this._renderer.addFocus();
        this._updateValueFromPosition({ x: event.clientX, y: event.clientY });
        /* Emits a change and input event if the value changed. */
        this._emitInputEvent();
        this._emitValueIfChanged();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdSlider.prototype._onSlide = function (event) {
        if (this.disabled) {
            return;
        }
        // Prevent the slide from selecting anything else.
        event.preventDefault();
        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });
        // Native range elements always emit `input` events when the value changed while sliding.
        this._emitInputEvent();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdSlider.prototype._onSlideStart = function (event) {
        if (this.disabled) {
            return;
        }
        // Simulate mouseenter in case this is a mobile device.
        this._onMouseenter();
        event.preventDefault();
        this._isSliding = true;
        this._renderer.addFocus();
        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });
    };
    /**
     * @return {?}
     */
    MdSlider.prototype._onSlideEnd = function () {
        this._isSliding = false;
        this._emitValueIfChanged();
    };
    /**
     * @return {?}
     */
    MdSlider.prototype._onFocus = function () {
        // We save the dimensions of the slider here so we can use them to update the spacing of the
        // ticks and determine where on the slider click and slide events happen.
        this._sliderDimensions = this._renderer.getSliderDimensions();
        this._updateTickIntervalPercent();
    };
    /**
     * @return {?}
     */
    MdSlider.prototype._onBlur = function () {
        this.onTouched();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdSlider.prototype._onKeydown = function (event) {
        if (this.disabled) {
            return;
        }
        switch (event.keyCode) {
            case PAGE_UP:
                this._increment(10);
                break;
            case PAGE_DOWN:
                this._increment(-10);
                break;
            case END:
                this.value = this.max;
                break;
            case HOME:
                this.value = this.min;
                break;
            case LEFT_ARROW:
                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an
                // inverted slider the thumb moves in that direction. However for a blind user, nothing
                // about the slider indicates that it is inverted. They will expect left to be decrement,
                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably
                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for
                // RTL. For inverted sliders we prefer a good a11y experience to having it "look right" for
                // sighted users, therefore we do not swap the meaning.
                this._increment(this._direction == 'rtl' ? 1 : -1);
                break;
            case UP_ARROW:
                this._increment(1);
                break;
            case RIGHT_ARROW:
                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.
                this._increment(this._direction == 'rtl' ? -1 : 1);
                break;
            case DOWN_ARROW:
                this._increment(-1);
                break;
            default:
                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on
                // it.
                return;
        }
        this._isSliding = true;
        event.preventDefault();
    };
    /**
     * @return {?}
     */
    MdSlider.prototype._onKeyup = function () {
        this._isSliding = false;
    };
    /**
     * Increments the slider by the given number of steps (negative number decrements).
     * @param {?} numSteps
     * @return {?}
     */
    MdSlider.prototype._increment = function (numSteps) {
        this.value = this._clamp(this.value + this.step * numSteps, this.min, this.max);
        this._emitInputEvent();
        this._emitValueIfChanged();
    };
    /**
     * Calculate the new value from the new physical location. The value will always be snapped.
     * @param {?} pos
     * @return {?}
     */
    MdSlider.prototype._updateValueFromPosition = function (pos) {
        if (!this._sliderDimensions) {
            return;
        }
        var /** @type {?} */ offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;
        var /** @type {?} */ size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;
        var /** @type {?} */ posComponent = this.vertical ? pos.y : pos.x;
        // The exact value is calculated from the event and used to find the closest snap value.
        var /** @type {?} */ percent = this._clamp((posComponent - offset) / size);
        if (this._invertMouseCoords) {
            percent = 1 - percent;
        }
        var /** @type {?} */ exactValue = this._calculateValue(percent);
        // This calculation finds the closest step by finding the closest whole number divisible by the
        // step relative to the min.
        var /** @type {?} */ closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;
        // The value needs to snap to the min and max.
        this.value = this._clamp(closestValue, this.min, this.max);
    };
    /**
     * Emits a change event if the current value is different from the last emitted value.
     * @return {?}
     */
    MdSlider.prototype._emitValueIfChanged = function () {
        if (this.value != this._lastChangeValue) {
            var /** @type {?} */ event = this._createChangeEvent();
            this._lastChangeValue = this.value;
            this._controlValueAccessorChangeFn(this.value);
            this.change.emit(event);
        }
    };
    /**
     * Emits an input event when the current value is different from the last emitted value.
     * @return {?}
     */
    MdSlider.prototype._emitInputEvent = function () {
        if (this.value != this._lastInputValue) {
            var /** @type {?} */ event = this._createChangeEvent();
            this._lastInputValue = this.value;
            this.input.emit(event);
        }
    };
    /**
     * Updates the amount of space between ticks as a percentage of the width of the slider.
     * @return {?}
     */
    MdSlider.prototype._updateTickIntervalPercent = function () {
        if (!this.tickInterval) {
            return;
        }
        if (this.tickInterval == 'auto') {
            var /** @type {?} */ trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;
            var /** @type {?} */ pixelsPerStep = trackSize * this.step / (this.max - this.min);
            var /** @type {?} */ stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);
            var /** @type {?} */ pixelsPerTick = stepsPerTick * this.step;
            this._tickIntervalPercent = pixelsPerTick / trackSize;
        }
        else {
            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);
        }
    };
    /**
     * Creates a slider change object from the specified value.
     * @param {?=} value
     * @return {?}
     */
    MdSlider.prototype._createChangeEvent = function (value) {
        if (value === void 0) { value = this.value; }
        var /** @type {?} */ event = new MdSliderChange();
        event.source = this;
        event.value = value;
        return event;
    };
    /**
     * Calculates the percentage of the slider that a value is.
     * @param {?} value
     * @return {?}
     */
    MdSlider.prototype._calculatePercentage = function (value) {
        return (value - this.min) / (this.max - this.min);
    };
    /**
     * Calculates the value a percentage of the slider corresponds to.
     * @param {?} percentage
     * @return {?}
     */
    MdSlider.prototype._calculateValue = function (percentage) {
        return this.min + percentage * (this.max - this.min);
    };
    /**
     * Return a number between two numbers.
     * @param {?} value
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    MdSlider.prototype._clamp = function (value, min, max) {
        if (min === void 0) { min = 0; }
        if (max === void 0) { max = 1; }
        return Math.max(min, Math.min(value, max));
    };
    /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param {?} value
     * @return {?}
     */
    MdSlider.prototype.writeValue = function (value) {
        this.value = value;
    };
    /**
     * Registers a callback to eb triggered when the value has changed.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn Callback to be registered.
     * @return {?}
     */
    MdSlider.prototype.registerOnChange = function (fn) {
        this._controlValueAccessorChangeFn = fn;
    };
    /**
     * Registers a callback to be triggered when the component is touched.
     * Implemented as part of ControlValueAccessor.
     * @param {?} fn Callback to be registered.
     * @return {?}
     */
    MdSlider.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    /**
     * Sets whether the component should be disabled.
     * Implemented as part of ControlValueAccessor.
     * @param {?} isDisabled
     * @return {?}
     */
    MdSlider.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    return MdSlider;
}());
MdSlider.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-slider, mat-slider',
                providers: [MD_SLIDER_VALUE_ACCESSOR],
                host: {
                    '[class.mat-slider]': 'true',
                    '(focus)': '_onFocus()',
                    '(blur)': '_onBlur()',
                    '(click)': '_onClick($event)',
                    '(keydown)': '_onKeydown($event)',
                    '(keyup)': '_onKeyup()',
                    '(mouseenter)': '_onMouseenter()',
                    '(slide)': '_onSlide($event)',
                    '(slideend)': '_onSlideEnd()',
                    '(slidestart)': '_onSlideStart($event)',
                    'role': 'slider',
                    'tabindex': '0',
                    '[attr.aria-disabled]': 'disabled',
                    '[attr.aria-valuemax]': 'max',
                    '[attr.aria-valuemin]': 'min',
                    '[attr.aria-valuenow]': 'value',
                    '[class.mat-primary]': 'color == "primary"',
                    '[class.mat-accent]': 'color != "primary" && color != "warn"',
                    '[class.mat-warn]': 'color == "warn"',
                    '[class.mat-slider-disabled]': 'disabled',
                    '[class.mat-slider-has-ticks]': 'tickInterval',
                    '[class.mat-slider-horizontal]': '!vertical',
                    '[class.mat-slider-axis-inverted]': '_invertAxis',
                    '[class.mat-slider-sliding]': '_isSliding',
                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',
                    '[class.mat-slider-vertical]': 'vertical',
                    '[class.mat-slider-min-value]': '_isMinValue',
                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',
                },
                template: "<div class=\"mat-slider-wrapper\"> <div class=\"mat-slider-track-wrapper\"> <div class=\"mat-slider-track-background\" [ngStyle]=\"_trackBackgroundStyles\"></div> <div class=\"mat-slider-track-fill\" [ngStyle]=\"_trackFillStyles\"></div> </div> <div class=\"mat-slider-ticks-container\" [ngStyle]=\"_ticksContainerStyles\"> <div class=\"mat-slider-ticks\" [ngStyle]=\"_ticksStyles\"></div> </div> <div class=\"mat-slider-thumb-container\" [ngStyle]=\"_thumbContainerStyles\"> <div class=\"mat-slider-focus-ring\"></div> <div class=\"mat-slider-thumb\"></div> <div class=\"mat-slider-thumb-label\"> <span class=\"mat-slider-thumb-label-text\">{{displayValue}}</span> </div> </div> </div> ",
                styles: [".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label-text{z-index:1;font-size:12px;font-weight:700;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border:0 solid rgba(0,0,0,.6);opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.cdk-focused .mat-slider-thumb-label-text{opacity:1}.cdk-mouse-focused .mat-slider-thumb,.cdk-program-focused .mat-slider-thumb,.cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.mat-slider-horizontal .mat-slider-ticks{background:repeating-linear-gradient(to right,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background:-moz-repeating-linear-gradient(.0001deg,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background-clip:content-box;height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{background:repeating-linear-gradient(to bottom,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background-clip:content-box;width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%} /*# sourceMappingURL=slider.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
            },] },
];
/**
 * @nocollapse
 */
MdSlider.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: FocusOriginMonitor, },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
MdSlider.propDecorators = {
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'invert': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'max': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'min': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'step': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'thumbLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    '_thumbLabelDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['thumb-label',] },],
    'tickInterval': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    '_tickIntervalDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['tick-interval',] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'vertical': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'input': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
/**
 * Renderer class in order to keep all dom manipulation in one place and outside of the main class.
 * \@docs-private
 */
var SliderRenderer = (function () {
    /**
     * @param {?} elementRef
     */
    function SliderRenderer(elementRef) {
        this._sliderElement = elementRef.nativeElement;
    }
    /**
     * Get the bounding client rect of the slider track element.
     * The track is used rather than the native element to ignore the extra space that the thumb can
     * take up.
     * @return {?}
     */
    SliderRenderer.prototype.getSliderDimensions = function () {
        var /** @type {?} */ wrapperElement = this._sliderElement.querySelector('.mat-slider-wrapper');
        return wrapperElement.getBoundingClientRect();
    };
    /**
     * Focuses the native element.
     * Currently only used to allow a blur event to fire but will be used with keyboard input later.
     * @return {?}
     */
    SliderRenderer.prototype.addFocus = function () {
        this._sliderElement.focus();
    };
    return SliderRenderer;
}());
var MdSliderModule = (function () {
    function MdSliderModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdSliderModule.forRoot = function () {
        return {
            ngModule: MdSliderModule,
            providers: []
        };
    };
    return MdSliderModule;
}());
MdSliderModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */], __WEBPACK_IMPORTED_MODULE_8__angular_forms__["a" /* FormsModule */], CompatibilityModule, StyleModule, RtlModule],
                exports: [MdSlider, CompatibilityModule],
                declarations: [MdSlider],
                providers: [{ provide: __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["d" /* HAMMER_GESTURE_CONFIG */], useClass: GestureConfig }]
            },] },
];
/**
 * @nocollapse
 */
MdSliderModule.ctorParameters = function () { return []; };
/**
 * Exception thrown when two MdSidenav are matching the same side.
 */
var MdDuplicatedSidenavError = (function (_super) {
    __extends(MdDuplicatedSidenavError, _super);
    /**
     * @param {?} align
     */
    function MdDuplicatedSidenavError(align) {
        return _super.call(this, "A sidenav was already declared for 'align=\"" + align + "\"'") || this;
    }
    return MdDuplicatedSidenavError;
}(MdError));
/**
 * Sidenav toggle promise result.
 */
var MdSidenavToggleResult = (function () {
    /**
     * @param {?} type
     * @param {?} animationFinished
     */
    function MdSidenavToggleResult(type, animationFinished) {
        this.type = type;
        this.animationFinished = animationFinished;
    }
    return MdSidenavToggleResult;
}());
/**
 * <md-sidenav> component.
 *
 * This component corresponds to the drawer of the sidenav.
 *
 * Please refer to README.md for examples on how to use it.
 */
var MdSidenav = (function () {
    /**
     * @param {?} _elementRef The DOM element reference. Used for transition and width calculation.
     *     If not available we do not hook on transitions.
     * @param {?} _renderer
     * @param {?} _focusTrapFactory
     */
    function MdSidenav(_elementRef, _renderer, _focusTrapFactory) {
        var _this = this;
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._focusTrapFactory = _focusTrapFactory;
        this._align = 'start';
        /** Mode of the sidenav; whether 'over' or 'side'. */
        this.mode = 'over';
        this._disableClose = false;
        /** Whether the sidenav is opened. */
        this._opened = false;
        /** Event emitted when the sidenav is being opened. Use this to synchronize animations. */
        this.onOpenStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the sidenav is fully opened. */
        this.onOpen = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the sidenav is being closed. Use this to synchronize animations. */
        this.onCloseStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the sidenav is fully closed. */
        this.onClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the sidenav alignment changes. */
        this.onAlignChanged = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        this._toggleAnimationPromise = null;
        this._resolveToggleAnimationPromise = null;
        this._elementFocusedBeforeSidenavWasOpened = null;
        this.onOpen.subscribe(function () {
            _this._elementFocusedBeforeSidenavWasOpened = document.activeElement;
            if (_this.isFocusTrapEnabled && _this._focusTrap) {
                _this._focusTrap.focusFirstTabbableElementWhenReady();
            }
        });
        this.onClose.subscribe(function () {
            if (_this._elementFocusedBeforeSidenavWasOpened instanceof HTMLElement) {
                _this._renderer.invokeElementMethod(_this._elementFocusedBeforeSidenavWasOpened, 'focus');
            }
            else {
                _this._renderer.invokeElementMethod(_this._elementRef.nativeElement, 'blur');
            }
            _this._elementFocusedBeforeSidenavWasOpened = null;
        });
    }
    Object.defineProperty(MdSidenav.prototype, "align", {
        /**
         * Direction which the sidenav is aligned in.
         * @return {?}
         */
        get: function () { return this._align; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            // Make sure we have a valid value.
            value = (value == 'end') ? 'end' : 'start';
            if (value != this._align) {
                this._align = value;
                this.onAlignChanged.emit();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "disableClose", {
        /**
         * Whether the sidenav can be closed with the escape key or not.
         * @return {?}
         */
        get: function () { return this._disableClose; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disableClose = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "isFocusTrapEnabled", {
        /**
         * @return {?}
         */
        get: function () {
            // The focus trap is only enabled when the sidenav is open in any mode other than side.
            return this.opened && this.mode !== 'side';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdSidenav.prototype.ngAfterContentInit = function () {
        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
        this._focusTrap.enabled = this.isFocusTrapEnabled;
        // This can happen when the sidenav is set to opened in
        // the template and the transition hasn't ended.
        if (this._toggleAnimationPromise) {
            this._resolveToggleAnimationPromise(true);
            this._toggleAnimationPromise = this._resolveToggleAnimationPromise = null;
        }
    };
    /**
     * @return {?}
     */
    MdSidenav.prototype.ngOnDestroy = function () {
        if (this._focusTrap) {
            this._focusTrap.destroy();
        }
    };
    Object.defineProperty(MdSidenav.prototype, "opened", {
        /**
         * Whether the sidenav is opened. We overload this because we trigger an event when it
         * starts or end.
         * @return {?}
         */
        get: function () { return this._opened; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this.toggle(coerceBooleanProperty(v));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Open this sidenav, and return a Promise that will resolve when it's fully opened (or get
     * rejected if it didn't).
     * @return {?}
     */
    MdSidenav.prototype.open = function () {
        return this.toggle(true);
    };
    /**
     * Close this sidenav, and return a Promise that will resolve when it's fully closed (or get
     * rejected if it didn't).
     * @return {?}
     */
    MdSidenav.prototype.close = function () {
        return this.toggle(false);
    };
    /**
     * Toggle this sidenav. This is equivalent to calling open() when it's already opened, or
     * close() when it's closed.
     * @param {?=} isOpen Whether the sidenav should be open.
     * @return {?} Resolves with the result of whether the sidenav was opened or closed.
     */
    MdSidenav.prototype.toggle = function (isOpen) {
        var _this = this;
        if (isOpen === void 0) { isOpen = !this.opened; }
        // Shortcut it if we're already opened.
        if (isOpen === this.opened) {
            return this._toggleAnimationPromise ||
                Promise.resolve(new MdSidenavToggleResult(isOpen ? 'open' : 'close', true));
        }
        this._opened = isOpen;
        if (this._focusTrap) {
            this._focusTrap.enabled = this.isFocusTrapEnabled;
        }
        if (isOpen) {
            this.onOpenStart.emit();
        }
        else {
            this.onCloseStart.emit();
        }
        if (this._toggleAnimationPromise) {
            this._resolveToggleAnimationPromise(false);
        }
        this._toggleAnimationPromise = new Promise(function (resolve) {
            _this._resolveToggleAnimationPromise = function (animationFinished) { return resolve(new MdSidenavToggleResult(isOpen ? 'open' : 'close', animationFinished)); };
        });
        return this._toggleAnimationPromise;
    };
    /**
     * Handles the keyboard events.
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    MdSidenav.prototype.handleKeydown = function (event) {
        if (event.keyCode === ESCAPE && !this.disableClose) {
            this.close();
            event.stopPropagation();
        }
    };
    /**
     * When transition has finished, set the internal state for classes and emit the proper event.
     * The event passed is actually of type TransitionEvent, but that type is not available in
     * Android so we use any.
     * @param {?} transitionEvent
     * @return {?}
     */
    MdSidenav.prototype._onTransitionEnd = function (transitionEvent) {
        if (transitionEvent.target == this._elementRef.nativeElement
            && transitionEvent.propertyName.endsWith('transform')) {
            if (this._opened) {
                this.onOpen.emit();
            }
            else {
                this.onClose.emit();
            }
            if (this._toggleAnimationPromise) {
                this._resolveToggleAnimationPromise(true);
                this._toggleAnimationPromise = this._resolveToggleAnimationPromise = null;
            }
        }
    };
    Object.defineProperty(MdSidenav.prototype, "_isClosing", {
        /**
         * @return {?}
         */
        get: function () {
            return !this._opened && !!this._toggleAnimationPromise;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_isOpening", {
        /**
         * @return {?}
         */
        get: function () {
            return this._opened && !!this._toggleAnimationPromise;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_isClosed", {
        /**
         * @return {?}
         */
        get: function () {
            return !this._opened && !this._toggleAnimationPromise;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_isOpened", {
        /**
         * @return {?}
         */
        get: function () {
            return this._opened && !this._toggleAnimationPromise;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_isEnd", {
        /**
         * @return {?}
         */
        get: function () {
            return this.align == 'end';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_modeSide", {
        /**
         * @return {?}
         */
        get: function () {
            return this.mode == 'side';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_modeOver", {
        /**
         * @return {?}
         */
        get: function () {
            return this.mode == 'over';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_modePush", {
        /**
         * @return {?}
         */
        get: function () {
            return this.mode == 'push';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenav.prototype, "_width", {
        /**
         * @return {?}
         */
        get: function () {
            if (this._elementRef.nativeElement) {
                return this._elementRef.nativeElement.offsetWidth;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    return MdSidenav;
}());
MdSidenav.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-sidenav, mat-sidenav',
                // TODO(mmalerba): move template to separate file.
                template: "<ng-content></ng-content> ",
                host: {
                    '[class.mat-sidenav]': 'true',
                    '(transitionend)': '_onTransitionEnd($event)',
                    '(keydown)': 'handleKeydown($event)',
                    // must prevent the browser from aligning text based on value
                    '[attr.align]': 'null',
                    '[class.mat-sidenav-closed]': '_isClosed',
                    '[class.mat-sidenav-closing]': '_isClosing',
                    '[class.mat-sidenav-end]': '_isEnd',
                    '[class.mat-sidenav-opened]': '_isOpened',
                    '[class.mat-sidenav-opening]': '_isOpening',
                    '[class.mat-sidenav-over]': '_modeOver',
                    '[class.mat-sidenav-push]': '_modePush',
                    '[class.mat-sidenav-side]': '_modeSide',
                    'tabIndex': '-1'
                },
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
            },] },
];
/**
 * @nocollapse
 */
MdSidenav.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: FocusTrapFactory, },
]; };
MdSidenav.propDecorators = {
    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'mode': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'disableClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'onOpenStart': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */], args: ['open-start',] },],
    'onOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */], args: ['open',] },],
    'onCloseStart': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */], args: ['close-start',] },],
    'onClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */], args: ['close',] },],
    'onAlignChanged': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */], args: ['align-changed',] },],
    'opened': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * <md-sidenav-container> component.
 *
 * This is the parent component to one or two <md-sidenav>s that validates the state internally
 * and coordinates the backdrop and content styling.
 */
var MdSidenavContainer = (function () {
    /**
     * @param {?} _dir
     * @param {?} _element
     * @param {?} _renderer
     * @param {?} _ngZone
     */
    function MdSidenavContainer(_dir, _element, _renderer, _ngZone) {
        var _this = this;
        this._dir = _dir;
        this._element = _element;
        this._renderer = _renderer;
        this._ngZone = _ngZone;
        /** Event emitted when the sidenav backdrop is clicked. */
        this.backdropClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Whether to enable open/close trantions. */
        this._enableTransitions = false;
        // If a `Dir` directive exists up the tree, listen direction changes and update the left/right
        // properties to point to the proper start/end.
        if (_dir != null) {
            _dir.dirChange.subscribe(function () { return _this._validateDrawers(); });
        }
    }
    Object.defineProperty(MdSidenavContainer.prototype, "start", {
        /**
         * The sidenav child with the `start` alignment.
         * @return {?}
         */
        get: function () { return this._start; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdSidenavContainer.prototype, "end", {
        /**
         * The sidenav child with the `end` alignment.
         * @return {?}
         */
        get: function () { return this._end; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype.ngAfterContentInit = function () {
        var _this = this;
        // On changes, assert on consistency.
        this._sidenavs.changes.subscribe(function () { return _this._validateDrawers(); });
        this._sidenavs.forEach(function (sidenav) {
            _this._watchSidenavToggle(sidenav);
            _this._watchSidenavAlign(sidenav);
        });
        this._validateDrawers();
        // Give the view a chance to render the initial state, then enable transitions.
        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this._enableTransitions = true; });
    };
    /**
     * Subscribes to sidenav events in order to set a class on the main container element when the
     * sidenav is open and the backdrop is visible. This ensures any overflow on the container element
     * is properly hidden.
     * @param {?} sidenav
     * @return {?}
     */
    MdSidenavContainer.prototype._watchSidenavToggle = function (sidenav) {
        var _this = this;
        if (!sidenav || sidenav.mode === 'side') {
            return;
        }
        sidenav.onOpen.subscribe(function () { return _this._setContainerClass(sidenav, true); });
        sidenav.onClose.subscribe(function () { return _this._setContainerClass(sidenav, false); });
    };
    /**
     * Subscribes to sidenav onAlignChanged event in order to re-validate drawers when the align
     * changes.
     * @param {?} sidenav
     * @return {?}
     */
    MdSidenavContainer.prototype._watchSidenavAlign = function (sidenav) {
        var _this = this;
        if (!sidenav) {
            return;
        }
        // NOTE: We need to wait for the microtask queue to be empty before validating,
        // since both drawers may be swapping sides at the same time.
        sidenav.onAlignChanged.subscribe(function () { return _this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this._validateDrawers(); }); });
    };
    /**
     * Toggles the 'mat-sidenav-opened' class on the main 'md-sidenav-container' element.
     * @param {?} sidenav
     * @param {?} bool
     * @return {?}
     */
    MdSidenavContainer.prototype._setContainerClass = function (sidenav, bool) {
        this._renderer.setElementClass(this._element.nativeElement, 'mat-sidenav-opened', bool);
    };
    /**
     * Validate the state of the sidenav children components.
     * @return {?}
     */
    MdSidenavContainer.prototype._validateDrawers = function () {
        this._start = this._end = null;
        // Ensure that we have at most one start and one end sidenav.
        // NOTE: We must call toArray on _sidenavs even though it's iterable
        // (see https://github.com/Microsoft/TypeScript/issues/3164).
        for (var _i = 0, _a = this._sidenavs.toArray(); _i < _a.length; _i++) {
            var sidenav = _a[_i];
            if (sidenav.align == 'end') {
                if (this._end != null) {
                    throw new MdDuplicatedSidenavError('end');
                }
                this._end = sidenav;
            }
            else {
                if (this._start != null) {
                    throw new MdDuplicatedSidenavError('start');
                }
                this._start = sidenav;
            }
        }
        this._right = this._left = null;
        // Detect if we're LTR or RTL.
        if (this._dir == null || this._dir.value == 'ltr') {
            this._left = this._start;
            this._right = this._end;
        }
        else {
            this._left = this._end;
            this._right = this._start;
        }
    };
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype._onBackdropClicked = function () {
        this.backdropClick.emit();
        this._closeModalSidenav();
    };
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype._closeModalSidenav = function () {
        // Close all open sidenav's where closing is not disabled and the mode is not `side`.
        [this._start, this._end]
            .filter(function (sidenav) { return sidenav && !sidenav.disableClose && sidenav.mode !== 'side'; })
            .forEach(function (sidenav) { return sidenav.close(); });
    };
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype._isShowingBackdrop = function () {
        return (this._isSidenavOpen(this._start) && this._start.mode != 'side')
            || (this._isSidenavOpen(this._end) && this._end.mode != 'side');
    };
    /**
     * @param {?} side
     * @return {?}
     */
    MdSidenavContainer.prototype._isSidenavOpen = function (side) {
        return side != null && side.opened;
    };
    /**
     * Return the width of the sidenav, if it's in the proper mode and opened.
     * This may relayout the view, so do not call this often.
     * @param {?} sidenav
     * @param {?} mode
     * @return {?}
     */
    MdSidenavContainer.prototype._getSidenavEffectiveWidth = function (sidenav, mode) {
        return (this._isSidenavOpen(sidenav) && sidenav.mode == mode) ? sidenav._width : 0;
    };
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype._getMarginLeft = function () {
        return this._getSidenavEffectiveWidth(this._left, 'side');
    };
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype._getMarginRight = function () {
        return this._getSidenavEffectiveWidth(this._right, 'side');
    };
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype._getPositionLeft = function () {
        return this._getSidenavEffectiveWidth(this._left, 'push');
    };
    /**
     * @return {?}
     */
    MdSidenavContainer.prototype._getPositionRight = function () {
        return this._getSidenavEffectiveWidth(this._right, 'push');
    };
    /**
     * Returns the horizontal offset for the content area.  There should never be a value for both
     * left and right, so by subtracting the right value from the left value, we should always get
     * the appropriate offset.
     * @return {?}
     */
    MdSidenavContainer.prototype._getPositionOffset = function () {
        return this._getPositionLeft() - this._getPositionRight();
    };
    /**
     * This is using [ngStyle] rather than separate [style...] properties because [style.transform]
     * doesn't seem to work right now.
     * @return {?}
     */
    MdSidenavContainer.prototype._getStyles = function () {
        return {
            marginLeft: this._getMarginLeft() + "px",
            marginRight: this._getMarginRight() + "px",
            transform: "translate3d(" + this._getPositionOffset() + "px, 0, 0)"
        };
    };
    return MdSidenavContainer;
}());
MdSidenavContainer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-sidenav-container, mat-sidenav-container',
                // Do not use ChangeDetectionStrategy.OnPush. It does not work for this component because
                // technically it is a sibling of MdSidenav (on the content tree) and isn't updated when MdSidenav
                // changes its state.
                template: "<div class=\"mat-sidenav-backdrop\" (click)=\"_onBackdropClicked()\" [class.mat-sidenav-shown]=\"_isShowingBackdrop()\"></div> <ng-content select=\"md-sidenav, mat-sidenav\"></ng-content> <div class=\"mat-sidenav-content\" [ngStyle]=\"_getStyles()\" cdk-scrollable> <ng-content></ng-content> </div> ",
                styles: [".mat-sidenav-container{position:relative;transform:translate3d(0,0,0);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-sidenav-container[fullscreen]{position:absolute;top:0;left:0;right:0;bottom:0}.mat-sidenav-container[fullscreen].mat-sidenav-opened{overflow:hidden}.mat-sidenav-backdrop{position:absolute;top:0;left:0;right:0;bottom:0;display:block;z-index:2;visibility:hidden}.mat-sidenav-backdrop.mat-sidenav-shown{visibility:visible}@media screen and (-ms-high-contrast:active){.mat-sidenav-backdrop{opacity:.5}}.mat-sidenav-content{position:relative;transform:translate3d(0,0,0);display:block;height:100%;overflow:auto}.mat-sidenav{position:relative;transform:translate3d(0,0,0);display:block;position:absolute;top:0;bottom:0;z-index:3;min-width:5vw;outline:0;box-sizing:border-box;height:100%;overflow-y:auto;transform:translate3d(-100%,0,0)}.mat-sidenav.mat-sidenav-closed{visibility:hidden}.mat-sidenav.mat-sidenav-opened,.mat-sidenav.mat-sidenav-opening{transform:translate3d(0,0,0)}.mat-sidenav.mat-sidenav-side{z-index:1}.mat-sidenav.mat-sidenav-end{right:0;transform:translate3d(100%,0,0)}.mat-sidenav.mat-sidenav-end.mat-sidenav-closed{visibility:hidden}.mat-sidenav.mat-sidenav-end.mat-sidenav-opened,.mat-sidenav.mat-sidenav-end.mat-sidenav-opening{transform:translate3d(0,0,0)}[dir=rtl] .mat-sidenav{transform:translate3d(100%,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-closed{visibility:hidden}[dir=rtl] .mat-sidenav.mat-sidenav-opened,[dir=rtl] .mat-sidenav.mat-sidenav-opening{transform:translate3d(0,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-end{left:0;right:auto;transform:translate3d(-100%,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-closed{visibility:hidden}[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-opened,[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-opening{transform:translate3d(0,0,0)}.mat-sidenav.mat-sidenav-opened:not(.mat-sidenav-side),.mat-sidenav.mat-sidenav-opening:not(.mat-sidenav-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)} /*# sourceMappingURL=sidenav.css.map */ ",
                    ".mat-sidenav-transition .mat-sidenav{transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-sidenav-transition .mat-sidenav-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-sidenav-transition .mat-sidenav-backdrop.mat-sidenav-shown{transition:background-color .4s cubic-bezier(.25,.8,.25,1)} /*# sourceMappingURL=sidenav-transitions.css.map */ "],
                host: {
                    '[class.mat-sidenav-container]': 'true',
                    '[class.mat-sidenav-transition]': '_enableTransitions',
                },
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
            },] },
];
/**
 * @nocollapse
 */
MdSidenavContainer.ctorParameters = function () { return [
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
]; };
MdSidenavContainer.propDecorators = {
    '_sidenavs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdSidenav,] },],
    'backdropClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
var MdSidenavModule = (function () {
    function MdSidenavModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdSidenavModule.forRoot = function () {
        return {
            ngModule: MdSidenavModule,
            providers: []
        };
    };
    return MdSidenavModule;
}());
MdSidenavModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */], CompatibilityModule, A11yModule, OverlayModule],
                exports: [MdSidenavContainer, MdSidenav, CompatibilityModule],
                declarations: [MdSidenavContainer, MdSidenav],
            },] },
];
/**
 * @nocollapse
 */
MdSidenavModule.ctorParameters = function () { return []; };
var MdListDivider = (function () {
    function MdListDivider() {
    }
    return MdListDivider;
}());
MdListDivider.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-divider, mat-divider'
            },] },
];
/**
 * @nocollapse
 */
MdListDivider.ctorParameters = function () { return []; };
/**
 * Token used to inject the list type into child MdListItem components so they can know whether
 * they're in a nav list (and thus should use an MdRipple).
 */
var LIST_TYPE_TOKEN = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["d" /* OpaqueToken */]('list_type');
var NORMAL_LIST_TYPE = 'normal_list_type';
var NAV_LIST_TYPE = 'nav_list_type';
var MdList = (function () {
    function MdList() {
    }
    return MdList;
}());
MdList.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-list, mat-list, md-nav-list, mat-nav-list',
                host: {
                    'role': 'list'
                },
                template: '<ng-content></ng-content>',
                styles: [".mat-list,.mat-nav-list{padding-top:8px;display:block}.mat-list .mat-subheader,.mat-nav-list .mat-subheader{display:block;box-sizing:border-box;height:48px;padding:16px;margin:0;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:500}.mat-list .mat-subheader:first-child,.mat-nav-list .mat-subheader:first-child{margin-top:-8px}.mat-list .mat-list-item,.mat-nav-list .mat-list-item{display:block}.mat-list .mat-list-item .mat-list-item-content,.mat-nav-list .mat-list-item .mat-list-item-content{display:flex;flex-direction:row;align-items:center;font-family:Roboto,\"Helvetica Neue\",sans-serif;box-sizing:border-box;font-size:16px;height:48px;padding:0 16px;position:relative}.mat-list .mat-list-item.mat-list-item-avatar .mat-list-item-content,.mat-nav-list .mat-list-item.mat-list-item-avatar .mat-list-item-content{height:56px}.mat-list .mat-list-item.mat-2-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-2-line .mat-list-item-content{height:72px}.mat-list .mat-list-item.mat-3-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-3-line .mat-list-item-content{height:88px}.mat-list .mat-list-item.mat-multi-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-multi-line .mat-list-item-content{height:100%;padding:8px 16px}.mat-list .mat-list-item .mat-list-text,.mat-nav-list .mat-list-item .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0 16px}.mat-list .mat-list-item .mat-list-text>*,.mat-nav-list .mat-list-item .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list .mat-list-item .mat-list-text:empty,.mat-nav-list .mat-list-item .mat-list-text:empty{display:none}.mat-list .mat-list-item .mat-list-text:first-child,.mat-nav-list .mat-list-item .mat-list-text:first-child{padding:0}.mat-list .mat-list-item .mat-list-avatar,.mat-nav-list .mat-list-item .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%}.mat-list .mat-list-item .mat-list-icon,.mat-nav-list .mat-list-item .mat-list-icon{width:24px;height:24px;border-radius:50%;padding:4px}.mat-list .mat-list-item .mat-line,.mat-nav-list .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list .mat-list-item .mat-line:nth-child(n+2),.mat-nav-list .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list[dense],.mat-nav-list[dense]{padding-top:4px;display:block}.mat-list[dense] .mat-subheader,.mat-nav-list[dense] .mat-subheader{display:block;box-sizing:border-box;height:40px;padding:16px;margin:0;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:13px;font-weight:500}.mat-list[dense] .mat-subheader:first-child,.mat-nav-list[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list[dense] .mat-list-item,.mat-nav-list[dense] .mat-list-item{display:block}.mat-list[dense] .mat-list-item .mat-list-item-content,.mat-nav-list[dense] .mat-list-item .mat-list-item-content{display:flex;flex-direction:row;align-items:center;font-family:Roboto,\"Helvetica Neue\",sans-serif;box-sizing:border-box;font-size:13px;height:40px;padding:0 16px;position:relative}.mat-list[dense] .mat-list-item.mat-list-item-avatar .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-list-item-avatar .mat-list-item-content{height:48px}.mat-list[dense] .mat-list-item.mat-2-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-2-line .mat-list-item-content{height:60px}.mat-list[dense] .mat-list-item.mat-3-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-3-line .mat-list-item-content{height:76px}.mat-list[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-multi-line .mat-list-item-content{height:100%;padding:8px 16px}.mat-list[dense] .mat-list-item .mat-list-text,.mat-nav-list[dense] .mat-list-item .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0 16px}.mat-list[dense] .mat-list-item .mat-list-text>*,.mat-nav-list[dense] .mat-list-item .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list[dense] .mat-list-item .mat-list-text:empty,.mat-nav-list[dense] .mat-list-item .mat-list-text:empty{display:none}.mat-list[dense] .mat-list-item .mat-list-text:first-child,.mat-nav-list[dense] .mat-list-item .mat-list-text:first-child{padding:0}.mat-list[dense] .mat-list-item .mat-list-avatar,.mat-nav-list[dense] .mat-list-item .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%}.mat-list[dense] .mat-list-item .mat-list-icon,.mat-nav-list[dense] .mat-list-item .mat-list-icon{width:24px;height:24px;border-radius:50%;padding:4px}.mat-list[dense] .mat-list-item .mat-line,.mat-nav-list[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list[dense] .mat-list-item .mat-line:nth-child(n+2),.mat-nav-list[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:13px}.mat-divider{display:block;border-top-style:solid;border-top-width:1px;margin:0}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item-content{cursor:pointer}.mat-nav-list .mat-list-item-content.mat-list-item-focus,.mat-nav-list .mat-list-item-content:hover{outline:0} /*# sourceMappingURL=list.css.map */ "],
                providers: [{ provide: LIST_TYPE_TOKEN, useValue: NORMAL_LIST_TYPE }],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None
            },] },
];
/**
 * @nocollapse
 */
MdList.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdListCssMatStyler = (function () {
    function MdListCssMatStyler() {
    }
    return MdListCssMatStyler;
}());
MdListCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-list, mat-list',
                host: {
                    '[class.mat-list]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdListCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdNavListCssMatStyler = (function () {
    function MdNavListCssMatStyler() {
    }
    return MdNavListCssMatStyler;
}());
MdNavListCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-nav-list, mat-nav-list',
                host: {
                    '[class.mat-nav-list]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdNavListCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive to set the ListType token to NAV_LIST_TYPE.
 */
var MdNavListTokenSetter = (function () {
    function MdNavListTokenSetter() {
    }
    return MdNavListTokenSetter;
}());
MdNavListTokenSetter.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-nav-list, mat-nav-list',
                providers: [{ provide: LIST_TYPE_TOKEN, useValue: NAV_LIST_TYPE }],
            },] },
];
/**
 * @nocollapse
 */
MdNavListTokenSetter.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdDividerCssMatStyler = (function () {
    function MdDividerCssMatStyler() {
    }
    return MdDividerCssMatStyler;
}());
MdDividerCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-divider, mat-divider',
                host: {
                    '[class.mat-divider]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdDividerCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdListAvatarCssMatStyler = (function () {
    function MdListAvatarCssMatStyler() {
    }
    return MdListAvatarCssMatStyler;
}());
MdListAvatarCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-list-avatar], [mat-list-avatar]',
                host: {
                    '[class.mat-list-avatar]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdListAvatarCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdListIconCssMatStyler = (function () {
    function MdListIconCssMatStyler() {
    }
    return MdListIconCssMatStyler;
}());
MdListIconCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-list-icon], [mat-list-icon]',
                host: {
                    '[class.mat-list-icon]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdListIconCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdListSubheaderCssMatStyler = (function () {
    function MdListSubheaderCssMatStyler() {
    }
    return MdListSubheaderCssMatStyler;
}());
MdListSubheaderCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-subheader], [mat-subheader]',
                host: {
                    '[class.mat-subheader]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdListSubheaderCssMatStyler.ctorParameters = function () { return []; };
var MdListItem = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _element
     * @param {?} _listType
     */
    function MdListItem(_renderer, _element, _listType) {
        this._renderer = _renderer;
        this._element = _element;
        this._listType = _listType;
        /**
         * Whether the ripple effect on click should be disabled. This applies only to list items that
         * are children of an md-nav-list; md-list items never have ripples.
         */
        this.disableRipple = false;
        this._hasFocus = false;
    }
    Object.defineProperty(MdListItem.prototype, "_hasAvatar", {
        /**
         * @param {?} avatar
         * @return {?}
         */
        set: function (avatar) {
            this._renderer.setElementClass(this._element.nativeElement, 'mat-list-item-avatar', avatar != null);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdListItem.prototype.ngAfterContentInit = function () {
        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);
    };
    /**
     * Whether this list item should show a ripple effect when clicked.
     * @return {?}
     */
    MdListItem.prototype.isRippleEnabled = function () {
        return !this.disableRipple && (this._listType === NAV_LIST_TYPE);
    };
    /**
     * @return {?}
     */
    MdListItem.prototype._handleFocus = function () {
        this._hasFocus = true;
    };
    /**
     * @return {?}
     */
    MdListItem.prototype._handleBlur = function () {
        this._hasFocus = false;
    };
    return MdListItem;
}());
MdListItem.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-list-item, mat-list-item, a[md-list-item], a[mat-list-item]',
                host: {
                    'role': 'listitem',
                    '(focus)': '_handleFocus()',
                    '(blur)': '_handleBlur()',
                    '[class.mat-list-item]': 'true',
                },
                template: "<div class=\"mat-list-item-content\" [class.mat-list-item-focus]=\"_hasFocus\" md-ripple [mdRippleDisabled]=\"!isRippleEnabled()\"> <ng-content select=\"[md-list-avatar],[md-list-icon], [mat-list-avatar], [mat-list-icon]\"></ng-content> <div class=\"mat-list-text\"><ng-content select=\"[md-line], [mat-line]\"></ng-content></div> <ng-content></ng-content> </div> ",
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None
            },] },
];
/**
 * @nocollapse
 */
MdListItem.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [LIST_TYPE_TOKEN,] },] },
]; };
MdListItem.propDecorators = {
    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    '_lines': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdLine,] },],
    '_hasAvatar': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["F" /* ContentChild */], args: [MdListAvatarCssMatStyler,] },],
};
var MdListModule = (function () {
    function MdListModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdListModule.forRoot = function () {
        return {
            ngModule: MdListModule,
            providers: []
        };
    };
    return MdListModule;
}());
MdListModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [MdLineModule, MdRippleModule, CompatibilityModule],
                exports: [
                    MdList,
                    MdListItem,
                    MdListDivider,
                    MdListAvatarCssMatStyler,
                    MdLineModule,
                    CompatibilityModule,
                    MdListIconCssMatStyler,
                    MdListCssMatStyler,
                    MdNavListCssMatStyler,
                    MdDividerCssMatStyler,
                    MdListSubheaderCssMatStyler,
                    MdNavListTokenSetter,
                ],
                declarations: [
                    MdList,
                    MdListItem,
                    MdListDivider,
                    MdListAvatarCssMatStyler,
                    MdListIconCssMatStyler,
                    MdListCssMatStyler,
                    MdNavListCssMatStyler,
                    MdDividerCssMatStyler,
                    MdListSubheaderCssMatStyler,
                    MdNavListTokenSetter,
                ],
            },] },
];
/**
 * @nocollapse
 */
MdListModule.ctorParameters = function () { return []; };
/**
 * Converts values into strings. Falsy values become empty strings.
 * \@docs-private
 * @param {?} value
 * @return {?}
 */
function coerceToString(value) {
    return "" + (value || '');
}
/**
 * Converts a value that might be a string into a number.
 * \@docs-private
 * @param {?} value
 * @return {?}
 */
function coerceToNumber(value) {
    return typeof value === 'string' ? parseInt(value, 10) : value;
}
var MdGridTile = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _element
     */
    function MdGridTile(_renderer, _element) {
        this._renderer = _renderer;
        this._element = _element;
        this._rowspan = 1;
        this._colspan = 1;
    }
    Object.defineProperty(MdGridTile.prototype, "rowspan", {
        /**
         * Amount of rows that the grid tile takes up.
         * @return {?}
         */
        get: function () { return this._rowspan; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._rowspan = coerceToNumber(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdGridTile.prototype, "colspan", {
        /**
         * Amount of columns that the grid tile takes up.
         * @return {?}
         */
        get: function () { return this._colspan; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._colspan = coerceToNumber(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the style of the grid-tile element.  Needs to be set manually to avoid
     * "Changed after checked" errors that would occur with HostBinding.
     * @param {?} property
     * @param {?} value
     * @return {?}
     */
    MdGridTile.prototype._setStyle = function (property, value) {
        this._renderer.setElementStyle(this._element.nativeElement, property, value);
    };
    return MdGridTile;
}());
MdGridTile.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-grid-tile, mat-grid-tile',
                host: {
                    'role': 'listitem',
                    '[class.mat-grid-tile]': 'true',
                },
                template: "<!-- TODO(kara): Revisit why this is a figure.--> <figure class=\"mat-figure\"> <ng-content></ng-content> </figure>",
                styles: [".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{display:flex;position:absolute;align-items:center;justify-content:center;height:100%;top:0;right:0;bottom:0;left:0;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;font-size:16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer .mat-line,.mat-grid-tile .mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile .mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile .mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none} /*# sourceMappingURL=grid-list.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
            },] },
];
/**
 * @nocollapse
 */
MdGridTile.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdGridTile.propDecorators = {
    'rowspan': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'colspan': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
var MdGridTileText = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _element
     */
    function MdGridTileText(_renderer, _element) {
        this._renderer = _renderer;
        this._element = _element;
    }
    /**
     * @return {?}
     */
    MdGridTileText.prototype.ngAfterContentInit = function () {
        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);
    };
    return MdGridTileText;
}());
MdGridTileText.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',
                template: "<ng-content select=\"[md-grid-avatar], [mat-grid-avatar]\"></ng-content> <div class=\"mat-grid-list-text\"><ng-content select=\"[md-line], [mat-line]\"></ng-content></div> <ng-content></ng-content> "
            },] },
];
/**
 * @nocollapse
 */
MdGridTileText.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdGridTileText.propDecorators = {
    '_lines': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdLine,] },],
};
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdGridAvatarCssMatStyler = (function () {
    function MdGridAvatarCssMatStyler() {
    }
    return MdGridAvatarCssMatStyler;
}());
MdGridAvatarCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-grid-avatar], [mat-grid-avatar]',
                host: {
                    '[class.mat-grid-avatar]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdGridAvatarCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdGridTileHeaderCssMatStyler = (function () {
    function MdGridTileHeaderCssMatStyler() {
    }
    return MdGridTileHeaderCssMatStyler;
}());
MdGridTileHeaderCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-grid-tile-header, mat-grid-tile-header',
                host: {
                    '[class.mat-grid-tile-header]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdGridTileHeaderCssMatStyler.ctorParameters = function () { return []; };
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdGridTileFooterCssMatStyler = (function () {
    function MdGridTileFooterCssMatStyler() {
    }
    return MdGridTileFooterCssMatStyler;
}());
MdGridTileFooterCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-grid-tile-footer, mat-grid-tile-footer',
                host: {
                    '[class.mat-grid-tile-footer]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdGridTileFooterCssMatStyler.ctorParameters = function () { return []; };
/**
 * Exception thrown when cols property is missing from grid-list
 * \@docs-private
 */
var MdGridListColsError = (function (_super) {
    __extends(MdGridListColsError, _super);
    function MdGridListColsError() {
        return _super.call(this, "md-grid-list: must pass in number of columns. Example: <md-grid-list cols=\"3\">") || this;
    }
    return MdGridListColsError;
}(MdError));
/**
 * Exception thrown when a tile's colspan is longer than the number of cols in list
 * \@docs-private
 */
var MdGridTileTooWideError = (function (_super) {
    __extends(MdGridTileTooWideError, _super);
    /**
     * @param {?} cols
     * @param {?} listLength
     */
    function MdGridTileTooWideError(cols, listLength) {
        return _super.call(this, "md-grid-list: tile with colspan " + cols + " is wider than grid with cols=\"" + listLength + "\".") || this;
    }
    return MdGridTileTooWideError;
}(MdError));
/**
 * Exception thrown when an invalid ratio is passed in as a rowHeight
 * \@docs-private
 */
var MdGridListBadRatioError = (function (_super) {
    __extends(MdGridListBadRatioError, _super);
    /**
     * @param {?} value
     */
    function MdGridListBadRatioError(value) {
        return _super.call(this, "md-grid-list: invalid ratio given for row-height: \"" + value + "\"") || this;
    }
    return MdGridListBadRatioError;
}(MdError));
/**
 * Class for determining, from a list of tiles, the (row, col) position of each of those tiles
 * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)
 * because the tiles can have a rowspan.
 *
 * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid
 * large enough to accommodate it so that the tiles still render in the same order in which they
 * are given.
 *
 * The basis of the algorithm is the use of an array to track the already placed tiles. Each
 * element of the array corresponds to a column, and the value indicates how many cells in that
 * column are already occupied; zero indicates an empty cell. Moving "down" to the next row
 * decrements each value in the tracking array (indicating that the column is one cell closer to
 * being free).
 *
 * \@docs-private
 */
var TileCoordinator = (function () {
    /**
     * @param {?} numColumns
     * @param {?} tiles
     */
    function TileCoordinator(numColumns, tiles) {
        var _this = this;
        /** Index at which the search for the next gap will start. */
        this.columnIndex = 0;
        /** The current row index. */
        this.rowIndex = 0;
        this.tracker = new Array(numColumns);
        this.tracker.fill(0, 0, this.tracker.length);
        this.positions = tiles.map(function (tile) { return _this._trackTile(tile); });
    }
    Object.defineProperty(TileCoordinator.prototype, "rowCount", {
        /**
         * Gets the total number of rows occupied by tiles
         * @return {?}
         */
        get: function () { return this.rowIndex + 1; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TileCoordinator.prototype, "rowspan", {
        /**
         * Gets the total span of rows occupied by tiles.
         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.
         * @return {?}
         */
        get: function () {
            var /** @type {?} */ lastRowMax = Math.max.apply(Math, this.tracker);
            // if any of the tiles has a rowspan that pushes it beyond the total row count,
            // add the difference to the rowcount
            return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Calculates the row and col position of a tile.
     * @param {?} tile
     * @return {?}
     */
    TileCoordinator.prototype._trackTile = function (tile) {
        // Find a gap large enough for this tile.
        var /** @type {?} */ gapStartIndex = this._findMatchingGap(tile.colspan);
        // Place tile in the resulting gap.
        this._markTilePosition(gapStartIndex, tile);
        // The next time we look for a gap, the search will start at columnIndex, which should be
        // immediately after the tile that has just been placed.
        this.columnIndex = gapStartIndex + tile.colspan;
        return new TilePosition(this.rowIndex, gapStartIndex);
    };
    /**
     * Finds the next available space large enough to fit the tile.
     * @param {?} tileCols
     * @return {?}
     */
    TileCoordinator.prototype._findMatchingGap = function (tileCols) {
        if (tileCols > this.tracker.length) {
            throw new MdGridTileTooWideError(tileCols, this.tracker.length);
        }
        // Start index is inclusive, end index is exclusive.
        var /** @type {?} */ gapStartIndex = -1;
        var /** @type {?} */ gapEndIndex = -1;
        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.
        do {
            // If we've reached the end of the row, go to the next row.
            if (this.columnIndex + tileCols > this.tracker.length) {
                this._nextRow();
                continue;
            }
            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);
            // If there are no more empty spaces in this row at all, move on to the next row.
            if (gapStartIndex == -1) {
                this._nextRow();
                continue;
            }
            gapEndIndex = this._findGapEndIndex(gapStartIndex);
            // If a gap large enough isn't found, we want to start looking immediately after the current
            // gap on the next iteration.
            this.columnIndex = gapStartIndex + 1;
        } while (gapEndIndex - gapStartIndex < tileCols);
        return gapStartIndex;
    };
    /**
     * Move "down" to the next row.
     * @return {?}
     */
    TileCoordinator.prototype._nextRow = function () {
        this.columnIndex = 0;
        this.rowIndex++;
        // Decrement all spaces by one to reflect moving down one row.
        for (var /** @type {?} */ i = 0; i < this.tracker.length; i++) {
            this.tracker[i] = Math.max(0, this.tracker[i] - 1);
        }
    };
    /**
     * Finds the end index (exclusive) of a gap given the index from which to start looking.
     * The gap ends when a non-zero value is found.
     * @param {?} gapStartIndex
     * @return {?}
     */
    TileCoordinator.prototype._findGapEndIndex = function (gapStartIndex) {
        for (var /** @type {?} */ i = gapStartIndex + 1; i < this.tracker.length; i++) {
            if (this.tracker[i] != 0) {
                return i;
            }
        }
        // The gap ends with the end of the row.
        return this.tracker.length;
    };
    /**
     * Update the tile tracker to account for the given tile in the given space.
     * @param {?} start
     * @param {?} tile
     * @return {?}
     */
    TileCoordinator.prototype._markTilePosition = function (start, tile) {
        for (var /** @type {?} */ i = 0; i < tile.colspan; i++) {
            this.tracker[start + i] = tile.rowspan;
        }
    };
    return TileCoordinator;
}());
/**
 * Simple data structure for tile position (row, col).
 * \@docs-private
 */
var TilePosition = (function () {
    /**
     * @param {?} row
     * @param {?} col
     */
    function TilePosition(row, col) {
        this.row = row;
        this.col = col;
    }
    return TilePosition;
}());
/**
 * Sets the style properties for an individual tile, given the position calculated by the
 * Tile Coordinator.
 * \@docs-private
 */
var TileStyler = (function () {
    function TileStyler() {
        this._rows = 0;
        this._rowspan = 0;
    }
    /**
     * Adds grid-list layout info once it is available. Cannot be processed in the constructor
     * because these properties haven't been calculated by that point.
     *
     * @param {?} gutterSize Size of the grid's gutter.
     * @param {?} tracker Instance of the TileCoordinator.
     * @param {?} cols Amount of columns in the grid.
     * @param {?} direction Layout direction of the grid.
     * @return {?}
     */
    TileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {
        this._gutterSize = normalizeUnits(gutterSize);
        this._rows = tracker.rowCount;
        this._rowspan = tracker.rowspan;
        this._cols = cols;
        this._direction = direction;
    };
    /**
     * Computes the amount of space a single 1x1 tile would take up (width or height).
     * Used as a basis for other calculations.
     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.
     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.
     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().
     */
    TileStyler.prototype.getBaseTileSize = function (sizePercent, gutterFraction) {
        // Take the base size percent (as would be if evenly dividing the size between cells),
        // and then subtracting the size of one gutter. However, since there are no gutters on the
        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter
        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the
        // edge evenly among the cells).
        return "(" + sizePercent + "% - ( " + this._gutterSize + " * " + gutterFraction + " ))";
    };
    /**
     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.
     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).
     * @param {?} offset Number of tiles that have already been rendered in the row/column.
     * @return {?} Position of the tile as a CSS calc() expression.
     */
    TileStyler.prototype.getTilePosition = function (baseSize, offset) {
        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the
        // row/column (offset).
        return calc("(" + baseSize + " + " + this._gutterSize + ") * " + offset);
    };
    /**
     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.
     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).
     * @param {?} span The tile's rowspan or colspan.
     * @return {?} Size of the tile as a CSS calc() expression.
     */
    TileStyler.prototype.getTileSize = function (baseSize, span) {
        return "(" + baseSize + " * " + span + ") + (" + (span - 1) + " * " + this._gutterSize + ")";
    };
    /**
     * Sets the style properties to be applied to a tile for the given row and column index.
     * @param {?} tile Tile to which to apply the styling.
     * @param {?} rowIndex Index of the tile's row.
     * @param {?} colIndex Index of the tile's column.
     * @return {?}
     */
    TileStyler.prototype.setStyle = function (tile, rowIndex, colIndex) {
        // Percent of the available horizontal space that one column takes up.
        var /** @type {?} */ percentWidthPerTile = 100 / this._cols;
        // Fraction of the vertical gutter size that each column takes up.
        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.
        var /** @type {?} */ gutterWidthFractionPerTile = (this._cols - 1) / this._cols;
        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);
        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);
    };
    /**
     * Sets the horizontal placement of the tile in the list.
     * @param {?} tile
     * @param {?} colIndex
     * @param {?} percentWidth
     * @param {?} gutterWidth
     * @return {?}
     */
    TileStyler.prototype.setColStyles = function (tile, colIndex, percentWidth, gutterWidth) {
        // Base horizontal size of a column.
        var /** @type {?} */ baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);
        // The width and horizontal position of each tile is always calculated the same way, but the
        // height and vertical position depends on the rowMode.
        var /** @type {?} */ side = this._direction === 'ltr' ? 'left' : 'right';
        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));
        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));
    };
    /**
     * Calculates the total size taken up by gutters across one axis of a list.
     * @return {?}
     */
    TileStyler.prototype.getGutterSpan = function () {
        return this._gutterSize + " * (" + this._rowspan + " - 1)";
    };
    /**
     * Calculates the total size taken up by tiles across one axis of a list.
     * @param {?} tileHeight Height of the tile.
     * @return {?}
     */
    TileStyler.prototype.getTileSpan = function (tileHeight) {
        return this._rowspan + " * " + this.getTileSize(tileHeight, 1);
    };
    /**
     * Sets the vertical placement of the tile in the list.
     * This method will be implemented by each type of TileStyler.
     * \@docs-private
     * @param {?} tile
     * @param {?} rowIndex
     * @param {?} percentWidth
     * @param {?} gutterWidth
     * @return {?}
     */
    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };
    /**
     * Calculates the computed height and returns the correct style property to set.
     * This method will be implemented by each type of TileStyler.
     * \@docs-private
     * @return {?}
     */
    TileStyler.prototype.getComputedHeight = function () { return null; };
    return TileStyler;
}());
/**
 * This type of styler is instantiated when the user passes in a fixed row height.
 * Example <md-grid-list cols="3" rowHeight="100px">
 * \@docs-private
 */
var FixedTileStyler = (function (_super) {
    __extends(FixedTileStyler, _super);
    /**
     * @param {?} fixedRowHeight
     */
    function FixedTileStyler(fixedRowHeight) {
        var _this = _super.call(this) || this;
        _this.fixedRowHeight = fixedRowHeight;
        return _this;
    }
    /**
     * @param {?} gutterSize
     * @param {?} tracker
     * @param {?} cols
     * @param {?} direction
     * @return {?}
     */
    FixedTileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {
        _super.prototype.init.call(this, gutterSize, tracker, cols, direction);
        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);
    };
    /**
     * @param {?} tile
     * @param {?} rowIndex
     * @param {?} percentWidth
     * @param {?} gutterWidth
     * @return {?}
     */
    FixedTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {
        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));
        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));
    };
    /**
     * @return {?}
     */
    FixedTileStyler.prototype.getComputedHeight = function () {
        return [
            'height', calc(this.getTileSpan(this.fixedRowHeight) + " + " + this.getGutterSpan())
        ];
    };
    return FixedTileStyler;
}(TileStyler));
/**
 * This type of styler is instantiated when the user passes in a width:height ratio
 * for the row height.  Example <md-grid-list cols="3" rowHeight="3:1">
 * \@docs-private
 */
var RatioTileStyler = (function (_super) {
    __extends(RatioTileStyler, _super);
    /**
     * @param {?} value
     */
    function RatioTileStyler(value) {
        var _this = _super.call(this) || this;
        _this._parseRatio(value);
        return _this;
    }
    /**
     * @param {?} tile
     * @param {?} rowIndex
     * @param {?} percentWidth
     * @param {?} gutterWidth
     * @return {?}
     */
    RatioTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {
        var /** @type {?} */ percentHeightPerTile = percentWidth / this.rowHeightRatio;
        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);
        // Use paddingTop and marginTop to maintain the given aspect ratio, as
        // a percentage-based value for these properties is applied versus the *width* of the
        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties
        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));
        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));
    };
    /**
     * @return {?}
     */
    RatioTileStyler.prototype.getComputedHeight = function () {
        return [
            'paddingBottom', calc(this.getTileSpan(this.baseTileHeight) + " + " + this.getGutterSpan())
        ];
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RatioTileStyler.prototype._parseRatio = function (value) {
        var /** @type {?} */ ratioParts = value.split(':');
        if (ratioParts.length !== 2) {
            throw new MdGridListBadRatioError(value);
        }
        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);
    };
    return RatioTileStyler;
}(TileStyler));
/**
 * This type of styler is instantiated when the user selects a "fit" row height mode.
 * In other words, the row height will reflect the total height of the container divided
 * by the number of rows.  Example <md-grid-list cols="3" rowHeight="fit">
 *
 * \@docs-private
 */
var FitTileStyler = (function (_super) {
    __extends(FitTileStyler, _super);
    function FitTileStyler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?} tile
     * @param {?} rowIndex
     * @param {?} percentWidth
     * @param {?} gutterWidth
     * @return {?}
     */
    FitTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {
        // Percent of the available vertical space that one row takes up.
        var /** @type {?} */ percentHeightPerTile = 100 / this._rowspan;
        // Fraction of the horizontal gutter size that each column takes up.
        var /** @type {?} */ gutterHeightPerTile = (this._rows - 1) / this._rows;
        // Base vertical size of a column.
        var /** @type {?} */ baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);
        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));
        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));
    };
    return FitTileStyler;
}(TileStyler));
/**
 * Wraps a CSS string in a calc function
 * @param {?} exp
 * @return {?}
 */
function calc(exp) { return "calc(" + exp + ")"; }
/**
 * Appends pixels to a CSS string if no units are given.
 * @param {?} value
 * @return {?}
 */
function normalizeUnits(value) {
    return (value.match(/px|em|rem/)) ? value : value + 'px';
}
// TODO(kara): Conditional (responsive) column count / row size.
// TODO(kara): Re-layout on window resize / media change (debounced).
// TODO(kara): gridTileHeader and gridTileFooter.
var MD_FIT_MODE = 'fit';
var MdGridList = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _element
     * @param {?} _dir
     */
    function MdGridList(_renderer, _element, _dir) {
        this._renderer = _renderer;
        this._element = _element;
        this._dir = _dir;
        this._gutter = '1px';
    }
    Object.defineProperty(MdGridList.prototype, "cols", {
        /**
         * Amount of columns in the grid list.
         * @return {?}
         */
        get: function () { return this._cols; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._cols = coerceToNumber(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdGridList.prototype, "gutterSize", {
        /**
         * Size of the grid list's gutter in pixels.
         * @return {?}
         */
        get: function () { return this._gutter; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._gutter = coerceToString(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdGridList.prototype, "rowHeight", {
        /**
         * Set internal representation of row height from the user-provided value.
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._rowHeight = coerceToString(value);
            this._setTileStyler();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdGridList.prototype.ngOnInit = function () {
        this._checkCols();
        this._checkRowHeight();
    };
    /**
     * The layout calculation is fairly cheap if nothing changes, so there's little cost
     * to run it frequently.
     * @return {?}
     */
    MdGridList.prototype.ngAfterContentChecked = function () {
        this._layoutTiles();
    };
    /**
     * Throw a friendly error if cols property is missing
     * @return {?}
     */
    MdGridList.prototype._checkCols = function () {
        if (!this.cols) {
            throw new MdGridListColsError();
        }
    };
    /**
     * Default to equal width:height if rowHeight property is missing
     * @return {?}
     */
    MdGridList.prototype._checkRowHeight = function () {
        if (!this._rowHeight) {
            this._tileStyler = new RatioTileStyler('1:1');
        }
    };
    /**
     * Creates correct Tile Styler subtype based on rowHeight passed in by user
     * @return {?}
     */
    MdGridList.prototype._setTileStyler = function () {
        if (this._rowHeight === MD_FIT_MODE) {
            this._tileStyler = new FitTileStyler();
        }
        else if (this._rowHeight && this._rowHeight.indexOf(':') > -1) {
            this._tileStyler = new RatioTileStyler(this._rowHeight);
        }
        else {
            this._tileStyler = new FixedTileStyler(this._rowHeight);
        }
    };
    /**
     * Computes and applies the size and position for all children grid tiles.
     * @return {?}
     */
    MdGridList.prototype._layoutTiles = function () {
        var _this = this;
        var /** @type {?} */ tracker = new TileCoordinator(this.cols, this._tiles);
        var /** @type {?} */ direction = this._dir ? this._dir.value : 'ltr';
        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);
        this._tiles.forEach(function (tile, index) {
            var /** @type {?} */ pos = tracker.positions[index];
            _this._tileStyler.setStyle(tile, pos.row, pos.col);
        });
        this._setListStyle(this._tileStyler.getComputedHeight());
    };
    /**
     * Sets style on the main grid-list element, given the style name and value.
     * @param {?} style
     * @return {?}
     */
    MdGridList.prototype._setListStyle = function (style$$1) {
        if (style$$1) {
            this._renderer.setElementStyle(this._element.nativeElement, style$$1[0], style$$1[1]);
        }
    };
    return MdGridList;
}());
MdGridList.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-grid-list, mat-grid-list',
                template: "<div> <ng-content></ng-content> </div>",
                styles: [".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{display:flex;position:absolute;align-items:center;justify-content:center;height:100%;top:0;right:0;bottom:0;left:0;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;font-size:16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer .mat-line,.mat-grid-tile .mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile .mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile .mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none} /*# sourceMappingURL=grid-list.css.map */ "],
                host: {
                    'role': 'list',
                    '[class.mat-grid-list]': 'true',
                },
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
            },] },
];
/**
 * @nocollapse
 */
MdGridList.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
MdGridList.propDecorators = {
    '_tiles': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdGridTile,] },],
    'cols': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'gutterSize': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'rowHeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
var MdGridListModule = (function () {
    function MdGridListModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdGridListModule.forRoot = function () {
        return {
            ngModule: MdGridListModule,
            providers: []
        };
    };
    return MdGridListModule;
}());
MdGridListModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [MdLineModule, CompatibilityModule],
                exports: [
                    MdGridList,
                    MdGridTile,
                    MdGridTileText,
                    MdLineModule,
                    CompatibilityModule,
                    MdGridTileHeaderCssMatStyler,
                    MdGridTileFooterCssMatStyler,
                    MdGridAvatarCssMatStyler
                ],
                declarations: [
                    MdGridList,
                    MdGridTile,
                    MdGridTileText,
                    MdGridTileHeaderCssMatStyler,
                    MdGridTileFooterCssMatStyler,
                    MdGridAvatarCssMatStyler
                ],
            },] },
];
/**
 * @nocollapse
 */
MdGridListModule.ctorParameters = function () { return []; };
/**
 * Content of a card, needed as it's used as a selector in the API.
 * \@docs-private
 */
var MdCardContent = (function () {
    function MdCardContent() {
    }
    return MdCardContent;
}());
MdCardContent.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-card-content, mat-card-content',
                host: {
                    '[class.mat-card-content]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardContent.ctorParameters = function () { return []; };
/**
 * Title of a card, needed as it's used as a selector in the API.
 * \@docs-private
 */
var MdCardTitle = (function () {
    function MdCardTitle() {
    }
    return MdCardTitle;
}());
MdCardTitle.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-card-title, mat-card-title',
                host: {
                    '[class.mat-card-title]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardTitle.ctorParameters = function () { return []; };
/**
 * Sub-title of a card, needed as it's used as a selector in the API.
 * \@docs-private
 */
var MdCardSubtitle = (function () {
    function MdCardSubtitle() {
    }
    return MdCardSubtitle;
}());
MdCardSubtitle.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-card-subtitle, mat-card-subtitle',
                host: {
                    '[class.mat-card-subtitle]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardSubtitle.ctorParameters = function () { return []; };
/**
 * Action section of a card, needed as it's used as a selector in the API.
 * \@docs-private
 */
var MdCardActions = (function () {
    function MdCardActions() {
    }
    return MdCardActions;
}());
MdCardActions.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-card-actions, mat-card-actions',
                host: {
                    '[class.mat-card-actions]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardActions.ctorParameters = function () { return []; };
/**
 * Footer of a card, needed as it's used as a selector in the API.
 * \@docs-private
 */
var MdCardFooter = (function () {
    function MdCardFooter() {
    }
    return MdCardFooter;
}());
MdCardFooter.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-card-footer, mat-card-footer',
                host: {
                    '[class.mat-card-footer]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardFooter.ctorParameters = function () { return []; };
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * \@docs-private
 */
var MdCardSmImage = (function () {
    function MdCardSmImage() {
    }
    return MdCardSmImage;
}());
MdCardSmImage.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-card-sm-image], [mat-card-sm-image]',
                host: {
                    '[class.mat-card-sm-image]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardSmImage.ctorParameters = function () { return []; };
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * \@docs-private
 */
var MdCardMdImage = (function () {
    function MdCardMdImage() {
    }
    return MdCardMdImage;
}());
MdCardMdImage.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-card-md-image], [mat-card-md-image]',
                host: {
                    '[class.mat-card-md-image]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardMdImage.ctorParameters = function () { return []; };
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * \@docs-private
 */
var MdCardLgImage = (function () {
    function MdCardLgImage() {
    }
    return MdCardLgImage;
}());
MdCardLgImage.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-card-lg-image], [mat-card-lg-image]',
                host: {
                    'class.mat-card-lg-image': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardLgImage.ctorParameters = function () { return []; };
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * \@docs-private
 */
var MdCardImage = (function () {
    function MdCardImage() {
    }
    return MdCardImage;
}());
MdCardImage.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-card-image], [mat-card-image]',
                host: {
                    '[class.mat-card-image]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardImage.ctorParameters = function () { return []; };
/**
 * Large image used in a card, needed to add the mat- CSS styling.
 * \@docs-private
 */
var MdCardXlImage = (function () {
    function MdCardXlImage() {
    }
    return MdCardXlImage;
}());
MdCardXlImage.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-card-xl-image], [mat-card-xl-image]',
                host: {
                    '[class.mat-card-xl-image]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardXlImage.ctorParameters = function () { return []; };
/**
 * Avatar image used in a card, needed to add the mat- CSS styling.
 * \@docs-private
 */
var MdCardAvatar = (function () {
    function MdCardAvatar() {
    }
    return MdCardAvatar;
}());
MdCardAvatar.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-card-avatar], [mat-card-avatar]',
                host: {
                    '[class.mat-card-avatar]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardAvatar.ctorParameters = function () { return []; };
/**
 * A basic content container component that adds the styles of a Material design card.
 *
 * While this component can be used alone, it also provides a number
 * of preset styles for common card sections, including:
 * - md-card-title
 * - md-card-subtitle
 * - md-card-content
 * - md-card-actions
 * - md-card-footer
 */
var MdCard = (function () {
    function MdCard() {
    }
    return MdCard;
}());
MdCard.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-card, mat-card',
                template: "<ng-content></ng-content> ",
                styles: [".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);will-change:box-shadow;display:block;position:relative;padding:24px;border-radius:2px;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-card:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-flat{box-shadow:none}.mat-card-actions,.mat-card-content,.mat-card-subtitle,.mat-card-title{display:block;margin-bottom:16px}.mat-card-title{font-size:24px;font-weight:400}.mat-card-subtitle{font-size:14px}.mat-card-content{font-size:14px}.mat-card-actions{margin-left:-16px;margin-right:-16px;padding:8px 0}.mat-card-actions[align=end]{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 48px);margin:0 -24px 16px -24px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-footer{position:absolute;width:100%;min-height:5px;bottom:0;left:0}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 4px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header-text{margin:0 8px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0}.mat-card-header .mat-card-title{font-size:14px}.mat-card-lg-image,.mat-card-md-image,.mat-card-sm-image{margin:-8px 0}.mat-card-title-group{display:flex;justify-content:space-between;margin:0 -8px}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}@media (max-width:600px){.mat-card{padding:24px 16px}.mat-card-actions{margin-left:-8px;margin-right:-8px}.mat-card-image{width:calc(100% + 32px);margin:16px -16px}.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}.mat-card-header{margin:-8px 0 0 0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child,.mat-card>:last-child{margin-bottom:0}.mat-card-image:first-child{margin-top:-24px}.mat-card>.mat-card-actions:last-child{margin-bottom:-16px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px} /*# sourceMappingURL=card.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
                host: {
                    '[class.mat-card]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCard.ctorParameters = function () { return []; };
/**
 * Component intended to be used within the `<md-card>` component. It adds styles for a
 * preset header section (i.e. a title, subtitle, and avatar layout).
 * \@docs-private
 */
var MdCardHeader = (function () {
    function MdCardHeader() {
    }
    return MdCardHeader;
}());
MdCardHeader.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-card-header, mat-card-header',
                template: "<ng-content select=\"[md-card-avatar], [mat-card-avatar]\"></ng-content> <div class=\"mat-card-header-text\"> <ng-content select=\"md-card-title, mat-card-title, md-card-subtitle, mat-card-subtitle\"></ng-content> </div> <ng-content></ng-content> ",
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
                host: {
                    '[class.mat-card-header]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardHeader.ctorParameters = function () { return []; };
/**
 * Component intended to be used within the <md-card> component. It adds styles for a preset
 * layout that groups an image with a title section.
 * \@docs-private
 */
var MdCardTitleGroup = (function () {
    function MdCardTitleGroup() {
    }
    return MdCardTitleGroup;
}());
MdCardTitleGroup.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-card-title-group, mat-card-title-group',
                template: "<div> <ng-content select=\"md-card-title, mat-card-title, md-card-subtitle, mat-card-subtitle\"></ng-content> </div> <ng-content select=\"img\"></ng-content> <ng-content></ng-content> ",
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
                host: {
                    '[class.mat-card-title-group]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdCardTitleGroup.ctorParameters = function () { return []; };
var MdCardModule = (function () {
    function MdCardModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdCardModule.forRoot = function () {
        return {
            ngModule: MdCardModule,
            providers: []
        };
    };
    return MdCardModule;
}());
MdCardModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [CompatibilityModule],
                exports: [
                    MdCard,
                    MdCardHeader,
                    MdCardTitleGroup,
                    MdCardContent,
                    MdCardTitle,
                    MdCardSubtitle,
                    MdCardActions,
                    MdCardFooter,
                    MdCardSmImage,
                    MdCardMdImage,
                    MdCardLgImage,
                    MdCardImage,
                    MdCardXlImage,
                    MdCardAvatar,
                    CompatibilityModule,
                ],
                declarations: [
                    MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,
                    MdCardActions, MdCardFooter, MdCardSmImage, MdCardMdImage, MdCardLgImage, MdCardImage,
                    MdCardXlImage, MdCardAvatar,
                ],
            },] },
];
/**
 * @nocollapse
 */
MdCardModule.ctorParameters = function () { return []; };
/**
 * Material design styled Chip component. Used inside the MdChipList component.
 */
var MdChip = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _elementRef
     */
    function MdChip(_renderer, _elementRef) {
        this._renderer = _renderer;
        this._elementRef = _elementRef;
        /** Whether or not the chip is disabled. Disabled chips cannot be focused. */
        this._disabled = null;
        /** Whether or not the chip is selected. */
        this._selected = false;
        /** The palette color of selected chips. */
        this._color = 'primary';
        /** Emitted when the chip is focused. */
        this.onFocus = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Emitted when the chip is selected. */
        this.select = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Emitted when the chip is deselected. */
        this.deselect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Emitted when the chip is destroyed. */
        this.destroy = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
    }
    /**
     * @return {?}
     */
    MdChip.prototype.ngOnInit = function () {
        this._addDefaultCSSClass();
        this._updateColor(this._color);
    };
    /**
     * @return {?}
     */
    MdChip.prototype.ngOnDestroy = function () {
        this.destroy.emit({ chip: this });
    };
    Object.defineProperty(MdChip.prototype, "disabled", {
        /**
         * Whether or not the chip is disabled.
         * @return {?}
         */
        get: function () {
            return this._disabled;
        },
        /**
         * Sets the disabled state of the chip.
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = coerceBooleanProperty(value) ? true : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdChip.prototype, "_isAriaDisabled", {
        /**
         * A String representation of the current disabled state.
         * @return {?}
         */
        get: function () {
            return String(coerceBooleanProperty(this.disabled));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdChip.prototype, "selected", {
        /**
         * Whether or not this chip is selected.
         * @return {?}
         */
        get: function () {
            return this._selected;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._selected = coerceBooleanProperty(value);
            if (this._selected) {
                this.select.emit({ chip: this });
            }
            else {
                this.deselect.emit({ chip: this });
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Toggles the current selected state of this chip.
     * @return {?} Whether the chip is selected.
     */
    MdChip.prototype.toggleSelected = function () {
        this.selected = !this.selected;
        return this.selected;
    };
    Object.defineProperty(MdChip.prototype, "color", {
        /**
         * The color of the chip. Can be `primary`, `accent`, or `warn`.
         * @return {?}
         */
        get: function () {
            return this._color;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._updateColor(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Allows for programmatic focusing of the chip.
     * @return {?}
     */
    MdChip.prototype.focus = function () {
        this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');
        this.onFocus.emit({ chip: this });
    };
    /**
     * Ensures events fire properly upon click.
     * @param {?} event
     * @return {?}
     */
    MdChip.prototype._handleClick = function (event) {
        // Check disabled
        if (this.disabled) {
            event.preventDefault();
            event.stopPropagation();
        }
        else {
            this.focus();
        }
    };
    /**
     * Initializes the appropriate CSS classes based on the chip type (basic or standard).
     * @return {?}
     */
    MdChip.prototype._addDefaultCSSClass = function () {
        var /** @type {?} */ el = this._elementRef.nativeElement;
        // Always add the `mat-chip` class
        el.classList.add('mat-chip');
        // If we are a basic chip, also add the `mat-basic-chip` class for :not() targeting
        if (el.nodeName.toLowerCase() == 'mat-basic-chip' || el.hasAttribute('mat-basic-chip') ||
            el.nodeName.toLowerCase() == 'md-basic-chip' || el.hasAttribute('md-basic-chip')) {
            el.classList.add('mat-basic-chip');
        }
    };
    /**
     * Updates the private _color variable and the native element.
     * @param {?} newColor
     * @return {?}
     */
    MdChip.prototype._updateColor = function (newColor) {
        this._setElementColor(this._color, false);
        this._setElementColor(newColor, true);
        this._color = newColor;
    };
    /**
     * Sets the mat-color on the native element.
     * @param {?} color
     * @param {?} isAdd
     * @return {?}
     */
    MdChip.prototype._setElementColor = function (color, isAdd) {
        if (color != null && color != '') {
            this._renderer.setElementClass(this._elementRef.nativeElement, "mat-" + color, isAdd);
        }
    };
    return MdChip;
}());
MdChip.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{
                selector: "md-basic-chip, [md-basic-chip], md-chip, [md-chip],\n             mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]",
                template: "<ng-content></ng-content>",
                host: {
                    '[class.mat-chip]': 'true',
                    'tabindex': '-1',
                    'role': 'option',
                    '[class.mat-chip-selected]': 'selected',
                    '[attr.disabled]': 'disabled',
                    '[attr.aria-disabled]': '_isAriaDisabled',
                    '(click)': '_handleClick($event)'
                }
            },] },
];
/**
 * @nocollapse
 */
MdChip.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdChip.propDecorators = {
    'select': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'deselect': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'destroy': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'selected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * A material design chips component (named ChipList for it's similarity to the List component).
 *
 * Example:
 *
 *     <md-chip-list>
 *       <md-chip>Chip 1<md-chip>
 *       <md-chip>Chip 2<md-chip>
 *     </md-chip-list>
 */
var MdChipList = (function () {
    /**
     * @param {?} _elementRef
     */
    function MdChipList(_elementRef) {
        this._elementRef = _elementRef;
        this._subscribed = new WeakMap();
        /** Whether or not the chip is selectable. */
        this._selectable = true;
    }
    /**
     * @return {?}
     */
    MdChipList.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._keyManager = new FocusKeyManager(this.chips).withWrap();
        // Go ahead and subscribe all of the initial chips
        this._subscribeChips(this.chips);
        // When the list changes, re-subscribe
        this.chips.changes.subscribe(function (chips) {
            _this._subscribeChips(chips);
        });
    };
    Object.defineProperty(MdChipList.prototype, "selectable", {
        /**
         * Whether or not this chip is selectable. When a chip is not selectable,
         * it's selected state is always ignored.
         * @return {?}
         */
        get: function () {
            return this._selectable;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._selectable = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Programmatically focus the chip list. This in turn focuses the first
     * non-disabled chip in this chip list.
     * @return {?}
     */
    MdChipList.prototype.focus = function () {
        // TODO: ARIA says this should focus the first `selected` chip.
        this._keyManager.setFirstItemActive();
    };
    /**
     * Passes relevant key presses to our key manager.
     * @param {?} event
     * @return {?}
     */
    MdChipList.prototype._keydown = function (event) {
        var /** @type {?} */ target = (event.target);
        // If they are on a chip, check for space/left/right, otherwise pass to our key manager
        if (target && target.classList.contains('mat-chip')) {
            switch (event.keyCode) {
                case SPACE:
                    // If we are selectable, toggle the focused chip
                    if (this.selectable) {
                        this._toggleSelectOnFocusedChip();
                    }
                    // Always prevent space from scrolling the page since the list has focus
                    event.preventDefault();
                    break;
                case LEFT_ARROW:
                    this._keyManager.setPreviousItemActive();
                    event.preventDefault();
                    break;
                case RIGHT_ARROW:
                    this._keyManager.setNextItemActive();
                    event.preventDefault();
                    break;
                default:
                    this._keyManager.onKeydown(event);
            }
        }
    };
    /**
     * Toggles the selected state of the currently focused chip.
     * @return {?}
     */
    MdChipList.prototype._toggleSelectOnFocusedChip = function () {
        // Allow disabling of chip selection
        if (!this.selectable) {
            return;
        }
        var /** @type {?} */ focusedIndex = this._keyManager.activeItemIndex;
        if (this._isValidIndex(focusedIndex)) {
            var /** @type {?} */ focusedChip = this.chips.toArray()[focusedIndex];
            if (focusedChip) {
                focusedChip.toggleSelected();
            }
        }
    };
    /**
     * Iterate through the list of chips and add them to our list of
     * subscribed chips.
     *
     * @param {?} chips The list of chips to be subscribed.
     * @return {?}
     */
    MdChipList.prototype._subscribeChips = function (chips) {
        var _this = this;
        chips.forEach(function (chip) { return _this._addChip(chip); });
    };
    /**
     * Add a specific chip to our subscribed list. If the chip has
     * already been subscribed, this ensures it is only subscribed
     * once.
     *
     * @param {?} chip The chip to be subscribed (or checked for existing
     * subscription).
     * @return {?}
     */
    MdChipList.prototype._addChip = function (chip) {
        var _this = this;
        // If we've already been subscribed to a parent, do nothing
        if (this._subscribed.has(chip)) {
            return;
        }
        // Watch for focus events outside of the keyboard navigation
        chip.onFocus.subscribe(function () {
            var /** @type {?} */ chipIndex = _this.chips.toArray().indexOf(chip);
            if (_this._isValidIndex(chipIndex)) {
                _this._keyManager.updateActiveItemIndex(chipIndex);
            }
        });
        // On destroy, remove the item from our list, and check focus
        chip.destroy.subscribe(function () {
            var /** @type {?} */ chipIndex = _this.chips.toArray().indexOf(chip);
            if (_this._isValidIndex(chipIndex)) {
                // Check whether the chip is the last item
                if (chipIndex < _this.chips.length - 1) {
                    _this._keyManager.setActiveItem(chipIndex);
                }
                else if (chipIndex - 1 >= 0) {
                    _this._keyManager.setActiveItem(chipIndex - 1);
                }
            }
            _this._subscribed.delete(chip);
            chip.destroy.unsubscribe();
        });
        this._subscribed.set(chip, true);
    };
    /**
     * Utility to ensure all indexes are valid.
     *
     * @param {?} index The index to be checked.
     * @return {?} True if the index is valid for our list of chips.
     */
    MdChipList.prototype._isValidIndex = function (index) {
        return index >= 0 && index < this.chips.length;
    };
    return MdChipList;
}());
MdChipList.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-chip-list, mat-chip-list',
                template: "<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>",
                host: {
                    // Properties
                    'tabindex': '0',
                    'role': 'listbox',
                    '[class.mat-chip-list]': 'true',
                    // Events
                    '(focus)': 'focus()',
                    '(keydown)': '_keydown($event)'
                },
                queries: {
                    chips: new __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */](MdChip)
                },
                styles: [".mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:flex-start}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){margin:0 3px 0 3px}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):first-child{margin-left:0;margin-right:3px}[dir=rtl] .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):first-child{margin-left:3px;margin-right:0}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-left:3px;margin-right:0}[dir=rtl] .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-left:0;margin-right:3px}.mat-chip:not(.mat-basic-chip){display:inline-block;padding:8px 12px 8px 12px;border-radius:24px;font-size:13px;line-height:16px}.mat-chip-list-stacked .mat-chip-list-wrapper{display:block}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){display:block;margin:0;margin-bottom:8px}[dir=rtl] .mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){margin:0;margin-bottom:8px}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child,[dir=rtl] .mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-bottom:0} /*# sourceMappingURL=chips.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush
            },] },
];
/**
 * @nocollapse
 */
MdChipList.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdChipList.propDecorators = {
    'selectable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
var MdChipsModule = (function () {
    function MdChipsModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdChipsModule.forRoot = function () {
        return {
            ngModule: MdChipsModule,
            providers: []
        };
    };
    return MdChipsModule;
}());
MdChipsModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [],
                exports: [MdChipList, MdChip],
                declarations: [MdChipList, MdChip]
            },] },
];
/**
 * @nocollapse
 */
MdChipsModule.ctorParameters = function () { return []; };
/**
 * Exception thrown when attempting to load an icon with a name that cannot be found.
 * \@docs-private
 */
var MdIconNameNotFoundError = (function (_super) {
    __extends(MdIconNameNotFoundError, _super);
    /**
     * @param {?} iconName
     */
    function MdIconNameNotFoundError(iconName) {
        return _super.call(this, "Unable to find icon with the name \"" + iconName + "\"") || this;
    }
    return MdIconNameNotFoundError;
}(MdError));
/**
 * Exception thrown when attempting to load SVG content that does not contain the expected
 * <svg> tag.
 * \@docs-private
 */
var MdIconSvgTagNotFoundError = (function (_super) {
    __extends(MdIconSvgTagNotFoundError, _super);
    function MdIconSvgTagNotFoundError() {
        return _super.call(this, '<svg> tag not found') || this;
    }
    return MdIconSvgTagNotFoundError;
}(MdError));
/**
 * Configuration for an icon, including the URL and possibly the cached SVG element.
 * \@docs-private
 */
var SvgIconConfig = (function () {
    /**
     * @param {?} url
     */
    function SvgIconConfig(url) {
        this.url = url;
        this.svgElement = null;
    }
    return SvgIconConfig;
}());
/** Returns the cache key to use for an icon namespace and name. */
var iconKey = function (namespace, name) { return namespace + ':' + name; };
/**
 * Service to register and display icons used by the <md-icon> component.
 * - Registers icon URLs by namespace and name.
 * - Registers icon set URLs by namespace.
 * - Registers aliases for CSS classes, for use with icon fonts.
 * - Loads icons from URLs and extracts individual icons from icon sets.
 */
var MdIconRegistry = (function () {
    /**
     * @param {?} _http
     * @param {?} _sanitizer
     */
    function MdIconRegistry(_http, _sanitizer) {
        this._http = _http;
        this._sanitizer = _sanitizer;
        this._svgIconConfigs = new Map();
        this._iconSetConfigs = new Map();
        this._cachedIconsByUrl = new Map();
        this._inProgressUrlFetches = new Map();
        this._fontCssClassesByAlias = new Map();
        this._defaultFontSetClass = 'material-icons';
    }
    /**
     * Registers an icon by URL in the default namespace.
     * @param {?} iconName Name under which the icon should be registered.
     * @param {?} url
     * @return {?}
     */
    MdIconRegistry.prototype.addSvgIcon = function (iconName, url) {
        return this.addSvgIconInNamespace('', iconName, url);
    };
    /**
     * Registers an icon by URL in the specified namespace.
     * @param {?} namespace Namespace in which the icon should be registered.
     * @param {?} iconName Name under which the icon should be registered.
     * @param {?} url
     * @return {?}
     */
    MdIconRegistry.prototype.addSvgIconInNamespace = function (namespace, iconName, url) {
        var /** @type {?} */ key = iconKey(namespace, iconName);
        this._svgIconConfigs.set(key, new SvgIconConfig(url));
        return this;
    };
    /**
     * Registers an icon set by URL in the default namespace.
     * @param {?} url
     * @return {?}
     */
    MdIconRegistry.prototype.addSvgIconSet = function (url) {
        return this.addSvgIconSetInNamespace('', url);
    };
    /**
     * Registers an icon set by URL in the specified namespace.
     * @param {?} namespace Namespace in which to register the icon set.
     * @param {?} url
     * @return {?}
     */
    MdIconRegistry.prototype.addSvgIconSetInNamespace = function (namespace, url) {
        var /** @type {?} */ config = new SvgIconConfig(url);
        if (this._iconSetConfigs.has(namespace)) {
            this._iconSetConfigs.get(namespace).push(config);
        }
        else {
            this._iconSetConfigs.set(namespace, [config]);
        }
        return this;
    };
    /**
     * Defines an alias for a CSS class name to be used for icon fonts. Creating an mdIcon
     * component with the alias as the fontSet input will cause the class name to be applied
     * to the <md-icon> element.
     *
     * @param {?} alias Alias for the font.
     * @param {?=} className Class name override to be used instead of the alias.
     * @return {?}
     */
    MdIconRegistry.prototype.registerFontClassAlias = function (alias, className) {
        if (className === void 0) { className = alias; }
        this._fontCssClassesByAlias.set(alias, className);
        return this;
    };
    /**
     * Returns the CSS class name associated with the alias by a previous call to
     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.
     * @param {?} alias
     * @return {?}
     */
    MdIconRegistry.prototype.classNameForFontAlias = function (alias) {
        return this._fontCssClassesByAlias.get(alias) || alias;
    };
    /**
     * Sets the CSS class name to be used for icon fonts when an <md-icon> component does not
     * have a fontSet input value, and is not loading an icon by name or URL.
     *
     * @param {?} className
     * @return {?}
     */
    MdIconRegistry.prototype.setDefaultFontSetClass = function (className) {
        this._defaultFontSetClass = className;
        return this;
    };
    /**
     * Returns the CSS class name to be used for icon fonts when an <md-icon> component does not
     * have a fontSet input value, and is not loading an icon by name or URL.
     * @return {?}
     */
    MdIconRegistry.prototype.getDefaultFontSetClass = function () {
        return this._defaultFontSetClass;
    };
    /**
     * Returns an Observable that produces the icon (as an <svg> DOM element) from the given URL.
     * The response from the URL may be cached so this will not always cause an HTTP request, but
     * the produced element will always be a new copy of the originally fetched icon. (That is,
     * it will not contain any modifications made to elements previously returned).
     *
     * @param {?} safeUrl URL from which to fetch the SVG icon.
     * @return {?}
     */
    MdIconRegistry.prototype.getSvgIconFromUrl = function (safeUrl) {
        var _this = this;
        var /** @type {?} */ url = this._sanitizer.sanitize(__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].RESOURCE_URL, safeUrl);
        if (this._cachedIconsByUrl.has(url)) {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].of(cloneSvg(this._cachedIconsByUrl.get(url)));
        }
        return this._loadSvgIconFromConfig(new SvgIconConfig(url))
            .do(function (svg) { return _this._cachedIconsByUrl.set(url, svg); })
            .map(function (svg) { return cloneSvg(svg); });
    };
    /**
     * Returns an Observable that produces the icon (as an <svg> DOM element) with the given name
     * and namespace. The icon must have been previously registered with addIcon or addIconSet;
     * if not, the Observable will throw an MdIconNameNotFoundError.
     *
     * @param {?} name Name of the icon to be retrieved.
     * @param {?=} namespace Namespace in which to look for the icon.
     * @return {?}
     */
    MdIconRegistry.prototype.getNamedSvgIcon = function (name, namespace) {
        if (namespace === void 0) { namespace = ''; }
        // Return (copy of) cached icon if possible.
        var /** @type {?} */ key = iconKey(namespace, name);
        if (this._svgIconConfigs.has(key)) {
            return this._getSvgFromConfig(this._svgIconConfigs.get(key));
        }
        // See if we have any icon sets registered for the namespace.
        var /** @type {?} */ iconSetConfigs = this._iconSetConfigs.get(namespace);
        if (iconSetConfigs) {
            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);
        }
        return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].throw(new MdIconNameNotFoundError(key));
    };
    /**
     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.
     * @param {?} config
     * @return {?}
     */
    MdIconRegistry.prototype._getSvgFromConfig = function (config) {
        if (config.svgElement) {
            // We already have the SVG element for this icon, return a copy.
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].of(cloneSvg(config.svgElement));
        }
        else {
            // Fetch the icon from the config's URL, cache it, and return a copy.
            return this._loadSvgIconFromConfig(config)
                .do(function (svg) { return config.svgElement = svg; })
                .map(function (svg) { return cloneSvg(svg); });
        }
    };
    /**
     * Attempts to find an icon with the specified name in any of the SVG icon sets.
     * First searches the available cached icons for a nested element with a matching name, and
     * if found copies the element to a new <svg> element. If not found, fetches all icon sets
     * that have not been cached, and searches again after all fetches are completed.
     * The returned Observable produces the SVG element if possible, and throws
     * MdIconNameNotFoundError if no icon with the specified name can be found.
     * @param {?} name
     * @param {?} iconSetConfigs
     * @return {?}
     */
    MdIconRegistry.prototype._getSvgFromIconSetConfigs = function (name, iconSetConfigs) {
        var _this = this;
        // For all the icon set SVG elements we've fetched, see if any contain an icon with the
        // requested name.
        var /** @type {?} */ namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);
        if (namedIcon) {
            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every
            // time anyway, there's probably not much advantage compared to just always extracting
            // it from the icon set.
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].of(namedIcon);
        }
        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't
        // fetched, fetch them now and look for iconName in the results.
        var /** @type {?} */ iconSetFetchRequests = iconSetConfigs
            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })
            .map(function (iconSetConfig) { return _this._loadSvgIconSetFromConfig(iconSetConfig)
            .catch(function (err, caught) {
            var /** @type {?} */ url = _this._sanitizer.sanitize(__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].RESOURCE_URL, iconSetConfig.url);
            // Swallow errors fetching individual URLs so the combined Observable won't
            // necessarily fail.
            console.log("Loading icon set URL: " + url + " failed: " + err);
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].of(null);
        })
            .do(function (svg) {
            // Cache SVG element.
            if (svg) {
                iconSetConfig.svgElement = svg;
            }
        }); });
        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a
        // cached SVG element (unless the request failed), and we can check again for the icon.
        return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].forkJoin(iconSetFetchRequests)
            .map(function (ignoredResults) {
            var /** @type {?} */ foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);
            if (!foundIcon) {
                throw new MdIconNameNotFoundError(name);
            }
            return foundIcon;
        });
    };
    /**
     * Searches the cached SVG elements for the given icon sets for a nested icon element whose "id"
     * tag matches the specified name. If found, copies the nested element to a new SVG element and
     * returns it. Returns null if no matching element is found.
     * @param {?} iconName
     * @param {?} iconSetConfigs
     * @return {?}
     */
    MdIconRegistry.prototype._extractIconWithNameFromAnySet = function (iconName, iconSetConfigs) {
        // Iterate backwards, so icon sets added later have precedence.
        for (var /** @type {?} */ i = iconSetConfigs.length - 1; i >= 0; i--) {
            var /** @type {?} */ config = iconSetConfigs[i];
            if (config.svgElement) {
                var /** @type {?} */ foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);
                if (foundIcon) {
                    return foundIcon;
                }
            }
        }
        return null;
    };
    /**
     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element
     * from it.
     * @param {?} config
     * @return {?}
     */
    MdIconRegistry.prototype._loadSvgIconFromConfig = function (config) {
        var _this = this;
        return this._fetchUrl(config.url)
            .map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText); });
    };
    /**
     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element
     * from it.
     * @param {?} config
     * @return {?}
     */
    MdIconRegistry.prototype._loadSvgIconSetFromConfig = function (config) {
        var _this = this;
        // TODO: Document that icons should only be loaded from trusted sources.
        return this._fetchUrl(config.url)
            .map(function (svgText) { return _this._svgElementFromString(svgText); });
    };
    /**
     * Creates a DOM element from the given SVG string, and adds default attributes.
     * @param {?} responseText
     * @return {?}
     */
    MdIconRegistry.prototype._createSvgElementForSingleIcon = function (responseText) {
        var /** @type {?} */ svg = this._svgElementFromString(responseText);
        this._setSvgAttributes(svg);
        return svg;
    };
    /**
     * Searches the cached element of the given SvgIconConfig for a nested icon element whose "id"
     * tag matches the specified name. If found, copies the nested element to a new SVG element and
     * returns it. Returns null if no matching element is found.
     * @param {?} iconSet
     * @param {?} iconName
     * @return {?}
     */
    MdIconRegistry.prototype._extractSvgIconFromSet = function (iconSet, iconName) {
        var /** @type {?} */ iconNode = iconSet.querySelector('#' + iconName);
        if (!iconNode) {
            return null;
        }
        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as
        // the content of a new <svg> node.
        if (iconNode.tagName.toLowerCase() == 'svg') {
            return this._setSvgAttributes(/** @type {?} */ (iconNode.cloneNode(true)));
        }
        // createElement('SVG') doesn't work as expected; the DOM ends up with
        // the correct nodes, but the SVG content doesn't render. Instead we
        // have to create an empty SVG node using innerHTML and append its content.
        // Elements created using DOMParser.parseFromString have the same problem.
        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display
        var /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');
        // Clone the node so we don't remove it from the parent icon set element.
        svg.appendChild(iconNode.cloneNode(true));
        return this._setSvgAttributes(svg);
    };
    /**
     * Creates a DOM element from the given SVG string.
     * @param {?} str
     * @return {?}
     */
    MdIconRegistry.prototype._svgElementFromString = function (str) {
        // TODO: Is there a better way than innerHTML? Renderer doesn't appear to have a method for
        // creating an element from an HTML string.
        var /** @type {?} */ div = document.createElement('DIV');
        div.innerHTML = str;
        var /** @type {?} */ svg = (div.querySelector('svg'));
        if (!svg) {
            throw new MdIconSvgTagNotFoundError();
        }
        return svg;
    };
    /**
     * Sets the default attributes for an SVG element to be used as an icon.
     * @param {?} svg
     * @return {?}
     */
    MdIconRegistry.prototype._setSvgAttributes = function (svg) {
        if (!svg.getAttribute('xmlns')) {
            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
        }
        svg.setAttribute('fit', '');
        svg.setAttribute('height', '100%');
        svg.setAttribute('width', '100%');
        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');
        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.
        return svg;
    };
    /**
     * Returns an Observable which produces the string contents of the given URL. Results may be
     * cached, so future calls with the same URL may not cause another HTTP request.
     * @param {?} safeUrl
     * @return {?}
     */
    MdIconRegistry.prototype._fetchUrl = function (safeUrl) {
        var _this = this;
        var /** @type {?} */ url = this._sanitizer.sanitize(__WEBPACK_IMPORTED_MODULE_0__angular_core__["G" /* SecurityContext */].RESOURCE_URL, safeUrl);
        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is
        // already a request in progress for that URL. It's necessary to call share() on the
        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.
        if (this._inProgressUrlFetches.has(url)) {
            return this._inProgressUrlFetches.get(url);
        }
        // TODO(jelbourn): for some reason, the `finally` operator "loses" the generic type on the
        // Observable. Figure out why and fix it.
        var /** @type {?} */ req = (this._http.get(url)
            .map(function (response) { return response.text(); })
            .finally(function () {
            _this._inProgressUrlFetches.delete(url);
        })
            .share());
        this._inProgressUrlFetches.set(url, req);
        return req;
    };
    return MdIconRegistry;
}());
MdIconRegistry.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
MdIconRegistry.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_12__angular_http__["b" /* Http */], },
    { type: __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["e" /* DomSanitizer */], },
]; };
/**
 * Clones an SVGElement while preserving type information.
 * @param {?} svg
 * @return {?}
 */
function cloneSvg(svg) {
    return (svg.cloneNode(true));
}
/**
 * Exception thrown when an invalid icon name is passed to an md-icon component.
 */
var MdIconInvalidNameError = (function (_super) {
    __extends(MdIconInvalidNameError, _super);
    /**
     * @param {?} iconName
     */
    function MdIconInvalidNameError(iconName) {
        return _super.call(this, "Invalid icon name: \"" + iconName + "\"") || this;
    }
    return MdIconInvalidNameError;
}(MdError));
/**
 * Component to display an icon. It can be used in the following ways:
 * - Specify the svgSrc input to load an SVG icon from a URL. The SVG content is directly inlined
 *   as a child of the <md-icon> component, so that CSS styles can easily be applied to it.
 *   The URL is loaded via an XMLHttpRequest, so it must be on the same domain as the page or its
 *   server must be configured to allow cross-domain requests.
 *   Example:
 *     <md-icon svgSrc="assets/arrow.svg"></md-icon>
 *
 * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the
 *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of
 *   MdIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format
 *   "[namespace]:[name]", if not the value will be the name of an icon in the default namespace.
 *   Examples:
 *     <md-icon svgIcon="left-arrow"></md-icon>
 *     <md-icon svgIcon="animals:cat"></md-icon>
 *
 * - Use a font ligature as an icon by putting the ligature text in the content of the <md-icon>
 *   component. By default the Material icons font is used as described at
 *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an
 *   alternate font by setting the fontSet input to either the CSS class to apply to use the
 *   desired font, or to an alias previously registered with MdIconRegistry.registerFontClassAlias.
 *   Examples:
 *     <md-icon>home</md-icon>
 *     <md-icon fontSet="myfont">sun</md-icon>
 *
 * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the
 *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a
 *   CSS class which causes the glyph to be displayed via a :before selector, as in
 *   https://fortawesome.github.io/Font-Awesome/examples/
 *   Example:
 *     <md-icon fontSet="fa" fontIcon="alarm"></md-icon>
 */
var MdIcon = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _renderer
     * @param {?} _mdIconRegistry
     */
    function MdIcon(_elementRef, _renderer, _mdIconRegistry) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._mdIconRegistry = _mdIconRegistry;
        /** Screenreader label for the icon. */
        this.hostAriaLabel = '';
    }
    Object.defineProperty(MdIcon.prototype, "color", {
        /**
         * Color of the icon.
         * @return {?}
         */
        get: function () { return this._color; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._updateColor(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} newColor
     * @return {?}
     */
    MdIcon.prototype._updateColor = function (newColor) {
        this._setElementColor(this._color, false);
        this._setElementColor(newColor, true);
        this._color = newColor;
    };
    /**
     * @param {?} color
     * @param {?} isAdd
     * @return {?}
     */
    MdIcon.prototype._setElementColor = function (color, isAdd) {
        if (color != null && color != '') {
            this._renderer.setElementClass(this._elementRef.nativeElement, "mat-" + color, isAdd);
        }
    };
    /**
     * Splits an svgIcon binding value into its icon set and icon name components.
     * Returns a 2-element array of [(icon set), (icon name)].
     * The separator for the two fields is ':'. If there is no separator, an empty
     * string is returned for the icon set and the entire value is returned for
     * the icon name. If the argument is falsy, returns an array of two empty strings.
     * Throws a MdIconInvalidNameError if the name contains two or more ':' separators.
     * Examples:
     *   'social:cake' -> ['social', 'cake']
     *   'penguin' -> ['', 'penguin']
     *   null -> ['', '']
     *   'a:b:c' -> (throws MdIconInvalidNameError)
     * @param {?} iconName
     * @return {?}
     */
    MdIcon.prototype._splitIconName = function (iconName) {
        if (!iconName) {
            return ['', ''];
        }
        var /** @type {?} */ parts = iconName.split(':');
        switch (parts.length) {
            case 1:
                // Use default namespace.
                return ['', parts[0]];
            case 2:
                return (parts);
            default:
                throw new MdIconInvalidNameError(iconName);
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    MdIcon.prototype.ngOnChanges = function (changes) {
        var _this = this;
        var /** @type {?} */ changedInputs = Object.keys(changes);
        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.
        if (changedInputs.indexOf('svgIcon') != -1 || changedInputs.indexOf('svgSrc') != -1) {
            if (this.svgIcon) {
                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];
                this._mdIconRegistry.getNamedSvgIcon(iconName, namespace).first().subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log("Error retrieving icon: " + err.message); });
            }
        }
        if (this._usingFontIcon()) {
            this._updateFontIconClasses();
        }
        this._updateAriaLabel();
    };
    /**
     * @return {?}
     */
    MdIcon.prototype.ngOnInit = function () {
        // Update font classes because ngOnChanges won't be called if none of the inputs are present,
        // e.g. <md-icon>arrow</md-icon>. In this case we need to add a CSS class for the default font.
        if (this._usingFontIcon()) {
            this._updateFontIconClasses();
        }
    };
    /**
     * @return {?}
     */
    MdIcon.prototype.ngAfterViewChecked = function () {
        // Update aria label here because it may depend on the projected text content.
        // (e.g. <md-icon>home</md-icon> should use 'home').
        this._updateAriaLabel();
    };
    /**
     * @return {?}
     */
    MdIcon.prototype._updateAriaLabel = function () {
        var /** @type {?} */ ariaLabel = this._getAriaLabel();
        if (ariaLabel && ariaLabel !== this._previousAriaLabel) {
            this._previousAriaLabel = ariaLabel;
            this._renderer.setElementAttribute(this._elementRef.nativeElement, 'aria-label', ariaLabel);
        }
    };
    /**
     * @return {?}
     */
    MdIcon.prototype._getAriaLabel = function () {
        // If the parent provided an aria-label attribute value, use it as-is. Otherwise look for a
        // reasonable value from the alt attribute, font icon name, SVG icon name, or (for ligatures)
        // the text content of the directive.
        var /** @type {?} */ label = this.hostAriaLabel ||
            this.alt ||
            this.fontIcon ||
            this._splitIconName(this.svgIcon)[1];
        if (label) {
            return label;
        }
        // The "content" of an SVG icon is not a useful label.
        if (this._usingFontIcon()) {
            var /** @type {?} */ text = this._elementRef.nativeElement.textContent;
            if (text) {
                return text;
            }
        }
        // TODO: Warn here in dev mode.
        return null;
    };
    /**
     * @return {?}
     */
    MdIcon.prototype._usingFontIcon = function () {
        return !this.svgIcon;
    };
    /**
     * @param {?} svg
     * @return {?}
     */
    MdIcon.prototype._setSvgElement = function (svg) {
        var /** @type {?} */ layoutElement = this._elementRef.nativeElement;
        // Remove existing child nodes and add the new SVG element.
        // We would use renderer.detachView(Array.from(layoutElement.childNodes)) here,
        // but it fails in IE11: https://github.com/angular/angular/issues/6327
        layoutElement.innerHTML = '';
        this._renderer.projectNodes(layoutElement, [svg]);
    };
    /**
     * @return {?}
     */
    MdIcon.prototype._updateFontIconClasses = function () {
        if (!this._usingFontIcon()) {
            return;
        }
        var /** @type {?} */ elem = this._elementRef.nativeElement;
        var /** @type {?} */ fontSetClass = this.fontSet ?
            this._mdIconRegistry.classNameForFontAlias(this.fontSet) :
            this._mdIconRegistry.getDefaultFontSetClass();
        if (fontSetClass != this._previousFontSetClass) {
            if (this._previousFontSetClass) {
                this._renderer.setElementClass(elem, this._previousFontSetClass, false);
            }
            if (fontSetClass) {
                this._renderer.setElementClass(elem, fontSetClass, true);
            }
            this._previousFontSetClass = fontSetClass;
        }
        if (this.fontIcon != this._previousFontIconClass) {
            if (this._previousFontIconClass) {
                this._renderer.setElementClass(elem, this._previousFontIconClass, false);
            }
            if (this.fontIcon) {
                this._renderer.setElementClass(elem, this.fontIcon, true);
            }
            this._previousFontIconClass = this.fontIcon;
        }
    };
    return MdIcon;
}());
MdIcon.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ template: '<ng-content></ng-content>',
                selector: 'md-icon, mat-icon',
                styles: [".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px} /*# sourceMappingURL=icon.css.map */ "],
                host: {
                    'role': 'img',
                    '[class.mat-icon]': 'true',
                },
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
            },] },
];
/**
 * @nocollapse
 */
MdIcon.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: MdIconRegistry, },
]; };
MdIcon.propDecorators = {
    'svgIcon': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'fontSet': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'fontIcon': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'alt': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'hostAriaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-label',] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * @param {?} parentRegistry
 * @param {?} http
 * @param {?} sanitizer
 * @return {?}
 */
function ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, http, sanitizer) {
    return parentRegistry || new MdIconRegistry(http, sanitizer);
}
var ICON_REGISTRY_PROVIDER = {
    // If there is already an MdIconRegistry available, use that. Otherwise, provide a new one.
    provide: MdIconRegistry,
    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */](), MdIconRegistry], __WEBPACK_IMPORTED_MODULE_12__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["e" /* DomSanitizer */]],
    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,
};
var MdIconModule = (function () {
    function MdIconModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdIconModule.forRoot = function () {
        return {
            ngModule: MdIconModule,
            providers: [],
        };
    };
    return MdIconModule;
}());
MdIconModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_12__angular_http__["a" /* HttpModule */], CompatibilityModule],
                exports: [MdIcon, CompatibilityModule],
                declarations: [MdIcon],
                providers: [ICON_REGISTRY_PROVIDER],
            },] },
];
/**
 * @nocollapse
 */
MdIconModule.ctorParameters = function () { return []; };
// TODO(josephperrott): Benchpress tests.
/** A single degree in radians. */
var DEGREE_IN_RADIANS = Math.PI / 180;
/** Duration of the indeterminate animation. */
var DURATION_INDETERMINATE = 667;
/** Duration of the indeterminate animation. */
var DURATION_DETERMINATE = 225;
/** Start animation value of the indeterminate animation */
var startIndeterminate = 3;
/** End animation value of the indeterminate animation */
var endIndeterminate = 80;
/* Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden. */
var MAX_ANGLE = 359.99 / 100;
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * \@docs-private
 */
var MdProgressSpinnerCssMatStyler = (function () {
    function MdProgressSpinnerCssMatStyler() {
    }
    return MdProgressSpinnerCssMatStyler;
}());
MdProgressSpinnerCssMatStyler.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-progress-spinner, mat-progress-spinner',
                host: {
                    '[class.mat-progress-spinner]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdProgressSpinnerCssMatStyler.ctorParameters = function () { return []; };
/**
 * <md-progress-spinner> component.
 */
var MdProgressSpinner = (function () {
    /**
     * @param {?} _ngZone
     * @param {?} _elementRef
     * @param {?} _renderer
     */
    function MdProgressSpinner(_ngZone, _elementRef, _renderer) {
        this._ngZone = _ngZone;
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._lastAnimationId = 0;
        this._mode = 'determinate';
        this._color = 'primary';
    }
    Object.defineProperty(MdProgressSpinner.prototype, "_ariaValueMin", {
        /**
         * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this
         * because voiceover does not report the progress indicator as indeterminate if the aria min
         * and/or max value are number values.
         * @return {?}
         */
        get: function () {
            return this.mode == 'determinate' ? 0 : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdProgressSpinner.prototype, "_ariaValueMax", {
        /**
         * @return {?}
         */
        get: function () {
            return this.mode == 'determinate' ? 100 : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdProgressSpinner.prototype, "interdeterminateInterval", {
        /**
         * \@docs-private
         * @return {?}
         */
        get: function () {
            return this._interdeterminateInterval;
        },
        /**
         * \@docs-private
         * @param {?} interval
         * @return {?}
         */
        set: function (interval) {
            clearInterval(this._interdeterminateInterval);
            this._interdeterminateInterval = interval;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Clean up any animations that were running.
     * @return {?}
     */
    MdProgressSpinner.prototype.ngOnDestroy = function () {
        this._cleanupIndeterminateAnimation();
    };
    Object.defineProperty(MdProgressSpinner.prototype, "color", {
        /**
         * The color of the progress-spinner. Can be primary, accent, or warn.
         * @return {?}
         */
        get: function () { return this._color; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._updateColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdProgressSpinner.prototype, "value", {
        /**
         * Value of the progress circle. It is bound to the host as the attribute aria-valuenow.
         * @return {?}
         */
        get: function () {
            if (this.mode == 'determinate') {
                return this._value;
            }
        },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            if (v != null && this.mode == 'determinate') {
                var /** @type {?} */ newValue = clamp(v);
                this._animateCircle(this.value || 0, newValue);
                this._value = newValue;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdProgressSpinner.prototype, "mode", {
        /**
         * Mode of the progress circle
         *
         * Input must be one of the values from ProgressMode, defaults to 'determinate'.
         * mode is bound to the host as the attribute host.
         * @return {?}
         */
        get: function () {
            return this._mode;
        },
        /**
         * @param {?} mode
         * @return {?}
         */
        set: function (mode) {
            if (mode !== this._mode) {
                if (mode === 'indeterminate') {
                    this._startIndeterminateAnimation();
                }
                else {
                    this._cleanupIndeterminateAnimation();
                    this._animateCircle(0, this._value);
                }
                this._mode = mode;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Animates the circle from one percentage value to another.
     *
     * @param {?} animateFrom The percentage of the circle filled starting the animation.
     * @param {?} animateTo The percentage of the circle filled ending the animation.
     * @param {?=} ease The easing function to manage the pace of change in the animation.
     * @param {?=} duration The length of time to show the animation, in milliseconds.
     * @param {?=} rotation The starting angle of the circle fill, with 0° represented at the top center
     *    of the circle.
     * @return {?}
     */
    MdProgressSpinner.prototype._animateCircle = function (animateFrom, animateTo, ease, duration, rotation) {
        var _this = this;
        if (ease === void 0) { ease = linearEase; }
        if (duration === void 0) { duration = DURATION_DETERMINATE; }
        if (rotation === void 0) { rotation = 0; }
        var /** @type {?} */ id = ++this._lastAnimationId;
        var /** @type {?} */ startTime = Date.now();
        var /** @type {?} */ changeInValue = animateTo - animateFrom;
        // No need to animate it if the values are the same
        if (animateTo === animateFrom) {
            this._renderArc(animateTo, rotation);
        }
        else {
            var /** @type {?} */ animation_1 = function () {
                var /** @type {?} */ elapsedTime = Math.max(0, Math.min(Date.now() - startTime, duration));
                _this._renderArc(ease(elapsedTime, animateFrom, changeInValue, duration), rotation);
                // Prevent overlapping animations by checking if a new animation has been called for and
                // if the animation has lasted longer than the animation duration.
                if (id === _this._lastAnimationId && elapsedTime < duration) {
                    requestAnimationFrame(animation_1);
                }
            };
            // Run the animation outside of Angular's zone, in order to avoid
            // hitting ZoneJS and change detection on each frame.
            this._ngZone.runOutsideAngular(animation_1);
        }
    };
    /**
     * Starts the indeterminate animation interval, if it is not already running.
     * @return {?}
     */
    MdProgressSpinner.prototype._startIndeterminateAnimation = function () {
        var _this = this;
        var /** @type {?} */ rotationStartPoint = 0;
        var /** @type {?} */ start = startIndeterminate;
        var /** @type {?} */ end = endIndeterminate;
        var /** @type {?} */ duration = DURATION_INDETERMINATE;
        var /** @type {?} */ animate$$1 = function () {
            _this._animateCircle(start, end, materialEase, duration, rotationStartPoint);
            // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.
            rotationStartPoint = (rotationStartPoint + end) % 100;
            var /** @type {?} */ temp = start;
            start = -end;
            end = -temp;
        };
        if (!this.interdeterminateInterval) {
            this._ngZone.runOutsideAngular(function () {
                _this.interdeterminateInterval = setInterval(animate$$1, duration + 50, 0, false);
                animate$$1();
            });
        }
    };
    /**
     * Removes interval, ending the animation.
     * @return {?}
     */
    MdProgressSpinner.prototype._cleanupIndeterminateAnimation = function () {
        this.interdeterminateInterval = null;
    };
    /**
     * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper
     * DOM attribute on the `<path>`.
     * @param {?} currentValue
     * @param {?=} rotation
     * @return {?}
     */
    MdProgressSpinner.prototype._renderArc = function (currentValue, rotation) {
        if (rotation === void 0) { rotation = 0; }
        // Caches the path reference so it doesn't have to be looked up every time.
        var /** @type {?} */ path = this._path = this._path || this._elementRef.nativeElement.querySelector('path');
        // Ensure that the path was found. This may not be the case if the
        // animation function fires too early.
        if (path) {
            path.setAttribute('d', getSvgArc(currentValue, rotation));
        }
    };
    /**
     * Updates the color of the progress-spinner by adding the new palette class to the element
     * and removing the old one.
     * @param {?} newColor
     * @return {?}
     */
    MdProgressSpinner.prototype._updateColor = function (newColor) {
        this._setElementColor(this._color, false);
        this._setElementColor(newColor, true);
        this._color = newColor;
    };
    /**
     * Sets the given palette class on the component element.
     * @param {?} color
     * @param {?} isAdd
     * @return {?}
     */
    MdProgressSpinner.prototype._setElementColor = function (color, isAdd) {
        if (color != null && color != '') {
            this._renderer.setElementClass(this._elementRef.nativeElement, "mat-" + color, isAdd);
        }
    };
    return MdProgressSpinner;
}());
MdProgressSpinner.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-progress-spinner, mat-progress-spinner',
                host: {
                    'role': 'progressbar',
                    '[attr.aria-valuemin]': '_ariaValueMin',
                    '[attr.aria-valuemax]': '_ariaValueMax'
                },
                template: "<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid meet\"> <path></path> </svg> ",
                styles: [":host{display:block;height:100px;width:100px;overflow:hidden}:host svg{height:100%;width:100%;transform-origin:center}:host path{fill:transparent;stroke-width:10px;transition:stroke .3s cubic-bezier(.35,0,.25,1)}:host[mode=indeterminate] svg{animation-duration:5.25s,2.887s;animation-name:mat-progress-spinner-sporadic-rotate,mat-progress-spinner-linear-rotate;animation-timing-function:cubic-bezier(.35,0,.25,1),linear;animation-iteration-count:infinite;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-sporadic-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}} /*# sourceMappingURL=progress-spinner.css.map */ "],
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
            },] },
];
/**
 * @nocollapse
 */
MdProgressSpinner.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
MdProgressSpinner.propDecorators = {
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['attr.aria-valuenow',] },],
    'mode': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['attr.mode',] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * <md-spinner> component.
 *
 * This is a component definition to be used as a convenience reference to create an
 * indeterminate <md-progress-spinner> instance.
 */
var MdSpinner = (function (_super) {
    __extends(MdSpinner, _super);
    /**
     * @param {?} elementRef
     * @param {?} ngZone
     * @param {?} renderer
     */
    function MdSpinner(elementRef, ngZone, renderer) {
        var _this = _super.call(this, ngZone, elementRef, renderer) || this;
        _this.mode = 'indeterminate';
        return _this;
    }
    /**
     * @return {?}
     */
    MdSpinner.prototype.ngOnDestroy = function () {
        // The `ngOnDestroy` from `MdProgressSpinner` should be called explicitly, because
        // in certain cases Angular won't call it (e.g. when using AoT and in unit tests).
        _super.prototype.ngOnDestroy.call(this);
    };
    return MdSpinner;
}(MdProgressSpinner));
MdSpinner.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-spinner, mat-spinner',
                host: {
                    'role': 'progressbar',
                    'mode': 'indeterminate',
                    '[class.mat-spinner]': 'true',
                },
                template: "<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid meet\"> <path></path> </svg> ",
                styles: [":host{display:block;height:100px;width:100px;overflow:hidden}:host svg{height:100%;width:100%;transform-origin:center}:host path{fill:transparent;stroke-width:10px;transition:stroke .3s cubic-bezier(.35,0,.25,1)}:host[mode=indeterminate] svg{animation-duration:5.25s,2.887s;animation-name:mat-progress-spinner-sporadic-rotate,mat-progress-spinner-linear-rotate;animation-timing-function:cubic-bezier(.35,0,.25,1),linear;animation-iteration-count:infinite;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-sporadic-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}} /*# sourceMappingURL=progress-spinner.css.map */ "],
            },] },
];
/**
 * @nocollapse
 */
MdSpinner.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
/**
 * Clamps a value to be between 0 and 100.
 * @param {?} v
 * @return {?}
 */
function clamp(v) {
    return Math.max(0, Math.min(100, v));
}
/**
 * Converts Polar coordinates to Cartesian.
 * @param {?} radius
 * @param {?} pathRadius
 * @param {?} angleInDegrees
 * @return {?}
 */
function polarToCartesian(radius, pathRadius, angleInDegrees) {
    var /** @type {?} */ angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;
    return (radius + (pathRadius * Math.cos(angleInRadians))) +
        ',' + (radius + (pathRadius * Math.sin(angleInRadians)));
}
/**
 * Easing function for linear animation.
 * @param {?} currentTime
 * @param {?} startValue
 * @param {?} changeInValue
 * @param {?} duration
 * @return {?}
 */
function linearEase(currentTime, startValue, changeInValue, duration) {
    return changeInValue * currentTime / duration + startValue;
}
/**
 * Easing function to match material design indeterminate animation.
 * @param {?} currentTime
 * @param {?} startValue
 * @param {?} changeInValue
 * @param {?} duration
 * @return {?}
 */
function materialEase(currentTime, startValue, changeInValue, duration) {
    var /** @type {?} */ time = currentTime / duration;
    var /** @type {?} */ timeCubed = Math.pow(time, 3);
    var /** @type {?} */ timeQuad = Math.pow(time, 4);
    var /** @type {?} */ timeQuint = Math.pow(time, 5);
    return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));
}
/**
 * Determines the path value to define the arc.  Converting percentage values to to polar
 * coordinates on the circle, and then to cartesian coordinates in the viewport.
 *
 * @param {?} currentValue The current percentage value of the progress circle, the percentage of the
 *    circle to fill.
 * @param {?} rotation The starting point of the circle with 0 being the 0 degree point.
 * @return {?} A string for an SVG path representing a circle filled from the starting point to the
 *    percentage value provided.
 */
function getSvgArc(currentValue, rotation) {
    var /** @type {?} */ startPoint = rotation || 0;
    var /** @type {?} */ radius = 50;
    var /** @type {?} */ pathRadius = 40;
    var /** @type {?} */ startAngle = startPoint * MAX_ANGLE;
    var /** @type {?} */ endAngle = currentValue * MAX_ANGLE;
    var /** @type {?} */ start = polarToCartesian(radius, pathRadius, startAngle);
    var /** @type {?} */ end = polarToCartesian(radius, pathRadius, endAngle + startAngle);
    var /** @type {?} */ arcSweep = endAngle < 0 ? 0 : 1;
    var /** @type {?} */ largeArcFlag;
    if (endAngle < 0) {
        largeArcFlag = endAngle >= -180 ? 0 : 1;
    }
    else {
        largeArcFlag = endAngle <= 180 ? 0 : 1;
    }
    return "M" + start + "A" + pathRadius + "," + pathRadius + " 0 " + largeArcFlag + "," + arcSweep + " " + end;
}
var MdProgressSpinnerModule = (function () {
    function MdProgressSpinnerModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdProgressSpinnerModule.forRoot = function () {
        return {
            ngModule: MdProgressSpinnerModule,
            providers: []
        };
    };
    return MdProgressSpinnerModule;
}());
MdProgressSpinnerModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [CompatibilityModule],
                exports: [
                    MdProgressSpinner,
                    MdSpinner,
                    CompatibilityModule,
                    MdProgressSpinnerCssMatStyler
                ],
                declarations: [
                    MdProgressSpinner,
                    MdSpinner,
                    MdProgressSpinnerCssMatStyler
                ],
            },] },
];
/**
 * @nocollapse
 */
MdProgressSpinnerModule.ctorParameters = function () { return []; };
/**
 * <md-progress-bar> component.
 */
var MdProgressBar = (function () {
    function MdProgressBar() {
        /** Color of the progress bar. */
        this.color = 'primary';
        this._value = 0;
        this._bufferValue = 0;
        /**
         * Mode of the progress bar.
         *
         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to
         * 'determinate'.
         * Mirrored to mode attribute.
         */
        this.mode = 'determinate';
    }
    Object.defineProperty(MdProgressBar.prototype, "value", {
        /**
         * Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow.
         * @return {?}
         */
        get: function () { return this._value; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this._value = clamp$1(v || 0); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdProgressBar.prototype, "bufferValue", {
        /**
         * Buffer value of the progress bar. Defaults to zero.
         * @return {?}
         */
        get: function () { return this._bufferValue; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this._bufferValue = clamp$1(v || 0); },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the current transform value for the progress bar's primary indicator.
     * @return {?}
     */
    MdProgressBar.prototype._primaryTransform = function () {
        var /** @type {?} */ scale = this.value / 100;
        return { transform: "scaleX(" + scale + ")" };
    };
    /**
     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the
     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.
     * @return {?}
     */
    MdProgressBar.prototype._bufferTransform = function () {
        if (this.mode == 'buffer') {
            var /** @type {?} */ scale = this.bufferValue / 100;
            return { transform: "scaleX(" + scale + ")" };
        }
    };
    return MdProgressBar;
}());
MdProgressBar.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-progress-bar, mat-progress-bar',
                host: {
                    'role': 'progressbar',
                    'aria-valuemin': '0',
                    'aria-valuemax': '100',
                    '[class.mat-primary]': 'color == "primary"',
                    '[class.mat-accent]': 'color == "accent"',
                    '[class.mat-warn]': 'color == "warn"',
                    '[class.mat-progress-bar]': 'true',
                },
                template: "<!-- The background div is named as such because it appears below the other divs and is not sized based on values. --> <div class=\"mat-progress-bar-background mat-progress-bar-element\"></div> <div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div> <div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\"></div> <div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div> ",
                styles: [":host{display:block;height:5px;overflow:hidden;position:relative;transform:translateZ(0);transition:opacity 250ms linear;width:100%}:host .mat-progress-bar-element,:host .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}:host .mat-progress-bar-background{background-repeat:repeat-x;background-size:10px 4px;display:none}:host .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1)}:host .mat-progress-bar-secondary{display:none}:host .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1)}:host .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}:host[mode=query]{transform:rotateZ(180deg)}:host[mode=indeterminate] .mat-progress-bar-fill,:host[mode=query] .mat-progress-bar-fill{transition:none}:host[mode=indeterminate] .mat-progress-bar-primary,:host[mode=query] .mat-progress-bar-primary{animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}:host[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}:host[mode=indeterminate] .mat-progress-bar-secondary,:host[mode=query] .mat-progress-bar-secondary{animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}:host[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}:host[mode=buffer] .mat-progress-bar-background{animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}:host-context([dir=rtl]){transform:rotateY(180deg)}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}} /*# sourceMappingURL=progress-bar.css.map */ "],
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
            },] },
];
/**
 * @nocollapse
 */
MdProgressBar.ctorParameters = function () { return []; };
MdProgressBar.propDecorators = {
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['attr.aria-valuenow',] },],
    'bufferValue': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'mode': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["l" /* HostBinding */], args: ['attr.mode',] },],
};
/**
 * Clamps a value to be between two numbers, by default 0 and 100.
 * @param {?} v
 * @param {?=} min
 * @param {?=} max
 * @return {?}
 */
function clamp$1(v, min, max) {
    if (min === void 0) { min = 0; }
    if (max === void 0) { max = 100; }
    return Math.max(min, Math.min(max, v));
}
var MdProgressBarModule = (function () {
    function MdProgressBarModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdProgressBarModule.forRoot = function () {
        return {
            ngModule: MdProgressBarModule,
            providers: []
        };
    };
    return MdProgressBarModule;
}());
MdProgressBarModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */], CompatibilityModule],
                exports: [MdProgressBar, CompatibilityModule],
                declarations: [MdProgressBar],
            },] },
];
/**
 * @nocollapse
 */
MdProgressBarModule.ctorParameters = function () { return []; };
/**
 * \@docs-private
 */
var MdInputContainerPlaceholderConflictError = (function (_super) {
    __extends(MdInputContainerPlaceholderConflictError, _super);
    function MdInputContainerPlaceholderConflictError() {
        return _super.call(this, 'Placeholder attribute and child element were both specified.') || this;
    }
    return MdInputContainerPlaceholderConflictError;
}(MdError));
/**
 * \@docs-private
 */
var MdInputContainerUnsupportedTypeError = (function (_super) {
    __extends(MdInputContainerUnsupportedTypeError, _super);
    /**
     * @param {?} type
     */
    function MdInputContainerUnsupportedTypeError(type) {
        return _super.call(this, "Input type \"" + type + "\" isn't supported by md-input-container.") || this;
    }
    return MdInputContainerUnsupportedTypeError;
}(MdError));
/**
 * \@docs-private
 */
var MdInputContainerDuplicatedHintError = (function (_super) {
    __extends(MdInputContainerDuplicatedHintError, _super);
    /**
     * @param {?} align
     */
    function MdInputContainerDuplicatedHintError(align) {
        return _super.call(this, "A hint was already declared for 'align=\"" + align + "\"'.") || this;
    }
    return MdInputContainerDuplicatedHintError;
}(MdError));
/**
 * \@docs-private
 */
var MdInputContainerMissingMdInputError = (function (_super) {
    __extends(MdInputContainerMissingMdInputError, _super);
    function MdInputContainerMissingMdInputError() {
        return _super.call(this, 'md-input-container must contain an mdInput directive. Did you forget to add mdInput ' +
            'to the native input or textarea element?') || this;
    }
    return MdInputContainerMissingMdInputError;
}(MdError));
// Invalid input type. Using one of these will throw an MdInputContainerUnsupportedTypeError.
var MD_INPUT_INVALID_TYPES = [
    'button',
    'checkbox',
    'color',
    'file',
    'hidden',
    'image',
    'radio',
    'range',
    'reset',
    'submit'
];
var nextUniqueId$1 = 0;
/**
 * The placeholder directive. The content can declare this to implement more
 * complex placeholders.
 */
var MdPlaceholder = (function () {
    function MdPlaceholder() {
    }
    return MdPlaceholder;
}());
MdPlaceholder.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-placeholder, mat-placeholder'
            },] },
];
/**
 * @nocollapse
 */
MdPlaceholder.ctorParameters = function () { return []; };
/**
 * The hint directive, used to tag content as hint labels (going under the input).
 */
var MdHint = (function () {
    function MdHint() {
        // Whether to align the hint label at the start or end of the line.
        this.align = 'start';
        // Unique ID for the hint. Used for the aria-describedby on the input.
        this.id = "md-input-hint-" + nextUniqueId$1++;
    }
    return MdHint;
}());
MdHint.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-hint, mat-hint',
                host: {
                    '[class.mat-hint]': 'true',
                    '[class.mat-right]': 'align == "end"',
                    '[attr.id]': 'id',
                }
            },] },
];
/**
 * @nocollapse
 */
MdHint.ctorParameters = function () { return []; };
MdHint.propDecorators = {
    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * Directive, used to display a single error message under the input.
 */
var MdErrorDirective = (function () {
    function MdErrorDirective() {
    }
    return MdErrorDirective;
}());
MdErrorDirective.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-error, mat-error',
                host: {
                    '[class.mat-input-error]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdErrorDirective.ctorParameters = function () { return []; };
/**
 * The input prefix.
 */
var MdPrefix = (function () {
    function MdPrefix() {
    }
    return MdPrefix;
}());
MdPrefix.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[mdPrefix], [matPrefix], [md-prefix]'
            },] },
];
/**
 * @nocollapse
 */
MdPrefix.ctorParameters = function () { return []; };
/**
 * The input suffix.
 */
var MdSuffix = (function () {
    function MdSuffix() {
    }
    return MdSuffix;
}());
MdSuffix.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[mdSuffix], [matSuffix], [md-suffix]'
            },] },
];
/**
 * @nocollapse
 */
MdSuffix.ctorParameters = function () { return []; };
/**
 * The input directive, used to mark the input that `MdInputContainer` is wrapping.
 */
var MdInputDirective = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _renderer
     * @param {?} _ngControl
     */
    function MdInputDirective(_elementRef, _renderer, _ngControl) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._ngControl = _ngControl;
        this._type = 'text';
        this._placeholder = '';
        this._disabled = false;
        this._required = false;
        /** Whether the element is focused or not. */
        this.focused = false;
        /**
         * Emits an event when the placeholder changes so that the `md-input-container` can re-validate.
         */
        this._placeholderChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        this._neverEmptyInputTypes = [
            'date',
            'datetime',
            'datetime-local',
            'month',
            'time',
            'week'
        ].filter(function (t) { return getSupportedInputTypes().has(t); });
        // Force setter to be called in case id was not specified.
        this.id = this.id;
    }
    Object.defineProperty(MdInputDirective.prototype, "disabled", {
        /**
         * Whether the element is disabled.
         * @return {?}
         */
        get: function () {
            return this._ngControl ? this._ngControl.disabled : this._disabled;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputDirective.prototype, "id", {
        /**
         * Unique id of the element.
         * @return {?}
         */
        get: function () { return this._id; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._id = value || this._uid; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(MdInputDirective.prototype, "placeholder", {
        /**
         * Placeholder attribute of the element.
         * @return {?}
         */
        get: function () { return this._placeholder; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (this._placeholder !== value) {
                this._placeholder = value;
                this._placeholderChange.emit(this._placeholder);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputDirective.prototype, "required", {
        /**
         * Whether the element is required.
         * @return {?}
         */
        get: function () { return this._required; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._required = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputDirective.prototype, "type", {
        /**
         * Input type of the element.
         * @return {?}
         */
        get: function () { return this._type; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._type = value || 'text';
            this._validateType();
            // When using Angular inputs, developers are no longer able to set the properties on the native
            // input element. To ensure that bindings for `type` work, we need to sync the setter
            // with the native property. Textarea elements don't support the type property or attribute.
            if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {
                this._renderer.setElementProperty(this._elementRef.nativeElement, 'type', this._type);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputDirective.prototype, "value", {
        /**
         * The input element's value.
         * @return {?}
         */
        get: function () { return this._elementRef.nativeElement.value; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._elementRef.nativeElement.value = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputDirective.prototype, "empty", {
        /**
         * @return {?}
         */
        get: function () {
            return !this._isNeverEmpty() &&
                (this.value == null || this.value === '') &&
                // Check if the input contains bad input. If so, we know that it only appears empty because
                // the value failed to parse. From the user's perspective it is not empty.
                // TODO(mmalerba): Add e2e test for bad input case.
                !this._isBadInput();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputDirective.prototype, "_uid", {
        /**
         * @return {?}
         */
        get: function () { return this._cachedUid = this._cachedUid || "md-input-" + nextUniqueId$1++; },
        enumerable: true,
        configurable: true
    });
    /**
     * Focuses the input element.
     * @return {?}
     */
    MdInputDirective.prototype.focus = function () { this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus'); };
    /**
     * @return {?}
     */
    MdInputDirective.prototype._onFocus = function () { this.focused = true; };
    /**
     * @return {?}
     */
    MdInputDirective.prototype._onBlur = function () { this.focused = false; };
    /**
     * @return {?}
     */
    MdInputDirective.prototype._onInput = function () {
        // This is a noop function and is used to let Angular know whenever the value changes.
        // Angular will run a new change detection each time the `input` event has been dispatched.
        // It's necessary that Angular recognizes the value change, because when floatingLabel
        // is set to false and Angular forms aren't used, the placeholder won't recognize the
        // value changes and will not disappear.
        // Listening to the input event wouldn't be necessary when the input is using the
        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.
    };
    /**
     * Make sure the input is a supported type.
     * @return {?}
     */
    MdInputDirective.prototype._validateType = function () {
        if (MD_INPUT_INVALID_TYPES.indexOf(this._type) !== -1) {
            throw new MdInputContainerUnsupportedTypeError(this._type);
        }
    };
    /**
     * @return {?}
     */
    MdInputDirective.prototype._isNeverEmpty = function () { return this._neverEmptyInputTypes.indexOf(this._type) !== -1; };
    /**
     * @return {?}
     */
    MdInputDirective.prototype._isBadInput = function () {
        return ((this._elementRef.nativeElement)).validity.badInput;
    };
    /**
     * Determines if the component host is a textarea. If not recognizable it returns false.
     * @return {?}
     */
    MdInputDirective.prototype._isTextarea = function () {
        var /** @type {?} */ nativeElement = this._elementRef.nativeElement;
        return nativeElement ? nativeElement.nodeName.toLowerCase() === 'textarea' : false;
    };
    return MdInputDirective;
}());
MdInputDirective.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: "input[mdInput], textarea[mdInput], input[matInput], textarea[matInput]",
                host: {
                    '[class.mat-input-element]': 'true',
                    // Native input properties that are overwritten by Angular inputs need to be synced with
                    // the native input element. Otherwise property bindings for those don't work.
                    '[id]': 'id',
                    '[placeholder]': 'placeholder',
                    '[disabled]': 'disabled',
                    '[required]': 'required',
                    '[attr.aria-describedby]': 'ariaDescribedby || null',
                    '(blur)': '_onBlur()',
                    '(focus)': '_onFocus()',
                    '(input)': '_onInput()',
                }
            },] },
];
/**
 * @nocollapse
 */
MdInputDirective.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["d" /* NgControl */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["D" /* Self */] },] },
]; };
MdInputDirective.propDecorators = {
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'placeholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'type': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    '_placeholderChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
/**
 * Component that represents a text input. It encapsulates the <input> HTMLElement and
 * improve on its behaviour, along with styling it according to the Material Design.
 */
var MdInputContainer = (function () {
    /**
     * @param {?} _changeDetectorRef
     * @param {?} _parentForm
     * @param {?} _parentFormGroup
     */
    function MdInputContainer(_changeDetectorRef, _parentForm, _parentFormGroup) {
        this._changeDetectorRef = _changeDetectorRef;
        this._parentForm = _parentForm;
        this._parentFormGroup = _parentFormGroup;
        /** Alignment of the input container's content. */
        this.align = 'start';
        /** Color of the input divider, based on the theme. */
        this.color = 'primary';
        /** State of the md-hint and md-error animations. */
        this._subscriptAnimationState = '';
        this._hintLabel = '';
        // Unique id for the hint label.
        this._hintLabelId = "md-input-hint-" + nextUniqueId$1++;
        this._floatPlaceholder = 'auto';
    }
    Object.defineProperty(MdInputContainer.prototype, "dividerColor", {
        /**
         * @deprecated Use color instead.
         * @return {?}
         */
        get: function () { return this.color; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this.color = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputContainer.prototype, "_shouldAlwaysFloat", {
        /**
         * Whether the floating label should always float or not.
         * @return {?}
         */
        get: function () { return this._floatPlaceholder === 'always'; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(MdInputContainer.prototype, "_canPlaceholderFloat", {
        /**
         * Whether the placeholder can float or not.
         * @return {?}
         */
        get: function () { return this._floatPlaceholder !== 'never'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputContainer.prototype, "hintLabel", {
        /**
         * Text for the input hint.
         * @return {?}
         */
        get: function () { return this._hintLabel; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._hintLabel = value;
            this._processHints();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputContainer.prototype, "floatPlaceholder", {
        /**
         * Whether the placeholder should always float, never float or float as the user types.
         * @return {?}
         */
        get: function () { return this._floatPlaceholder; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._floatPlaceholder = value || 'auto';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdInputContainer.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (!this._mdInputChild) {
            throw new MdInputContainerMissingMdInputError();
        }
        this._processHints();
        this._validatePlaceholders();
        // Re-validate when things change.
        this._hintChildren.changes.subscribe(function () { return _this._processHints(); });
        this._mdInputChild._placeholderChange.subscribe(function () { return _this._validatePlaceholders(); });
    };
    /**
     * @return {?}
     */
    MdInputContainer.prototype.ngAfterViewInit = function () {
        // Avoid animations on load.
        this._subscriptAnimationState = 'enter';
        this._changeDetectorRef.detectChanges();
    };
    /**
     * Determines whether a class from the NgControl should be forwarded to the host element.
     * @param {?} prop
     * @return {?}
     */
    MdInputContainer.prototype._shouldForward = function (prop) {
        var /** @type {?} */ control = this._mdInputChild ? this._mdInputChild._ngControl : null;
        return control && ((control))[prop];
    };
    /**
     * Whether the input has a placeholder.
     * @return {?}
     */
    MdInputContainer.prototype._hasPlaceholder = function () { return !!(this._mdInputChild.placeholder || this._placeholderChild); };
    /**
     * Focuses the underlying input.
     * @return {?}
     */
    MdInputContainer.prototype._focusInput = function () { this._mdInputChild.focus(); };
    /**
     * Whether the input container is in an error state.
     * @return {?}
     */
    MdInputContainer.prototype._isErrorState = function () {
        var /** @type {?} */ control = this._mdInputChild._ngControl;
        var /** @type {?} */ isInvalid = control && control.invalid;
        var /** @type {?} */ isTouched = control && control.touched;
        var /** @type {?} */ isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||
            (this._parentForm && this._parentForm.submitted);
        return !!(isInvalid && (isTouched || isSubmitted));
    };
    /**
     * Determines whether to display hints or errors.
     * @return {?}
     */
    MdInputContainer.prototype._getDisplayedMessages = function () {
        return (this._errorChildren.length > 0 && this._isErrorState()) ? 'error' : 'hint';
    };
    /**
     * Ensure that there is only one placeholder (either `input` attribute or child element with the
     * `md-placeholder` attribute.
     * @return {?}
     */
    MdInputContainer.prototype._validatePlaceholders = function () {
        if (this._mdInputChild.placeholder && this._placeholderChild) {
            throw new MdInputContainerPlaceholderConflictError();
        }
    };
    /**
     * Does any extra processing that is required when handling the hints.
     * @return {?}
     */
    MdInputContainer.prototype._processHints = function () {
        this._validateHints();
        this._syncAriaDescribedby();
    };
    /**
     * Ensure that there is a maximum of one of each `<md-hint>` alignment specified, with the
     * attribute being considered as `align="start"`.
     * @return {?}
     */
    MdInputContainer.prototype._validateHints = function () {
        var _this = this;
        if (this._hintChildren) {
            var /** @type {?} */ startHint_1 = null;
            var /** @type {?} */ endHint_1 = null;
            this._hintChildren.forEach(function (hint) {
                if (hint.align == 'start') {
                    if (startHint_1 || _this.hintLabel) {
                        throw new MdInputContainerDuplicatedHintError('start');
                    }
                    startHint_1 = hint;
                }
                else if (hint.align == 'end') {
                    if (endHint_1) {
                        throw new MdInputContainerDuplicatedHintError('end');
                    }
                    endHint_1 = hint;
                }
            });
        }
    };
    /**
     * Sets the child input's `aria-describedby` to a space-separated list of the ids
     * of the currently-specified hints, as well as a generated id for the hint label.
     * @return {?}
     */
    MdInputContainer.prototype._syncAriaDescribedby = function () {
        var /** @type {?} */ ids = [];
        var /** @type {?} */ startHint = this._hintChildren ?
            this._hintChildren.find(function (hint) { return hint.align === 'start'; }) : null;
        var /** @type {?} */ endHint = this._hintChildren ?
            this._hintChildren.find(function (hint) { return hint.align === 'end'; }) : null;
        if (startHint) {
            ids.push(startHint.id);
        }
        else if (this._hintLabel) {
            ids.push(this._hintLabelId);
        }
        if (endHint) {
            ids.push(endHint.id);
        }
        this._mdInputChild.ariaDescribedby = ids.join(' ');
    };
    return MdInputContainer;
}());
MdInputContainer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-input-container, mat-input-container',
                template: "<div class=\"mat-input-wrapper\"> <div class=\"mat-input-table\"> <div class=\"mat-input-prefix\" *ngIf=\"_prefixChildren.length\"> <!-- TODO(andrewseguin): remove [md-prefix] --> <ng-content select=\"[mdPrefix], [matPrefix], [md-prefix]\"></ng-content> </div> <div class=\"mat-input-infix\" [class.mat-end]=\"align == 'end'\"> <ng-content selector=\"input, textarea\"></ng-content> <span class=\"mat-input-placeholder-wrapper\"> <label class=\"mat-input-placeholder\" [attr.for]=\"_mdInputChild.id\" [class.mat-empty]=\"_mdInputChild.empty && !_shouldAlwaysFloat\" [class.mat-float]=\"_canPlaceholderFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" *ngIf=\"_hasPlaceholder()\"> <ng-content select=\"md-placeholder, mat-placeholder\"></ng-content> {{_mdInputChild.placeholder}} <span class=\"mat-placeholder-required\" *ngIf=\"_mdInputChild.required\">*</span> </label> </span> </div> <div class=\"mat-input-suffix\" *ngIf=\"_suffixChildren.length\"> <!-- TODO(andrewseguin): remove [md-suffix] --> <ng-content select=\"[mdSuffix], [matSuffix], [md-suffix]\"></ng-content> </div> </div> <div class=\"mat-input-underline\" [class.mat-disabled]=\"_mdInputChild.disabled\"> <span class=\"mat-input-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span> </div> <div class=\"mat-input-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"> <div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"> <ng-content select=\"md-error, mat-error\"></ng-content> </div> <div class=\"mat-input-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"> <div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div> <ng-content select=\"md-hint, mat-hint\"></ng-content> </div> </div> </div> ",
                styles: [".mat-input-container{display:inline-block;position:relative;font-family:Roboto,\"Helvetica Neue\",sans-serif;line-height:normal;text-align:left}[dir=rtl] .mat-input-container{text-align:right}.mat-input-container .mat-icon{width:auto;height:auto;font-size:100%;vertical-align:top}.mat-input-wrapper{margin:1em 0;padding-bottom:6px}.mat-input-table{display:inline-table;flex-flow:column;vertical-align:bottom;width:100%}.mat-input-table>*{display:table-cell}.mat-input-infix{position:relative}.mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;width:100%;vertical-align:bottom}.mat-end .mat-input-element{text-align:right}[dir=rtl] .mat-end .mat-input-element{text-align:left}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element:-webkit-autofill+.mat-input-placeholder-wrapper .mat-float{display:block;transform:translateY(-1.35em) scale(.75);width:133.33333%;transition:none}.mat-input-element::placeholder{color:transparent}.mat-input-element::-moz-placeholder{color:transparent}.mat-input-element::-webkit-input-placeholder{color:transparent}.mat-input-element:-ms-input-placeholder{color:transparent}.mat-input-placeholder{position:absolute;left:0;top:0;font-size:100%;pointer-events:none;z-index:1;padding-top:1em;width:100%;display:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform:translateY(0);transform-origin:bottom left;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1)}.mat-input-placeholder.mat-empty{display:block;cursor:text}.mat-focused .mat-input-placeholder.mat-float,.mat-input-placeholder.mat-float:not(.mat-empty){display:block;transform:translateY(-1.35em) scale(.75);width:133.33333%}[dir=rtl] .mat-input-placeholder{transform-origin:bottom right;left:auto;right:0}.mat-input-placeholder:not(.mat-empty){transition:none}.mat-input-placeholder-wrapper{position:absolute;left:0;top:-1em;width:100%;padding-top:1em;overflow:hidden;pointer-events:none;transform:translate3d(0,0,0)}.mat-input-placeholder-wrapper::after{content:'';display:inline-table}.mat-input-underline{position:absolute;height:1px;width:100%;margin-top:4px;border-top-width:1px;border-top-style:solid}.mat-input-underline.mat-disabled{background-image:linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background-size:4px 1px;background-repeat:repeat-x;border-top:0;background-position:0}.mat-input-underline .mat-input-ripple{position:absolute;height:2px;z-index:1;top:-1px;width:100%;transform-origin:top;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-focused .mat-input-underline .mat-input-ripple{opacity:1}.mat-input-subscript-wrapper{position:absolute;font-size:75%;top:100%;width:100%;margin-top:-1em;overflow:hidden}.mat-input-hint-wrapper::after,.mat-input-hint-wrapper::before{content:' ';display:table}.mat-input-hint-wrapper::after{clear:both}.mat-hint{display:block;float:left}.mat-hint.mat-right{float:right}[dir=rtl] .mat-hint{float:right}[dir=rtl] .mat-hint.mat-right{float:left}.mat-input-error{display:block}.mat-input-prefix,.mat-input-suffix{width:.1px;white-space:nowrap} /*# sourceMappingURL=input-container.css.map */ "],
                animations: [
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('transitionMessages', [
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('enter', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 1, transform: 'translateY(0%)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('void => enter', [
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 0, transform: 'translateY(-100%)' }),
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')
                        ])
                    ])
                ],
                host: {
                    // Remove align attribute to prevent it from interfering with layout.
                    '[attr.align]': 'null',
                    '[class.mat-input-container]': 'true',
                    '[class.mat-input-invalid]': '_isErrorState()',
                    '[class.mat-focused]': '_mdInputChild.focused',
                    '[class.ng-untouched]': '_shouldForward("untouched")',
                    '[class.ng-touched]': '_shouldForward("touched")',
                    '[class.ng-pristine]': '_shouldForward("pristine")',
                    '[class.ng-dirty]': '_shouldForward("dirty")',
                    '[class.ng-valid]': '_shouldForward("valid")',
                    '[class.ng-invalid]': '_shouldForward("invalid")',
                    '[class.ng-pending]': '_shouldForward("pending")',
                    '(click)': '_focusInput()',
                },
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
            },] },
];
/**
 * @nocollapse
 */
MdInputContainer.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["C" /* ChangeDetectorRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["e" /* NgForm */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["f" /* FormGroupDirective */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
MdInputContainer.propDecorators = {
    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'dividerColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'hintLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'floatPlaceholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    '_mdInputChild': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["F" /* ContentChild */], args: [MdInputDirective,] },],
    '_placeholderChild': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["F" /* ContentChild */], args: [MdPlaceholder,] },],
    '_errorChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdErrorDirective,] },],
    '_hintChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdHint,] },],
    '_prefixChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdPrefix,] },],
    '_suffixChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdSuffix,] },],
};
/**
 * Directive to automatically resize a textarea to fit its content.
 */
var MdTextareaAutosize = (function () {
    /**
     * @param {?} _elementRef
     */
    function MdTextareaAutosize(_elementRef) {
        this._elementRef = _elementRef;
    }
    Object.defineProperty(MdTextareaAutosize.prototype, "mdAutosizeMinRows", {
        /**
         * @return {?}
         */
        get: function () {
            return this.minRows;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this.minRows = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTextareaAutosize.prototype, "mdAutosizeMaxRows", {
        /**
         * @return {?}
         */
        get: function () {
            return this.maxRows;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this.maxRows = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTextareaAutosize.prototype, "_minHeight", {
        /**
         * The minimum height of the textarea as determined by minRows.
         * @return {?}
         */
        get: function () {
            return this.minRows ? this.minRows * this._cachedLineHeight + "px" : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTextareaAutosize.prototype, "_maxHeight", {
        /**
         * The maximum height of the textarea as determined by maxRows.
         * @return {?}
         */
        get: function () {
            return this.maxRows ? this.maxRows * this._cachedLineHeight + "px" : null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdTextareaAutosize.prototype.ngOnInit = function () {
        this._cacheTextareaLineHeight();
        this.resizeToFitContent();
    };
    /**
     * Cache the height of a single-row textarea.
     *
     * We need to know how large a single "row" of a textarea is in order to apply minRows and
     * maxRows. For the initial version, we will assume that the height of a single line in the
     * textarea does not ever change.
     * @return {?}
     */
    MdTextareaAutosize.prototype._cacheTextareaLineHeight = function () {
        var /** @type {?} */ textarea = (this._elementRef.nativeElement);
        // Use a clone element because we have to override some styles.
        var /** @type {?} */ textareaClone = (textarea.cloneNode(false));
        textareaClone.rows = 1;
        // Use `position: absolute` so that this doesn't cause a browser layout and use
        // `visibility: hidden` so that nothing is rendered. Clear any other styles that
        // would affect the height.
        textareaClone.style.position = 'absolute';
        textareaClone.style.visibility = 'hidden';
        textareaClone.style.border = 'none';
        textareaClone.style.padding = '';
        textareaClone.style.height = '';
        textareaClone.style.minHeight = '';
        textareaClone.style.maxHeight = '';
        textarea.parentNode.appendChild(textareaClone);
        this._cachedLineHeight = textareaClone.offsetHeight;
        textarea.parentNode.removeChild(textareaClone);
    };
    /**
     * Resize the textarea to fit its content.
     * @return {?}
     */
    MdTextareaAutosize.prototype.resizeToFitContent = function () {
        var /** @type {?} */ textarea = (this._elementRef.nativeElement);
        // Reset the textarea height to auto in order to shrink back to its default size.
        textarea.style.height = 'auto';
        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.
        textarea.style.height = textarea.scrollHeight + "px";
    };
    return MdTextareaAutosize;
}());
MdTextareaAutosize.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'textarea[md-autosize], textarea[mdTextareaAutosize],' +
                    'textarea[mat-autosize], textarea[matTextareaAutosize]',
                exportAs: 'mdTextareaAutosize',
                host: {
                    '(input)': 'resizeToFitContent()',
                    '[style.min-height]': '_minHeight',
                    '[style.max-height]': '_maxHeight',
                },
            },] },
];
/**
 * @nocollapse
 */
MdTextareaAutosize.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdTextareaAutosize.propDecorators = {
    'minRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'mdAutosizeMinRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'maxRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'mdAutosizeMaxRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
var MdInputModule = (function () {
    function MdInputModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdInputModule.forRoot = function () {
        return {
            ngModule: MdInputModule,
            providers: [],
        };
    };
    return MdInputModule;
}());
MdInputModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                declarations: [
                    MdErrorDirective,
                    MdHint,
                    MdInputContainer,
                    MdInputDirective,
                    MdPlaceholder,
                    MdPrefix,
                    MdSuffix,
                    MdTextareaAutosize,
                ],
                imports: [
                    __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */],
                    __WEBPACK_IMPORTED_MODULE_8__angular_forms__["a" /* FormsModule */],
                    PlatformModule,
                ],
                exports: [
                    MdErrorDirective,
                    MdHint,
                    MdInputContainer,
                    MdInputDirective,
                    MdPlaceholder,
                    MdPrefix,
                    MdSuffix,
                    MdTextareaAutosize,
                ],
            },] },
];
/**
 * @nocollapse
 */
MdInputModule.ctorParameters = function () { return []; };
/**
 * Configuration used when opening a snack-bar.
 */
var MdSnackBarConfig = (function () {
    function MdSnackBarConfig() {
        /** The politeness level for the MdAriaLiveAnnouncer announcement. */
        this.politeness = 'assertive';
        /** Message to be announced by the MdAriaLiveAnnouncer */
        this.announcementMessage = '';
        /** The view container to place the overlay for the snack bar into. */
        this.viewContainerRef = null;
        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */
        this.duration = 0;
    }
    return MdSnackBarConfig;
}());
/**
 * Reference to a snack bar dispatched from the snack bar service.
 */
var MdSnackBarRef = (function () {
    /**
     * @param {?} instance
     * @param {?} containerInstance
     * @param {?} _overlayRef
     */
    function MdSnackBarRef(instance, containerInstance, _overlayRef) {
        var _this = this;
        this._overlayRef = _overlayRef;
        this._afterClosed = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        this._onAction = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        // Sets the readonly instance of the snack bar content component.
        this._instance = instance;
        this.containerInstance = containerInstance;
        // Dismiss snackbar on action.
        this.onAction().subscribe(function () { return _this.dismiss(); });
        containerInstance._onExit().subscribe(function () { return _this._finishDismiss(); });
    }
    Object.defineProperty(MdSnackBarRef.prototype, "instance", {
        /**
         * The instance of the component making up the content of the snack bar.
         * @return {?}
         */
        get: function () {
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Dismisses the snack bar.
     * @return {?}
     */
    MdSnackBarRef.prototype.dismiss = function () {
        if (!this._afterClosed.closed) {
            this.containerInstance.exit();
        }
    };
    /**
     * Marks the snackbar action clicked.
     * @return {?}
     */
    MdSnackBarRef.prototype._action = function () {
        if (!this._onAction.closed) {
            this._onAction.next();
            this._onAction.complete();
        }
    };
    /**
     * Marks the snackbar as opened
     * @return {?}
     */
    MdSnackBarRef.prototype._open = function () {
        if (!this._afterOpened.closed) {
            this._afterOpened.next();
            this._afterOpened.complete();
        }
    };
    /**
     * Cleans up the DOM after closing.
     * @return {?}
     */
    MdSnackBarRef.prototype._finishDismiss = function () {
        this._overlayRef.dispose();
        this._afterClosed.next();
        this._afterClosed.complete();
    };
    /**
     * Gets an observable that is notified when the snack bar is finished closing.
     * @return {?}
     */
    MdSnackBarRef.prototype.afterDismissed = function () {
        return this._afterClosed.asObservable();
    };
    /**
     * Gets an observable that is notified when the snack bar has opened and appeared.
     * @return {?}
     */
    MdSnackBarRef.prototype.afterOpened = function () {
        return this.containerInstance._onEnter();
    };
    /**
     * Gets an observable that is notified when the snack bar action is called.
     * @return {?}
     */
    MdSnackBarRef.prototype.onAction = function () {
        return this._onAction.asObservable();
    };
    return MdSnackBarRef;
}());
/**
 * Error that is thrown when attempting to attach a snack bar that is already attached.
 * \@docs-private
 */
var MdSnackBarContentAlreadyAttached = (function (_super) {
    __extends(MdSnackBarContentAlreadyAttached, _super);
    function MdSnackBarContentAlreadyAttached() {
        return _super.call(this, 'Attempting to attach snack bar content after content is already attached') || this;
    }
    return MdSnackBarContentAlreadyAttached;
}(MdError));
// TODO(jelbourn): we can't use constants from animation.ts here because you can't use
// a text interpolation in anything that is analyzed statically with ngc (for AoT compile).
var SHOW_ANIMATION = '225ms cubic-bezier(0.4,0.0,1,1)';
var HIDE_ANIMATION = '195ms cubic-bezier(0.0,0.0,0.2,1)';
/**
 * Internal component that wraps user-provided snack bar content.
 * \@docs-private
 */
var MdSnackBarContainer = (function (_super) {
    __extends(MdSnackBarContainer, _super);
    /**
     * @param {?} _ngZone
     * @param {?} _renderer
     * @param {?} _elementRef
     */
    function MdSnackBarContainer(_ngZone, _renderer, _elementRef) {
        var _this = _super.call(this) || this;
        _this._ngZone = _ngZone;
        _this._renderer = _renderer;
        _this._elementRef = _elementRef;
        _this.onExit = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        _this.onEnter = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        /** The state of the snack bar animations. */
        _this.animationState = 'initial';
        return _this;
    }
    /**
     * Attach a component portal as content to this snack bar container.
     * @template T
     * @param {?} portal
     * @return {?}
     */
    MdSnackBarContainer.prototype.attachComponentPortal = function (portal) {
        if (this._portalHost.hasAttached()) {
            throw new MdSnackBarContentAlreadyAttached();
        }
        if (this.snackBarConfig.extraClasses) {
            // Not the most efficient way of adding classes, but the renderer doesn't allow us
            // to pass in an array or a space-separated list.
            for (var _i = 0, _a = this.snackBarConfig.extraClasses; _i < _a.length; _i++) {
                var cssClass = _a[_i];
                this._renderer.setElementClass(this._elementRef.nativeElement, cssClass, true);
            }
        }
        return this._portalHost.attachComponentPortal(portal);
    };
    /**
     * Attach a template portal as content to this snack bar container.
     * @param {?} portal
     * @return {?}
     */
    MdSnackBarContainer.prototype.attachTemplatePortal = function (portal) {
        throw Error('Not yet implemented');
    };
    /**
     * Handle end of animations, updating the state of the snackbar.
     * @param {?} event
     * @return {?}
     */
    MdSnackBarContainer.prototype.onAnimationEnd = function (event) {
        var _this = this;
        if (event.toState === 'void' || event.toState === 'complete') {
            this._completeExit();
        }
        if (event.toState === 'visible') {
            this._ngZone.run(function () {
                _this.onEnter.next();
                _this.onEnter.complete();
            });
        }
    };
    /**
     * Begin animation of snack bar entrance into view.
     * @return {?}
     */
    MdSnackBarContainer.prototype.enter = function () {
        this.animationState = 'visible';
    };
    /**
     * Returns an observable resolving when the enter animation completes.
     * @return {?}
     */
    MdSnackBarContainer.prototype._onEnter = function () {
        this.animationState = 'visible';
        return this.onEnter.asObservable();
    };
    /**
     * Begin animation of the snack bar exiting from view.
     * @return {?}
     */
    MdSnackBarContainer.prototype.exit = function () {
        this.animationState = 'complete';
        return this._onExit();
    };
    /**
     * Returns an observable that completes after the closing animation is done.
     * @return {?}
     */
    MdSnackBarContainer.prototype._onExit = function () {
        return this.onExit.asObservable();
    };
    /**
     * Makes sure the exit callbacks have been invoked when the element is destroyed.
     * @return {?}
     */
    MdSnackBarContainer.prototype.ngOnDestroy = function () {
        this._completeExit();
    };
    /**
     * Waits for the zone to settle before removing the element. Helps prevent
     * errors where we end up removing an element which is in the middle of an animation.
     * @return {?}
     */
    MdSnackBarContainer.prototype._completeExit = function () {
        var _this = this;
        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {
            _this.onExit.next();
            _this.onExit.complete();
        });
    };
    return MdSnackBarContainer;
}(BasePortalHost));
MdSnackBarContainer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'snack-bar-container',
                template: "<ng-template cdkPortalHost></ng-template> ",
                styles: [":host{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);background:#323232;border-radius:2px;box-sizing:content-box;display:block;height:20px;max-width:568px;min-width:288px;overflow:hidden;padding:14px 24px;transform:translateY(100%)}@media screen and (-ms-high-contrast:active){:host{border:solid 1px}} /*# sourceMappingURL=snack-bar-container.css.map */ "],
                host: {
                    'role': 'alert',
                    '[@state]': 'animationState',
                    '(@state.done)': 'onAnimationEnd($event)'
                },
                animations: [
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('state', [
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('initial', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translateY(100%)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translateY(0%)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('complete', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translateY(100%)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('visible => complete', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])(HIDE_ANIMATION)),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('initial => visible, void => visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])(SHOW_ANIMATION)),
                    ])
                ],
            },] },
];
/**
 * @nocollapse
 */
MdSnackBarContainer.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdSnackBarContainer.propDecorators = {
    '_portalHost': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [PortalHostDirective,] },],
};
/**
 * A component used to open as the default snack bar, matching material spec.
 * This should only be used internally by the snack bar service.
 */
var SimpleSnackBar = (function () {
    function SimpleSnackBar() {
    }
    /**
     * Dismisses the snack bar.
     * @return {?}
     */
    SimpleSnackBar.prototype.dismiss = function () {
        this.snackBarRef._action();
    };
    Object.defineProperty(SimpleSnackBar.prototype, "hasAction", {
        /**
         * If the action button should be shown.
         * @return {?}
         */
        get: function () { return !!this.action; },
        enumerable: true,
        configurable: true
    });
    return SimpleSnackBar;
}());
SimpleSnackBar.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'simple-snack-bar',
                template: "<span class=\"mat-simple-snackbar-message\">{{message}}</span> <button class=\"mat-simple-snackbar-action\" *ngIf=\"hasAction\" (click)=\"dismiss()\">{{action}}</button> ",
                styles: [":host{display:flex;justify-content:space-between;color:#fff;line-height:20px;font-size:14px;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-simple-snackbar-message{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-simple-snackbar-action{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;background:0 0;margin:-5px 0 0;padding:5px;text-transform:uppercase;color:inherit;line-height:inherit;flex-shrink:0;font-family:inherit;font-size:inherit;font-weight:600} /*# sourceMappingURL=simple-snack-bar.css.map */ "],
                host: {
                    '[class.mat-simple-snackbar]': 'true',
                }
            },] },
];
/**
 * @nocollapse
 */
SimpleSnackBar.ctorParameters = function () { return []; };
/**
 * Extends an object with the *enumerable* and *own* properties of one or more source objects,
 * similar to Object.assign.
 *
 * @param {?} dest The object which will have properties copied to it.
 * @param {...?} sources The source objects from which properties will be copied.
 * @return {?}
 */
function extendObject(dest) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    if (dest == null) {
        throw TypeError('Cannot convert undefined or null to object');
    }
    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {
        var source = sources_1[_a];
        if (source != null) {
            for (var /** @type {?} */ key in source) {
                if (source.hasOwnProperty(key)) {
                    dest[key] = source[key];
                }
            }
        }
    }
    return dest;
}
/**
 * Service to dispatch Material Design snack bar messages.
 */
var MdSnackBar = (function () {
    /**
     * @param {?} _overlay
     * @param {?} _live
     * @param {?} _parentSnackBar
     */
    function MdSnackBar(_overlay, _live, _parentSnackBar) {
        this._overlay = _overlay;
        this._live = _live;
        this._parentSnackBar = _parentSnackBar;
    }
    Object.defineProperty(MdSnackBar.prototype, "_openedSnackBarRef", {
        /**
         * Reference to the currently opened snackbar at *any* level.
         * @return {?}
         */
        get: function () {
            return this._parentSnackBar ?
                this._parentSnackBar._openedSnackBarRef : this._snackBarRefAtThisLevel;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (this._parentSnackBar) {
                this._parentSnackBar._openedSnackBarRef = value;
            }
            else {
                this._snackBarRefAtThisLevel = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and dispatches a snack bar with a custom component for the content, removing any
     * currently opened snack bars.
     *
     * @template T
     * @param {?} component Component to be instantiated.
     * @param {?=} config Extra configuration for the snack bar.
     * @return {?}
     */
    MdSnackBar.prototype.openFromComponent = function (component, config) {
        var _this = this;
        config = _applyConfigDefaults(config);
        var /** @type {?} */ overlayRef = this._createOverlay();
        var /** @type {?} */ snackBarContainer = this._attachSnackBarContainer(overlayRef, config);
        var /** @type {?} */ snackBarRef = this._attachSnackbarContent(component, snackBarContainer, overlayRef);
        // When the snackbar is dismissed, clear the reference to it.
        snackBarRef.afterDismissed().subscribe(function () {
            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.
            if (_this._openedSnackBarRef == snackBarRef) {
                _this._openedSnackBarRef = null;
            }
        });
        // If a snack bar is already in view, dismiss it and enter the new snack bar after exit
        // animation is complete.
        if (this._openedSnackBarRef) {
            this._openedSnackBarRef.afterDismissed().subscribe(function () {
                snackBarRef.containerInstance.enter();
            });
            this._openedSnackBarRef.dismiss();
        }
        else {
            snackBarRef.containerInstance.enter();
        }
        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.
        if (config.duration > 0) {
            snackBarRef.afterOpened().subscribe(function () {
                setTimeout(function () { return snackBarRef.dismiss(); }, config.duration);
            });
        }
        this._live.announce(config.announcementMessage, config.politeness);
        this._openedSnackBarRef = snackBarRef;
        return this._openedSnackBarRef;
    };
    /**
     * Opens a snackbar with a message and an optional action.
     * @param {?} message The message to show in the snackbar.
     * @param {?=} action The label for the snackbar action.
     * @param {?=} config Additional configuration options for the snackbar.
     * @return {?}
     */
    MdSnackBar.prototype.open = function (message, action, config) {
        if (action === void 0) { action = ''; }
        if (config === void 0) { config = {}; }
        config.announcementMessage = message;
        var /** @type {?} */ simpleSnackBarRef = this.openFromComponent(SimpleSnackBar, config);
        simpleSnackBarRef.instance.snackBarRef = simpleSnackBarRef;
        simpleSnackBarRef.instance.message = message;
        simpleSnackBarRef.instance.action = action;
        return simpleSnackBarRef;
    };
    /**
     * Dismisses the currently-visible snack bar.
     * @return {?}
     */
    MdSnackBar.prototype.dismiss = function () {
        if (this._openedSnackBarRef) {
            this._openedSnackBarRef.dismiss();
        }
    };
    /**
     * Attaches the snack bar container component to the overlay.
     * @param {?} overlayRef
     * @param {?} config
     * @return {?}
     */
    MdSnackBar.prototype._attachSnackBarContainer = function (overlayRef, config) {
        var /** @type {?} */ containerPortal = new ComponentPortal(MdSnackBarContainer, config.viewContainerRef);
        var /** @type {?} */ containerRef = overlayRef.attach(containerPortal);
        containerRef.instance.snackBarConfig = config;
        return containerRef.instance;
    };
    /**
     * Places a new component as the content of the snack bar container.
     * @template T
     * @param {?} component
     * @param {?} container
     * @param {?} overlayRef
     * @return {?}
     */
    MdSnackBar.prototype._attachSnackbarContent = function (component, container, overlayRef) {
        var /** @type {?} */ portal = new ComponentPortal(component);
        var /** @type {?} */ contentRef = container.attachComponentPortal(portal);
        return new MdSnackBarRef(contentRef.instance, container, overlayRef);
    };
    /**
     * Creates a new overlay and places it in the correct location.
     * @return {?}
     */
    MdSnackBar.prototype._createOverlay = function () {
        var /** @type {?} */ state$$1 = new OverlayState();
        state$$1.positionStrategy = this._overlay.position().global()
            .centerHorizontally()
            .bottom('0');
        return this._overlay.create(state$$1);
    };
    return MdSnackBar;
}());
MdSnackBar.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
MdSnackBar.ctorParameters = function () { return [
    { type: Overlay, },
    { type: LiveAnnouncer, },
    { type: MdSnackBar, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */] },] },
]; };
/**
 * Applies default options to the snackbar config.
 * @param {?} config The configuration to which the defaults will be applied.
 * @return {?} The new configuration object with defaults applied.
 */
function _applyConfigDefaults(config) {
    return extendObject(new MdSnackBarConfig(), config);
}
var MdSnackBarModule = (function () {
    function MdSnackBarModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdSnackBarModule.forRoot = function () {
        return {
            ngModule: MdSnackBarModule,
            providers: []
        };
    };
    return MdSnackBarModule;
}());
MdSnackBarModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    OverlayModule,
                    PortalModule,
                    __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */],
                    CompatibilityModule,
                ],
                exports: [MdSnackBarContainer, CompatibilityModule],
                declarations: [MdSnackBarContainer, SimpleSnackBar],
                entryComponents: [MdSnackBarContainer, SimpleSnackBar],
                providers: [MdSnackBar, LIVE_ANNOUNCER_PROVIDER]
            },] },
];
/**
 * @nocollapse
 */
MdSnackBarModule.ctorParameters = function () { return []; };
/**
 * Used to flag tab labels for use with the portal directive
 */
var MdTabLabel = (function (_super) {
    __extends(MdTabLabel, _super);
    /**
     * @param {?} templateRef
     * @param {?} viewContainerRef
     */
    function MdTabLabel(templateRef, viewContainerRef) {
        return _super.call(this, templateRef, viewContainerRef) || this;
    }
    return MdTabLabel;
}(TemplatePortalDirective));
MdTabLabel.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-tab-label], [mat-tab-label]',
            },] },
];
/**
 * @nocollapse
 */
MdTabLabel.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
]; };
var MdTab = (function () {
    /**
     * @param {?} _viewContainerRef
     */
    function MdTab(_viewContainerRef) {
        this._viewContainerRef = _viewContainerRef;
        /** The plain text label for the tab, used when there is no template label. */
        this.textLabel = '';
        this._contentPortal = null;
        /**
         * The relatively indexed position where 0 represents the center, negative is left, and positive
         * represents the right.
         */
        this.position = null;
        /**
         * The initial relatively index origin of the tab if it was created and selected after there
         * was already a selected tab. Provides context of what position the tab should originate from.
         */
        this.origin = null;
        this._disabled = false;
    }
    Object.defineProperty(MdTab.prototype, "content", {
        /**
         * @return {?}
         */
        get: function () { return this._contentPortal; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTab.prototype, "disabled", {
        /**
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * Whether the tab is disabled
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdTab.prototype.ngOnInit = function () {
        this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);
    };
    return MdTab;
}());
MdTab.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-tab, mat-tab',
                template: "<!-- Create a template for the content of the <md-tab> so that we can grab a reference to this TemplateRef and use it in a Portal to render the tab content in the appropriate place in the tab-group. --> <ng-template><ng-content></ng-content></ng-template> ",
            },] },
];
/**
 * @nocollapse
 */
MdTab.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
]; };
MdTab.propDecorators = {
    'templateLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["F" /* ContentChild */], args: [MdTabLabel,] },],
    '_content': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */],] },],
    'textLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['label',] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/** Used to generate unique ID's for each tab component */
var nextId$2 = 0;
/**
 * A simple change event emitted on focus or selection changes.
 */
var MdTabChangeEvent = (function () {
    function MdTabChangeEvent() {
    }
    return MdTabChangeEvent;
}());
/**
 * Material design tab-group component.  Supports basic tab pairs (label + content) and includes
 * animated ink-bar, keyboard navigation, and screen reader.
 * See: https://www.google.com/design/spec/components/tabs.html
 */
var MdTabGroup = (function () {
    /**
     * @param {?} _renderer
     */
    function MdTabGroup(_renderer) {
        this._renderer = _renderer;
        this._isInitialized = false;
        this._indexToSelect = 0;
        this._tabBodyWrapperHeight = null;
        this._dynamicHeight = false;
        this._selectedIndex = null;
        /** Position of the tab header. */
        this.headerPosition = 'above';
        this._onFocusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        this._onSelectChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */](true);
        this._groupId = nextId$2++;
    }
    Object.defineProperty(MdTabGroup.prototype, "dynamicHeight", {
        /**
         * @return {?}
         */
        get: function () { return this._dynamicHeight; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._dynamicHeight = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTabGroup.prototype, "_dynamicHeightDeprecated", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this._dynamicHeight; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._dynamicHeight = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTabGroup.prototype, "selectedIndex", {
        /**
         * @return {?}
         */
        get: function () { return this._selectedIndex; },
        /**
         * The index of the active tab.
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._indexToSelect = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTabGroup.prototype, "selectedIndexChange", {
        /**
         * Output to enable support for two-way binding on ([selectedIndex])
         * @return {?}
         */
        get: function () {
            return this.selectChange.map(function (event) { return event.index; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTabGroup.prototype, "focusChange", {
        /**
         * Event emitted when focus has changed within a tab group.
         * @return {?}
         */
        get: function () {
            return this._onFocusChange.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTabGroup.prototype, "selectChange", {
        /**
         * Event emitted when the tab selection has changed.
         * @return {?}
         */
        get: function () {
            return this._onSelectChange.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * After the content is checked, this component knows what tabs have been defined
     * and what the selected index should be. This is where we can know exactly what position
     * each tab should be in according to the new selected index, and additionally we know how
     * a new selected tab should transition in (from the left or right).
     * @return {?}
     */
    MdTabGroup.prototype.ngAfterContentChecked = function () {
        var _this = this;
        // Clamp the next selected index to the bounds of 0 and the tabs length. Note the `|| 0`, which
        // ensures that values like NaN can't get through and which would otherwise throw the
        // component into an infinite loop (since Math.max(NaN, 0) === NaN).
        this._indexToSelect =
            Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));
        // If there is a change in selected index, emit a change event. Should not trigger if
        // the selected index has not yet been initialized.
        if (this._selectedIndex != this._indexToSelect && this._selectedIndex != null) {
            this._onSelectChange.emit(this._createChangeEvent(this._indexToSelect));
        }
        // Setup the position for each tab and optionally setup an origin on the next selected tab.
        this._tabs.forEach(function (tab, index) {
            tab.position = index - _this._indexToSelect;
            // If there is already a selected tab, then set up an origin for the next selected tab
            // if it doesn't have one already.
            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {
                tab.origin = _this._indexToSelect - _this._selectedIndex;
            }
        });
        this._selectedIndex = this._indexToSelect;
    };
    /**
     * Waits one frame for the view to update, then updates the ink bar
     * Note: This must be run outside of the zone or it will create an infinite change detection loop.
     * @return {?}
     */
    MdTabGroup.prototype.ngAfterViewChecked = function () {
        this._isInitialized = true;
    };
    /**
     * @param {?} index
     * @return {?}
     */
    MdTabGroup.prototype._focusChanged = function (index) {
        this._onFocusChange.emit(this._createChangeEvent(index));
    };
    /**
     * @param {?} index
     * @return {?}
     */
    MdTabGroup.prototype._createChangeEvent = function (index) {
        var /** @type {?} */ event = new MdTabChangeEvent;
        event.index = index;
        if (this._tabs && this._tabs.length) {
            event.tab = this._tabs.toArray()[index];
        }
        return event;
    };
    /**
     * Returns a unique id for each tab label element
     * @param {?} i
     * @return {?}
     */
    MdTabGroup.prototype._getTabLabelId = function (i) {
        return "md-tab-label-" + this._groupId + "-" + i;
    };
    /**
     * Returns a unique id for each tab content element
     * @param {?} i
     * @return {?}
     */
    MdTabGroup.prototype._getTabContentId = function (i) {
        return "md-tab-content-" + this._groupId + "-" + i;
    };
    /**
     * Sets the height of the body wrapper to the height of the activating tab if dynamic
     * height property is true.
     * @param {?} tabHeight
     * @return {?}
     */
    MdTabGroup.prototype._setTabBodyWrapperHeight = function (tabHeight) {
        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {
            return;
        }
        this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', this._tabBodyWrapperHeight + 'px');
        // This conditional forces the browser to paint the height so that
        // the animation to the new height can have an origin.
        if (this._tabBodyWrapper.nativeElement.offsetHeight) {
            this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', tabHeight + 'px');
        }
    };
    /**
     * Removes the height of the tab body wrapper.
     * @return {?}
     */
    MdTabGroup.prototype._removeTabBodyWrapperHeight = function () {
        this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;
        this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', '');
    };
    return MdTabGroup;
}());
MdTabGroup.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-tab-group, mat-tab-group',
                template: "<md-tab-header [selectedIndex]=\"selectedIndex\" #tabHeader (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"> <div class=\"mat-tab-label\" role=\"tab\" md-tab-label-wrapper md-ripple *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [tabIndex]=\"selectedIndex == i ? 0 : -1\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" (click)=\"tabHeader.focusIndex = selectedIndex = i\"> <!-- If there is a label template, use it. --> <ng-template [ngIf]=\"tab.templateLabel\"> <ng-template [cdkPortalHost]=\"tab.templateLabel\"></ng-template> </ng-template> <!-- If there is not a label template, fall back to the text label. --> <ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template> </div> </md-tab-header> <div class=\"mat-tab-body-wrapper\" #tabBodyWrapper> <md-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" (onCentered)=\"_removeTabBodyWrapperHeight()\" (onCentering)=\"_setTabBodyWrapperHeight($event)\"> </md-tab-body> </div> ",
                styles: [":host{display:flex;flex-direction:column;font-family:Roboto,\"Helvetica Neue\",sans-serif}:host.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;position:relative}.mat-tab-label:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-label{min-width:72px}}:host[mat-stretch-tabs] .mat-tab-label,:host[md-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{position:absolute;top:0;left:0;right:0;bottom:0;display:block;overflow:hidden}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}:host.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}.mat-tab-disabled{cursor:default;pointer-events:none} /*# sourceMappingURL=tab-group.css.map */ "],
                host: {
                    '[class.mat-tab-group]': 'true',
                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',
                    '[class.mat-tab-group-inverted-header]': 'headerPosition === "below"',
                }
            },] },
];
/**
 * @nocollapse
 */
MdTabGroup.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
MdTabGroup.propDecorators = {
    '_tabs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdTab,] },],
    '_tabBodyWrapper': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['tabBodyWrapper',] },],
    'dynamicHeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    '_dynamicHeightDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['md-dynamic-height',] },],
    'selectedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'headerPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'selectedIndexChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'focusChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'selectChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
/**
 * Used in the `md-tab-group` view to display tab labels.
 * \@docs-private
 */
var MdTabLabelWrapper = (function () {
    /**
     * @param {?} elementRef
     * @param {?} _renderer
     */
    function MdTabLabelWrapper(elementRef, _renderer) {
        this.elementRef = elementRef;
        this._renderer = _renderer;
        this._disabled = false;
    }
    Object.defineProperty(MdTabLabelWrapper.prototype, "disabled", {
        /**
         * Whether the element is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._disabled = coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets focus on the wrapper element
     * @return {?}
     */
    MdTabLabelWrapper.prototype.focus = function () {
        this._renderer.invokeElementMethod(this.elementRef.nativeElement, 'focus');
    };
    /**
     * @return {?}
     */
    MdTabLabelWrapper.prototype.getOffsetLeft = function () {
        return this.elementRef.nativeElement.offsetLeft;
    };
    /**
     * @return {?}
     */
    MdTabLabelWrapper.prototype.getOffsetWidth = function () {
        return this.elementRef.nativeElement.offsetWidth;
    };
    return MdTabLabelWrapper;
}());
MdTabLabelWrapper.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-tab-label-wrapper], [mat-tab-label-wrapper]',
                host: {
                    '[class.mat-tab-disabled]': 'disabled'
                }
            },] },
];
/**
 * @nocollapse
 */
MdTabLabelWrapper.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
MdTabLabelWrapper.propDecorators = {
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * The ink-bar is used to display and animate the line underneath the current active tab label.
 * \@docs-private
 */
var MdInkBar = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _elementRef
     * @param {?} _ngZone
     */
    function MdInkBar(_renderer, _elementRef, _ngZone) {
        this._renderer = _renderer;
        this._elementRef = _elementRef;
        this._ngZone = _ngZone;
    }
    /**
     * Calculates the styles from the provided element in order to align the ink-bar to that element.
     * Shows the ink bar if previously set as hidden.
     * @param {?} element
     * @return {?}
     */
    MdInkBar.prototype.alignToElement = function (element) {
        var _this = this;
        this.show();
        this._ngZone.runOutsideAngular(function () {
            requestAnimationFrame(function () {
                _this._renderer.setElementStyle(_this._elementRef.nativeElement, 'left', _this._getLeftPosition(element));
                _this._renderer.setElementStyle(_this._elementRef.nativeElement, 'width', _this._getElementWidth(element));
            });
        });
    };
    /**
     * Shows the ink bar.
     * @return {?}
     */
    MdInkBar.prototype.show = function () {
        this._renderer.setElementStyle(this._elementRef.nativeElement, 'visibility', 'visible');
    };
    /**
     * Hides the ink bar.
     * @return {?}
     */
    MdInkBar.prototype.hide = function () {
        this._renderer.setElementStyle(this._elementRef.nativeElement, 'visibility', 'hidden');
    };
    /**
     * Generates the pixel distance from the left based on the provided element in string format.
     * @param {?} element
     * @return {?}
     */
    MdInkBar.prototype._getLeftPosition = function (element) {
        return element ? element.offsetLeft + 'px' : '0';
    };
    /**
     * Generates the pixel width from the provided element in string format.
     * @param {?} element
     * @return {?}
     */
    MdInkBar.prototype._getElementWidth = function (element) {
        return element ? element.offsetWidth + 'px' : '0';
    };
    return MdInkBar;
}());
MdInkBar.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-ink-bar, mat-ink-bar',
                host: {
                    '[class.mat-ink-bar]': 'true',
                },
            },] },
];
/**
 * @nocollapse
 */
MdInkBar.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
]; };
/**
 * Navigation component matching the styles of the tab group header.
 * Provides anchored navigation with animated ink bar.
 */
var MdTabNavBar = (function () {
    /**
     * @param {?} _dir
     */
    function MdTabNavBar(_dir) {
        var _this = this;
        this._dir = _dir;
        if (_dir) {
            this._directionChange = _dir.dirChange.subscribe(function () { return _this._alignInkBar(); });
        }
    }
    /**
     * Notifies the component that the active link has been changed.
     * @param {?} element
     * @return {?}
     */
    MdTabNavBar.prototype.updateActiveLink = function (element) {
        this._activeLinkChanged = this._activeLinkElement != element;
        this._activeLinkElement = element;
    };
    /**
     * Checks if the active link has been changed and, if so, will update the ink bar.
     * @return {?}
     */
    MdTabNavBar.prototype.ngAfterContentChecked = function () {
        if (this._activeLinkChanged) {
            this._alignInkBar();
            this._activeLinkChanged = false;
        }
    };
    /**
     * @return {?}
     */
    MdTabNavBar.prototype.ngOnDestroy = function () {
        if (this._directionChange) {
            this._directionChange.unsubscribe();
            this._directionChange = null;
        }
    };
    /**
     * Aligns the ink bar to the active link.
     * @return {?}
     */
    MdTabNavBar.prototype._alignInkBar = function () {
        this._inkBar.alignToElement(this._activeLinkElement.nativeElement);
    };
    return MdTabNavBar;
}());
MdTabNavBar.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',
                template: "<div class=\"mat-tab-links\"> <ng-content></ng-content> <md-ink-bar></md-ink-bar> </div> ",
                styles: [".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative}.mat-tab-link{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-block;vertical-align:top;text-decoration:none;position:relative;overflow:hidden}.mat-tab-link:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0} /*# sourceMappingURL=tab-nav-bar.css.map */ "],
                host: {
                    '[class.mat-tab-nav-bar]': 'true',
                },
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
            },] },
];
/**
 * @nocollapse
 */
MdTabNavBar.ctorParameters = function () { return [
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
MdTabNavBar.propDecorators = {
    '_inkBar': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [MdInkBar,] },],
};
/**
 * Link inside of a `md-tab-nav-bar`.
 */
var MdTabLink = (function () {
    /**
     * @param {?} _mdTabNavBar
     * @param {?} _elementRef
     */
    function MdTabLink(_mdTabNavBar, _elementRef) {
        this._mdTabNavBar = _mdTabNavBar;
        this._elementRef = _elementRef;
        this._isActive = false;
    }
    Object.defineProperty(MdTabLink.prototype, "active", {
        /**
         * Whether the link is active.
         * @return {?}
         */
        get: function () { return this._isActive; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._isActive = value;
            if (value) {
                this._mdTabNavBar.updateActiveLink(this._elementRef);
            }
        },
        enumerable: true,
        configurable: true
    });
    return MdTabLink;
}());
MdTabLink.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-tab-link], [mat-tab-link]',
                host: {
                    '[class.mat-tab-link]': 'true',
                }
            },] },
];
/**
 * @nocollapse
 */
MdTabLink.ctorParameters = function () { return [
    { type: MdTabNavBar, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdTabLink.propDecorators = {
    'active': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * Simple directive that extends the ripple and matches the selector of the MdTabLink. This
 * adds the ripple behavior to nav bar labels.
 */
var MdTabLinkRipple = (function (_super) {
    __extends(MdTabLinkRipple, _super);
    /**
     * @param {?} elementRef
     * @param {?} ngZone
     * @param {?} ruler
     * @param {?} globalOptions
     */
    function MdTabLinkRipple(elementRef, ngZone, ruler, globalOptions) {
        return _super.call(this, elementRef, ngZone, ruler, globalOptions) || this;
    }
    return MdTabLinkRipple;
}(MdRipple));
MdTabLinkRipple.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-tab-link], [mat-tab-link]',
                host: {
                    '[class.mat-tab-link]': 'true',
                },
            },] },
];
/**
 * @nocollapse
 */
MdTabLinkRipple.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: ViewportRuler, },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["g" /* Inject */], args: [MD_RIPPLE_GLOBAL_OPTIONS,] },] },
]; };
/**
 * Wrapper for the contents of a tab.
 * \@docs-private
 */
var MdTabBody = (function () {
    /**
     * @param {?} _dir
     * @param {?} _elementRef
     * @param {?} _changeDetectorRef
     */
    function MdTabBody(_dir, _elementRef, _changeDetectorRef) {
        this._dir = _dir;
        this._elementRef = _elementRef;
        this._changeDetectorRef = _changeDetectorRef;
        /** Event emitted when the tab begins to animate towards the center as the active tab. */
        this.onCentering = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the tab completes its animation towards the center. */
        this.onCentered = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */](true);
        /** Whether the element is allowed to be animated. */
        this._canBeAnimated = false;
    }
    Object.defineProperty(MdTabBody.prototype, "position", {
        /**
         * @param {?} position
         * @return {?}
         */
        set: function (position) {
            if (position < 0) {
                this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';
            }
            else if (position > 0) {
                this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';
            }
            else {
                this._position = 'center';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTabBody.prototype, "origin", {
        /**
         * The origin position from which this tab should appear when it is centered into view.
         * @param {?} origin
         * @return {?}
         */
        set: function (origin) {
            if (origin == null) {
                return;
            }
            var /** @type {?} */ dir = this._getLayoutDirection();
            if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {
                this._origin = 'left';
            }
            else {
                this._origin = 'right';
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * After initialized, check if the content is centered and has an origin. If so, set the
     * special position states that transition the tab from the left or right before centering.
     * @return {?}
     */
    MdTabBody.prototype.ngOnInit = function () {
        if (this._position == 'center' && this._origin) {
            this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';
        }
    };
    /**
     * After the view has been set, check if the tab content is set to the center and attach the
     * content if it is not already attached.
     * @return {?}
     */
    MdTabBody.prototype.ngAfterViewChecked = function () {
        if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {
            this._portalHost.attach(this._content);
        }
    };
    /**
     * After the content has been checked, determines whether the element should be allowed to
     * animate. This has to be limited, because under a specific set of circumstances (see #2151),
     * the animations can be triggered too early, which either crashes Chrome by putting it into an
     * infinite loop (with Angular < 2.3.0) or throws an error because the element doesn't have a
     * computed style (with Angular > 2.3.0). This can alternatively be determined by checking the
     * transform: canBeAnimated = getComputedStyle(element) !== '', however document.contains should
     * be faster since it doesn't cause a reflow.
     *
     * TODO: This can safely be removed after we stop supporting Angular < 2.4.2. The fix landed via
     * https://github.com/angular/angular/commit/21030e9a1cf30e8101399d8535ed72d847a23ba6
     * @return {?}
     */
    MdTabBody.prototype.ngAfterContentChecked = function () {
        if (!this._canBeAnimated) {
            this._canBeAnimated = document.body.contains(this._elementRef.nativeElement);
            if (this._canBeAnimated) {
                this._changeDetectorRef.markForCheck();
            }
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    MdTabBody.prototype._onTranslateTabStarted = function (e) {
        if (this._isCenterPosition(e.toState)) {
            this.onCentering.emit(this._elementRef.nativeElement.clientHeight);
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    MdTabBody.prototype._onTranslateTabComplete = function (e) {
        // If the end state is that the tab is not centered, then detach the content.
        if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {
            this._portalHost.detach();
        }
        // If the transition to the center is complete, emit an event.
        if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {
            this.onCentered.emit();
        }
    };
    /**
     * The text direction of the containing app.
     * @return {?}
     */
    MdTabBody.prototype._getLayoutDirection = function () {
        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';
    };
    /**
     * Whether the provided position state is considered center, regardless of origin.
     * @param {?} position
     * @return {?}
     */
    MdTabBody.prototype._isCenterPosition = function (position) {
        return position == 'center' ||
            position == 'left-origin-center' ||
            position == 'right-origin-center';
    };
    return MdTabBody;
}());
MdTabBody.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-tab-body, mat-tab-body',
                template: "<div class=\"mat-tab-body-content\" #content [@translateTab]=\"_canBeAnimated ? _position : null\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_onTranslateTabComplete($event)\"> <ng-template cdkPortalHost></ng-template> </div> ",
                styles: [".mat-tab-body-content{height:100%} /*# sourceMappingURL=tab-body.css.map */ "],
                host: {
                    '[class.mat-tab-body]': 'true',
                },
                animations: [
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('translateTab', [
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('left', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translate3d(-100%, 0, 0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('left-origin-center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translate3d(0, 0, 0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('right-origin-center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translate3d(0, 0, 0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translate3d(0, 0, 0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('right', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translate3d(100%, 0, 0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('* => left, * => right, left => center, right => center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('void => left-origin-center', [
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translate3d(-100%, 0, 0)' }),
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('500ms cubic-bezier(0.35, 0, 0.25, 1)')
                        ]),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('void => right-origin-center', [
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translate3d(100%, 0, 0)' }),
                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('500ms cubic-bezier(0.35, 0, 0.25, 1)')
                        ])
                    ])
                ]
            },] },
];
/**
 * @nocollapse
 */
MdTabBody.ctorParameters = function () { return [
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["C" /* ChangeDetectorRef */], },
]; };
MdTabBody.propDecorators = {
    '_portalHost': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [PortalHostDirective,] },],
    'onCentering': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'onCentered': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    '_content': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['content',] },],
    'position': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['position',] },],
    'origin': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['origin',] },],
};
/**
 * The distance in pixels that will be overshot when scrolling a tab label into view. This helps
 * provide a small affordance to the label next to it.
 */
var EXAGGERATED_OVERSCROLL = 60;
/**
 * The header of the tab group which displays a list of all the tabs in the tab group. Includes
 * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the
 * width of the header container, then arrows will be displayed to allow the user to scroll
 * left and right across the header.
 * \@docs-private
 */
var MdTabHeader = (function () {
    /**
     * @param {?} _elementRef
     * @param {?} _dir
     */
    function MdTabHeader(_elementRef, _dir) {
        this._elementRef = _elementRef;
        this._dir = _dir;
        this._focusIndex = 0;
        this._scrollDistance = 0;
        this._selectedIndexChanged = false;
        /** Whether the controls for pagination should be displayed */
        this._showPaginationControls = false;
        /** Whether the tab list can be scrolled more towards the end of the tab label list. */
        this._disableScrollAfter = true;
        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */
        this._disableScrollBefore = true;
        this._selectedIndex = 0;
        /** Event emitted when the option is selected. */
        this.selectFocusedIndex = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when a label is focused. */
        this.indexFocused = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
    }
    Object.defineProperty(MdTabHeader.prototype, "selectedIndex", {
        /**
         * @return {?}
         */
        get: function () { return this._selectedIndex; },
        /**
         * The index of the active tab.
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._selectedIndexChanged = this._selectedIndex != value;
            this._selectedIndex = value;
            this._focusIndex = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdTabHeader.prototype.ngAfterContentChecked = function () {
        // If the number of tab labels have changed, check if scrolling should be enabled
        if (this._tabLabelCount != this._labelWrappers.length) {
            this._updatePagination();
            this._tabLabelCount = this._labelWrappers.length;
        }
        // If the selected index has changed, scroll to the label and check if the scrolling controls
        // should be disabled.
        if (this._selectedIndexChanged) {
            this._scrollToLabel(this._selectedIndex);
            this._checkScrollingControls();
            this._alignInkBarToSelectedTab();
            this._selectedIndexChanged = false;
        }
        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),
        // then translate the header to reflect this.
        if (this._scrollDistanceChanged) {
            this._updateTabScrollPosition();
            this._scrollDistanceChanged = false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdTabHeader.prototype._handleKeydown = function (event) {
        switch (event.keyCode) {
            case RIGHT_ARROW:
                this._focusNextTab();
                break;
            case LEFT_ARROW:
                this._focusPreviousTab();
                break;
            case ENTER:
                this.selectFocusedIndex.emit(this.focusIndex);
                break;
        }
    };
    /**
     * Aligns the ink bar to the selected tab on load.
     * @return {?}
     */
    MdTabHeader.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._alignInkBarToSelectedTab();
        if (this._dir) {
            this._directionChange = this._dir.dirChange.subscribe(function () { return _this._alignInkBarToSelectedTab(); });
        }
    };
    /**
     * @return {?}
     */
    MdTabHeader.prototype.ngOnDestroy = function () {
        if (this._directionChange) {
            this._directionChange.unsubscribe();
            this._directionChange = null;
        }
    };
    /**
     * Callback for when the MutationObserver detects that the content has changed.
     * @return {?}
     */
    MdTabHeader.prototype._onContentChanges = function () {
        this._updatePagination();
        this._alignInkBarToSelectedTab();
    };
    /**
     * Updating the view whether pagination should be enabled or not
     * @return {?}
     */
    MdTabHeader.prototype._updatePagination = function () {
        this._checkPaginationEnabled();
        this._checkScrollingControls();
        this._updateTabScrollPosition();
    };
    Object.defineProperty(MdTabHeader.prototype, "focusIndex", {
        /**
         * Tracks which element has focus; used for keyboard navigation
         * @return {?}
         */
        get: function () { return this._focusIndex; },
        /**
         * When the focus index is set, we must manually send focus to the correct label
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (!this._isValidIndex(value) || this._focusIndex == value) {
                return;
            }
            this._focusIndex = value;
            this.indexFocused.emit(value);
            this._setTabFocus(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is
     * providing a valid index and return true.
     * @param {?} index
     * @return {?}
     */
    MdTabHeader.prototype._isValidIndex = function (index) {
        if (!this._labelWrappers) {
            return true;
        }
        var /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;
        return tab && !tab.disabled;
    };
    /**
     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if
     * scrolling is enabled.
     * @param {?} tabIndex
     * @return {?}
     */
    MdTabHeader.prototype._setTabFocus = function (tabIndex) {
        if (this._showPaginationControls) {
            this._scrollToLabel(tabIndex);
        }
        if (this._labelWrappers && this._labelWrappers.length) {
            this._labelWrappers.toArray()[tabIndex].focus();
            // Do not let the browser manage scrolling to focus the element, this will be handled
            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width
            // should be the full width minus the offset width.
            var /** @type {?} */ containerEl = this._tabListContainer.nativeElement;
            var /** @type {?} */ dir = this._getLayoutDirection();
            if (dir == 'ltr') {
                containerEl.scrollLeft = 0;
            }
            else {
                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;
            }
        }
    };
    /**
     * Moves the focus towards the beginning or the end of the list depending on the offset provided.
     * Valid offsets are 1 and -1.
     * @param {?} offset
     * @return {?}
     */
    MdTabHeader.prototype._moveFocus = function (offset) {
        if (this._labelWrappers) {
            var /** @type {?} */ tabs = this._labelWrappers.toArray();
            for (var /** @type {?} */ i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {
                if (this._isValidIndex(i)) {
                    this.focusIndex = i;
                    return;
                }
            }
        }
    };
    /**
     * Increment the focus index by 1 until a valid tab is found.
     * @return {?}
     */
    MdTabHeader.prototype._focusNextTab = function () {
        this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);
    };
    /**
     * Decrement the focus index by 1 until a valid tab is found.
     * @return {?}
     */
    MdTabHeader.prototype._focusPreviousTab = function () {
        this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);
    };
    /**
     * The layout direction of the containing app.
     * @return {?}
     */
    MdTabHeader.prototype._getLayoutDirection = function () {
        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';
    };
    /**
     * Performs the CSS transformation on the tab list that will cause the list to scroll.
     * @return {?}
     */
    MdTabHeader.prototype._updateTabScrollPosition = function () {
        var /** @type {?} */ translateX = this.scrollDistance + 'px';
        if (this._getLayoutDirection() == 'ltr') {
            translateX = '-' + translateX;
        }
        applyCssTransform(this._tabList.nativeElement, "translate3d(" + translateX + ", 0, 0)");
    };
    Object.defineProperty(MdTabHeader.prototype, "scrollDistance", {
        /**
         * @return {?}
         */
        get: function () { return this._scrollDistance; },
        /**
         * Sets the distance in pixels that the tab header should be transformed in the X-axis.
         * @param {?} v
         * @return {?}
         */
        set: function (v) {
            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));
            // Mark that the scroll distance has changed so that after the view is checked, the CSS
            // transformation can move the header.
            this._scrollDistanceChanged = true;
            this._checkScrollingControls();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or
     * the end of the list, respectively). The distance to scroll is computed to be a third of the
     * length of the tab list view window.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     * @param {?} scrollDir
     * @return {?}
     */
    MdTabHeader.prototype._scrollHeader = function (scrollDir) {
        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;
        // Move the scroll distance one-third the length of the tab list's viewport.
        this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;
    };
    /**
     * Moves the tab list such that the desired tab label (marked by index) is moved into view.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     * @param {?} labelIndex
     * @return {?}
     */
    MdTabHeader.prototype._scrollToLabel = function (labelIndex) {
        var /** @type {?} */ selectedLabel = this._labelWrappers
            ? this._labelWrappers.toArray()[labelIndex]
            : null;
        if (!selectedLabel) {
            return;
        }
        // The view length is the visible width of the tab labels.
        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;
        var /** @type {?} */ labelBeforePos, /** @type {?} */ labelAfterPos;
        if (this._getLayoutDirection() == 'ltr') {
            labelBeforePos = selectedLabel.getOffsetLeft();
            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();
        }
        else {
            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();
            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();
        }
        var /** @type {?} */ beforeVisiblePos = this.scrollDistance;
        var /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;
        if (labelBeforePos < beforeVisiblePos) {
            // Scroll header to move label to the before direction
            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;
        }
        else if (labelAfterPos > afterVisiblePos) {
            // Scroll header to move label to the after direction
            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;
        }
    };
    /**
     * Evaluate whether the pagination controls should be displayed. If the scroll width of the
     * tab list is wider than the size of the header container, then the pagination controls should
     * be shown.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     * @return {?}
     */
    MdTabHeader.prototype._checkPaginationEnabled = function () {
        this._showPaginationControls =
            this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;
        if (!this._showPaginationControls) {
            this.scrollDistance = 0;
        }
    };
    /**
     * Evaluate whether the before and after controls should be enabled or disabled.
     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the
     * before button. If the header is at the end of the list (scroll distance is equal to the
     * maximum distance we can scroll), then disable the after button.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     * @return {?}
     */
    MdTabHeader.prototype._checkScrollingControls = function () {
        // Check if the pagination arrows should be activated.
        this._disableScrollBefore = this.scrollDistance == 0;
        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();
    };
    /**
     * Determines what is the maximum length in pixels that can be set for the scroll distance. This
     * is equal to the difference in width between the tab list container and tab header container.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     * @return {?}
     */
    MdTabHeader.prototype._getMaxScrollDistance = function () {
        var /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;
        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;
        return lengthOfTabList - viewLength;
    };
    /**
     * Tells the ink-bar to align itself to the current label wrapper
     * @return {?}
     */
    MdTabHeader.prototype._alignInkBarToSelectedTab = function () {
        var /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length
            ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement
            : null;
        this._inkBar.alignToElement(selectedLabelWrapper);
    };
    return MdTabHeader;
}());
MdTabHeader.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-tab-header, mat-tab-header',
                template: "<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" aria-hidden=\"true\" md-ripple [mdRippleDisabled]=\"_disableScrollBefore\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_scrollHeader('before')\"> <div class=\"mat-tab-header-pagination-chevron\"></div> </div> <div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"> <div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"> <div class=\"mat-tab-labels\"> <ng-content></ng-content> </div> <md-ink-bar></md-ink-bar> </div> </div> <div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" aria-hidden=\"true\" md-ripple [mdRippleDisabled]=\"_disableScrollAfter\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (click)=\"_scrollHeader('after')\"> <div class=\"mat-tab-header-pagination-chevron\"></div> </div> ",
                styles: [".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;position:relative}.mat-tab-label:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:#ccc}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex} /*# sourceMappingURL=tab-header.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                host: {
                    'class': 'mat-tab-header',
                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',
                    '[class.mat-tab-header-rtl]': "_getLayoutDirection() == 'rtl'",
                }
            },] },
];
/**
 * @nocollapse
 */
MdTabHeader.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
MdTabHeader.propDecorators = {
    '_labelWrappers': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdTabLabelWrapper,] },],
    '_inkBar': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [MdInkBar,] },],
    '_tabListContainer': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['tabListContainer',] },],
    '_tabList': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['tabList',] },],
    'selectedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'selectFocusedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'indexFocused': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
var MdTabsModule = (function () {
    function MdTabsModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdTabsModule.forRoot = function () {
        return {
            ngModule: MdTabsModule,
            providers: []
        };
    };
    return MdTabsModule;
}());
MdTabsModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */],
                    PortalModule,
                    MdRippleModule,
                    ObserveContentModule,
                ],
                // Don't export all components because some are only to be used internally.
                exports: [
                    MdTabGroup,
                    MdTabLabel,
                    MdTab,
                    MdTabNavBar,
                    MdTabLink,
                    MdTabLinkRipple
                ],
                declarations: [
                    MdTabGroup,
                    MdTabLabel,
                    MdTab,
                    MdInkBar,
                    MdTabLabelWrapper,
                    MdTabNavBar,
                    MdTabLink,
                    MdTabBody,
                    MdTabLinkRipple,
                    MdTabHeader
                ],
                providers: [VIEWPORT_RULER_PROVIDER, SCROLL_DISPATCHER_PROVIDER],
            },] },
];
/**
 * @nocollapse
 */
MdTabsModule.ctorParameters = function () { return []; };
var MdToolbarRow = (function () {
    function MdToolbarRow() {
    }
    return MdToolbarRow;
}());
MdToolbarRow.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'md-toolbar-row, mat-toolbar-row',
                host: {
                    '[class.mat-toolbar-row]': 'true',
                },
            },] },
];
/**
 * @nocollapse
 */
MdToolbarRow.ctorParameters = function () { return []; };
var MdToolbar = (function () {
    /**
     * @param {?} elementRef
     * @param {?} renderer
     */
    function MdToolbar(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    Object.defineProperty(MdToolbar.prototype, "color", {
        /**
         * The color of the toolbar. Can be primary, accent, or warn.
         * @return {?}
         */
        get: function () {
            return this._color;
        },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._updateColor(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} newColor
     * @return {?}
     */
    MdToolbar.prototype._updateColor = function (newColor) {
        this._setElementColor(this._color, false);
        this._setElementColor(newColor, true);
        this._color = newColor;
    };
    /**
     * @param {?} color
     * @param {?} isAdd
     * @return {?}
     */
    MdToolbar.prototype._setElementColor = function (color, isAdd) {
        if (color != null && color != '') {
            this.renderer.setElementClass(this.elementRef.nativeElement, "mat-" + color, isAdd);
        }
    };
    return MdToolbar;
}());
MdToolbar.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-toolbar, mat-toolbar',
                template: "<div class=\"mat-toolbar-layout\"> <md-toolbar-row> <ng-content></ng-content> </md-toolbar-row> <ng-content select=\"md-toolbar-row, mat-toolbar-row\"></ng-content> </div> ",
                styles: [".mat-toolbar{display:flex;box-sizing:border-box;width:100%;font-size:20px;font-weight:500;font-family:Roboto,\"Helvetica Neue\",sans-serif;padding:0 16px;flex-direction:column}.mat-toolbar .mat-toolbar-row{display:flex;box-sizing:border-box;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar{min-height:64px}.mat-toolbar-row{height:64px}@media (max-width:600px){.mat-toolbar{min-height:56px}.mat-toolbar-row{height:56px}} /*# sourceMappingURL=toolbar.css.map */ "],
                host: {
                    '[class.mat-toolbar]': 'true',
                    'role': 'toolbar'
                },
                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* ChangeDetectionStrategy */].OnPush,
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None
            },] },
];
/**
 * @nocollapse
 */
MdToolbar.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
]; };
MdToolbar.propDecorators = {
    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
var MdToolbarModule = (function () {
    function MdToolbarModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdToolbarModule.forRoot = function () {
        return {
            ngModule: MdToolbarModule,
            providers: []
        };
    };
    return MdToolbarModule;
}());
MdToolbarModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [CompatibilityModule],
                exports: [MdToolbar, MdToolbarRow, CompatibilityModule],
                declarations: [MdToolbar, MdToolbarRow],
            },] },
];
/**
 * @nocollapse
 */
MdToolbarModule.ctorParameters = function () { return []; };
/**
 * Exception thrown when a tooltip has an invalid position.
 * \@docs-private
 */
var MdTooltipInvalidPositionError = (function (_super) {
    __extends(MdTooltipInvalidPositionError, _super);
    /**
     * @param {?} position
     */
    function MdTooltipInvalidPositionError(position) {
        return _super.call(this, "Tooltip position \"" + position + "\" is invalid.") || this;
    }
    return MdTooltipInvalidPositionError;
}(MdError));
/** Time in ms to delay before changing the tooltip visibility to hidden */
var TOUCHEND_HIDE_DELAY = 1500;
/** Time in ms to throttle repositioning after scroll events. */
var SCROLL_THROTTLE_MS = 20;
/**
 * Directive that attaches a material design tooltip to the host element. Animates the showing and
 * hiding of a tooltip provided position (defaults to below the element).
 *
 * https://material.google.com/components/tooltips.html
 */
var MdTooltip = (function () {
    /**
     * @param {?} _overlay
     * @param {?} _elementRef
     * @param {?} _scrollDispatcher
     * @param {?} _viewContainerRef
     * @param {?} _ngZone
     * @param {?} _renderer
     * @param {?} _platform
     * @param {?} _dir
     */
    function MdTooltip(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _renderer, _platform, _dir) {
        var _this = this;
        this._overlay = _overlay;
        this._elementRef = _elementRef;
        this._scrollDispatcher = _scrollDispatcher;
        this._viewContainerRef = _viewContainerRef;
        this._ngZone = _ngZone;
        this._renderer = _renderer;
        this._platform = _platform;
        this._dir = _dir;
        this._position = 'below';
        this._disabled = false;
        /** The default delay in ms before showing the tooltip after show is called */
        this.showDelay = 0;
        /** The default delay in ms before hiding the tooltip after hide is called */
        this.hideDelay = 0;
        // The mouse events shouldn't be bound on iOS devices, because
        // they can prevent the first tap from firing it's click event.
        if (!_platform.IOS) {
            _renderer.listen(_elementRef.nativeElement, 'mouseenter', function () { return _this.show(); });
            _renderer.listen(_elementRef.nativeElement, 'mouseleave', function () { return _this.hide(); });
        }
    }
    Object.defineProperty(MdTooltip.prototype, "position", {
        /**
         * Allows the user to define the position of the tooltip relative to the parent element
         * @return {?}
         */
        get: function () { return this._position; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            if (value !== this._position) {
                this._position = value;
                // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy
                // the tooltip.
                if (this._tooltipInstance) {
                    this._disposeTooltip();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "disabled", {
        /**
         * Disables the display of the tooltip.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = coerceBooleanProperty(value);
            // If tooltip is disabled, hide immediately.
            if (this._disabled) {
                this.hide(0);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "_positionDeprecated", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this._position; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) { this._position = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "message", {
        /**
         * The message to be displayed in the tooltip
         * @return {?}
         */
        get: function () { return this._message; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._message = value;
            if (this._tooltipInstance) {
                this._setTooltipMessage(this._message);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "_deprecatedMessage", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this.message; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.message = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "_matMessage", {
        /**
         * @return {?}
         */
        get: function () { return this.message; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.message = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "_matPosition", {
        /**
         * @return {?}
         */
        get: function () { return this.position; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.position = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "_matDisabled", {
        /**
         * @return {?}
         */
        get: function () { return this.disabled; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.disabled = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "_matHideDelay", {
        /**
         * @return {?}
         */
        get: function () { return this.hideDelay; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.hideDelay = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdTooltip.prototype, "_matShowDelay", {
        /**
         * @return {?}
         */
        get: function () { return this.showDelay; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.showDelay = v; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdTooltip.prototype.ngOnInit = function () {
        var _this = this;
        // When a scroll on the page occurs, update the position in case this tooltip needs
        // to be repositioned.
        this.scrollSubscription = this._scrollDispatcher.scrolled(SCROLL_THROTTLE_MS, function () {
            if (_this._overlayRef) {
                _this._overlayRef.updatePosition();
            }
        });
    };
    /**
     * Dispose the tooltip when destroyed.
     * @return {?}
     */
    MdTooltip.prototype.ngOnDestroy = function () {
        if (this._tooltipInstance) {
            this._disposeTooltip();
        }
        if (this.scrollSubscription) {
            this.scrollSubscription.unsubscribe();
        }
    };
    /**
     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input
     * @param {?=} delay
     * @return {?}
     */
    MdTooltip.prototype.show = function (delay) {
        if (delay === void 0) { delay = this.showDelay; }
        if (this.disabled || !this._message || !this._message.trim()) {
            return;
        }
        if (!this._tooltipInstance) {
            this._createTooltip();
        }
        this._setTooltipMessage(this._message);
        this._tooltipInstance.show(this._position, delay);
    };
    /**
     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input
     * @param {?=} delay
     * @return {?}
     */
    MdTooltip.prototype.hide = function (delay) {
        if (delay === void 0) { delay = this.hideDelay; }
        if (this._tooltipInstance) {
            this._tooltipInstance.hide(delay);
        }
    };
    /**
     * Shows/hides the tooltip
     * @return {?}
     */
    MdTooltip.prototype.toggle = function () {
        this._isTooltipVisible() ? this.hide() : this.show();
    };
    /**
     * Returns true if the tooltip is currently visible to the user
     * @return {?}
     */
    MdTooltip.prototype._isTooltipVisible = function () {
        return !!this._tooltipInstance && this._tooltipInstance.isVisible();
    };
    /**
     * Create the tooltip to display
     * @return {?}
     */
    MdTooltip.prototype._createTooltip = function () {
        var _this = this;
        this._createOverlay();
        var /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);
        this._tooltipInstance = this._overlayRef.attach(portal).instance;
        // Dispose the overlay when finished the shown tooltip.
        this._tooltipInstance.afterHidden().subscribe(function () {
            // Check first if the tooltip has already been removed through this components destroy.
            if (_this._tooltipInstance) {
                _this._disposeTooltip();
            }
        });
    };
    /**
     * Create the overlay config and position strategy
     * @return {?}
     */
    MdTooltip.prototype._createOverlay = function () {
        var _this = this;
        var /** @type {?} */ origin = this._getOrigin();
        var /** @type {?} */ position = this._getOverlayPosition();
        // Create connected position strategy that listens for scroll events to reposition.
        // After position changes occur and the overlay is clipped by a parent scrollable then
        // close the tooltip.
        var /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);
        strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));
        strategy.onPositionChange.subscribe(function (change) {
            if (change.scrollableViewProperties.isOverlayClipped &&
                _this._tooltipInstance && _this._tooltipInstance.isVisible()) {
                _this.hide(0);
            }
        });
        var /** @type {?} */ config = new OverlayState();
        config.positionStrategy = strategy;
        this._overlayRef = this._overlay.create(config);
    };
    /**
     * Disposes the current tooltip and the overlay it is attached to
     * @return {?}
     */
    MdTooltip.prototype._disposeTooltip = function () {
        this._overlayRef.dispose();
        this._overlayRef = null;
        this._tooltipInstance = null;
    };
    /**
     * Returns the origin position based on the user's position preference
     * @return {?}
     */
    MdTooltip.prototype._getOrigin = function () {
        if (this.position == 'above' || this.position == 'below') {
            return { originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom' };
        }
        var /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';
        if (this.position == 'left' ||
            this.position == 'before' && isDirectionLtr ||
            this.position == 'after' && !isDirectionLtr) {
            return { originX: 'start', originY: 'center' };
        }
        if (this.position == 'right' ||
            this.position == 'after' && isDirectionLtr ||
            this.position == 'before' && !isDirectionLtr) {
            return { originX: 'end', originY: 'center' };
        }
        throw new MdTooltipInvalidPositionError(this.position);
    };
    /**
     * Returns the overlay position based on the user's preference
     * @return {?}
     */
    MdTooltip.prototype._getOverlayPosition = function () {
        if (this.position == 'above') {
            return { overlayX: 'center', overlayY: 'bottom' };
        }
        if (this.position == 'below') {
            return { overlayX: 'center', overlayY: 'top' };
        }
        var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';
        if (this.position == 'left' ||
            this.position == 'before' && isLtr ||
            this.position == 'after' && !isLtr) {
            return { overlayX: 'end', overlayY: 'center' };
        }
        if (this.position == 'right' ||
            this.position == 'after' && isLtr ||
            this.position == 'before' && !isLtr) {
            return { overlayX: 'start', overlayY: 'center' };
        }
        throw new MdTooltipInvalidPositionError(this.position);
    };
    /**
     * Updates the tooltip message and repositions the overlay according to the new message length
     * @param {?} message
     * @return {?}
     */
    MdTooltip.prototype._setTooltipMessage = function (message) {
        var _this = this;
        // Must wait for the message to be painted to the tooltip so that the overlay can properly
        // calculate the correct positioning based on the size of the text.
        this._tooltipInstance.message = message;
        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {
            if (_this._tooltipInstance) {
                _this._overlayRef.updatePosition();
            }
        });
    };
    return MdTooltip;
}());
MdTooltip.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',
                host: {
                    '(longpress)': 'show()',
                    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',
                },
                exportAs: 'mdTooltip',
            },] },
];
/**
 * @nocollapse
 */
MdTooltip.ctorParameters = function () { return [
    { type: Overlay, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: ScrollDispatcher, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: Platform, },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
MdTooltip.propDecorators = {
    'position': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdTooltipPosition',] },],
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdTooltipDisabled',] },],
    '_positionDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['tooltip-position',] },],
    'showDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdTooltipShowDelay',] },],
    'hideDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdTooltipHideDelay',] },],
    'message': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdTooltip',] },],
    '_deprecatedMessage': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['md-tooltip',] },],
    '_matMessage': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['matTooltip',] },],
    '_matPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['matTooltipPosition',] },],
    '_matDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['matTooltipDisabled',] },],
    '_matHideDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['matTooltipHideDelay',] },],
    '_matShowDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['matTooltipShowDelay',] },],
};
/**
 * Internal component that wraps the tooltip's content.
 * \@docs-private
 */
var TooltipComponent = (function () {
    /**
     * @param {?} _dir
     * @param {?} _changeDetectorRef
     */
    function TooltipComponent(_dir, _changeDetectorRef) {
        this._dir = _dir;
        this._changeDetectorRef = _changeDetectorRef;
        /** Property watched by the animation framework to show or hide the tooltip */
        this._visibility = 'initial';
        /** Whether interactions on the page should close the tooltip */
        this._closeOnInteraction = false;
        /** The transform origin used in the animation for showing and hiding the tooltip */
        this._transformOrigin = 'bottom';
        this._onHide = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
    }
    /**
     * Shows the tooltip with an animation originating from the provided origin
     * @param {?} position Position of the tooltip.
     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.
     * @return {?}
     */
    TooltipComponent.prototype.show = function (position, delay) {
        var _this = this;
        // Cancel the delayed hide if it is scheduled
        if (this._hideTimeoutId) {
            clearTimeout(this._hideTimeoutId);
        }
        // Body interactions should cancel the tooltip if there is a delay in showing.
        this._closeOnInteraction = true;
        this._setTransformOrigin(position);
        this._showTimeoutId = setTimeout(function () {
            _this._visibility = 'visible';
            // If this was set to true immediately, then a body click that triggers show() would
            // trigger interaction and close the tooltip right after it was displayed.
            _this._closeOnInteraction = false;
            // Mark for check so if any parent component has set the
            // ChangeDetectionStrategy to OnPush it will be checked anyways
            _this._changeDetectorRef.markForCheck();
            setTimeout(function () { _this._closeOnInteraction = true; }, 0);
        }, delay);
    };
    /**
     * Begins the animation to hide the tooltip after the provided delay in ms.
     * @param {?} delay Amount of milliseconds to delay showing the tooltip.
     * @return {?}
     */
    TooltipComponent.prototype.hide = function (delay) {
        var _this = this;
        // Cancel the delayed show if it is scheduled
        if (this._showTimeoutId) {
            clearTimeout(this._showTimeoutId);
        }
        this._hideTimeoutId = setTimeout(function () {
            _this._visibility = 'hidden';
            _this._closeOnInteraction = false;
            // Mark for check so if any parent component has set the
            // ChangeDetectionStrategy to OnPush it will be checked anyways
            _this._changeDetectorRef.markForCheck();
        }, delay);
    };
    /**
     * Returns an observable that notifies when the tooltip has been hidden from view
     * @return {?}
     */
    TooltipComponent.prototype.afterHidden = function () {
        return this._onHide.asObservable();
    };
    /**
     * Whether the tooltip is being displayed
     * @return {?}
     */
    TooltipComponent.prototype.isVisible = function () {
        return this._visibility === 'visible';
    };
    /**
     * Sets the tooltip transform origin according to the tooltip position
     * @param {?} value
     * @return {?}
     */
    TooltipComponent.prototype._setTransformOrigin = function (value) {
        var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';
        switch (value) {
            case 'before':
                this._transformOrigin = isLtr ? 'right' : 'left';
                break;
            case 'after':
                this._transformOrigin = isLtr ? 'left' : 'right';
                break;
            case 'left':
                this._transformOrigin = 'right';
                break;
            case 'right':
                this._transformOrigin = 'left';
                break;
            case 'above':
                this._transformOrigin = 'bottom';
                break;
            case 'below':
                this._transformOrigin = 'top';
                break;
            default: throw new MdTooltipInvalidPositionError(value);
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    TooltipComponent.prototype._afterVisibilityAnimation = function (e) {
        if (e.toState === 'hidden' && !this.isVisible()) {
            this._onHide.next();
        }
    };
    /**
     * Interactions on the HTML body should close the tooltip immediately as defined in the
     * material design spec.
     * https://material.google.com/components/tooltips.html#tooltips-interaction
     * @return {?}
     */
    TooltipComponent.prototype._handleBodyInteraction = function () {
        if (this._closeOnInteraction) {
            this.hide(0);
        }
    };
    return TooltipComponent;
}());
TooltipComponent.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-tooltip-component, mat-tooltip-component',
                template: "<div class=\"mat-tooltip\" [style.transform-origin]=\"_transformOrigin\" [@state]=\"_visibility\" (@state.done)=\"_afterVisibilityAnimation($event)\"> {{message}} </div>",
                styles: [":host{pointer-events:none}.mat-tooltip{color:#fff;padding:6px 8px;border-radius:2px;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:10px;margin:14px;max-width:250px}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}} /*# sourceMappingURL=tooltip.css.map */ "],
                animations: [
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('state', [
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('void', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'scale(0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('initial', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'scale(0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'scale(1)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('hidden', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'scale(0)' })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('* => visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('* => hidden', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('150ms cubic-bezier(0.4, 0.0, 1, 1)')),
                    ])
                ],
                host: {
                    '(body:click)': 'this._handleBodyInteraction()'
                }
            },] },
];
/**
 * @nocollapse
 */
TooltipComponent.ctorParameters = function () { return [
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["C" /* ChangeDetectorRef */], },
]; };
var MdTooltipModule = (function () {
    function MdTooltipModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdTooltipModule.forRoot = function () {
        return {
            ngModule: MdTooltipModule,
            providers: []
        };
    };
    return MdTooltipModule;
}());
MdTooltipModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [OverlayModule, CompatibilityModule, PlatformModule],
                exports: [MdTooltip, TooltipComponent, CompatibilityModule],
                declarations: [MdTooltip, TooltipComponent],
                entryComponents: [TooltipComponent],
            },] },
];
/**
 * @nocollapse
 */
MdTooltipModule.ctorParameters = function () { return []; };
/**
 * Exception thrown when menu trigger doesn't have a valid md-menu instance
 * \@docs-private
 */
var MdMenuMissingError = (function (_super) {
    __extends(MdMenuMissingError, _super);
    function MdMenuMissingError() {
        return _super.call(this, "md-menu-trigger: must pass in an md-menu instance.\n\n    Example:\n      <md-menu #menu=\"mdMenu\"></md-menu>\n      <button [mdMenuTriggerFor]=\"menu\"></button>\n    ") || this;
    }
    return MdMenuMissingError;
}(MdError));
/**
 * Exception thrown when menu's x-position value isn't valid.
 * In other words, it doesn't match 'before' or 'after'.
 * \@docs-private
 */
var MdMenuInvalidPositionX = (function (_super) {
    __extends(MdMenuInvalidPositionX, _super);
    function MdMenuInvalidPositionX() {
        return _super.call(this, "x-position value must be either 'before' or after'.\n      Example: <md-menu x-position=\"before\" #menu=\"mdMenu\"></md-menu>\n    ") || this;
    }
    return MdMenuInvalidPositionX;
}(MdError));
/**
 * Exception thrown when menu's y-position value isn't valid.
 * In other words, it doesn't match 'above' or 'below'.
 * \@docs-private
 */
var MdMenuInvalidPositionY = (function (_super) {
    __extends(MdMenuInvalidPositionY, _super);
    function MdMenuInvalidPositionY() {
        return _super.call(this, "y-position value must be either 'above' or below'.\n      Example: <md-menu y-position=\"above\" #menu=\"mdMenu\"></md-menu>\n    ") || this;
    }
    return MdMenuInvalidPositionY;
}(MdError));
/**
 * This directive is intended to be used inside an md-menu tag.
 * It exists mostly to set the role attribute.
 */
var MdMenuItem = (function () {
    /**
     * @param {?} _renderer
     * @param {?} _elementRef
     */
    function MdMenuItem(_renderer, _elementRef) {
        this._renderer = _renderer;
        this._elementRef = _elementRef;
        this._disabled = false;
    }
    /**
     * Focuses the menu item.
     * @return {?}
     */
    MdMenuItem.prototype.focus = function () {
        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');
    };
    Object.defineProperty(MdMenuItem.prototype, "disabled", {
        /**
         * Whether the menu item is disabled.
         * @return {?}
         */
        get: function () { return this._disabled; },
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this._disabled = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Used to set the `tabindex`.
     * @return {?}
     */
    MdMenuItem.prototype._getTabIndex = function () {
        return this._disabled ? '-1' : '0';
    };
    /**
     * Used to set the HTML `disabled` attribute. Necessary for links to be disabled properly.
     * @return {?}
     */
    MdMenuItem.prototype._getDisabledAttr = function () {
        return this._disabled ? true : null;
    };
    /**
     * Returns the host DOM element.
     * @return {?}
     */
    MdMenuItem.prototype._getHostElement = function () {
        return this._elementRef.nativeElement;
    };
    /**
     * Prevents the default element actions if it is disabled.
     * @param {?} event
     * @return {?}
     */
    MdMenuItem.prototype._checkDisabled = function (event) {
        if (this.disabled) {
            event.preventDefault();
            event.stopPropagation();
        }
    };
    return MdMenuItem;
}());
MdMenuItem.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: '[md-menu-item], [mat-menu-item]',
                host: {
                    'role': 'menuitem',
                    '[class.mat-menu-item]': 'true',
                    '[attr.tabindex]': '_getTabIndex()',
                    '[attr.aria-disabled]': 'disabled.toString()',
                    '[attr.disabled]': '_getDisabledAttr()',
                    '(click)': '_checkDisabled($event)',
                },
                template: "<ng-content></ng-content> <div class=\"mat-menu-ripple\" *ngIf=\"!disabled\" md-ripple [mdRippleTrigger]=\"_getHostElement()\"> </div> ",
                exportAs: 'mdMenuItem'
            },] },
];
/**
 * @nocollapse
 */
MdMenuItem.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
]; };
MdMenuItem.propDecorators = {
    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * Below are all the animations for the md-menu component.
 * Animation duration and timing values are based on AngularJS Material.
 */
/**
 * This animation controls the menu panel's entry and exit from the page.
 *
 * When the menu panel is added to the DOM, it scales in and fades in its border.
 *
 * When the menu panel is removed from the DOM, it simply fades out after a brief
 * delay to display the ripple.
 */
// TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.
var transformMenu = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('transformMenu', [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({
        opacity: 1,
        transform: "scale(1)"
    })),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('void => *', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({
            opacity: 0,
            transform: "scale(0)"
        }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])("200ms cubic-bezier(0.25, 0.8, 0.25, 1)")
    ]),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('* => void', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('50ms 100ms linear', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 0 }))
    ])
]);
/**
 * This animation fades in the background color and content of the menu panel
 * after its containing element is scaled in.
 */
var fadeInItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('fadeInItems', [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 1 })),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('void => *', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ opacity: 0 }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])("200ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")
    ])
]);
// TODO(kara): prevent-close functionality
var MdMenu = (function () {
    /**
     * @param {?} posX
     * @param {?} posY
     * @param {?} deprecatedPosX
     * @param {?} deprecatedPosY
     */
    function MdMenu(posX, posY, deprecatedPosX, deprecatedPosY) {
        /** Config object to be passed into the menu's ngClass */
        this._classList = {};
        /** Position of the menu in the X axis. */
        this.positionX = 'after';
        /** Position of the menu in the Y axis. */
        this.positionY = 'below';
        this.overlapTrigger = true;
        /** Event emitted when the menu is closed. */
        this.close = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        // TODO(kara): Remove kebab-case attributes after next release
        if (deprecatedPosX) {
            this._setPositionX(deprecatedPosX);
        }
        if (deprecatedPosY) {
            this._setPositionY(deprecatedPosY);
        }
        if (posX) {
            this._setPositionX(posX);
        }
        if (posY) {
            this._setPositionY(posY);
        }
        this.setPositionClasses(this.positionX, this.positionY);
    }
    /**
     * @return {?}
     */
    MdMenu.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._keyManager = new FocusKeyManager(this.items).withWrap();
        this._tabSubscription = this._keyManager.tabOut.subscribe(function () {
            _this._emitCloseEvent();
        });
    };
    /**
     * @return {?}
     */
    MdMenu.prototype.ngOnDestroy = function () {
        if (this._tabSubscription) {
            this._tabSubscription.unsubscribe();
        }
    };
    Object.defineProperty(MdMenu.prototype, "classList", {
        /**
         * This method takes classes set on the host md-menu element and applies them on the
         * menu template that displays in the overlay container.  Otherwise, it's difficult
         * to style the containing menu from outside the component.
         * @param {?} classes list of class names
         * @return {?}
         */
        set: function (classes) {
            this._classList = classes.split(' ').reduce(function (obj, className) {
                obj[className] = true;
                return obj;
            }, {});
            this.setPositionClasses(this.positionX, this.positionY);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Focus the first item in the menu. This method is used by the menu trigger
     * to focus the first item when the menu is opened by the ENTER key.
     * @return {?}
     */
    MdMenu.prototype.focusFirstItem = function () {
        this._keyManager.setFirstItemActive();
    };
    /**
     * This emits a close event to which the trigger is subscribed. When emitted, the
     * trigger will close the menu.
     * @return {?}
     */
    MdMenu.prototype._emitCloseEvent = function () {
        this.close.emit();
    };
    /**
     * @param {?} pos
     * @return {?}
     */
    MdMenu.prototype._setPositionX = function (pos) {
        if (pos !== 'before' && pos !== 'after') {
            throw new MdMenuInvalidPositionX();
        }
        this.positionX = pos;
    };
    /**
     * @param {?} pos
     * @return {?}
     */
    MdMenu.prototype._setPositionY = function (pos) {
        if (pos !== 'above' && pos !== 'below') {
            throw new MdMenuInvalidPositionY();
        }
        this.positionY = pos;
    };
    /**
     * It's necessary to set position-based classes to ensure the menu panel animation
     * folds out from the correct direction.
     * @param {?} posX
     * @param {?} posY
     * @return {?}
     */
    MdMenu.prototype.setPositionClasses = function (posX, posY) {
        this._classList['mat-menu-before'] = posX == 'before';
        this._classList['mat-menu-after'] = posX == 'after';
        this._classList['mat-menu-above'] = posY == 'above';
        this._classList['mat-menu-below'] = posY == 'below';
    };
    return MdMenu;
}());
MdMenu.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-menu, mat-menu',
                host: { 'role': 'menu' },
                template: "<ng-template> <div class=\"mat-menu-panel\" [ngClass]=\"_classList\" (keydown)=\"_keyManager.onKeydown($event)\" (click)=\"_emitCloseEvent()\" [@transformMenu]=\"'showing'\"> <div class=\"mat-menu-content\" [@fadeInItems]=\"'showing'\"> <ng-content></ng-content> </div> </div> </ng-template> ",
                styles: [".mat-menu-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh + 48px)}.mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:left top}.mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:left bottom}.mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:right top}.mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:right top}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:left top}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:left bottom}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content{padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;font-size:16px;font-family:Roboto,\"Helvetica Neue\",sans-serif;text-align:left;text-decoration:none;position:relative}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px}button.mat-menu-item{width:100%}.mat-menu-ripple{position:absolute;top:0;left:0;bottom:0;right:0} /*# sourceMappingURL=menu.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                animations: [
                    transformMenu,
                    fadeInItems
                ],
                exportAs: 'mdMenu'
            },] },
];
/**
 * @nocollapse
 */
MdMenu.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */], args: ['xPosition',] },] },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */], args: ['yPosition',] },] },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */], args: ['x-position',] },] },
    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Attribute */], args: ['y-position',] },] },
]; };
MdMenu.propDecorators = {
    'templateRef': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */],] },],
    'items': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdMenuItem,] },],
    'overlapTrigger': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
    'classList': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['class',] },],
    'close': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
/**
 * This directive is intended to be used in conjunction with an md-menu tag.  It is
 * responsible for toggling the display of the provided menu instance.
 */
var MdMenuTrigger = (function () {
    /**
     * @param {?} _overlay
     * @param {?} _element
     * @param {?} _viewContainerRef
     * @param {?} _renderer
     * @param {?} _dir
     */
    function MdMenuTrigger(_overlay, _element, _viewContainerRef, _renderer, _dir) {
        this._overlay = _overlay;
        this._element = _element;
        this._viewContainerRef = _viewContainerRef;
        this._renderer = _renderer;
        this._dir = _dir;
        this._menuOpen = false;
        this._openedByMouse = false;
        /** Event emitted when the associated menu is opened. */
        this.onMenuOpen = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        /** Event emitted when the associated menu is closed. */
        this.onMenuClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
    }
    Object.defineProperty(MdMenuTrigger.prototype, "_deprecatedMdMenuTriggerFor", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this.menu; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.menu = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdMenuTrigger.prototype, "_deprecatedMatMenuTriggerFor", {
        /**
         * @deprecated
         * @return {?}
         */
        get: function () { return this.menu; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.menu = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdMenuTrigger.prototype, "_matMenuTriggerFor", {
        /**
         * @return {?}
         */
        get: function () { return this.menu; },
        /**
         * @param {?} v
         * @return {?}
         */
        set: function (v) { this.menu = v; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdMenuTrigger.prototype.ngAfterViewInit = function () {
        var _this = this;
        this._checkMenu();
        this.menu.close.subscribe(function () { return _this.closeMenu(); });
    };
    /**
     * @return {?}
     */
    MdMenuTrigger.prototype.ngOnDestroy = function () { this.destroyMenu(); };
    Object.defineProperty(MdMenuTrigger.prototype, "menuOpen", {
        /**
         * Whether the menu is open.
         * @return {?}
         */
        get: function () { return this._menuOpen; },
        enumerable: true,
        configurable: true
    });
    /**
     * Toggles the menu between the open and closed states.
     * @return {?}
     */
    MdMenuTrigger.prototype.toggleMenu = function () {
        return this._menuOpen ? this.closeMenu() : this.openMenu();
    };
    /**
     * Opens the menu.
     * @return {?}
     */
    MdMenuTrigger.prototype.openMenu = function () {
        if (!this._menuOpen) {
            this._createOverlay();
            this._overlayRef.attach(this._portal);
            this._subscribeToBackdrop();
            this._initMenu();
        }
    };
    /**
     * Closes the menu.
     * @return {?}
     */
    MdMenuTrigger.prototype.closeMenu = function () {
        if (this._overlayRef) {
            this._overlayRef.detach();
            this._backdropSubscription.unsubscribe();
            this._resetMenu();
        }
    };
    /**
     * Removes the menu from the DOM.
     * @return {?}
     */
    MdMenuTrigger.prototype.destroyMenu = function () {
        if (this._overlayRef) {
            this._overlayRef.dispose();
            this._overlayRef = null;
            this._cleanUpSubscriptions();
        }
    };
    /**
     * Focuses the menu trigger.
     * @return {?}
     */
    MdMenuTrigger.prototype.focus = function () {
        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');
    };
    Object.defineProperty(MdMenuTrigger.prototype, "dir", {
        /**
         * The text direction of the containing app.
         * @return {?}
         */
        get: function () {
            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * This method ensures that the menu closes when the overlay backdrop is clicked.
     * We do not use first() here because doing so would not catch clicks from within
     * the menu, and it would fail to unsubscribe properly. Instead, we unsubscribe
     * explicitly when the menu is closed or destroyed.
     * @return {?}
     */
    MdMenuTrigger.prototype._subscribeToBackdrop = function () {
        var _this = this;
        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {
            _this.menu._emitCloseEvent();
        });
    };
    /**
     * This method sets the menu state to open and focuses the first item if
     * the menu was opened via the keyboard.
     * @return {?}
     */
    MdMenuTrigger.prototype._initMenu = function () {
        this._setIsMenuOpen(true);
        // Should only set focus if opened via the keyboard, so keyboard users can
        // can easily navigate menu items. According to spec, mouse users should not
        // see the focus style.
        if (!this._openedByMouse) {
            this.menu.focusFirstItem();
        }
    };
    ;
    /**
     * This method resets the menu when it's closed, most importantly restoring
     * focus to the menu trigger if the menu was opened via the keyboard.
     * @return {?}
     */
    MdMenuTrigger.prototype._resetMenu = function () {
        this._setIsMenuOpen(false);
        // Focus only needs to be reset to the host element if the menu was opened
        // by the keyboard and manually shifted to the first menu item.
        if (!this._openedByMouse) {
            this.focus();
        }
        this._openedByMouse = false;
    };
    /**
     * @param {?} isOpen
     * @return {?}
     */
    MdMenuTrigger.prototype._setIsMenuOpen = function (isOpen) {
        this._menuOpen = isOpen;
        this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();
    };
    /**
     *  This method checks that a valid instance of MdMenu has been passed into
     *  mdMenuTriggerFor. If not, an exception is thrown.
     * @return {?}
     */
    MdMenuTrigger.prototype._checkMenu = function () {
        if (!this.menu) {
            throw new MdMenuMissingError();
        }
    };
    /**
     *  This method creates the overlay from the provided menu's template and saves its
     *  OverlayRef so that it can be attached to the DOM when openMenu is called.
     * @return {?}
     */
    MdMenuTrigger.prototype._createOverlay = function () {
        if (!this._overlayRef) {
            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);
            var /** @type {?} */ config = this._getOverlayConfig();
            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));
            this._overlayRef = this._overlay.create(config);
        }
    };
    /**
     * This method builds the configuration object needed to create the overlay, the OverlayState.
     * @return {?} OverlayState
     */
    MdMenuTrigger.prototype._getOverlayConfig = function () {
        var /** @type {?} */ overlayState = new OverlayState();
        overlayState.positionStrategy = this._getPosition()
            .withDirection(this.dir);
        overlayState.hasBackdrop = true;
        overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';
        overlayState.direction = this.dir;
        return overlayState;
    };
    /**
     * Listens to changes in the position of the overlay and sets the correct classes
     * on the menu based on the new position. This ensures the animation origin is always
     * correct, even if a fallback position is used for the overlay.
     * @param {?} position
     * @return {?}
     */
    MdMenuTrigger.prototype._subscribeToPositions = function (position) {
        var _this = this;
        this._positionSubscription = position.onPositionChange.subscribe(function (change) {
            var /** @type {?} */ posX = change.connectionPair.originX === 'start' ? 'after' : 'before';
            var /** @type {?} */ posY = change.connectionPair.originY === 'top' ? 'below' : 'above';
            if (!_this.menu.overlapTrigger) {
                posY = posY === 'below' ? 'above' : 'below';
            }
            _this.menu.setPositionClasses(posX, posY);
        });
    };
    /**
     * This method builds the position strategy for the overlay, so the menu is properly connected
     * to the trigger.
     * @return {?} ConnectedPositionStrategy
     */
    MdMenuTrigger.prototype._getPosition = function () {
        var _a = this.menu.positionX === 'before' ? ['end', 'start'] : ['start', 'end'], posX = _a[0], fallbackX = _a[1];
        var _b = this.menu.positionY === 'above' ? ['bottom', 'top'] : ['top', 'bottom'], overlayY = _b[0], fallbackOverlayY = _b[1];
        var /** @type {?} */ originY = overlayY;
        var /** @type {?} */ fallbackOriginY = fallbackOverlayY;
        if (!this.menu.overlapTrigger) {
            originY = overlayY === 'top' ? 'bottom' : 'top';
            fallbackOriginY = fallbackOverlayY === 'top' ? 'bottom' : 'top';
        }
        return this._overlay.position()
            .connectedTo(this._element, { originX: posX, originY: originY }, { overlayX: posX, overlayY: overlayY })
            .withFallbackPosition({ originX: fallbackX, originY: originY }, { overlayX: fallbackX, overlayY: overlayY })
            .withFallbackPosition({ originX: posX, originY: fallbackOriginY }, { overlayX: posX, overlayY: fallbackOverlayY })
            .withFallbackPosition({ originX: fallbackX, originY: fallbackOriginY }, { overlayX: fallbackX, overlayY: fallbackOverlayY });
    };
    /**
     * @return {?}
     */
    MdMenuTrigger.prototype._cleanUpSubscriptions = function () {
        if (this._backdropSubscription) {
            this._backdropSubscription.unsubscribe();
        }
        if (this._positionSubscription) {
            this._positionSubscription.unsubscribe();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdMenuTrigger.prototype._handleMousedown = function (event) {
        if (!isFakeMousedownFromScreenReader(event)) {
            this._openedByMouse = true;
        }
    };
    return MdMenuTrigger;
}());
MdMenuTrigger.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: "[md-menu-trigger-for], [mat-menu-trigger-for],\n             [mdMenuTriggerFor], [matMenuTriggerFor]",
                host: {
                    'aria-haspopup': 'true',
                    '(mousedown)': '_handleMousedown($event)',
                    '(click)': 'toggleMenu()',
                },
                exportAs: 'mdMenuTrigger'
            },] },
];
/**
 * @nocollapse
 */
MdMenuTrigger.ctorParameters = function () { return [
    { type: Overlay, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
]; };
MdMenuTrigger.propDecorators = {
    '_deprecatedMdMenuTriggerFor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['md-menu-trigger-for',] },],
    '_deprecatedMatMenuTriggerFor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mat-menu-trigger-for',] },],
    '_matMenuTriggerFor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['matMenuTriggerFor',] },],
    'menu': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdMenuTriggerFor',] },],
    'onMenuOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
    'onMenuClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* Output */] },],
};
var MdMenuModule = (function () {
    function MdMenuModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdMenuModule.forRoot = function () {
        return {
            ngModule: MdMenuModule,
            providers: [],
        };
    };
    return MdMenuModule;
}());
MdMenuModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    OverlayModule,
                    __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */],
                    MdRippleModule,
                    CompatibilityModule,
                ],
                exports: [MdMenu, MdMenuItem, MdMenuTrigger, CompatibilityModule],
                declarations: [MdMenu, MdMenuItem, MdMenuTrigger],
            },] },
];
/**
 * @nocollapse
 */
MdMenuModule.ctorParameters = function () { return []; };
/**
 * Reference to a dialog opened via the MdDialog service.
 */
var MdDialogRef = (function () {
    /**
     * @param {?} _overlayRef
     * @param {?} _containerInstance
     */
    function MdDialogRef(_overlayRef, _containerInstance) {
        var _this = this;
        this._overlayRef = _overlayRef;
        this._containerInstance = _containerInstance;
        this._afterClosed = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        _containerInstance._onAnimationStateChange.subscribe(function (state$$1) {
            if (state$$1 === 'exit-start') {
                // Transition the backdrop in parallel with the dialog.
                _this._overlayRef.detachBackdrop();
            }
            else if (state$$1 === 'exit') {
                _this._overlayRef.dispose();
                _this._afterClosed.next(_this._result);
                _this._afterClosed.complete();
                _this.componentInstance = null;
            }
        });
    }
    /**
     * Close the dialog.
     * @param {?=} dialogResult Optional result to return to the dialog opener.
     * @return {?}
     */
    MdDialogRef.prototype.close = function (dialogResult) {
        this._result = dialogResult;
        this._containerInstance._exit();
    };
    /**
     * Gets an observable that is notified when the dialog is finished closing.
     * @return {?}
     */
    MdDialogRef.prototype.afterClosed = function () {
        return this._afterClosed.asObservable();
    };
    /**
     * Updates the dialog's position.
     * @param {?=} position New dialog position.
     * @return {?}
     */
    MdDialogRef.prototype.updatePosition = function (position) {
        var /** @type {?} */ strategy = this._getPositionStrategy();
        if (position && (position.left || position.right)) {
            position.left ? strategy.left(position.left) : strategy.right(position.right);
        }
        else {
            strategy.centerHorizontally();
        }
        if (position && (position.top || position.bottom)) {
            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);
        }
        else {
            strategy.centerVertically();
        }
        this._overlayRef.updatePosition();
        return this;
    };
    /**
     * Updates the dialog's width and height.
     * @param {?=} width New width of the dialog.
     * @param {?=} height New height of the dialog.
     * @return {?}
     */
    MdDialogRef.prototype.updateSize = function (width, height) {
        if (width === void 0) { width = 'auto'; }
        if (height === void 0) { height = 'auto'; }
        this._getPositionStrategy().width(width).height(height);
        this._overlayRef.updatePosition();
        return this;
    };
    /**
     * Fetches the position strategy object from the overlay ref.
     * @return {?}
     */
    MdDialogRef.prototype._getPositionStrategy = function () {
        return (this._overlayRef.getState().positionStrategy);
    };
    return MdDialogRef;
}());
var MD_DIALOG_DATA = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["d" /* OpaqueToken */]('MdDialogData');
/**
 * Custom injector type specifically for instantiating components with a dialog.
 */
var DialogInjector = (function () {
    /**
     * @param {?} _parentInjector
     * @param {?} _dialogRef
     * @param {?} _data
     */
    function DialogInjector(_parentInjector, _dialogRef, _data) {
        this._parentInjector = _parentInjector;
        this._dialogRef = _dialogRef;
        this._data = _data;
    }
    /**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */
    DialogInjector.prototype.get = function (token, notFoundValue) {
        if (token === MdDialogRef) {
            return this._dialogRef;
        }
        if (token === MD_DIALOG_DATA && this._data) {
            return this._data;
        }
        return this._parentInjector.get(token, notFoundValue);
    };
    return DialogInjector;
}());
/**
 * Configuration for opening a modal dialog with the MdDialog service.
 */
var MdDialogConfig = (function () {
    function MdDialogConfig() {
        /** The ARIA role of the dialog element. */
        this.role = 'dialog';
        /** Whether the user can use escape or clicking outside to close a modal. */
        this.disableClose = false;
        /** Width of the dialog. */
        this.width = '';
        /** Height of the dialog. */
        this.height = '';
        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.
    }
    return MdDialogConfig;
}());
/**
 * Exception thrown when a ComponentPortal is attached to a DomPortalHost without an origin.
 * \@docs-private
 */
var MdDialogContentAlreadyAttachedError = (function (_super) {
    __extends(MdDialogContentAlreadyAttachedError, _super);
    function MdDialogContentAlreadyAttachedError() {
        return _super.call(this, 'Attempting to attach dialog content after content is already attached') || this;
    }
    return MdDialogContentAlreadyAttachedError;
}(MdError));
/**
 * Internal component that wraps user-provided dialog content.
 * Animation is based on https://material.io/guidelines/motion/choreography.html.
 * \@docs-private
 */
var MdDialogContainer = (function (_super) {
    __extends(MdDialogContainer, _super);
    /**
     * @param {?} _ngZone
     * @param {?} _renderer
     * @param {?} _elementRef
     * @param {?} _focusTrapFactory
     */
    function MdDialogContainer(_ngZone, _renderer, _elementRef, _focusTrapFactory) {
        var _this = _super.call(this) || this;
        _this._ngZone = _ngZone;
        _this._renderer = _renderer;
        _this._elementRef = _elementRef;
        _this._focusTrapFactory = _focusTrapFactory;
        _this._elementFocusedBeforeDialogWasOpened = null;
        /** State of the dialog animation. */
        _this._state = 'enter';
        /** Emits the current animation state whenever it changes. */
        _this._onAnimationStateChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* EventEmitter */]();
        return _this;
    }
    /**
     * Attach a ComponentPortal as content to this dialog container.
     * @template T
     * @param {?} portal Portal to be attached as the dialog content.
     * @return {?}
     */
    MdDialogContainer.prototype.attachComponentPortal = function (portal) {
        if (this._portalHost.hasAttached()) {
            throw new MdDialogContentAlreadyAttachedError();
        }
        return this._portalHost.attachComponentPortal(portal);
    };
    /**
     * Attach a TemplatePortal as content to this dialog container.
     * @param {?} portal Portal to be attached as the dialog content.
     * @return {?}
     */
    MdDialogContainer.prototype.attachTemplatePortal = function (portal) {
        if (this._portalHost.hasAttached()) {
            throw new MdDialogContentAlreadyAttachedError();
        }
        return this._portalHost.attachTemplatePortal(portal);
    };
    /**
     * Moves the focus inside the focus trap.
     * @return {?}
     */
    MdDialogContainer.prototype._trapFocus = function () {
        if (!this._focusTrap) {
            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
        }
        // If were to attempt to focus immediately, then the content of the dialog would not yet be
        // ready in instances where change detection has to run first. To deal with this, we simply
        // wait for the microtask queue to be empty.
        this._elementFocusedBeforeDialogWasOpened = (document.activeElement);
        this._focusTrap.focusFirstTabbableElementWhenReady();
    };
    /**
     * Kicks off the leave animation.
     * \@docs-private
     * @return {?}
     */
    MdDialogContainer.prototype._exit = function () {
        this._state = 'exit';
        this._onAnimationStateChange.emit('exit-start');
    };
    /**
     * Callback, invoked whenever an animation on the host completes.
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    MdDialogContainer.prototype._onAnimationDone = function (event) {
        if (event.toState === 'enter') {
            this._trapFocus();
        }
        this._onAnimationStateChange.emit(/** @type {?} */ (event.toState));
    };
    /**
     * @return {?}
     */
    MdDialogContainer.prototype.ngOnDestroy = function () {
        // When the dialog is destroyed, return focus to the element that originally had it before
        // the dialog was opened. Wait for the DOM to finish settling before changing the focus so
        // that it doesn't end up back on the <body>. Also note that we need the extra check, because
        // IE can set the `activeElement` to null in some cases.
        var /** @type {?} */ toFocus = (this._elementFocusedBeforeDialogWasOpened);
        // We shouldn't use `this` inside of the NgZone subscription, because it causes a memory leak.
        var /** @type {?} */ animationStream = this._onAnimationStateChange;
        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {
            if (toFocus && 'focus' in toFocus) {
                toFocus.focus();
            }
            animationStream.complete();
        });
        if (this._focusTrap) {
            this._focusTrap.destroy();
        }
    };
    return MdDialogContainer;
}(BasePortalHost));
MdDialogContainer.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-dialog-container, mat-dialog-container',
                template: "<ng-template cdkPortalHost></ng-template> ",
                styles: [".mat-dialog-container{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);display:block;padding:24px;border-radius:2px;box-sizing:border-box;overflow:auto;max-width:80vw;width:100%;height:100%}@media screen and (-ms-high-contrast:active){.mat-dialog-container{outline:solid 1px}}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto}.mat-dialog-title{font-size:20px;font-weight:700;margin:0 0 20px;display:block}.mat-dialog-actions{padding:12px 0;display:flex}.mat-dialog-actions:last-child{margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center} /*# sourceMappingURL=dialog.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                animations: [
                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["a" /* trigger */])('slideDialog', [
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('void', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translateY(25%) scale(0.9)', opacity: 0 })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('enter', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translateY(0%) scale(1)', opacity: 1 })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["b" /* state */])('exit', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["c" /* style */])({ transform: 'translateY(25%)', opacity: 0 })),
                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["d" /* transition */])('* => *', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__["e" /* animate */])('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
                    ])
                ],
                host: {
                    '[class.mat-dialog-container]': 'true',
                    '[attr.role]': 'dialogConfig?.role',
                    '[@slideDialog]': '_state',
                    '(@slideDialog.done)': '_onAnimationDone($event)',
                },
            },] },
];
/**
 * @nocollapse
 */
MdDialogContainer.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["s" /* Renderer */], },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: FocusTrapFactory, },
]; };
MdDialogContainer.propDecorators = {
    '_portalHost': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [PortalHostDirective,] },],
};
/**
 * Service to open Material Design modal dialogs.
 */
var MdDialog = (function () {
    /**
     * @param {?} _overlay
     * @param {?} _injector
     * @param {?} _parentDialog
     */
    function MdDialog(_overlay, _injector, _parentDialog) {
        this._overlay = _overlay;
        this._injector = _injector;
        this._parentDialog = _parentDialog;
        this._openDialogsAtThisLevel = [];
        this._afterAllClosedAtThisLevel = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        this._afterOpenAtThisLevel = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        this._boundKeydown = this._handleKeydown.bind(this);
        /** Gets an observable that is notified when a dialog has been opened. */
        this.afterOpen = this._afterOpen.asObservable();
        /** Gets an observable that is notified when all open dialog have finished closing. */
        this.afterAllClosed = this._afterAllClosed.asObservable();
    }
    Object.defineProperty(MdDialog.prototype, "_openDialogs", {
        /**
         * Keeps track of the currently-open dialogs.
         * @return {?}
         */
        get: function () {
            return this._parentDialog ? this._parentDialog._openDialogs : this._openDialogsAtThisLevel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialog.prototype, "_afterOpen", {
        /**
         * Subject for notifying the user that a dialog has opened.
         * @return {?}
         */
        get: function () {
            return this._parentDialog ? this._parentDialog._afterOpen : this._afterOpenAtThisLevel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDialog.prototype, "_afterAllClosed", {
        /**
         * Subject for notifying the user that all open dialogs have finished closing.
         * @return {?}
         */
        get: function () {
            return this._parentDialog ?
                this._parentDialog._afterAllClosed : this._afterAllClosedAtThisLevel;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Opens a modal dialog containing the given component.
     * @template T
     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,
     *     or a TemplateRef to instantiate as the dialog content.
     * @param {?=} config Extra configuration options.
     * @return {?} Reference to the newly-opened dialog.
     */
    MdDialog.prototype.open = function (componentOrTemplateRef, config) {
        var _this = this;
        config = _applyConfigDefaults$1(config);
        var /** @type {?} */ overlayRef = this._createOverlay(config);
        var /** @type {?} */ dialogContainer = this._attachDialogContainer(overlayRef, config);
        var /** @type {?} */ dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);
        if (!this._openDialogs.length && !this._parentDialog) {
            document.addEventListener('keydown', this._boundKeydown);
        }
        this._openDialogs.push(dialogRef);
        dialogRef.afterClosed().subscribe(function () { return _this._removeOpenDialog(dialogRef); });
        this._afterOpen.next(dialogRef);
        return dialogRef;
    };
    /**
     * Closes all of the currently-open dialogs.
     * @return {?}
     */
    MdDialog.prototype.closeAll = function () {
        var /** @type {?} */ i = this._openDialogs.length;
        while (i--) {
            // The `_openDialogs` property isn't updated after close until the rxjs subscription
            // runs on the next microtask, in addition to modifying the array as we're going
            // through it. We loop through all of them and call close without assuming that
            // they'll be removed from the list instantaneously.
            this._openDialogs[i].close();
        }
    };
    /**
     * Creates the overlay into which the dialog will be loaded.
     * @param {?} config The dialog configuration.
     * @return {?} A promise resolving to the OverlayRef for the created overlay.
     */
    MdDialog.prototype._createOverlay = function (config) {
        var /** @type {?} */ overlayState = this._getOverlayState(config);
        return this._overlay.create(overlayState);
    };
    /**
     * Creates an overlay state from a dialog config.
     * @param {?} dialogConfig The dialog configuration.
     * @return {?} The overlay configuration.
     */
    MdDialog.prototype._getOverlayState = function (dialogConfig) {
        var /** @type {?} */ overlayState = new OverlayState();
        overlayState.hasBackdrop = true;
        overlayState.positionStrategy = this._overlay.position().global();
        return overlayState;
    };
    /**
     * Attaches an MdDialogContainer to a dialog's already-created overlay.
     * @param {?} overlay Reference to the dialog's underlying overlay.
     * @param {?} config The dialog configuration.
     * @return {?} A promise resolving to a ComponentRef for the attached container.
     */
    MdDialog.prototype._attachDialogContainer = function (overlay, config) {
        var /** @type {?} */ viewContainer = config ? config.viewContainerRef : null;
        var /** @type {?} */ containerPortal = new ComponentPortal(MdDialogContainer, viewContainer);
        var /** @type {?} */ containerRef = overlay.attach(containerPortal);
        containerRef.instance.dialogConfig = config;
        return containerRef.instance;
    };
    /**
     * Attaches the user-provided component to the already-created MdDialogContainer.
     * @template T
     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,
     *     or a TemplateRef to instantiate as the content.
     * @param {?} dialogContainer Reference to the wrapping MdDialogContainer.
     * @param {?} overlayRef Reference to the overlay in which the dialog resides.
     * @param {?} config The dialog configuration.
     * @return {?} A promise resolving to the MdDialogRef that should be returned to the user.
     */
    MdDialog.prototype._attachDialogContent = function (componentOrTemplateRef, dialogContainer, overlayRef, config) {
        // Create a reference to the dialog we're creating in order to give the user a handle
        // to modify and close it.
        var /** @type {?} */ dialogRef = new MdDialogRef(overlayRef, dialogContainer);
        if (!config.disableClose) {
            // When the dialog backdrop is clicked, we want to close it.
            overlayRef.backdropClick().first().subscribe(function () { return dialogRef.close(); });
        }
        // We create an injector specifically for the component we're instantiating so that it can
        // inject the MdDialogRef. This allows a component loaded inside of a dialog to close itself
        // and, optionally, to return a value.
        var /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;
        var /** @type {?} */ dialogInjector = new DialogInjector(userInjector || this._injector, dialogRef, config.data);
        if (componentOrTemplateRef instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */]) {
            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null));
        }
        else {
            var /** @type {?} */ contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, null, dialogInjector));
            dialogRef.componentInstance = contentRef.instance;
        }
        dialogRef
            .updateSize(config.width, config.height)
            .updatePosition(config.position);
        return dialogRef;
    };
    /**
     * Removes a dialog from the array of open dialogs.
     * @param {?} dialogRef Dialog to be removed.
     * @return {?}
     */
    MdDialog.prototype._removeOpenDialog = function (dialogRef) {
        var /** @type {?} */ index = this._openDialogs.indexOf(dialogRef);
        if (index > -1) {
            this._openDialogs.splice(index, 1);
            // no open dialogs are left, call next on afterAllClosed Subject
            if (!this._openDialogs.length) {
                this._afterAllClosed.next();
                document.removeEventListener('keydown', this._boundKeydown);
            }
        }
    };
    /**
     * Handles global key presses while there are open dialogs. Closes the
     * top dialog when the user presses escape.
     * @param {?} event
     * @return {?}
     */
    MdDialog.prototype._handleKeydown = function (event) {
        var /** @type {?} */ topDialog = this._openDialogs[this._openDialogs.length - 1];
        if (event.keyCode === ESCAPE && topDialog &&
            !topDialog._containerInstance.dialogConfig.disableClose) {
            topDialog.close();
        }
    };
    return MdDialog;
}());
MdDialog.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Injectable */] },
];
/**
 * @nocollapse
 */
MdDialog.ctorParameters = function () { return [
    { type: Overlay, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["x" /* Injector */], },
    { type: MdDialog, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["p" /* SkipSelf */] },] },
]; };
/**
 * Applies default options to the dialog config.
 * @param {?} config Config to be modified.
 * @return {?} The new configuration object.
 */
function _applyConfigDefaults$1(config) {
    return extendObject(new MdDialogConfig(), config);
}
/**
 * Button that will close the current dialog.
 */
var MdDialogClose = (function () {
    /**
     * @param {?} dialogRef
     */
    function MdDialogClose(dialogRef) {
        this.dialogRef = dialogRef;
        /** Screenreader label for the button. */
        this.ariaLabel = 'Close dialog';
    }
    return MdDialogClose;
}());
MdDialogClose.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'button[md-dialog-close], button[mat-dialog-close]',
                host: {
                    '(click)': 'dialogRef.close()',
                    '[attr.aria-label]': 'ariaLabel',
                    'type': 'button',
                }
            },] },
];
/**
 * @nocollapse
 */
MdDialogClose.ctorParameters = function () { return [
    { type: MdDialogRef, },
]; };
MdDialogClose.propDecorators = {
    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['aria-label',] },],
};
/**
 * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.
 */
var MdDialogTitle = (function () {
    function MdDialogTitle() {
    }
    return MdDialogTitle;
}());
MdDialogTitle.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-dialog-title], [mat-dialog-title]',
                host: {
                    '[class.mat-dialog-title]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdDialogTitle.ctorParameters = function () { return []; };
/**
 * Scrollable content container of a dialog.
 */
var MdDialogContent = (function () {
    function MdDialogContent() {
    }
    return MdDialogContent;
}());
MdDialogContent.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-dialog-content], md-dialog-content, [mat-dialog-content], mat-dialog-content',
                host: {
                    '[class.mat-dialog-content]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdDialogContent.ctorParameters = function () { return []; };
/**
 * Container for the bottom action buttons in a dialog.
 * Stays fixed to the bottom when scrolling.
 */
var MdDialogActions = (function () {
    function MdDialogActions() {
    }
    return MdDialogActions;
}());
MdDialogActions.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: '[md-dialog-actions], md-dialog-actions, [mat-dialog-actions], mat-dialog-actions',
                host: {
                    '[class.mat-dialog-actions]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdDialogActions.ctorParameters = function () { return []; };
var MdDialogModule = (function () {
    function MdDialogModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdDialogModule.forRoot = function () {
        return {
            ngModule: MdDialogModule,
            providers: [],
        };
    };
    return MdDialogModule;
}());
MdDialogModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    OverlayModule,
                    PortalModule,
                    A11yModule,
                    CompatibilityModule,
                ],
                exports: [
                    MdDialogContainer,
                    MdDialogClose,
                    MdDialogTitle,
                    MdDialogContent,
                    MdDialogActions,
                    CompatibilityModule,
                ],
                declarations: [
                    MdDialogContainer,
                    MdDialogClose,
                    MdDialogTitle,
                    MdDialogActions,
                    MdDialogContent,
                ],
                providers: [
                    MdDialog,
                ],
                entryComponents: [MdDialogContainer],
            },] },
];
/**
 * @nocollapse
 */
MdDialogModule.ctorParameters = function () { return []; };
var ActiveDescendantKeyManager = (function (_super) {
    __extends(ActiveDescendantKeyManager, _super);
    /**
     * @param {?} items
     */
    function ActiveDescendantKeyManager(items) {
        return _super.call(this, items) || this;
    }
    /**
     * This method sets the active item to the item at the specified index.
     * It also adds active styles to the newly active item and removes active
     * styles from the previously active item.
     * @param {?} index
     * @return {?}
     */
    ActiveDescendantKeyManager.prototype.setActiveItem = function (index) {
        var _this = this;
        Promise.resolve().then(function () {
            if (_this.activeItem) {
                _this.activeItem.setInactiveStyles();
            }
            _super.prototype.setActiveItem.call(_this, index);
            if (_this.activeItem) {
                _this.activeItem.setActiveStyles();
            }
        });
    };
    return ActiveDescendantKeyManager;
}(ListKeyManager));
/**
 * Autocomplete IDs need to be unique across components, so this counter exists outside of
 * the component definition.
 */
var _uniqueAutocompleteIdCounter = 0;
var MdAutocomplete = (function () {
    function MdAutocomplete() {
        /** Whether the autocomplete panel displays above or below its trigger. */
        this.positionY = 'below';
        /** Whether the autocomplete panel should be visible, depending on option length. */
        this.showPanel = false;
        /** Unique ID to be used by autocomplete trigger's "aria-owns" property. */
        this.id = "md-autocomplete-" + _uniqueAutocompleteIdCounter++;
    }
    /**
     * @return {?}
     */
    MdAutocomplete.prototype.ngAfterContentInit = function () {
        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();
    };
    /**
     * Sets the panel scrollTop. This allows us to manually scroll to display
     * options below the fold, as they are not actually being focused when active.
     * @param {?} scrollTop
     * @return {?}
     */
    MdAutocomplete.prototype._setScrollTop = function (scrollTop) {
        if (this.panel) {
            this.panel.nativeElement.scrollTop = scrollTop;
        }
    };
    /**
     * Panel should hide itself when the option list is empty.
     * @return {?}
     */
    MdAutocomplete.prototype._setVisibility = function () {
        var _this = this;
        Promise.resolve().then(function () { return _this.showPanel = !!_this.options.length; });
    };
    /**
     * Sets a class on the panel based on its position (used to set y-offset).
     * @return {?}
     */
    MdAutocomplete.prototype._getClassList = function () {
        return {
            'mat-autocomplete-panel-below': this.positionY === 'below',
            'mat-autocomplete-panel-above': this.positionY === 'above',
            'mat-autocomplete-visible': this.showPanel,
            'mat-autocomplete-hidden': !this.showPanel
        };
    };
    return MdAutocomplete;
}());
MdAutocomplete.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["q" /* Component */], args: [{ selector: 'md-autocomplete, mat-autocomplete',
                template: "<ng-template> <div class=\"mat-autocomplete-panel\" role=\"listbox\" [id]=\"id\" [ngClass]=\"_getClassList()\" #panel> <ng-content></ng-content> </div> </ng-template> ",
                styles: [".mat-autocomplete-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative}.mat-autocomplete-panel.mat-autocomplete-panel-below{top:6px}.mat-autocomplete-panel.mat-autocomplete-panel-above{top:-24px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden} /*# sourceMappingURL=autocomplete.css.map */ "],
                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["r" /* ViewEncapsulation */].None,
                exportAs: 'mdAutocomplete',
                host: {
                    '[class.mat-autocomplete]': 'true'
                }
            },] },
];
/**
 * @nocollapse
 */
MdAutocomplete.ctorParameters = function () { return []; };
MdAutocomplete.propDecorators = {
    'template': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* TemplateRef */],] },],
    'panel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["A" /* ViewChild */], args: ['panel',] },],
    'options': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* ContentChildren */], args: [MdOption,] },],
    'displayWith': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */] },],
};
/**
 * The following style constants are necessary to save here in order
 * to properly calculate the scrollTop of the panel. Because we are not
 * actually focusing the active item, scroll must be handled manually.
 */
/** The height of each autocomplete option. */
var AUTOCOMPLETE_OPTION_HEIGHT = 48;
/** The total height of the autocomplete panel. */
var AUTOCOMPLETE_PANEL_HEIGHT = 256;
/**
 * Provider that allows the autocomplete to register as a ControlValueAccessor.
 * \@docs-private
 */
var MD_AUTOCOMPLETE_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__["c" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["y" /* forwardRef */])(function () { return MdAutocompleteTrigger; }),
    multi: true
};
var MdAutocompleteTrigger = (function () {
    /**
     * @param {?} _element
     * @param {?} _overlay
     * @param {?} _viewContainerRef
     * @param {?} _dir
     * @param {?} _zone
     * @param {?} _inputContainer
     */
    function MdAutocompleteTrigger(_element, _overlay, _viewContainerRef, _dir, _zone, _inputContainer) {
        this._element = _element;
        this._overlay = _overlay;
        this._viewContainerRef = _viewContainerRef;
        this._dir = _dir;
        this._zone = _zone;
        this._inputContainer = _inputContainer;
        this._panelOpen = false;
        this._blurStream = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__["Subject"]();
        this._manuallyFloatingPlaceholder = false;
        /** View -> model callback called when value changes */
        this._onChange = function (value) { };
        /** View -> model callback called when autocomplete has been touched */
        this._onTouched = function () { };
    }
    Object.defineProperty(MdAutocompleteTrigger.prototype, "_matAutocomplete", {
        /**
         * Property with mat- prefix for no-conflict mode.
         * @return {?}
         */
        get: function () {
            return this.autocomplete;
        },
        /**
         * @param {?} autocomplete
         * @return {?}
         */
        set: function (autocomplete) {
            this.autocomplete = autocomplete;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MdAutocompleteTrigger.prototype.ngOnDestroy = function () {
        if (this._panelPositionSubscription) {
            this._panelPositionSubscription.unsubscribe();
        }
        this._destroyPanel();
    };
    Object.defineProperty(MdAutocompleteTrigger.prototype, "panelOpen", {
        /**
         * @return {?}
         */
        get: function () {
            return this._panelOpen && this.autocomplete.showPanel;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Opens the autocomplete suggestion panel.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype.openPanel = function () {
        if (!this._overlayRef) {
            this._createOverlay();
        }
        else {
            /** Update the panel width, in case the host width has changed */
            this._overlayRef.getState().width = this._getHostWidth();
        }
        if (!this._overlayRef.hasAttached()) {
            this._overlayRef.attach(this._portal);
            this._subscribeToClosingActions();
        }
        this.autocomplete._setVisibility();
        this._floatPlaceholder();
        this._panelOpen = true;
    };
    /**
     * Closes the autocomplete suggestion panel.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype.closePanel = function () {
        if (this._overlayRef && this._overlayRef.hasAttached()) {
            this._overlayRef.detach();
        }
        this._panelOpen = false;
        this._resetPlaceholder();
    };
    Object.defineProperty(MdAutocompleteTrigger.prototype, "panelClosingActions", {
        /**
         * A stream of actions that should close the autocomplete panel, including
         * when an option is selected, on blur, and when TAB is pressed.
         * @return {?}
         */
        get: function () {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].merge(this.optionSelections, this._blurStream.asObservable(), this.autocomplete._keyManager.tabOut);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdAutocompleteTrigger.prototype, "optionSelections", {
        /**
         * Stream of autocomplete option selections.
         * @return {?}
         */
        get: function () {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].merge.apply(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"], this.autocomplete.options.map(function (option) { return option.onSelectionChange; }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdAutocompleteTrigger.prototype, "activeOption", {
        /**
         * The currently active option, coerced to MdOption type.
         * @return {?}
         */
        get: function () {
            if (this.autocomplete._keyManager) {
                return (this.autocomplete._keyManager.activeItem);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the autocomplete's value. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param {?} value New value to be written to the model.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype.writeValue = function (value) {
        var _this = this;
        Promise.resolve(null).then(function () { return _this._setTriggerValue(value); });
    };
    /**
     * Saves a callback function to be invoked when the autocomplete's value
     * changes from user input. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the value changes.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype.registerOnChange = function (fn) {
        this._onChange = fn;
    };
    /**
     * Saves a callback function to be invoked when the autocomplete is blurred
     * by the user. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the component has been touched.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype.registerOnTouched = function (fn) {
        this._onTouched = fn;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._handleKeydown = function (event) {
        var _this = this;
        if (this.activeOption && event.keyCode === ENTER) {
            this.activeOption._selectViaInteraction();
            event.preventDefault();
        }
        else {
            this.autocomplete._keyManager.onKeydown(event);
            if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {
                this.openPanel();
                Promise.resolve().then(function () { return _this._scrollToOption(); });
            }
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._handleInput = function (event) {
        // We need to ensure that the input is focused, because IE will fire the `input`
        // event on focus/blur/load if the input has a placeholder. See:
        // https://connect.microsoft.com/IE/feedback/details/885747/
        if (document.activeElement === event.target) {
            this._onChange(((event.target)).value);
            this.openPanel();
        }
    };
    /**
     * @param {?} newlyFocusedTag
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._handleBlur = function (newlyFocusedTag) {
        this._onTouched();
        // Only emit blur event if the new focus is *not* on an option.
        if (newlyFocusedTag !== 'MD-OPTION') {
            this._blurStream.next(null);
        }
    };
    /**
     * In "auto" mode, the placeholder will animate down as soon as focus is lost.
     * This causes the value to jump when selecting an option with the mouse.
     * This method manually floats the placeholder until the panel can be closed.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._floatPlaceholder = function () {
        if (this._inputContainer && this._inputContainer.floatPlaceholder === 'auto') {
            this._inputContainer.floatPlaceholder = 'always';
            this._manuallyFloatingPlaceholder = true;
        }
    };
    /**
     * If the placeholder has been manually elevated, return it to its normal state.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._resetPlaceholder = function () {
        if (this._manuallyFloatingPlaceholder) {
            this._inputContainer.floatPlaceholder = 'auto';
            this._manuallyFloatingPlaceholder = false;
        }
    };
    /**
     * Given that we are not actually focusing active options, we must manually adjust scroll
     * to reveal options below the fold. First, we find the offset of the option from the top
     * of the panel. The new scrollTop will be that offset - the panel height + the option
     * height, so the active option will be just visible at the bottom of the panel.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._scrollToOption = function () {
        var /** @type {?} */ optionOffset = this.autocomplete._keyManager.activeItemIndex * AUTOCOMPLETE_OPTION_HEIGHT;
        var /** @type {?} */ newScrollTop = Math.max(0, optionOffset - AUTOCOMPLETE_PANEL_HEIGHT + AUTOCOMPLETE_OPTION_HEIGHT);
        this.autocomplete._setScrollTop(newScrollTop);
    };
    /**
     * This method listens to a stream of panel closing actions and resets the
     * stream every time the option list changes.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._subscribeToClosingActions = function () {
        var _this = this;
        // When the zone is stable initially, and when the option list changes...
        __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].merge(this._zone.onStable.first(), this.autocomplete.options.changes)
            .switchMap(function () {
            _this._resetPanel();
            return _this.panelClosingActions;
        })
            .first()
            .subscribe(function (event) { return _this._setValueAndClose(event); });
    };
    /**
     * Destroys the autocomplete suggestion panel.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._destroyPanel = function () {
        if (this._overlayRef) {
            this.closePanel();
            this._overlayRef.dispose();
            this._overlayRef = null;
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._setTriggerValue = function (value) {
        var /** @type {?} */ toDisplay = this.autocomplete.displayWith ? this.autocomplete.displayWith(value) : value;
        this._element.nativeElement.value = toDisplay || '';
    };
    /**
     * This method closes the panel, and if a value is specified, also sets the associated
     * control to that value. It will also mark the control as dirty if this interaction
     * stemmed from the user.
     * @param {?} event
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._setValueAndClose = function (event) {
        if (event) {
            this._clearPreviousSelectedOption(event.source);
            this._setTriggerValue(event.source.value);
            this._onChange(event.source.value);
        }
        this.closePanel();
    };
    /**
     * Clear any previous selected option and emit a selection change event for this option
     * @param {?} skip
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._clearPreviousSelectedOption = function (skip) {
        this.autocomplete.options.forEach(function (option) {
            if (option != skip && option.selected) {
                option.deselect();
            }
        });
    };
    /**
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._createOverlay = function () {
        this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);
        this._overlayRef = this._overlay.create(this._getOverlayConfig());
    };
    /**
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._getOverlayConfig = function () {
        var /** @type {?} */ overlayState = new OverlayState();
        overlayState.positionStrategy = this._getOverlayPosition();
        overlayState.width = this._getHostWidth();
        overlayState.direction = this._dir ? this._dir.value : 'ltr';
        return overlayState;
    };
    /**
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._getOverlayPosition = function () {
        this._positionStrategy = this._overlay.position().connectedTo(this._element, { originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' })
            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' });
        this._subscribeToPositionChanges(this._positionStrategy);
        return this._positionStrategy;
    };
    /**
     * This method subscribes to position changes in the autocomplete panel, so the panel's
     * y-offset can be adjusted to match the new position.
     * @param {?} strategy
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._subscribeToPositionChanges = function (strategy) {
        var _this = this;
        this._panelPositionSubscription = strategy.onPositionChange.subscribe(function (change) {
            _this.autocomplete.positionY = change.connectionPair.originY === 'top' ? 'above' : 'below';
        });
    };
    /**
     * Returns the width of the input element, so the panel width can match it.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._getHostWidth = function () {
        return this._element.nativeElement.getBoundingClientRect().width;
    };
    /**
     * Reset active item to null so arrow events will activate the correct options.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._resetActiveItem = function () {
        this.autocomplete._keyManager.setActiveItem(null);
    };
    /**
     * Resets the active item and re-calculates alignment of the panel in case its size
     * has changed due to fewer or greater number of options.
     * @return {?}
     */
    MdAutocompleteTrigger.prototype._resetPanel = function () {
        this._resetActiveItem();
        this._positionStrategy.recalculateLastPosition();
        this.autocomplete._setVisibility();
    };
    return MdAutocompleteTrigger;
}());
MdAutocompleteTrigger.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["e" /* Directive */], args: [{
                selector: 'input[mdAutocomplete], input[matAutocomplete]',
                host: {
                    'role': 'combobox',
                    'autocomplete': 'off',
                    'aria-autocomplete': 'list',
                    'aria-multiline': 'false',
                    '[attr.aria-activedescendant]': 'activeOption?.id',
                    '[attr.aria-expanded]': 'panelOpen.toString()',
                    '[attr.aria-owns]': 'autocomplete?.id',
                    '(focus)': 'openPanel()',
                    '(blur)': '_handleBlur($event.relatedTarget?.tagName)',
                    '(input)': '_handleInput($event)',
                    '(keydown)': '_handleKeydown($event)',
                },
                providers: [MD_AUTOCOMPLETE_VALUE_ACCESSOR]
            },] },
];
/**
 * @nocollapse
 */
MdAutocompleteTrigger.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["m" /* ElementRef */], },
    { type: Overlay, },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ViewContainerRef */], },
    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] },] },
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["o" /* NgZone */], },
    { type: MdInputContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["f" /* Optional */] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["H" /* Host */] },] },
]; };
MdAutocompleteTrigger.propDecorators = {
    'autocomplete': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['mdAutocomplete',] },],
    '_matAutocomplete': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["j" /* Input */], args: ['matAutocomplete',] },],
};
var MdAutocompleteModule = (function () {
    function MdAutocompleteModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MdAutocompleteModule.forRoot = function () {
        return {
            ngModule: MdAutocompleteModule,
            providers: [OVERLAY_PROVIDERS]
        };
    };
    return MdAutocompleteModule;
}());
MdAutocompleteModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [MdOptionModule, OverlayModule, CompatibilityModule, __WEBPACK_IMPORTED_MODULE_2__angular_common__["a" /* CommonModule */]],
                exports: [MdAutocomplete, MdOptionModule, MdAutocompleteTrigger, CompatibilityModule],
                declarations: [MdAutocomplete, MdAutocompleteTrigger],
            },] },
];
/**
 * @nocollapse
 */
MdAutocompleteModule.ctorParameters = function () { return []; };
var MATERIAL_MODULES = [
    MdAutocompleteModule,
    MdButtonModule,
    MdButtonToggleModule,
    MdCardModule,
    MdChipsModule,
    MdCheckboxModule,
    MdDialogModule,
    MdGridListModule,
    MdIconModule,
    MdInputModule,
    MdListModule,
    MdMenuModule,
    MdProgressBarModule,
    MdProgressSpinnerModule,
    MdRadioModule,
    MdRippleModule,
    MdSelectModule,
    MdSidenavModule,
    MdSliderModule,
    MdSlideToggleModule,
    MdSnackBarModule,
    MdTabsModule,
    MdToolbarModule,
    MdTooltipModule,
    OverlayModule,
    PortalModule,
    RtlModule,
    StyleModule,
    A11yModule,
    PlatformModule,
    CompatibilityModule,
    ObserveContentModule
];
/**
 * @deprecated
 */
var MaterialRootModule = (function () {
    function MaterialRootModule() {
    }
    return MaterialRootModule;
}());
MaterialRootModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: [
                    MdAutocompleteModule.forRoot(),
                    MdButtonModule.forRoot(),
                    MdCardModule.forRoot(),
                    MdChipsModule.forRoot(),
                    MdCheckboxModule.forRoot(),
                    MdGridListModule.forRoot(),
                    MdInputModule.forRoot(),
                    MdListModule.forRoot(),
                    MdProgressBarModule.forRoot(),
                    MdProgressSpinnerModule.forRoot(),
                    MdRippleModule.forRoot(),
                    MdSelectModule.forRoot(),
                    MdSidenavModule.forRoot(),
                    MdTabsModule.forRoot(),
                    MdToolbarModule.forRoot(),
                    PortalModule.forRoot(),
                    RtlModule.forRoot(),
                    ObserveContentModule.forRoot(),
                    // These modules include providers.
                    A11yModule.forRoot(),
                    MdButtonToggleModule.forRoot(),
                    MdDialogModule.forRoot(),
                    MdIconModule.forRoot(),
                    MdMenuModule.forRoot(),
                    MdRadioModule.forRoot(),
                    MdSliderModule.forRoot(),
                    MdSlideToggleModule.forRoot(),
                    MdSnackBarModule.forRoot(),
                    MdTooltipModule.forRoot(),
                    PlatformModule.forRoot(),
                    OverlayModule.forRoot(),
                    CompatibilityModule.forRoot(),
                ],
                exports: MATERIAL_MODULES,
            },] },
];
/**
 * @nocollapse
 */
MaterialRootModule.ctorParameters = function () { return []; };
/**
 * @deprecated
 */
var MaterialModule = (function () {
    function MaterialModule() {
    }
    /**
     * @deprecated
     * @return {?}
     */
    MaterialModule.forRoot = function () {
        return { ngModule: MaterialRootModule };
    };
    return MaterialModule;
}());
MaterialModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["b" /* NgModule */], args: [{
                imports: MATERIAL_MODULES,
                exports: MATERIAL_MODULES,
            },] },
];
/**
 * @nocollapse
 */
MaterialModule.ctorParameters = function () { return []; };
/**
 * @module
 * @description
 * Entry point for all public APIs of Angular Material.
 */
/**
 * Generated bundle index. Do not edit.
 */



/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_compiler__ = __webpack_require__(175);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__ = __webpack_require__(34);
/* unused harmony export RESOURCE_CACHE_PROVIDER */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return platformBrowserDynamic; });
/* unused harmony export VERSION */
/* unused harmony export ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS */
/* unused harmony export ɵResourceLoaderImpl */
var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */var ResourceLoaderImpl=function(_ResourceLoader){_inherits(ResourceLoaderImpl,_ResourceLoader);function ResourceLoaderImpl(){_classCallCheck(this,ResourceLoaderImpl);return _possibleConstructorReturn(this,(ResourceLoaderImpl.__proto__||Object.getPrototypeOf(ResourceLoaderImpl)).apply(this,arguments));}_createClass(ResourceLoaderImpl,[{key:'get',value:function get(url){var resolve=void 0;var reject=void 0;var promise=new Promise(function(res,rej){resolve=res;reject=rej;});var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='text';xhr.onload=function(){// responseText is the old-school way of retrieving response (supported by IE8 & 9)
// response/responseType properties were introduced in ResourceLoader Level2 spec (supported
// by IE10)
var response=xhr.response||xhr.responseText;// normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
var status=xhr.status===1223?204:xhr.status;// fix status code when it is 0 (0 status is undocumented).
// Occurs when accessing file resources or on Android 4.1 stock browser
// while retrieving files from application cache.
if(status===0){status=response?200:0;}if(200<=status&&status<=300){resolve(response);}else{reject('Failed to load '+url);}};xhr.onerror=function(){reject('Failed to load '+url);};xhr.send();return promise;}}]);return ResourceLoaderImpl;}(__WEBPACK_IMPORTED_MODULE_0__angular_compiler__["a" /* ResourceLoader */]);ResourceLoaderImpl.decorators=[{type:__WEBPACK_IMPORTED_MODULE_1__angular_core__["n" /* Injectable */]}];/** @nocollapse */ResourceLoaderImpl.ctorParameters=function(){return[];};var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS=[__WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__["g" /* ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS */],{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["_15" /* COMPILER_OPTIONS */],useValue:{providers:[{provide:__WEBPACK_IMPORTED_MODULE_0__angular_compiler__["a" /* ResourceLoader */],useClass:ResourceLoaderImpl}]},multi:true},{provide:__WEBPACK_IMPORTED_MODULE_1__angular_core__["V" /* PLATFORM_ID */],useValue:__WEBPACK_IMPORTED_MODULE_2__angular_common__["c" /* ɵPLATFORM_BROWSER_ID */]}];/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var globalScope=void 0;if(typeof window==='undefined'){if(typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope){// TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
globalScope=self;}else{globalScope=global;}}else{globalScope=window;}// Need to declare a new variable for global here since TypeScript
// exports the original value of the symbol.
var _global=globalScope;// TODO: remove calls to assert in production environment
// Note: Can't just export this and import in in other files
// as `assert` is a reserved keyword in Dart
_global.assert=function assert(condition){// TODO: to be fixed properly via #2830, noop for now
};/**
 * An implementation of ResourceLoader that uses a template cache to avoid doing an actual
 * ResourceLoader.
 *
 * The template cache needs to be built and loaded into window.$templateCache
 * via a separate mechanism.
 */var CachedResourceLoader=function(_ResourceLoader2){_inherits(CachedResourceLoader,_ResourceLoader2);function CachedResourceLoader(){_classCallCheck(this,CachedResourceLoader);var _this2=_possibleConstructorReturn(this,(CachedResourceLoader.__proto__||Object.getPrototypeOf(CachedResourceLoader)).call(this));_this2._cache=_global.$templateCache;if(_this2._cache==null){throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');}return _this2;}_createClass(CachedResourceLoader,[{key:'get',value:function get(url){if(this._cache.hasOwnProperty(url)){return Promise.resolve(this._cache[url]);}else{return Promise.reject('CachedResourceLoader: Did not find cached template for '+url);}}}]);return CachedResourceLoader;}(__WEBPACK_IMPORTED_MODULE_0__angular_compiler__["a" /* ResourceLoader */]);/**
 * @stable
 */var VERSION=new __WEBPACK_IMPORTED_MODULE_1__angular_core__["M" /* Version */]('4.0.0-rc.1');/**
 * @experimental
 */var RESOURCE_CACHE_PROVIDER=[{provide:__WEBPACK_IMPORTED_MODULE_0__angular_compiler__["a" /* ResourceLoader */],useClass:CachedResourceLoader}];/**
 * @stable
 */var platformBrowserDynamic=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Y" /* createPlatformFactory */])(__WEBPACK_IMPORTED_MODULE_0__angular_compiler__["b" /* platformCoreDynamic */],'browserDynamic',INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(31)))

/***/ }),
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(18)();
// imports


// module
exports.push([module.i, ".mat-elevation-z0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-elevation-z1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.mat-elevation-z2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-elevation-z3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}.mat-elevation-z4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.mat-elevation-z5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}.mat-elevation-z6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-elevation-z7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}.mat-elevation-z8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-elevation-z9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}.mat-elevation-z10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}.mat-elevation-z11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}.mat-elevation-z12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-elevation-z13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}.mat-elevation-z14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}.mat-elevation-z15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}.mat-elevation-z16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-elevation-z17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}.mat-elevation-z18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}.mat-elevation-z19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}.mat-elevation-z20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}.mat-elevation-z21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}.mat-elevation-z22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}.mat-elevation-z23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}.mat-elevation-z24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}.mat-ripple{overflow:hidden}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,-webkit-transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1),-webkit-transform 0s cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}.mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;font-size:16px;font-family:Roboto,\"Helvetica Neue\",sans-serif;text-align:left;text-decoration:none;position:relative;cursor:pointer;outline:0}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px}[dir=rtl] .mat-option .mat-icon{margin-left:16px}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-option-ripple{position:absolute;top:0;left:0;bottom:0;right:0}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;text-transform:none;width:1px}.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-global-overlay-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.48}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.6)}.cdk-overlay-transparent-backdrop{background:0 0}.mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-option:focus:not(.mat-option-disabled),.mat-option:hover:not(.mat-option-disabled){background:rgba(255,255,255,.04)}.mat-option.mat-selected{color:#c2185b}.mat-option.mat-selected:not(.mat-option-multiple){background:rgba(255,255,255,.04)}.mat-option.mat-active{background:rgba(255,255,255,.04);color:#fff}.mat-option.mat-option-disabled{color:rgba(255,255,255,.3)}.mat-pseudo-checkbox{color:rgba(255,255,255,.7)}.mat-pseudo-checkbox::after{color:#303030}.mat-pseudo-checkbox-checked.mat-primary,.mat-pseudo-checkbox-indeterminate.mat-primary{background:#e91e63}.mat-pseudo-checkbox-checked.mat-accent,.mat-pseudo-checkbox-indeterminate.mat-accent{background:#607d8b}.mat-pseudo-checkbox-checked.mat-warn,.mat-pseudo-checkbox-indeterminate.mat-warn{background:#f44336}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#686868}.mat-app-background{background-color:#303030}.mat-theme-loaded-marker{display:none}.mat-autocomplete-panel{background:#424242;color:#fff}.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active){background:#424242;color:#fff}.mat-button.mat-primary .mat-button-focus-overlay,.mat-fab.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-mini-fab.mat-primary .mat-button-focus-overlay,.mat-raised-button.mat-primary .mat-button-focus-overlay{background-color:rgba(194,24,91,.12)}.mat-button.mat-accent .mat-button-focus-overlay,.mat-fab.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-mini-fab.mat-accent .mat-button-focus-overlay,.mat-raised-button.mat-accent .mat-button-focus-overlay{background-color:rgba(176,190,197,.12)}.mat-button.mat-warn .mat-button-focus-overlay,.mat-fab.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-mini-fab.mat-warn .mat-button-focus-overlay,.mat-raised-button.mat-warn .mat-button-focus-overlay{background-color:rgba(244,67,54,.12)}.mat-button[disabled] .mat-button-focus-overlay,.mat-fab[disabled] .mat-button-focus-overlay,.mat-icon-button[disabled] .mat-button-focus-overlay,.mat-mini-fab[disabled] .mat-button-focus-overlay,.mat-raised-button[disabled] .mat-button-focus-overlay{background-color:transparent}.mat-button,.mat-icon-button{background:0 0}.mat-button.mat-primary,.mat-icon-button.mat-primary{color:#c2185b}.mat-button.mat-accent,.mat-icon-button.mat-accent{color:#b0bec5}.mat-button.mat-warn,.mat-icon-button.mat-warn{color:#f44336}.mat-button.mat-accent[disabled],.mat-button.mat-primary[disabled],.mat-button.mat-warn[disabled],.mat-button[disabled][disabled],.mat-icon-button.mat-accent[disabled],.mat-icon-button.mat-primary[disabled],.mat-icon-button.mat-warn[disabled],.mat-icon-button[disabled][disabled]{color:rgba(255,255,255,.3)}.mat-icon-button.mat-primary .mat-ripple-element{background-color:rgba(194,24,91,.26)}.mat-icon-button.mat-accent .mat-ripple-element{background-color:rgba(176,190,197,.26)}.mat-icon-button.mat-warn .mat-ripple-element{background-color:rgba(244,67,54,.26)}.mat-fab,.mat-mini-fab,.mat-raised-button{color:#fff;background-color:#424242}.mat-fab.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{color:rgba(255,255,255,.87)}.mat-fab.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{color:rgba(0,0,0,.87)}.mat-fab.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{color:#fff}.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{color:rgba(255,255,255,.3)}.mat-fab.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{background-color:#c2185b}.mat-fab.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{background-color:#b0bec5}.mat-fab.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{background-color:#f44336}.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{background-color:rgba(255,255,255,.12)}.mat-fab,.mat-mini-fab{background-color:#b0bec5;color:rgba(0,0,0,.87)}.mat-button-toggle{color:rgba(255,255,255,.3)}.mat-button-toggle.cdk-focused .mat-button-toggle-focus-overlay{background-color:rgba(255,255,255,.06)}.mat-button-toggle-checked{background-color:#212121;color:#fff}.mat-button-toggle-disabled{background-color:#000;color:rgba(255,255,255,.3)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#424242}.mat-card{background:#424242;color:#fff}.mat-card-subtitle{color:rgba(255,255,255,.7)}.mat-checkbox-frame{border-color:rgba(255,255,255,.7)}.mat-checkbox-checkmark{fill:#303030}.mat-checkbox-checkmark-path{stroke:#303030!important}.mat-checkbox-mixedmark{background-color:#303030}.mat-checkbox-checked.mat-primary .mat-checkbox-background,.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background{background-color:#e91e63}.mat-checkbox-checked.mat-accent .mat-checkbox-background,.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#607d8b}.mat-checkbox-checked.mat-warn .mat-checkbox-background,.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background{background-color:#f44336}.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#686868}.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#686868}.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(194,24,91,.26)}.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(176,190,197,.26)}.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(244,67,54,.26)}.mat-chip:not(.mat-basic-chip){background-color:#424242;color:#fff}.mat-chip.mat-chip-selected:not(.mat-basic-chip){background-color:#212121;color:#fff}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-primary{background-color:#e91e63;color:#fff}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-accent{background-color:#607d8b;color:#fff}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-warn{background-color:#f44336;color:#fff}.mat-dialog-container{background:#424242}.mat-icon.mat-primary{color:#c2185b}.mat-icon.mat-accent{color:#b0bec5}.mat-icon.mat-warn{color:#f44336}.mat-input-placeholder{color:rgba(255,255,255,.3)}.mat-focused .mat-input-placeholder{color:#c2185b}.mat-focused .mat-input-placeholder.mat-accent{color:#b0bec5}.mat-focused .mat-input-placeholder.mat-warn{color:#f44336}.mat-input-element:disabled{color:rgba(255,255,255,.3)}.mat-focused .mat-input-placeholder.mat-float .mat-placeholder-required,input.mat-input-element:-webkit-autofill+.mat-input-placeholder .mat-placeholder-required{color:#b0bec5}.mat-input-underline{border-color:rgba(255,255,255,.12)}.mat-input-underline .mat-input-ripple{background-color:#c2185b}.mat-input-underline .mat-input-ripple.mat-accent{background-color:#b0bec5}.mat-input-underline .mat-input-ripple.mat-warn{background-color:#f44336}.mat-input-invalid .mat-input-placeholder,.mat-input-invalid .mat-placeholder-required{color:#f44336}.mat-input-invalid .mat-input-underline{border-color:#f44336}.mat-input-invalid .mat-input-ripple{background-color:#f44336}.mat-input-error{color:#f44336}.mat-list .mat-list-item,.mat-nav-list .mat-list-item{color:#fff}.mat-list .mat-subheader,.mat-nav-list .mat-subheader{color:rgba(255,255,255,.7)}.mat-divider{border-top-color:rgba(255,255,255,.12)}.mat-nav-list .mat-list-item-content.mat-list-item-focus,.mat-nav-list .mat-list-item-content:hover{background:rgba(255,255,255,.04)}.mat-menu-content{background:#424242}.mat-menu-item{background:0 0;color:#fff}.mat-menu-item[disabled]{color:rgba(255,255,255,.3)}.mat-menu-item .mat-icon{color:#fff;vertical-align:middle}.mat-menu-item:focus:not([disabled]),.mat-menu-item:hover:not([disabled]){background:rgba(255,255,255,.04)}.mat-progress-bar-background{background:url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23f8bbd0%27%2F%3E%3C%2Fsvg%3E\")}.mat-progress-bar-buffer{background-color:#f8bbd0}.mat-progress-bar-fill::after{background-color:#d81b60}.mat-progress-bar.mat-accent .mat-progress-bar-background{background:url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23cfd8dc%27%2F%3E%3C%2Fsvg%3E\")}.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#cfd8dc}.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#546e7a}.mat-progress-bar.mat-warn .mat-progress-bar-background{background:url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffcdd2%27%2F%3E%3C%2Fsvg%3E\")}.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#e53935}.mat-progress-spinner path,.mat-spinner path{stroke:#d81b60}.mat-progress-spinner.mat-accent path,.mat-spinner.mat-accent path{stroke:#546e7a}.mat-progress-spinner.mat-warn path,.mat-spinner.mat-warn path{stroke:#e53935}.mat-radio-outer-circle{border-color:rgba(255,255,255,.7)}.mat-radio-checked .mat-radio-outer-circle{border-color:#b0bec5}.mat-radio-disabled .mat-radio-outer-circle{border-color:rgba(255,255,255,.3)}.mat-radio-inner-circle{background-color:#b0bec5}.mat-radio-disabled .mat-radio-inner-circle{background-color:rgba(255,255,255,.3)}.mat-radio-ripple .mat-ripple-element{background-color:rgba(176,190,197,.26)}.mat-radio-disabled .mat-radio-ripple .mat-ripple-element{background-color:rgba(255,255,255,.3)}.mat-select-trigger{color:rgba(255,255,255,.3)}.mat-select:focus:not(.mat-select-disabled) .mat-select-trigger{color:#c2185b}.mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-trigger{color:#f44336}.mat-select-underline{background-color:rgba(255,255,255,.12)}.mat-select:focus:not(.mat-select-disabled) .mat-select-underline{background-color:#c2185b}.mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-underline{background-color:#f44336}.mat-select-arrow{color:rgba(255,255,255,.3)}.mat-select:focus:not(.mat-select-disabled) .mat-select-arrow{color:#c2185b}.mat-select:not(:focus).ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-arrow{color:#f44336}.mat-select-content,.mat-select-panel-done-animating{background:#424242}.mat-select-value{color:#fff}.mat-select-disabled .mat-select-value{color:rgba(255,255,255,.3)}.mat-sidenav-container{background-color:#303030;color:#fff}.mat-sidenav{background-color:#424242;color:#fff}.mat-sidenav.mat-sidenav-push{background-color:#424242}.mat-sidenav-backdrop.mat-sidenav-shown{background-color:rgba(189,189,189,.6)}.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#b0bec5}.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(176,190,197,.5)}.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-slide-toggle .mat-ripple-element{background-color:rgba(176,190,197,.12)}.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#f48fb1}.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(244,143,177,.5)}.mat-slide-toggle.mat-primary:not(.mat-checked) .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-slide-toggle.mat-primary .mat-ripple-element{background-color:rgba(244,143,177,.12)}.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#ef9a9a}.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(239,154,154,.5)}.mat-slide-toggle.mat-warn:not(.mat-checked) .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-slide-toggle.mat-warn .mat-ripple-element{background-color:rgba(239,154,154,.12)}.mat-disabled .mat-slide-toggle-thumb{background-color:#424242}.mat-disabled .mat-slide-toggle-bar{background-color:rgba(255,255,255,.12)}.mat-slide-toggle-thumb{background-color:#bdbdbd}.mat-slide-toggle-bar{background-color:rgba(255,255,255,.3)}.mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label,.mat-primary .mat-slider-track-fill{background-color:#c2185b}.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label,.mat-accent .mat-slider-track-fill{background-color:#b0bec5}.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label,.mat-warn .mat-slider-track-fill{background-color:#f44336}.mat-slider-focus-ring{background-color:rgba(176,190,197,.2)}.mat-primary .mat-slider-thumb-label-text{color:rgba(255,255,255,.87)}.mat-accent .mat-slider-thumb-label-text{color:rgba(0,0,0,.87)}.mat-warn .mat-slider-thumb-label-text{color:#fff}.cdk-focused .mat-slider-track-background,.mat-slider:hover .mat-slider-track-background{background-color:rgba(0,0,0,.38)}.mat-slider-disabled .mat-slider-thumb,.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill{background-color:rgba(0,0,0,.26)}.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(0,0,0,.12)}.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:#000}.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb{border-color:rgba(0,0,0,.38)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}.mat-tab-header,.mat-tab-nav-bar{border-bottom:1px solid #000}.mat-tab-group-inverted-header .mat-tab-header,.mat-tab-group-inverted-header .mat-tab-nav-bar{border-top:1px solid #000;border-bottom:none}.mat-tab-label:focus{background-color:rgba(248,187,208,.3)}.mat-ink-bar{background-color:#e91e63}.mat-tab-label,.mat-tab-link{color:currentColor}.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.3)}.mat-toolbar{background:#212121;color:#fff}.mat-toolbar.mat-primary{background:#c2185b;color:rgba(255,255,255,.87)}.mat-toolbar.mat-accent{background:#b0bec5;color:rgba(0,0,0,.87)}.mat-toolbar.mat-warn{background:#f44336;color:#fff}.mat-tooltip{background:rgba(97,97,97,.9)}\n/*# sourceMappingURL=pink-bluegrey.css.map */\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerSubscriber = (function (_super) {
    __extends(InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        _super.call(this);
        this.parent = parent;
        this.outerValue = outerValue;
        this.outerIndex = outerIndex;
        this.index = 0;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(Subscriber_1.Subscriber));
exports.InnerSubscriber = InnerSubscriber;
//# sourceMappingURL=InnerSubscriber.js.map

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* tslint:disable:no-unused-variable */
// Subject imported before Observable to bypass circular dependency issue since
// Subject extends Observable and Observable references Subject in it's
// definition
var Subject_1 = __webpack_require__(6);
exports.Subject = Subject_1.Subject;
exports.AnonymousSubject = Subject_1.AnonymousSubject;
/* tslint:enable:no-unused-variable */
var Observable_1 = __webpack_require__(0);
exports.Observable = Observable_1.Observable;
// statics
/* tslint:disable:no-use-before-declare */
__webpack_require__(285);
__webpack_require__(286);
__webpack_require__(287);
__webpack_require__(288);
__webpack_require__(289);
__webpack_require__(292);
__webpack_require__(123);
__webpack_require__(293);
__webpack_require__(124);
__webpack_require__(294);
__webpack_require__(295);
__webpack_require__(296);
__webpack_require__(297);
__webpack_require__(125);
__webpack_require__(126);
__webpack_require__(301);
__webpack_require__(298);
__webpack_require__(127);
__webpack_require__(299);
__webpack_require__(300);
__webpack_require__(302);
__webpack_require__(304);
__webpack_require__(90);
__webpack_require__(303);
__webpack_require__(305);
//dom
__webpack_require__(290);
__webpack_require__(291);
//operators
__webpack_require__(307);
__webpack_require__(308);
__webpack_require__(309);
__webpack_require__(310);
__webpack_require__(311);
__webpack_require__(129);
__webpack_require__(312);
__webpack_require__(313);
__webpack_require__(314);
__webpack_require__(315);
__webpack_require__(316);
__webpack_require__(317);
__webpack_require__(318);
__webpack_require__(324);
__webpack_require__(319);
__webpack_require__(320);
__webpack_require__(321);
__webpack_require__(322);
__webpack_require__(323);
__webpack_require__(325);
__webpack_require__(326);
__webpack_require__(327);
__webpack_require__(130);
__webpack_require__(330);
__webpack_require__(331);
__webpack_require__(332);
__webpack_require__(328);
__webpack_require__(43);
__webpack_require__(131);
__webpack_require__(333);
__webpack_require__(334);
__webpack_require__(132);
__webpack_require__(335);
__webpack_require__(336);
__webpack_require__(337);
__webpack_require__(306);
__webpack_require__(128);
__webpack_require__(338);
__webpack_require__(339);
__webpack_require__(329);
__webpack_require__(30);
__webpack_require__(340);
__webpack_require__(341);
__webpack_require__(342);
__webpack_require__(343);
__webpack_require__(344);
__webpack_require__(345);
__webpack_require__(346);
__webpack_require__(347);
__webpack_require__(348);
__webpack_require__(349);
__webpack_require__(350);
__webpack_require__(351);
__webpack_require__(352);
__webpack_require__(353);
__webpack_require__(354);
__webpack_require__(355);
__webpack_require__(356);
__webpack_require__(358);
__webpack_require__(357);
__webpack_require__(359);
__webpack_require__(360);
__webpack_require__(361);
__webpack_require__(362);
__webpack_require__(363);
__webpack_require__(364);
__webpack_require__(365);
__webpack_require__(366);
__webpack_require__(367);
__webpack_require__(368);
__webpack_require__(133);
__webpack_require__(369);
__webpack_require__(370);
__webpack_require__(371);
__webpack_require__(372);
__webpack_require__(134);
__webpack_require__(373);
__webpack_require__(374);
__webpack_require__(135);
__webpack_require__(375);
__webpack_require__(376);
__webpack_require__(377);
__webpack_require__(378);
__webpack_require__(379);
__webpack_require__(380);
__webpack_require__(381);
__webpack_require__(382);
__webpack_require__(383);
__webpack_require__(384);
__webpack_require__(385);
__webpack_require__(386);
__webpack_require__(387);
__webpack_require__(388);
__webpack_require__(389);
__webpack_require__(390);
__webpack_require__(391);
__webpack_require__(392);
__webpack_require__(393);
__webpack_require__(394);
__webpack_require__(395);
/* tslint:disable:no-unused-variable */
var Subscription_1 = __webpack_require__(7);
exports.Subscription = Subscription_1.Subscription;
var Subscriber_1 = __webpack_require__(1);
exports.Subscriber = Subscriber_1.Subscriber;
var AsyncSubject_1 = __webpack_require__(62);
exports.AsyncSubject = AsyncSubject_1.AsyncSubject;
var ReplaySubject_1 = __webpack_require__(89);
exports.ReplaySubject = ReplaySubject_1.ReplaySubject;
var BehaviorSubject_1 = __webpack_require__(41);
exports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;
var ConnectableObservable_1 = __webpack_require__(136);
exports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;
var Notification_1 = __webpack_require__(42);
exports.Notification = Notification_1.Notification;
var EmptyError_1 = __webpack_require__(49);
exports.EmptyError = EmptyError_1.EmptyError;
var ArgumentOutOfRangeError_1 = __webpack_require__(66);
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
var ObjectUnsubscribedError_1 = __webpack_require__(67);
exports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;
var TimeoutError_1 = __webpack_require__(164);
exports.TimeoutError = TimeoutError_1.TimeoutError;
var UnsubscriptionError_1 = __webpack_require__(165);
exports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;
var timeInterval_1 = __webpack_require__(156);
exports.TimeInterval = timeInterval_1.TimeInterval;
var timestamp_1 = __webpack_require__(157);
exports.Timestamp = timestamp_1.Timestamp;
var TestScheduler_1 = __webpack_require__(519);
exports.TestScheduler = TestScheduler_1.TestScheduler;
var VirtualTimeScheduler_1 = __webpack_require__(159);
exports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;
var AjaxObservable_1 = __webpack_require__(139);
exports.AjaxResponse = AjaxObservable_1.AjaxResponse;
exports.AjaxError = AjaxObservable_1.AjaxError;
exports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;
var asap_1 = __webpack_require__(160);
var async_1 = __webpack_require__(14);
var queue_1 = __webpack_require__(161);
var animationFrame_1 = __webpack_require__(516);
var rxSubscriber_1 = __webpack_require__(65);
var iterator_1 = __webpack_require__(47);
var observable_1 = __webpack_require__(48);
/* tslint:enable:no-unused-variable */
/**
 * @typedef {Object} Rx.Scheduler
 * @property {Scheduler} queue Schedules on a queue in the current event frame
 * (trampoline scheduler). Use this for iteration operations.
 * @property {Scheduler} asap Schedules on the micro task queue, which uses the
 * fastest transport mechanism available, either Node.js' `process.nextTick()`
 * or Web Worker MessageChannel or setTimeout or others. Use this for
 * asynchronous conversions.
 * @property {Scheduler} async Schedules work with `setInterval`. Use this for
 * time-based operations.
 * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.
 * Use this for synchronizing with the platform's painting
 */
var Scheduler = {
    asap: asap_1.asap,
    queue: queue_1.queue,
    animationFrame: animationFrame_1.animationFrame,
    async: async_1.async
};
exports.Scheduler = Scheduler;
/**
 * @typedef {Object} Rx.Symbol
 * @property {Symbol|string} rxSubscriber A symbol to use as a property name to
 * retrieve an "Rx safe" Observer from an object. "Rx safety" can be defined as
 * an object that has all of the traits of an Rx Subscriber, including the
 * ability to add and remove subscriptions to the subscription chain and
 * guarantees involving event triggering (can't "next" after unsubscription,
 * etc).
 * @property {Symbol|string} observable A symbol to use as a property name to
 * retrieve an Observable as defined by the [ECMAScript "Observable" spec](https://github.com/zenparsing/es-observable).
 * @property {Symbol|string} iterator The ES6 symbol to use as a property name
 * to retrieve an iterator from an object.
 */
var Symbol = {
    rxSubscriber: rxSubscriber_1.$$rxSubscriber,
    observable: observable_1.$$observable,
    iterator: iterator_1.$$iterator
};
exports.Symbol = Symbol;
//# sourceMappingURL=Rx.js.map

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * An execution context and a data structure to order tasks and schedule their
 * execution. Provides a notion of (potentially virtual) time, through the
 * `now()` getter method.
 *
 * Each unit of work in a Scheduler is called an {@link Action}.
 *
 * ```ts
 * class Scheduler {
 *   now(): number;
 *   schedule(work, delay?, state?): Subscription;
 * }
 * ```
 *
 * @class Scheduler
 */
var Scheduler = (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) { now = Scheduler.now; }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    /**
     * Schedules a function, `work`, for execution. May happen at some point in
     * the future, according to the `delay` parameter, if specified. May be passed
     * some context object, `state`, which will be passed to the `work` function.
     *
     * The given arguments will be processed an stored as an Action object in a
     * queue of actions.
     *
     * @param {function(state: ?T): ?Subscription} work A function representing a
     * task, or some unit of work to be executed by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler itself.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @return {Subscription} A subscription in order to be able to unsubscribe
     * the scheduled work.
     */
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) { delay = 0; }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };
    return Scheduler;
}());
exports.Scheduler = Scheduler;
//# sourceMappingURL=Scheduler.js.map

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bindCallback_1 = __webpack_require__(414);
Observable_1.Observable.bindCallback = bindCallback_1.bindCallback;
//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bindNodeCallback_1 = __webpack_require__(415);
Observable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineLatest_1 = __webpack_require__(416);
Observable_1.Observable.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concat_1 = __webpack_require__(417);
Observable_1.Observable.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var defer_1 = __webpack_require__(418);
Observable_1.Observable.defer = defer_1.defer;
//# sourceMappingURL=defer.js.map

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ajax_1 = __webpack_require__(420);
Observable_1.Observable.ajax = ajax_1.ajax;
//# sourceMappingURL=ajax.js.map

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var webSocket_1 = __webpack_require__(421);
Observable_1.Observable.webSocket = webSocket_1.webSocket;
//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var empty_1 = __webpack_require__(422);
Observable_1.Observable.empty = empty_1.empty;
//# sourceMappingURL=empty.js.map

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var from_1 = __webpack_require__(140);
Observable_1.Observable.from = from_1.from;
//# sourceMappingURL=from.js.map

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromEventPattern_1 = __webpack_require__(425);
Observable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;
//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromPromise_1 = __webpack_require__(92);
Observable_1.Observable.fromPromise = fromPromise_1.fromPromise;
//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var GenerateObservable_1 = __webpack_require__(404);
Observable_1.Observable.generate = GenerateObservable_1.GenerateObservable.create;
//# sourceMappingURL=generate.js.map

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var if_1 = __webpack_require__(426);
Observable_1.Observable.if = if_1._if;
//# sourceMappingURL=if.js.map

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var never_1 = __webpack_require__(428);
Observable_1.Observable.never = never_1.never;
//# sourceMappingURL=never.js.map

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var onErrorResumeNext_1 = __webpack_require__(153);
Observable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pairs_1 = __webpack_require__(429);
Observable_1.Observable.pairs = pairs_1.pairs;
//# sourceMappingURL=pairs.js.map

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var race_1 = __webpack_require__(154);
Observable_1.Observable.race = race_1.raceStatic;
//# sourceMappingURL=race.js.map

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var range_1 = __webpack_require__(430);
Observable_1.Observable.range = range_1.range;
//# sourceMappingURL=range.js.map

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timer_1 = __webpack_require__(432);
Observable_1.Observable.timer = timer_1.timer;
//# sourceMappingURL=timer.js.map

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var using_1 = __webpack_require__(433);
Observable_1.Observable.using = using_1.using;
//# sourceMappingURL=using.js.map

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zip_1 = __webpack_require__(434);
Observable_1.Observable.zip = zip_1.zip;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var audit_1 = __webpack_require__(435);
Observable_1.Observable.prototype.audit = audit_1.audit;
//# sourceMappingURL=audit.js.map

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var buffer_1 = __webpack_require__(437);
Observable_1.Observable.prototype.buffer = buffer_1.buffer;
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferCount_1 = __webpack_require__(438);
Observable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferTime_1 = __webpack_require__(439);
Observable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferToggle_1 = __webpack_require__(440);
Observable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferWhen_1 = __webpack_require__(441);
Observable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineAll_1 = __webpack_require__(442);
Observable_1.Observable.prototype.combineAll = combineAll_1.combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineLatest_1 = __webpack_require__(93);
Observable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concat_1 = __webpack_require__(94);
Observable_1.Observable.prototype.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatAll_1 = __webpack_require__(144);
Observable_1.Observable.prototype.concatAll = concatAll_1.concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatMap_1 = __webpack_require__(145);
Observable_1.Observable.prototype.concatMap = concatMap_1.concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatMapTo_1 = __webpack_require__(443);
Observable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var count_1 = __webpack_require__(444);
Observable_1.Observable.prototype.count = count_1.count;
//# sourceMappingURL=count.js.map

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var debounce_1 = __webpack_require__(445);
Observable_1.Observable.prototype.debounce = debounce_1.debounce;
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var debounceTime_1 = __webpack_require__(446);
Observable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var defaultIfEmpty_1 = __webpack_require__(447);
Observable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var delay_1 = __webpack_require__(448);
Observable_1.Observable.prototype.delay = delay_1.delay;
//# sourceMappingURL=delay.js.map

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var delayWhen_1 = __webpack_require__(449);
Observable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var dematerialize_1 = __webpack_require__(450);
Observable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinct_1 = __webpack_require__(451);
Observable_1.Observable.prototype.distinct = distinct_1.distinct;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinctUntilChanged_1 = __webpack_require__(146);
Observable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinctUntilKeyChanged_1 = __webpack_require__(452);
Observable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var elementAt_1 = __webpack_require__(454);
Observable_1.Observable.prototype.elementAt = elementAt_1.elementAt;
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var every_1 = __webpack_require__(147);
Observable_1.Observable.prototype.every = every_1.every;
//# sourceMappingURL=every.js.map

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var exhaust_1 = __webpack_require__(455);
Observable_1.Observable.prototype.exhaust = exhaust_1.exhaust;
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var exhaustMap_1 = __webpack_require__(456);
Observable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var expand_1 = __webpack_require__(457);
Observable_1.Observable.prototype.expand = expand_1.expand;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var find_1 = __webpack_require__(148);
Observable_1.Observable.prototype.find = find_1.find;
//# sourceMappingURL=find.js.map

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var findIndex_1 = __webpack_require__(459);
Observable_1.Observable.prototype.findIndex = findIndex_1.findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var groupBy_1 = __webpack_require__(460);
Observable_1.Observable.prototype.groupBy = groupBy_1.groupBy;
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ignoreElements_1 = __webpack_require__(461);
Observable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var isEmpty_1 = __webpack_require__(462);
Observable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var last_1 = __webpack_require__(150);
Observable_1.Observable.prototype.last = last_1.last;
//# sourceMappingURL=last.js.map

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var let_1 = __webpack_require__(463);
Observable_1.Observable.prototype.let = let_1.letProto;
Observable_1.Observable.prototype.letBind = let_1.letProto;
//# sourceMappingURL=let.js.map

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mapTo_1 = __webpack_require__(464);
Observable_1.Observable.prototype.mapTo = mapTo_1.mapTo;
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var materialize_1 = __webpack_require__(465);
Observable_1.Observable.prototype.materialize = materialize_1.materialize;
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var max_1 = __webpack_require__(466);
Observable_1.Observable.prototype.max = max_1.max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var merge_1 = __webpack_require__(151);
Observable_1.Observable.prototype.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeAll_1 = __webpack_require__(44);
Observable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeMap_1 = __webpack_require__(96);
Observable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;
Observable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeMapTo_1 = __webpack_require__(152);
Observable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;
Observable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeScan_1 = __webpack_require__(467);
Observable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var min_1 = __webpack_require__(468);
Observable_1.Observable.prototype.min = min_1.min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var multicast_1 = __webpack_require__(33);
Observable_1.Observable.prototype.multicast = multicast_1.multicast;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var observeOn_1 = __webpack_require__(97);
Observable_1.Observable.prototype.observeOn = observeOn_1.observeOn;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var onErrorResumeNext_1 = __webpack_require__(153);
Observable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pairwise_1 = __webpack_require__(469);
Observable_1.Observable.prototype.pairwise = pairwise_1.pairwise;
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var partition_1 = __webpack_require__(470);
Observable_1.Observable.prototype.partition = partition_1.partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pluck_1 = __webpack_require__(471);
Observable_1.Observable.prototype.pluck = pluck_1.pluck;
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publish_1 = __webpack_require__(472);
Observable_1.Observable.prototype.publish = publish_1.publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishBehavior_1 = __webpack_require__(473);
Observable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishLast_1 = __webpack_require__(474);
Observable_1.Observable.prototype.publishLast = publishLast_1.publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishReplay_1 = __webpack_require__(475);
Observable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var race_1 = __webpack_require__(154);
Observable_1.Observable.prototype.race = race_1.race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var reduce_1 = __webpack_require__(64);
Observable_1.Observable.prototype.reduce = reduce_1.reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var repeat_1 = __webpack_require__(476);
Observable_1.Observable.prototype.repeat = repeat_1.repeat;
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var repeatWhen_1 = __webpack_require__(477);
Observable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var retry_1 = __webpack_require__(478);
Observable_1.Observable.prototype.retry = retry_1.retry;
//# sourceMappingURL=retry.js.map

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var retryWhen_1 = __webpack_require__(479);
Observable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sample_1 = __webpack_require__(480);
Observable_1.Observable.prototype.sample = sample_1.sample;
//# sourceMappingURL=sample.js.map

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sampleTime_1 = __webpack_require__(481);
Observable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var scan_1 = __webpack_require__(482);
Observable_1.Observable.prototype.scan = scan_1.scan;
//# sourceMappingURL=scan.js.map

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sequenceEqual_1 = __webpack_require__(483);
Observable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var single_1 = __webpack_require__(484);
Observable_1.Observable.prototype.single = single_1.single;
//# sourceMappingURL=single.js.map

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skip_1 = __webpack_require__(485);
Observable_1.Observable.prototype.skip = skip_1.skip;
//# sourceMappingURL=skip.js.map

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipUntil_1 = __webpack_require__(486);
Observable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipWhile_1 = __webpack_require__(487);
Observable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var subscribeOn_1 = __webpack_require__(489);
Observable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switch_1 = __webpack_require__(490);
Observable_1.Observable.prototype.switch = switch_1._switch;
Observable_1.Observable.prototype._switch = switch_1._switch;
//# sourceMappingURL=switch.js.map

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switchMapTo_1 = __webpack_require__(492);
Observable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var take_1 = __webpack_require__(493);
Observable_1.Observable.prototype.take = take_1.take;
//# sourceMappingURL=take.js.map

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeLast_1 = __webpack_require__(494);
Observable_1.Observable.prototype.takeLast = takeLast_1.takeLast;
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeUntil_1 = __webpack_require__(495);
Observable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeWhile_1 = __webpack_require__(496);
Observable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throttle_1 = __webpack_require__(497);
Observable_1.Observable.prototype.throttle = throttle_1.throttle;
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throttleTime_1 = __webpack_require__(498);
Observable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeInterval_1 = __webpack_require__(156);
Observable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeout_1 = __webpack_require__(499);
Observable_1.Observable.prototype.timeout = timeout_1.timeout;
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeoutWith_1 = __webpack_require__(500);
Observable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timestamp_1 = __webpack_require__(157);
Observable_1.Observable.prototype.timestamp = timestamp_1.timestamp;
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var toArray_1 = __webpack_require__(501);
Observable_1.Observable.prototype.toArray = toArray_1.toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var toPromise_1 = __webpack_require__(158);
Observable_1.Observable.prototype.toPromise = toPromise_1.toPromise;
//# sourceMappingURL=toPromise.js.map

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var window_1 = __webpack_require__(502);
Observable_1.Observable.prototype.window = window_1.window;
//# sourceMappingURL=window.js.map

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowCount_1 = __webpack_require__(503);
Observable_1.Observable.prototype.windowCount = windowCount_1.windowCount;
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowTime_1 = __webpack_require__(504);
Observable_1.Observable.prototype.windowTime = windowTime_1.windowTime;
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowToggle_1 = __webpack_require__(505);
Observable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowWhen_1 = __webpack_require__(506);
Observable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var withLatestFrom_1 = __webpack_require__(507);
Observable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zip_1 = __webpack_require__(98);
Observable_1.Observable.prototype.zip = zip_1.zipProto;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zipAll_1 = __webpack_require__(508);
Observable_1.Observable.prototype.zipAll = zipAll_1.zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var ScalarObservable_1 = __webpack_require__(91);
var EmptyObservable_1 = __webpack_require__(25);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayLikeObservable = (function (_super) {
    __extends(ArrayLikeObservable, _super);
    function ArrayLikeObservable(arrayLike, scheduler) {
        _super.call(this);
        this.arrayLike = arrayLike;
        this.scheduler = scheduler;
        if (!scheduler && arrayLike.length === 1) {
            this._isScalar = true;
            this.value = arrayLike[0];
        }
    }
    ArrayLikeObservable.create = function (arrayLike, scheduler) {
        var length = arrayLike.length;
        if (length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else if (length === 1) {
            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);
        }
        else {
            return new ArrayLikeObservable(arrayLike, scheduler);
        }
    };
    ArrayLikeObservable.dispatch = function (state) {
        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;
        if (subscriber.closed) {
            return;
        }
        if (index >= length) {
            subscriber.complete();
            return;
        }
        subscriber.next(arrayLike[index]);
        state.index = index + 1;
        this.schedule(state);
    };
    ArrayLikeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;
        var length = arrayLike.length;
        if (scheduler) {
            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {
                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < length && !subscriber.closed; i++) {
                subscriber.next(arrayLike[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayLikeObservable;
}(Observable_1.Observable));
exports.ArrayLikeObservable = ArrayLikeObservable;
//# sourceMappingURL=ArrayLikeObservable.js.map

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var AsyncSubject_1 = __webpack_require__(62);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundCallbackObservable = (function (_super) {
    __extends(BoundCallbackObservable, _super);
    function BoundCallbackObservable(callbackFunc, selector, args, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a callback API to a function that returns an Observable.
     *
     * <span class="informal">Give it a function `f` of type `f(x, callback)` and
     * it will return a function `g` that when called as `g(x)` will output an
     * Observable.</span>
     *
     * `bindCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done. The output of `bindCallback` is a function that takes the same
     * parameters as `func`, except the last one (the callback). When the output
     * function is called with arguments, it will return an Observable where the
     * results will be delivered to.
     *
     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>
     * // Suppose we have jQuery.getJSON('/my/url', callback)
     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);
     * var result = getJSONAsObservable('/my/url');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindNodeCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps those a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the callback would deliver.
     * @static true
     * @name bindCallback
     * @owner Observable
     */
    BoundCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundCallbackObservable(func, selector, args, scheduler);
        };
    };
    BoundCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber });
        }
    };
    BoundCallbackObservable.dispatch = function (state) {
        var self = this;
        var source = state.source, subscriber = state.subscriber;
        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;
        var subject = source.subject;
        if (!subject) {
            subject = source.subject = new AsyncSubject_1.AsyncSubject();
            var handler = function handlerFn() {
                var innerArgs = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    innerArgs[_i - 0] = arguments[_i];
                }
                var source = handlerFn.source;
                var selector = source.selector, subject = source.subject;
                if (selector) {
                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                    if (result_2 === errorObject_1.errorObject) {
                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                    }
                    else {
                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                    }
                }
                else {
                    var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;
                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
                }
            };
            // use named function to pass values in without closure
            handler.source = source;
            var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
            if (result === errorObject_1.errorObject) {
                subject.error(errorObject_1.errorObject.e);
            }
        }
        self.add(subject.subscribe(subscriber));
    };
    return BoundCallbackObservable;
}(Observable_1.Observable));
exports.BoundCallbackObservable = BoundCallbackObservable;
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundCallbackObservable.js.map

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var AsyncSubject_1 = __webpack_require__(62);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundNodeCallbackObservable = (function (_super) {
    __extends(BoundNodeCallbackObservable, _super);
    function BoundNodeCallbackObservable(callbackFunc, selector, args, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a Node.js-style callback API to a function that returns an
     * Observable.
     *
     * <span class="informal">It's just like {@link bindCallback}, but the
     * callback is expected to be of type `callback(error, result)`.</span>
     *
     * `bindNodeCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done. The callback function is expected to follow Node.js conventions,
     * where the first argument to the callback is an error, while remaining
     * arguments are the callback result. The output of `bindNodeCallback` is a
     * function that takes the same parameters as `func`, except the last one (the
     * callback). When the output function is called with arguments, it will
     * return an Observable where the results will be delivered to.
     *
     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>
     * import * as fs from 'fs';
     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);
     * var result = readFileAsObservable('./roadNames.txt', 'utf8');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps those a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the Node.js callback would
     * deliver.
     * @static true
     * @name bindNodeCallback
     * @owner Observable
     */
    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundNodeCallbackObservable(func, selector, args, scheduler);
        };
    };
    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    var err = innerArgs.shift();
                    if (err) {
                        subject.error(err);
                    }
                    else if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber });
        }
    };
    return BoundNodeCallbackObservable;
}(Observable_1.Observable));
exports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;
function dispatch(state) {
    var self = this;
    var source = state.source, subscriber = state.subscriber;
    // XXX: cast to `any` to access to the private field in `source`.
    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;
    var subject = source.subject;
    if (!subject) {
        subject = source.subject = new AsyncSubject_1.AsyncSubject();
        var handler = function handlerFn() {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i - 0] = arguments[_i];
            }
            var source = handlerFn.source;
            var selector = source.selector, subject = source.subject;
            var err = innerArgs.shift();
            if (err) {
                subject.error(err);
            }
            else if (selector) {
                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                if (result_2 === errorObject_1.errorObject) {
                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                }
                else {
                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                }
            }
            else {
                var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;
                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        // use named function to pass values in without closure
        handler.source = source;
        var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
        if (result === errorObject_1.errorObject) {
            subject.error(errorObject_1.errorObject.e);
        }
    }
    self.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundNodeCallbackObservable.js.map

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(4);
var OuterSubscriber_1 = __webpack_require__(3);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var DeferObservable = (function (_super) {
    __extends(DeferObservable, _super);
    function DeferObservable(observableFactory) {
        _super.call(this);
        this.observableFactory = observableFactory;
    }
    /**
     * Creates an Observable that, on subscribe, calls an Observable factory to
     * make an Observable for each new Observer.
     *
     * <span class="informal">Creates the Observable lazily, that is, only when it
     * is subscribed.
     * </span>
     *
     * <img src="./img/defer.png" width="100%">
     *
     * `defer` allows you to create the Observable only when the Observer
     * subscribes, and create a fresh Observable for each Observer. It waits until
     * an Observer subscribes to it, and then it generates an Observable,
     * typically with an Observable factory function. It does this afresh for each
     * subscriber, so although each subscriber may think it is subscribing to the
     * same Observable, in fact each subscriber gets its own individual
     * Observable.
     *
     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>
     * var clicksOrInterval = Rx.Observable.defer(function () {
     *   if (Math.random() > 0.5) {
     *     return Rx.Observable.fromEvent(document, 'click');
     *   } else {
     *     return Rx.Observable.interval(1000);
     *   }
     * });
     * clicksOrInterval.subscribe(x => console.log(x));
     *
     * // Results in the following behavior:
     * // If the result of Math.random() is greater than 0.5 it will listen
     * // for clicks anywhere on the "document"; when document is clicked it
     * // will log a MouseEvent object to the console. If the result is less
     * // than 0.5 it will emit ascending numbers, one every second(1000ms).
     *
     * @see {@link create}
     *
     * @param {function(): Observable|Promise} observableFactory The Observable
     * factory function to invoke for each Observer that subscribes to the output
     * Observable. May also return a Promise, which will be converted on the fly
     * to an Observable.
     * @return {Observable} An Observable whose Observers' subscriptions trigger
     * an invocation of the given Observable factory function.
     * @static true
     * @name defer
     * @owner Observable
     */
    DeferObservable.create = function (observableFactory) {
        return new DeferObservable(observableFactory);
    };
    DeferObservable.prototype._subscribe = function (subscriber) {
        return new DeferSubscriber(subscriber, this.observableFactory);
    };
    return DeferObservable;
}(Observable_1.Observable));
exports.DeferObservable = DeferObservable;
var DeferSubscriber = (function (_super) {
    __extends(DeferSubscriber, _super);
    function DeferSubscriber(destination, factory) {
        _super.call(this, destination);
        this.factory = factory;
        this.tryDefer();
    }
    DeferSubscriber.prototype.tryDefer = function () {
        try {
            this._callFactory();
        }
        catch (err) {
            this._error(err);
        }
    };
    DeferSubscriber.prototype._callFactory = function () {
        var result = this.factory();
        if (result) {
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    };
    return DeferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=DeferObservable.js.map

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ErrorObservable = (function (_super) {
    __extends(ErrorObservable, _super);
    function ErrorObservable(error, scheduler) {
        _super.call(this);
        this.error = error;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits an error notification.
     *
     * <span class="informal">Just emits 'error', and nothing else.
     * </span>
     *
     * <img src="./img/throw.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the error notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then emit an error.</caption>
     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x === 13 ?
     *     Rx.Observable.throw('Thirteens are bad') :
     *     Rx.Observable.of('a', 'b', 'c')
     * );
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link of}
     *
     * @param {any} error The particular Error to pass to the error notification.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the error notification.
     * @return {Observable} An error Observable: emits only the error notification
     * using the given error argument.
     * @static true
     * @name throw
     * @owner Observable
     */
    ErrorObservable.create = function (error, scheduler) {
        return new ErrorObservable(error, scheduler);
    };
    ErrorObservable.dispatch = function (arg) {
        var error = arg.error, subscriber = arg.subscriber;
        subscriber.error(error);
    };
    ErrorObservable.prototype._subscribe = function (subscriber) {
        var error = this.error;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ErrorObservable.dispatch, 0, {
                error: error, subscriber: subscriber
            });
        }
        else {
            subscriber.error(error);
        }
    };
    return ErrorObservable;
}(Observable_1.Observable));
exports.ErrorObservable = ErrorObservable;
//# sourceMappingURL=ErrorObservable.js.map

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var EmptyObservable_1 = __webpack_require__(25);
var isArray_1 = __webpack_require__(19);
var subscribeToResult_1 = __webpack_require__(4);
var OuterSubscriber_1 = __webpack_require__(3);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ForkJoinObservable = (function (_super) {
    __extends(ForkJoinObservable, _super);
    function ForkJoinObservable(sources, resultSelector) {
        _super.call(this);
        this.sources = sources;
        this.resultSelector = resultSelector;
    }
    /* tslint:enable:max-line-length */
    /**
     * @param sources
     * @return {any}
     * @static true
     * @name forkJoin
     * @owner Observable
     */
    ForkJoinObservable.create = function () {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i - 0] = arguments[_i];
        }
        if (sources === null || arguments.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        var resultSelector = null;
        if (typeof sources[sources.length - 1] === 'function') {
            resultSelector = sources.pop();
        }
        // if the first and only other argument besides the resultSelector is an array
        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`
        if (sources.length === 1 && isArray_1.isArray(sources[0])) {
            sources = sources[0];
        }
        if (sources.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        return new ForkJoinObservable(sources, resultSelector);
    };
    ForkJoinObservable.prototype._subscribe = function (subscriber) {
        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);
    };
    return ForkJoinObservable;
}(Observable_1.Observable));
exports.ForkJoinObservable = ForkJoinObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ForkJoinSubscriber = (function (_super) {
    __extends(ForkJoinSubscriber, _super);
    function ForkJoinSubscriber(destination, sources, resultSelector) {
        _super.call(this, destination);
        this.sources = sources;
        this.resultSelector = resultSelector;
        this.completed = 0;
        this.haveValues = 0;
        var len = sources.length;
        this.total = len;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            var source = sources[i];
            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);
            if (innerSubscription) {
                innerSubscription.outerIndex = i;
                this.add(innerSubscription);
            }
        }
    }
    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        if (!innerSub._hasValue) {
            innerSub._hasValue = true;
            this.haveValues++;
        }
    };
    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;
        var len = values.length;
        if (!innerSub._hasValue) {
            destination.complete();
            return;
        }
        this.completed++;
        if (this.completed !== len) {
            return;
        }
        if (haveValues === len) {
            var value = resultSelector ? resultSelector.apply(this, values) : values;
            destination.next(value);
        }
        destination.complete();
    };
    return ForkJoinSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=ForkJoinObservable.js.map

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(11);
var isFunction_1 = __webpack_require__(69);
var errorObject_1 = __webpack_require__(9);
var Subscription_1 = __webpack_require__(7);
var toString = Object.prototype.toString;
function isNodeStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isNodeList(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';
}
function isHTMLCollection(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';
}
function isEventTarget(sourceObj) {
    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventObservable = (function (_super) {
    __extends(FromEventObservable, _super);
    function FromEventObservable(sourceObj, eventName, selector, options) {
        _super.call(this);
        this.sourceObj = sourceObj;
        this.eventName = eventName;
        this.selector = selector;
        this.options = options;
    }
    /* tslint:enable:max-line-length */
    /**
     * Creates an Observable that emits events of a specific type coming from the
     * given event target.
     *
     * <span class="informal">Creates an Observable from DOM events, or Node
     * EventEmitter events or others.</span>
     *
     * <img src="./img/fromEvent.png" width="100%">
     *
     * Creates an Observable by attaching an event listener to an "event target",
     * which may be an object with `addEventListener` and `removeEventListener`,
     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the
     * DOM, or an HTMLCollection from the DOM. The event handler is attached when
     * the output Observable is subscribed, and removed when the Subscription is
     * unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * var clicks = Rx.Observable.fromEvent(document, 'click');
     * clicks.subscribe(x => console.log(x));
     *
     * // Results in:
     * // MouseEvent object logged to console everytime a click
     * // occurs on the document.
     *
     * @see {@link from}
     * @see {@link fromEventPattern}
     *
     * @param {EventTargetLike} target The DOMElement, event target, Node.js
     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.
     * @param {string} eventName The event name of interest, being emitted by the
     * `target`.
     * @param {EventListenerOptions} [options] Options to pass through to addEventListener
     * @param {SelectorMethodSignature<T>} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEvent
     * @owner Observable
     */
    FromEventObservable.create = function (target, eventName, options, selector) {
        if (isFunction_1.isFunction(options)) {
            selector = options;
            options = undefined;
        }
        return new FromEventObservable(target, eventName, selector, options);
    };
    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {
        var unsubscribe;
        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {
            for (var i = 0, len = sourceObj.length; i < len; i++) {
                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
            }
        }
        else if (isEventTarget(sourceObj)) {
            var source_1 = sourceObj;
            sourceObj.addEventListener(eventName, handler, options);
            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };
        }
        else if (isJQueryStyleEventEmitter(sourceObj)) {
            var source_2 = sourceObj;
            sourceObj.on(eventName, handler);
            unsubscribe = function () { return source_2.off(eventName, handler); };
        }
        else if (isNodeStyleEventEmitter(sourceObj)) {
            var source_3 = sourceObj;
            sourceObj.addListener(eventName, handler);
            unsubscribe = function () { return source_3.removeListener(eventName, handler); };
        }
        else {
            throw new TypeError('Invalid event target');
        }
        subscriber.add(new Subscription_1.Subscription(unsubscribe));
    };
    FromEventObservable.prototype._subscribe = function (subscriber) {
        var sourceObj = this.sourceObj;
        var eventName = this.eventName;
        var options = this.options;
        var selector = this.selector;
        var handler = selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);
            if (result === errorObject_1.errorObject) {
                subscriber.error(errorObject_1.errorObject.e);
            }
            else {
                subscriber.next(result);
            }
        } : function (e) { return subscriber.next(e); };
        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);
    };
    return FromEventObservable;
}(Observable_1.Observable));
exports.FromEventObservable = FromEventObservable;
//# sourceMappingURL=FromEventObservable.js.map

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = __webpack_require__(69);
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(7);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventPatternObservable = (function (_super) {
    __extends(FromEventPatternObservable, _super);
    function FromEventPatternObservable(addHandler, removeHandler, selector) {
        _super.call(this);
        this.addHandler = addHandler;
        this.removeHandler = removeHandler;
        this.selector = selector;
    }
    /**
     * Creates an Observable from an API based on addHandler/removeHandler
     * functions.
     *
     * <span class="informal">Converts any addHandler/removeHandler API to an
     * Observable.</span>
     *
     * <img src="./img/fromEventPattern.png" width="100%">
     *
     * Creates an Observable by using the `addHandler` and `removeHandler`
     * functions to add and remove the handlers, with an optional selector
     * function to project the event arguments to a result. The `addHandler` is
     * called when the output Observable is subscribed, and `removeHandler` is
     * called when the Subscription is unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * function addClickHandler(handler) {
     *   document.addEventListener('click', handler);
     * }
     *
     * function removeClickHandler(handler) {
     *   document.removeEventListener('click', handler);
     * }
     *
     * var clicks = Rx.Observable.fromEventPattern(
     *   addClickHandler,
     *   removeClickHandler
     * );
     * clicks.subscribe(x => console.log(x));
     *
     * @see {@link from}
     * @see {@link fromEvent}
     *
     * @param {function(handler: Function): any} addHandler A function that takes
     * a `handler` function as argument and attaches it somehow to the actual
     * source of events.
     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that
     * takes a `handler` function as argument and removes it in case it was
     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,
     * removeHandler function will forward it.
     * @param {function(...args: any): T} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEventPattern
     * @owner Observable
     */
    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {
        return new FromEventPatternObservable(addHandler, removeHandler, selector);
    };
    FromEventPatternObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var removeHandler = this.removeHandler;
        var handler = !!this.selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            _this._callSelector(subscriber, args);
        } : function (e) { subscriber.next(e); };
        var retValue = this._callAddHandler(handler, subscriber);
        if (!isFunction_1.isFunction(removeHandler)) {
            return;
        }
        subscriber.add(new Subscription_1.Subscription(function () {
            //TODO: determine whether or not to forward to error handler
            removeHandler(handler, retValue);
        }));
    };
    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {
        try {
            var result = this.selector.apply(this, args);
            subscriber.next(result);
        }
        catch (e) {
            subscriber.error(e);
        }
    };
    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {
        try {
            return this.addHandler(handler) || null;
        }
        catch (e) {
            errorSubscriber.error(e);
        }
    };
    return FromEventPatternObservable;
}(Observable_1.Observable));
exports.FromEventPatternObservable = FromEventPatternObservable;
//# sourceMappingURL=FromEventPatternObservable.js.map

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var isScheduler_1 = __webpack_require__(26);
var selfSelector = function (value) { return value; };
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var GenerateObservable = (function (_super) {
    __extends(GenerateObservable, _super);
    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {
        _super.call(this);
        this.initialState = initialState;
        this.condition = condition;
        this.iterate = iterate;
        this.resultSelector = resultSelector;
        this.scheduler = scheduler;
    }
    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
        if (arguments.length == 1) {
            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);
        }
        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {
            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);
        }
        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);
    };
    GenerateObservable.prototype._subscribe = function (subscriber) {
        var state = this.initialState;
        if (this.scheduler) {
            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {
                subscriber: subscriber,
                iterate: this.iterate,
                condition: this.condition,
                resultSelector: this.resultSelector,
                state: state });
        }
        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        } while (true);
    };
    GenerateObservable.dispatch = function (state) {
        var subscriber = state.subscriber, condition = state.condition;
        if (subscriber.closed) {
            return;
        }
        if (state.needIterate) {
            try {
                state.state = state.iterate(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        }
        else {
            state.needIterate = true;
        }
        if (condition) {
            var conditionResult = void 0;
            try {
                conditionResult = condition(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            if (!conditionResult) {
                subscriber.complete();
                return;
            }
            if (subscriber.closed) {
                return;
            }
        }
        var value;
        try {
            value = state.resultSelector(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return;
        }
        if (subscriber.closed) {
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        return this.schedule(state);
    };
    return GenerateObservable;
}(Observable_1.Observable));
exports.GenerateObservable = GenerateObservable;
//# sourceMappingURL=GenerateObservable.js.map

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(4);
var OuterSubscriber_1 = __webpack_require__(3);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IfObservable = (function (_super) {
    __extends(IfObservable, _super);
    function IfObservable(condition, thenSource, elseSource) {
        _super.call(this);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
    }
    IfObservable.create = function (condition, thenSource, elseSource) {
        return new IfObservable(condition, thenSource, elseSource);
    };
    IfObservable.prototype._subscribe = function (subscriber) {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        return new IfSubscriber(subscriber, condition, thenSource, elseSource);
    };
    return IfObservable;
}(Observable_1.Observable));
exports.IfObservable = IfObservable;
var IfSubscriber = (function (_super) {
    __extends(IfSubscriber, _super);
    function IfSubscriber(destination, condition, thenSource, elseSource) {
        _super.call(this, destination);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
        this.tryIf();
    }
    IfSubscriber.prototype.tryIf = function () {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        var result;
        try {
            result = condition();
            var source = result ? thenSource : elseSource;
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
            else {
                this._complete();
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return IfSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=IfObservable.js.map

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(99);
var Observable_1 = __webpack_require__(0);
var async_1 = __webpack_require__(14);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IntervalObservable = (function (_super) {
    __extends(IntervalObservable, _super);
    function IntervalObservable(period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        _super.call(this);
        this.period = period;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(period) || period < 0) {
            this.period = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = async_1.async;
        }
    }
    /**
     * Creates an Observable that emits sequential numbers every specified
     * interval of time, on a specified IScheduler.
     *
     * <span class="informal">Emits incremental numbers periodically in time.
     * </span>
     *
     * <img src="./img/interval.png" width="100%">
     *
     * `interval` returns an Observable that emits an infinite sequence of
     * ascending integers, with a constant interval of time of your choosing
     * between those emissions. The first emission is not sent immediately, but
     * only after the first period has passed. By default, this operator uses the
     * `async` IScheduler to provide a notion of time, but you may pass any
     * IScheduler to it.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>
     * var numbers = Rx.Observable.interval(1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link delay}
     *
     * @param {number} [period=0] The interval size in milliseconds (by default)
     * or the time unit determined by the scheduler's clock.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a sequential number each time
     * interval.
     * @static true
     * @name interval
     * @owner Observable
     */
    IntervalObservable.create = function (period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        return new IntervalObservable(period, scheduler);
    };
    IntervalObservable.dispatch = function (state) {
        var index = state.index, subscriber = state.subscriber, period = state.period;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        state.index += 1;
        this.schedule(state, period);
    };
    IntervalObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var period = this.period;
        var scheduler = this.scheduler;
        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {
            index: index, subscriber: subscriber, period: period
        }));
    };
    return IntervalObservable;
}(Observable_1.Observable));
exports.IntervalObservable = IntervalObservable;
//# sourceMappingURL=IntervalObservable.js.map

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(10);
var Observable_1 = __webpack_require__(0);
var iterator_1 = __webpack_require__(47);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IteratorObservable = (function (_super) {
    __extends(IteratorObservable, _super);
    function IteratorObservable(iterator, scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
        if (iterator == null) {
            throw new Error('iterator cannot be null.');
        }
        this.iterator = getIterator(iterator);
    }
    IteratorObservable.create = function (iterator, scheduler) {
        return new IteratorObservable(iterator, scheduler);
    };
    IteratorObservable.dispatch = function (state) {
        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;
        if (hasError) {
            subscriber.error(state.error);
            return;
        }
        var result = iterator.next();
        if (result.done) {
            subscriber.complete();
            return;
        }
        subscriber.next(result.value);
        state.index = index + 1;
        if (subscriber.closed) {
            if (typeof iterator.return === 'function') {
                iterator.return();
            }
            return;
        }
        this.schedule(state);
    };
    IteratorObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;
        if (scheduler) {
            return scheduler.schedule(IteratorObservable.dispatch, 0, {
                index: index, iterator: iterator, subscriber: subscriber
            });
        }
        else {
            do {
                var result = iterator.next();
                if (result.done) {
                    subscriber.complete();
                    break;
                }
                else {
                    subscriber.next(result.value);
                }
                if (subscriber.closed) {
                    if (typeof iterator.return === 'function') {
                        iterator.return();
                    }
                    break;
                }
            } while (true);
        }
    };
    return IteratorObservable;
}(Observable_1.Observable));
exports.IteratorObservable = IteratorObservable;
var StringIterator = (function () {
    function StringIterator(str, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = str.length; }
        this.str = str;
        this.idx = idx;
        this.len = len;
    }
    StringIterator.prototype[iterator_1.$$iterator] = function () { return (this); };
    StringIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.str.charAt(this.idx++)
        } : {
            done: true,
            value: undefined
        };
    };
    return StringIterator;
}());
var ArrayIterator = (function () {
    function ArrayIterator(arr, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = toLength(arr); }
        this.arr = arr;
        this.idx = idx;
        this.len = len;
    }
    ArrayIterator.prototype[iterator_1.$$iterator] = function () { return this; };
    ArrayIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.arr[this.idx++]
        } : {
            done: true,
            value: undefined
        };
    };
    return ArrayIterator;
}());
function getIterator(obj) {
    var i = obj[iterator_1.$$iterator];
    if (!i && typeof obj === 'string') {
        return new StringIterator(obj);
    }
    if (!i && obj.length !== undefined) {
        return new ArrayIterator(obj);
    }
    if (!i) {
        throw new TypeError('object is not iterable');
    }
    return obj[iterator_1.$$iterator]();
}
var maxSafeInteger = Math.pow(2, 53) - 1;
function toLength(o) {
    var len = +o.length;
    if (isNaN(len)) {
        return 0;
    }
    if (len === 0 || !numberIsFinite(len)) {
        return len;
    }
    len = sign(len) * Math.floor(Math.abs(len));
    if (len <= 0) {
        return 0;
    }
    if (len > maxSafeInteger) {
        return maxSafeInteger;
    }
    return len;
}
function numberIsFinite(value) {
    return typeof value === 'number' && root_1.root.isFinite(value);
}
function sign(value) {
    var valueAsNumber = +value;
    if (valueAsNumber === 0) {
        return valueAsNumber;
    }
    if (isNaN(valueAsNumber)) {
        return valueAsNumber;
    }
    return valueAsNumber < 0 ? -1 : 1;
}
//# sourceMappingURL=IteratorObservable.js.map

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var noop_1 = __webpack_require__(169);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var NeverObservable = (function (_super) {
    __extends(NeverObservable, _super);
    function NeverObservable() {
        _super.call(this);
    }
    /**
     * Creates an Observable that emits no items to the Observer.
     *
     * <span class="informal">An Observable that never emits anything.</span>
     *
     * <img src="./img/never.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that emits
     * neither values nor errors nor the completion notification. It can be used
     * for testing purposes or for composing with other Observables. Please not
     * that by never emitting a complete notification, this Observable keeps the
     * subscription from being disposed automatically. Subscriptions need to be
     * manually disposed.
     *
     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>
     * function info() {
     *   console.log('Will not be called');
     * }
     * var result = Rx.Observable.never().startWith(7);
     * result.subscribe(x => console.log(x), info, info);
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link of}
     * @see {@link throw}
     *
     * @return {Observable} A "never" Observable: never emits anything.
     * @static true
     * @name never
     * @owner Observable
     */
    NeverObservable.create = function () {
        return new NeverObservable();
    };
    NeverObservable.prototype._subscribe = function (subscriber) {
        noop_1.noop();
    };
    return NeverObservable;
}(Observable_1.Observable));
exports.NeverObservable = NeverObservable;
//# sourceMappingURL=NeverObservable.js.map

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
function dispatch(state) {
    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;
    if (index === length) {
        subscriber.complete();
        return;
    }
    var key = keys[index];
    subscriber.next([key, obj[key]]);
    state.index = index + 1;
    this.schedule(state);
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PairsObservable = (function (_super) {
    __extends(PairsObservable, _super);
    function PairsObservable(obj, scheduler) {
        _super.call(this);
        this.obj = obj;
        this.scheduler = scheduler;
        this.keys = Object.keys(obj);
    }
    /**
     * Convert an object into an observable sequence of [key, value] pairs
     * using an optional IScheduler to enumerate the object.
     *
     * @example <caption>Converts a javascript object to an Observable</caption>
     * var obj = {
     *   foo: 42,
     *   bar: 56,
     *   baz: 78
     * };
     *
     * var source = Rx.Observable.pairs(obj);
     *
     * var subscription = source.subscribe(
     *   function (x) {
     *     console.log('Next: %s', x);
     *   },
     *   function (err) {
     *     console.log('Error: %s', err);
     *   },
     *   function () {
     *     console.log('Completed');
     *   });
     *
     * @param {Object} obj The object to inspect and turn into an
     * Observable sequence.
     * @param {Scheduler} [scheduler] An optional IScheduler to run the
     * enumeration of the input sequence on.
     * @returns {(Observable<Array<string | T>>)} An observable sequence of
     * [key, value] pairs from the object.
     */
    PairsObservable.create = function (obj, scheduler) {
        return new PairsObservable(obj, scheduler);
    };
    PairsObservable.prototype._subscribe = function (subscriber) {
        var _a = this, keys = _a.keys, scheduler = _a.scheduler;
        var length = keys.length;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber
            });
        }
        else {
            for (var idx = 0; idx < length; idx++) {
                var key = keys[idx];
                subscriber.next([key, this.obj[key]]);
            }
            subscriber.complete();
        }
    };
    return PairsObservable;
}(Observable_1.Observable));
exports.PairsObservable = PairsObservable;
//# sourceMappingURL=PairsObservable.js.map

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var RangeObservable = (function (_super) {
    __extends(RangeObservable, _super);
    function RangeObservable(start, count, scheduler) {
        _super.call(this);
        this.start = start;
        this._count = count;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits a sequence of numbers within a specified
     * range.
     *
     * <span class="informal">Emits a sequence of numbers in a range.</span>
     *
     * <img src="./img/range.png" width="100%">
     *
     * `range` operator emits a range of sequential integers, in order, where you
     * select the `start` of the range and its `length`. By default, uses no
     * IScheduler and just delivers the notifications synchronously, but may use
     * an optional IScheduler to regulate those deliveries.
     *
     * @example <caption>Emits the numbers 1 to 10</caption>
     * var numbers = Rx.Observable.range(1, 10);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link interval}
     *
     * @param {number} [start=0] The value of the first integer in the sequence.
     * @param {number} [count=0] The number of sequential integers to generate.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the notifications.
     * @return {Observable} An Observable of numbers that emits a finite range of
     * sequential integers.
     * @static true
     * @name range
     * @owner Observable
     */
    RangeObservable.create = function (start, count, scheduler) {
        if (start === void 0) { start = 0; }
        if (count === void 0) { count = 0; }
        return new RangeObservable(start, count, scheduler);
    };
    RangeObservable.dispatch = function (state) {
        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(start);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        state.start = start + 1;
        this.schedule(state);
    };
    RangeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var start = this.start;
        var count = this._count;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(RangeObservable.dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(start++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
    };
    return RangeObservable;
}(Observable_1.Observable));
exports.RangeObservable = RangeObservable;
//# sourceMappingURL=RangeObservable.js.map

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var asap_1 = __webpack_require__(160);
var isNumeric_1 = __webpack_require__(99);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var SubscribeOnObservable = (function (_super) {
    __extends(SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) { delayTime = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        _super.call(this);
        this.source = source;
        this.delayTime = delayTime;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {
            this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = asap_1.asap;
        }
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) { delay = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(Observable_1.Observable));
exports.SubscribeOnObservable = SubscribeOnObservable;
//# sourceMappingURL=SubscribeOnObservable.js.map

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(99);
var Observable_1 = __webpack_require__(0);
var async_1 = __webpack_require__(14);
var isScheduler_1 = __webpack_require__(26);
var isDate_1 = __webpack_require__(68);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var TimerObservable = (function (_super) {
    __extends(TimerObservable, _super);
    function TimerObservable(dueTime, period, scheduler) {
        if (dueTime === void 0) { dueTime = 0; }
        _super.call(this);
        this.period = -1;
        this.dueTime = 0;
        if (isNumeric_1.isNumeric(period)) {
            this.period = Number(period) < 1 && 1 || Number(period);
        }
        else if (isScheduler_1.isScheduler(period)) {
            scheduler = period;
        }
        if (!isScheduler_1.isScheduler(scheduler)) {
            scheduler = async_1.async;
        }
        this.scheduler = scheduler;
        this.dueTime = isDate_1.isDate(dueTime) ?
            (+dueTime - this.scheduler.now()) :
            dueTime;
    }
    /**
     * Creates an Observable that starts emitting after an `initialDelay` and
     * emits ever increasing numbers after each `period` of time thereafter.
     *
     * <span class="informal">Its like {@link interval}, but you can specify when
     * should the emissions start.</span>
     *
     * <img src="./img/timer.png" width="100%">
     *
     * `timer` returns an Observable that emits an infinite sequence of ascending
     * integers, with a constant interval of time, `period` of your choosing
     * between those emissions. The first emission happens after the specified
     * `initialDelay`. The initial delay may be a {@link Date}. By default, this
     * operator uses the `async` IScheduler to provide a notion of time, but you
     * may pass any IScheduler to it. If `period` is not specified, the output
     * Observable emits only one value, `0`. Otherwise, it emits an infinite
     * sequence.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>
     * var numbers = Rx.Observable.timer(3000, 1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @example <caption>Emits one number after five seconds</caption>
     * var numbers = Rx.Observable.timer(5000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link interval}
     * @see {@link delay}
     *
     * @param {number|Date} initialDelay The initial delay time to wait before
     * emitting the first value of `0`.
     * @param {number} [period] The period of time between emissions of the
     * subsequent numbers.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a `0` after the
     * `initialDelay` and ever increasing numbers after each `period` of time
     * thereafter.
     * @static true
     * @name timer
     * @owner Observable
     */
    TimerObservable.create = function (initialDelay, period, scheduler) {
        if (initialDelay === void 0) { initialDelay = 0; }
        return new TimerObservable(initialDelay, period, scheduler);
    };
    TimerObservable.dispatch = function (state) {
        var index = state.index, period = state.period, subscriber = state.subscriber;
        var action = this;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        else if (period === -1) {
            return subscriber.complete();
        }
        state.index = index + 1;
        action.schedule(state, period);
    };
    TimerObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;
        return scheduler.schedule(TimerObservable.dispatch, dueTime, {
            index: index, period: period, subscriber: subscriber
        });
    };
    return TimerObservable;
}(Observable_1.Observable));
exports.TimerObservable = TimerObservable;
//# sourceMappingURL=TimerObservable.js.map

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(4);
var OuterSubscriber_1 = __webpack_require__(3);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var UsingObservable = (function (_super) {
    __extends(UsingObservable, _super);
    function UsingObservable(resourceFactory, observableFactory) {
        _super.call(this);
        this.resourceFactory = resourceFactory;
        this.observableFactory = observableFactory;
    }
    UsingObservable.create = function (resourceFactory, observableFactory) {
        return new UsingObservable(resourceFactory, observableFactory);
    };
    UsingObservable.prototype._subscribe = function (subscriber) {
        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;
        var resource;
        try {
            resource = resourceFactory();
            return new UsingSubscriber(subscriber, resource, observableFactory);
        }
        catch (err) {
            subscriber.error(err);
        }
    };
    return UsingObservable;
}(Observable_1.Observable));
exports.UsingObservable = UsingObservable;
var UsingSubscriber = (function (_super) {
    __extends(UsingSubscriber, _super);
    function UsingSubscriber(destination, resource, observableFactory) {
        _super.call(this, destination);
        this.resource = resource;
        this.observableFactory = observableFactory;
        destination.add(resource);
        this.tryUse();
    }
    UsingSubscriber.prototype.tryUse = function () {
        try {
            var source = this.observableFactory.call(this, this.resource);
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return UsingSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=UsingObservable.js.map

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BoundCallbackObservable_1 = __webpack_require__(397);
exports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;
//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BoundNodeCallbackObservable_1 = __webpack_require__(398);
exports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isScheduler_1 = __webpack_require__(26);
var isArray_1 = __webpack_require__(19);
var ArrayObservable_1 = __webpack_require__(22);
var combineLatest_1 = __webpack_require__(93);
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from all the Observables passed as
 * arguments. This is done by subscribing to each Observable, in order, and
 * collecting an array of each of the most recent values any time any of the
 * input Observables emits, then either taking that array and passing it as
 * arguments to an optional `project` function and emitting the return value of
 * that, or just emitting the array of recent values directly if there is no
 * `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} observable1 An input Observable to combine with the
 * source Observable.
 * @param {Observable} observable2 An input Observable to combine with the
 * source Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each input Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @static true
 * @name combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    var scheduler = null;
    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concat_1 = __webpack_require__(94);
exports.concat = concat_1.concatStatic;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DeferObservable_1 = __webpack_require__(399);
exports.defer = DeferObservable_1.DeferObservable.create;
//# sourceMappingURL=defer.js.map

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscriber_1 = __webpack_require__(1);
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(7);
var root_1 = __webpack_require__(10);
var ReplaySubject_1 = __webpack_require__(89);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var assign_1 = __webpack_require__(526);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var WebSocketSubject = (function (_super) {
    __extends(WebSocketSubject, _super);
    function WebSocketSubject(urlConfigOrSource, destination) {
        if (urlConfigOrSource instanceof Observable_1.Observable) {
            _super.call(this, destination, urlConfigOrSource);
        }
        else {
            _super.call(this);
            this.WebSocketCtor = root_1.root.WebSocket;
            this._output = new Subject_1.Subject();
            if (typeof urlConfigOrSource === 'string') {
                this.url = urlConfigOrSource;
            }
            else {
                // WARNING: config object could override important members here.
                assign_1.assign(this, urlConfigOrSource);
            }
            if (!this.WebSocketCtor) {
                throw new Error('no WebSocket constructor can be found');
            }
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    }
    WebSocketSubject.prototype.resultSelector = function (e) {
        return JSON.parse(e.data);
    };
    /**
     * Wrapper around the w3c-compatible WebSocket object provided by the browser.
     *
     * @example <caption>Wraps browser WebSocket</caption>
     *
     * let subject = Observable.webSocket('ws://localhost:8081');
     * subject.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     * subject.next(JSON.stringify({ op: 'hello' }));
     *
     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>
     *
     * import { w3cwebsocket } from 'websocket';
     *
     * let socket = new WebSocketSubject({
     *   url: 'ws://localhost:8081',
     *   WebSocketCtor: w3cwebsocket
     * });
     *
     * let subject = Observable.webSocket('ws://localhost:8081');
     * subject.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     * subject.next(JSON.stringify({ op: 'hello' }));
     *
     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object
     * @return {WebSocketSubject}
     * @static true
     * @name webSocket
     * @owner Observable
     */
    WebSocketSubject.create = function (urlConfigOrSource) {
        return new WebSocketSubject(urlConfigOrSource);
    };
    WebSocketSubject.prototype.lift = function (operator) {
        var sock = new WebSocketSubject(this, this.destination);
        sock.operator = operator;
        return sock;
    };
    WebSocketSubject.prototype._resetState = function () {
        this.socket = null;
        if (!this.source) {
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
        this._output = new Subject_1.Subject();
    };
    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures
    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {
        var self = this;
        return new Observable_1.Observable(function (observer) {
            var result = tryCatch_1.tryCatch(subMsg)();
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                self.next(result);
            }
            var subscription = self.subscribe(function (x) {
                var result = tryCatch_1.tryCatch(messageFilter)(x);
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else if (result) {
                    observer.next(x);
                }
            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });
            return function () {
                var result = tryCatch_1.tryCatch(unsubMsg)();
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else {
                    self.next(result);
                }
                subscription.unsubscribe();
            };
        });
    };
    WebSocketSubject.prototype._connectSocket = function () {
        var _this = this;
        var WebSocketCtor = this.WebSocketCtor;
        var observer = this._output;
        var socket = null;
        try {
            socket = this.protocol ?
                new WebSocketCtor(this.url, this.protocol) :
                new WebSocketCtor(this.url);
            this.socket = socket;
        }
        catch (e) {
            observer.error(e);
            return;
        }
        var subscription = new Subscription_1.Subscription(function () {
            _this.socket = null;
            if (socket && socket.readyState === 1) {
                socket.close();
            }
        });
        socket.onopen = function (e) {
            var openObserver = _this.openObserver;
            if (openObserver) {
                openObserver.next(e);
            }
            var queue = _this.destination;
            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                if (e && e.code) {
                    socket.close(e.code, e.reason);
                }
                else {
                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +
                        'and an optional reason: { code: number, reason: string }'));
                }
                _this._resetState();
            }, function () {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                socket.close();
                _this._resetState();
            });
            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {
                subscription.add(queue.subscribe(_this.destination));
            }
        };
        socket.onerror = function (e) {
            _this._resetState();
            observer.error(e);
        };
        socket.onclose = function (e) {
            _this._resetState();
            var closeObserver = _this.closeObserver;
            if (closeObserver) {
                closeObserver.next(e);
            }
            if (e.wasClean) {
                observer.complete();
            }
            else {
                observer.error(e);
            }
        };
        socket.onmessage = function (e) {
            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                observer.next(result);
            }
        };
    };
    WebSocketSubject.prototype._subscribe = function (subscriber) {
        var _this = this;
        var source = this.source;
        if (source) {
            return source.subscribe(subscriber);
        }
        if (!this.socket) {
            this._connectSocket();
        }
        var subscription = new Subscription_1.Subscription();
        subscription.add(this._output.subscribe(subscriber));
        subscription.add(function () {
            var socket = _this.socket;
            if (_this._output.observers.length === 0) {
                if (socket && socket.readyState === 1) {
                    socket.close();
                }
                _this._resetState();
            }
        });
        return subscription;
    };
    WebSocketSubject.prototype.unsubscribe = function () {
        var _a = this, source = _a.source, socket = _a.socket;
        if (socket && socket.readyState === 1) {
            socket.close();
            this._resetState();
        }
        _super.prototype.unsubscribe.call(this);
        if (!source) {
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    };
    return WebSocketSubject;
}(Subject_1.AnonymousSubject));
exports.WebSocketSubject = WebSocketSubject;
//# sourceMappingURL=WebSocketSubject.js.map

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AjaxObservable_1 = __webpack_require__(139);
exports.ajax = AjaxObservable_1.AjaxObservable.create;
//# sourceMappingURL=ajax.js.map

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var WebSocketSubject_1 = __webpack_require__(419);
exports.webSocket = WebSocketSubject_1.WebSocketSubject.create;
//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var EmptyObservable_1 = __webpack_require__(25);
exports.empty = EmptyObservable_1.EmptyObservable.create;
//# sourceMappingURL=empty.js.map

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ForkJoinObservable_1 = __webpack_require__(401);
exports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;
//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromEventObservable_1 = __webpack_require__(402);
exports.fromEvent = FromEventObservable_1.FromEventObservable.create;
//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromEventPatternObservable_1 = __webpack_require__(403);
exports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;
//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IfObservable_1 = __webpack_require__(405);
exports._if = IfObservable_1.IfObservable.create;
//# sourceMappingURL=if.js.map

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IntervalObservable_1 = __webpack_require__(406);
exports.interval = IntervalObservable_1.IntervalObservable.create;
//# sourceMappingURL=interval.js.map

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var NeverObservable_1 = __webpack_require__(408);
exports.never = NeverObservable_1.NeverObservable.create;
//# sourceMappingURL=never.js.map

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var PairsObservable_1 = __webpack_require__(409);
exports.pairs = PairsObservable_1.PairsObservable.create;
//# sourceMappingURL=pairs.js.map

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var RangeObservable_1 = __webpack_require__(410);
exports.range = RangeObservable_1.RangeObservable.create;
//# sourceMappingURL=range.js.map

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ErrorObservable_1 = __webpack_require__(400);
exports._throw = ErrorObservable_1.ErrorObservable.create;
//# sourceMappingURL=throw.js.map

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TimerObservable_1 = __webpack_require__(412);
exports.timer = TimerObservable_1.TimerObservable.create;
//# sourceMappingURL=timer.js.map

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var UsingObservable_1 = __webpack_require__(413);
exports.using = UsingObservable_1.UsingObservable.create;
//# sourceMappingURL=using.js.map

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(98);
exports.zip = zip_1.zipStatic;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): Observable|Promise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */
function audit(durationSelector) {
    return this.lift(new AuditOperator(durationSelector));
}
exports.audit = audit;
var AuditOperator = (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AuditSubscriber = (function (_super) {
    __extends(AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);
            if (duration === errorObject_1.errorObject) {
                this.destination.error(errorObject_1.errorObject.e);
            }
            else {
                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=audit.js.map

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(14);
var Subscriber_1 = __webpack_require__(1);
/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */
function auditTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new AuditTimeOperator(duration, scheduler));
}
exports.auditTime = auditTime;
var AuditTimeOperator = (function () {
    function AuditTimeOperator(duration, scheduler) {
        this.duration = duration;
        this.scheduler = scheduler;
    }
    AuditTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));
    };
    return AuditTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AuditTimeSubscriber = (function (_super) {
    __extends(AuditTimeSubscriber, _super);
    function AuditTimeSubscriber(destination, duration, scheduler) {
        _super.call(this, destination);
        this.duration = duration;
        this.scheduler = scheduler;
        this.hasValue = false;
    }
    AuditTimeSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));
        }
    };
    AuditTimeSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    return AuditTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(subscriber) {
    subscriber.clearThrottle();
}
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */
function buffer(closingNotifier) {
    return this.lift(new BufferOperator(closingNotifier));
}
exports.buffer = buffer;
var BufferOperator = (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferSubscriber = (function (_super) {
    __extends(BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        _super.call(this, destination);
        this.buffer = [];
        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));
}
exports.bufferCount = bufferCount;
var BufferCountOperator = (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferCountSubscriber = (function (_super) {
    __extends(BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize, startBufferEvery) {
        _super.call(this, destination);
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        this.buffers = [];
        this.count = 0;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var count = this.count++;
        var _a = this, destination = _a.destination, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers;
        var startOn = (startBufferEvery == null) ? bufferSize : startBufferEvery;
        if (count % startOn === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                destination.next(buffer);
            }
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var buffers = this.buffers;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(14);
var Subscriber_1 = __webpack_require__(1);
var isScheduler_1 = __webpack_require__(26);
/* tslint:disable:max-line-length */
/**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */
function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = async_1.async;
    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
}
exports.bufferTime = bufferTime;
var BufferTimeOperator = (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferTimeSubscriber = (function (_super) {
    __extends(BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        _super.call(this, destination);
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
        this.contexts = [];
        var context = this.openContext();
        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context = contexts[i];
            var buffer = context.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context = contexts.shift();
            destination.next(context.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
var subscribeToResult_1 = __webpack_require__(4);
var OuterSubscriber_1 = __webpack_require__(3);
/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */
function bufferToggle(openings, closingSelector) {
    return this.lift(new BufferToggleOperator(openings, closingSelector));
}
exports.bufferToggle = bufferToggle;
var BufferToggleOperator = (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferToggleSubscriber = (function (_super) {
    __extends(BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(subscribeToResult_1.subscribeToResult(this, openings));
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            this.destination.next(context.buffer);
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new Subscription_1.Subscription();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */
function bufferWhen(closingSelector) {
    return this.lift(new BufferWhenOperator(closingSelector));
}
exports.bufferWhen = bufferWhen;
var BufferWhenOperator = (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferWhenSubscriber = (function (_super) {
    __extends(BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.closingSelector = closingSelector;
        this.subscribing = false;
        this.openBuffer();
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = null;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            closingSubscription = new Subscription_1.Subscription();
            this.closingSubscription = closingSubscription;
            this.add(closingSubscription);
            this.subscribing = true;
            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
            this.subscribing = false;
        }
    };
    return BufferWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var combineLatest_1 = __webpack_require__(93);
/**
 * Converts a higher-order Observable into a first-order Observable by waiting
 * for the outer Observable to complete, then applying {@link combineLatest}.
 *
 * <span class="informal">Flattens an Observable-of-Observables by applying
 * {@link combineLatest} when the Observable-of-Observables completes.</span>
 *
 * <img src="./img/combineAll.png" width="100%">
 *
 * Takes an Observable of Observables, and collects all Observables from it.
 * Once the outer Observable completes, it subscribes to all collected
 * Observables and combines their values using the {@link combineLatest}
 * strategy, such that:
 * - Every time an inner Observable emits, the output Observable emits.
 * - When the returned observable emits, it emits all of the latest values by:
 *   - If a `project` function is provided, it is called with each recent value
 *     from each inner Observable in whatever order they arrived, and the result
 *     of the `project` function is what is emitted by the output Observable.
 *   - If there is no `project` function, an array of all of the most recent
 *     values is emitted by the output Observable.
 *
 * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev =>
 *   Rx.Observable.interval(Math.random()*2000).take(3)
 * ).take(2);
 * var result = higherOrder.combineAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 * @see {@link mergeAll}
 *
 * @param {function} [project] An optional function to map the most recent
 * values from each inner Observable into a new result. Takes each of the most
 * recent values from each collected inner Observable as arguments, in order.
 * @return {Observable} An Observable of projected results or arrays of recent
 * values.
 * @method combineAll
 * @owner Observable
 */
function combineAll(project) {
    return this.lift(new combineLatest_1.CombineLatestOperator(project));
}
exports.combineAll = combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMapTo_1 = __webpack_require__(152);
/* tslint:disable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {Observable} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */
function concatMapTo(innerObservable, resultSelector) {
    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));
}
exports.concatMapTo = concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting a value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 4
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */
function count(predicate) {
    return this.lift(new CountOperator(predicate, this));
}
exports.count = count;
var CountOperator = (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CountSubscriber = (function (_super) {
    __extends(CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.count = 0;
        this.index = 0;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=count.js.map

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): Observable|Promise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */
function debounce(durationSelector) {
    return this.lift(new DebounceOperator(durationSelector));
}
exports.debounce = debounce;
var DebounceOperator = (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceSubscriber = (function (_super) {
    __extends(DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
        this.durationSubscription = null;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = subscribeToResult_1.subscribeToResult(this, duration);
        if (!subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = null;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = null;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(14);
/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link IScheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */
function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new DebounceTimeOperator(dueTime, scheduler));
}
exports.debounceTime = debounceTime;
var DebounceTimeOperator = (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceTimeSubscriber = (function (_super) {
    __extends(DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        _super.call(this, destination);
        this.dueTime = dueTime;
        this.scheduler = scheduler;
        this.debouncedSubscription = null;
        this.lastValue = null;
        this.hasValue = false;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            this.destination.next(this.lastValue);
            this.lastValue = null;
            this.hasValue = false;
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:disable:max-line-length */
/**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */
function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) { defaultValue = null; }
    return this.lift(new DefaultIfEmptyOperator(defaultValue));
}
exports.defaultIfEmpty = defaultIfEmpty;
var DefaultIfEmptyOperator = (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DefaultIfEmptySubscriber = (function (_super) {
    __extends(DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        _super.call(this, destination);
        this.defaultValue = defaultValue;
        this.isEmpty = true;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(14);
var isDate_1 = __webpack_require__(68);
var Subscriber_1 = __webpack_require__(1);
var Notification_1 = __webpack_require__(42);
/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */
function delay(delay, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteDelay = isDate_1.isDate(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return this.lift(new DelayOperator(delayFor, scheduler));
}
exports.delay = delay;
var DelayOperator = (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelaySubscriber = (function (_super) {
    __extends(DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        _super.call(this, destination);
        this.delay = delay;
        this.scheduler = scheduler;
        this.queue = [];
        this.active = false;
        this.errored = false;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(Notification_1.Notification.createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(Notification_1.Notification.createComplete());
    };
    return DelaySubscriber;
}(Subscriber_1.Subscriber));
var DelayMessage = (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Observable_1 = __webpack_require__(0);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */
function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return new SubscriptionDelayObservable(this, subscriptionDelay)
            .lift(new DelayWhenOperator(delayDurationSelector));
    }
    return this.lift(new DelayWhenOperator(delayDurationSelector));
}
exports.delayWhen = delayWhen;
var DelayWhenOperator = (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelayWhenSubscriber = (function (_super) {
    __extends(DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        _super.call(this, destination);
        this.delayDurationSelector = delayDurationSelector;
        this.completed = false;
        this.delayNotifierSubscriptions = [];
        this.values = [];
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        try {
            var delayNotifier = this.delayDurationSelector(value);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        var value = null;
        if (subscriptionIdx !== -1) {
            value = this.values[subscriptionIdx];
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
            this.values.splice(subscriptionIdx, 1);
        }
        return value;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);
        this.add(notifierSubscription);
        this.delayNotifierSubscriptions.push(notifierSubscription);
        this.values.push(value);
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelayObservable = (function (_super) {
    __extends(SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        _super.call(this);
        this.source = source;
        this.subscriptionDelay = subscriptionDelay;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(Observable_1.Observable));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelaySubscriber = (function (_super) {
    __extends(SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        _super.call(this);
        this.parent = parent;
        this.source = source;
        this.sourceSubscribed = false;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * // Results in:
 * // A
 * // B
 * // TypeError: x.toUpperCase is not a function
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */
function dematerialize() {
    return this.lift(new DeMaterializeOperator());
}
exports.dematerialize = dematerialize;
var DeMaterializeOperator = (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DeMaterializeSubscriber = (function (_super) {
    __extends(DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
var Set_1 = __webpack_require__(525);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 *
 * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will
 * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the
 * source observable directly with an equality check against previous values.
 *
 * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.
 *
 * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the
 * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`
 * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so
 * that the internal `Set` can be "flushed", basically clearing it of values.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)
 *   .distinct()
 *   .subscribe(x => console.log(x)); // 1, 2, 3, 4
 *
 * @example <caption>An example using a keySelector function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     .distinct((p: Person) => p.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 *
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [keySelector] optional function to select which value you want to check as distinct.
 * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} an Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */
function distinct(keySelector, flushes) {
    return this.lift(new DistinctOperator(keySelector, flushes));
}
exports.distinct = distinct;
var DistinctOperator = (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctSubscriber = (function (_super) {
    __extends(DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.values = new Set_1.Set();
        if (flushes) {
            this.add(subscribeToResult_1.subscribeToResult(this, flushes));
        }
    }
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.DistinctSubscriber = DistinctSubscriber;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinctUntilChanged_1 = __webpack_require__(146);
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>An example comparing the name of persons</caption>
 *
 *  interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'},
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilKeyChanged('name')
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @example <caption>An example comparing the first letters of the name</caption>
 *
 * interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo1'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo2'},
 *     { age: 6, name: 'Foo3'})
 *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo1' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo2' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 *
 * @param {string} key string key for object property lookup on each item.
 * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */
function distinctUntilKeyChanged(key, compare) {
    return distinctUntilChanged_1.distinctUntilChanged.call(this, function (x, y) {
        if (compare) {
            return compare(x[key], y[key]);
        }
        return x[key] === y[key];
    });
}
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:disable:max-line-length */
/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @method do
 * @name do
 * @owner Observable
 */
function _do(nextOrObserver, error, complete) {
    return this.lift(new DoOperator(nextOrObserver, error, complete));
}
exports._do = _do;
var DoOperator = (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DoSubscriber = (function (_super) {
    __extends(DoSubscriber, _super);
    function DoSubscriber(destination, nextOrObserver, error, complete) {
        _super.call(this, destination);
        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);
        safeSubscriber.syncErrorThrowable = true;
        this.add(safeSubscriber);
        this.safeSubscriber = safeSubscriber;
    }
    DoSubscriber.prototype._next = function (value) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.next(value);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.next(value);
        }
    };
    DoSubscriber.prototype._error = function (err) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.error(err);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.error(err);
        }
    };
    DoSubscriber.prototype._complete = function () {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.complete();
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.complete();
        }
    };
    return DoSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=do.js.map

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var ArgumentOutOfRangeError_1 = __webpack_require__(66);
/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // click 1 = nothing
 * // click 2 = nothing
 * // click 3 = MouseEvent object logged to console
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */
function elementAt(index, defaultValue) {
    return this.lift(new ElementAtOperator(index, defaultValue));
}
exports.elementAt = elementAt;
var ElementAtOperator = (function () {
    function ElementAtOperator(index, defaultValue) {
        this.index = index;
        this.defaultValue = defaultValue;
        if (index < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    ElementAtOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));
    };
    return ElementAtOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ElementAtSubscriber = (function (_super) {
    __extends(ElementAtSubscriber, _super);
    function ElementAtSubscriber(destination, index, defaultValue) {
        _super.call(this, destination);
        this.index = index;
        this.defaultValue = defaultValue;
    }
    ElementAtSubscriber.prototype._next = function (x) {
        if (this.index-- === 0) {
            this.destination.next(x);
            this.destination.complete();
        }
    };
    ElementAtSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index >= 0) {
            if (typeof this.defaultValue !== 'undefined') {
                destination.next(this.defaultValue);
            }
            else {
                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);
            }
        }
        destination.complete();
    };
    return ElementAtSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} Returns an Observable that takes a source of Observables
 * and propagates the first observable exclusively until it completes before
 * subscribing to the next.
 * @method exhaust
 * @owner Observable
 */
function exhaust() {
    return this.lift(new SwitchFirstOperator());
}
exports.exhaust = exhaust;
var SwitchFirstOperator = (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstSubscriber = (function (_super) {
    __extends(SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        _super.call(this, destination);
        this.hasCompleted = false;
        this.hasSubscription = false;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, value));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */
function exhaustMap(project, resultSelector) {
    return this.lift(new SwitchFirstMapOperator(project, resultSelector));
}
exports.exhaustMap = exhaustMap;
var SwitchFirstMapOperator = (function () {
    function SwitchFirstMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchFirstMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstMapSubscriber = (function (_super) {
    __extends(SwitchFirstMapSubscriber, _super);
    function SwitchFirstMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.hasSubscription = false;
        this.hasCompleted = false;
        this.index = 0;
    }
    SwitchFirstMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {
        var index = this.index++;
        var destination = this.destination;
        try {
            var result = this.project(value, index);
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        try {
            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
            destination.next(result);
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */
function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (scheduler === void 0) { scheduler = undefined; }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return this.lift(new ExpandOperator(project, concurrent, scheduler));
}
exports.expand = expand;
var ExpandOperator = (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());
exports.ExpandOperator = ExpandOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ExpandSubscriber = (function (_super) {
    __extends(ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        _super.call(this, destination);
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
        this.index = 0;
        this.active = 0;
        this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            this.buffer = [];
        }
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            var result = tryCatch_1.tryCatch(this.project)(value, index);
            if (result === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else if (!this.scheduler) {
                this.subscribeToProjection(result, value, index);
            }
            else {
                var state = { subscriber: this, result: result, value: value, index: index };
                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.ExpandSubscriber = ExpandSubscriber;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(7);
/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback function to be called when source terminates.
 * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */
function _finally(callback) {
    return this.lift(new FinallyOperator(callback));
}
exports._finally = _finally;
var FinallyOperator = (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FinallySubscriber = (function (_super) {
    __extends(FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        _super.call(this, destination);
        this.add(new Subscription_1.Subscription(callback));
    }
    return FinallySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=finally.js.map

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var find_1 = __webpack_require__(148);
/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */
function findIndex(predicate, thisArg) {
    return this.lift(new find_1.FindValueOperator(predicate, this, true, thisArg));
}
exports.findIndex = findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(7);
var Observable_1 = __webpack_require__(0);
var Subject_1 = __webpack_require__(6);
var Map_1 = __webpack_require__(523);
var FastMap_1 = __webpack_require__(521);
/* tslint:disable:max-line-length */
/**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @param {function(value: T): K} keySelector a function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] a function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * a function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} an Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */
function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return this.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
}
exports.groupBy = groupBy;
var GroupByOperator = (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupBySubscriber = (function (_super) {
    __extends(GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
        this.groups = null;
        this.attemptedToUnsubscribe = false;
        this.count = 0;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(Subscriber_1.Subscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupDurationSubscriber = (function (_super) {
    __extends(GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        _super.call(this);
        this.key = key;
        this.group = group;
        this.parent = parent;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this._complete();
    };
    GroupDurationSubscriber.prototype._error = function (err) {
        var group = this.group;
        if (!group.closed) {
            group.error(err);
        }
        this.parent.removeGroup(this.key);
    };
    GroupDurationSubscriber.prototype._complete = function () {
        var group = this.group;
        if (!group.closed) {
            group.complete();
        }
        this.parent.removeGroup(this.key);
    };
    return GroupDurationSubscriber;
}(Subscriber_1.Subscriber));
/**
 * An Observable representing values belonging to the same group represented by
 * a common key. The values emitted by a GroupedObservable come from the source
 * Observable. The common key is available as the field `key` on a
 * GroupedObservable instance.
 *
 * @class GroupedObservable<K, T>
 */
var GroupedObservable = (function (_super) {
    __extends(GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        _super.call(this);
        this.key = key;
        this.groupSubject = groupSubject;
        this.refCountSubscription = refCountSubscription;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new Subscription_1.Subscription();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(Observable_1.Observable));
exports.GroupedObservable = GroupedObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerRefCountSubscription = (function (_super) {
    __extends(InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        _super.call(this);
        this.parent = parent;
        parent.count++;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(Subscription_1.Subscription));
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var noop_1 = __webpack_require__(169);
/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} an empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */
function ignoreElements() {
    return this.lift(new IgnoreElementsOperator());
}
exports.ignoreElements = ignoreElements;
;
var IgnoreElementsOperator = (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IgnoreElementsSubscriber = (function (_super) {
    __extends(IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        _super.apply(this, arguments);
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
        noop_1.noop();
    };
    return IgnoreElementsSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.
 *
 * <img src="./img/isEmpty.png" width="100%">
 *
 * @return {Observable} an Observable that emits a Boolean.
 * @method isEmpty
 * @owner Observable
 */
function isEmpty() {
    return this.lift(new IsEmptyOperator());
}
exports.isEmpty = isEmpty;
var IsEmptyOperator = (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IsEmptySubscriber = (function (_super) {
    __extends(IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        _super.call(this, destination);
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @param func
 * @return {Observable<R>}
 * @method let
 * @owner Observable
 */
function letProto(func) {
    return func(this);
}
exports.letProto = letProto;
//# sourceMappingURL=let.js.map

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */
function mapTo(value) {
    return this.lift(new MapToOperator(value));
}
exports.mapTo = mapTo;
var MapToOperator = (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapToSubscriber = (function (_super) {
    __extends(MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        _super.call(this, destination);
        this.value = value;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Notification_1 = __webpack_require__(42);
/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - Notification {kind: "N", value: "A", error: undefined, hasValue: true}
 * // - Notification {kind: "N", value: "B", error: undefined, hasValue: true}
 * // - Notification {kind: "E", value: undefined, error: TypeError:
 * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x
 * //   [as project] (http://1…, hasValue: false}
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */
function materialize() {
    return this.lift(new MaterializeOperator());
}
exports.materialize = materialize;
var MaterializeOperator = (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MaterializeSubscriber = (function (_super) {
    __extends(MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(Notification_1.Notification.createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(64);
/**
 * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the largest value.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @example <caption>Get the maximal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .max()
 *   .subscribe(x => console.log(x)); // -> 8
 *
 * @example <caption>Use a comparer function to get the maximal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'
 * }
 *
 * @see {@link min}
 *
 * @param {Function} optional comparer function that it will use instead of its default to compare the value of two
 * items.
 * @return {Observable} an Observable that emits item with the largest value.
 * @method max
 * @owner Observable
 */
function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return this.lift(new reduce_1.ReduceOperator(max));
}
exports.max = max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var subscribeToResult_1 = __webpack_require__(4);
var OuterSubscriber_1 = __webpack_require__(3);
/**
 * Applies an accumulator function over the source Observable where the
 * accumulator function itself returns an Observable, then each intermediate
 * Observable returned is merged into the output Observable.
 *
 * <span class="informal">It's like {@link scan}, but the Observables returned
 * by the accumulator are merged into the outer Observable.</span>
 *
 * @example <caption>Count the number of click events</caption>
 * const click$ = Rx.Observable.fromEvent(document, 'click');
 * const one$ = click$.mapTo(1);
 * const seed = 0;
 * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);
 * count$.subscribe(x => console.log(x));
 *
 * // Results:
 * 1
 * 2
 * 3
 * 4
 * // ...and so on for each click
 *
 * @param {function(acc: R, value: T): Observable<R>} accumulator
 * The accumulator function called on each source value.
 * @param seed The initial accumulation value.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of
 * input Observables being subscribed to concurrently.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method mergeScan
 * @owner Observable
 */
function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return this.lift(new MergeScanOperator(accumulator, seed, concurrent));
}
exports.mergeScan = mergeScan;
var MergeScanOperator = (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());
exports.MergeScanOperator = MergeScanOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeScanSubscriber = (function (_super) {
    __extends(MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this.acc = acc;
        this.concurrent = concurrent;
        this.hasValue = false;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);
            var destination = this.destination;
            if (ish === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else {
                this.active++;
                this._innerSub(ish, value, index);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeScanSubscriber = MergeScanSubscriber;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(64);
/**
 * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the smallest value.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @example <caption>Get the minimal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .min()
 *   .subscribe(x => console.log(x)); // -> 2
 *
 * @example <caption>Use a comparer function to get the minimal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'
 * }
 *
 * @see {@link max}
 *
 * @param {Function} optional comparer function that it will use instead of its default to compare the value of two items.
 * @return {Observable<R>} an Observable that emits item with the smallest value.
 * @method min
 * @owner Observable
 */
function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return this.lift(new reduce_1.ReduceOperator(min));
}
exports.min = min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */
function pairwise() {
    return this.lift(new PairwiseOperator());
}
exports.pairwise = pairwise;
var PairwiseOperator = (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var PairwiseSubscriber = (function (_super) {
    __extends(PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        _super.call(this, destination);
        this.hasPrev = false;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        if (this.hasPrev) {
            this.destination.next([this.prev, value]);
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
    };
    return PairwiseSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var not_1 = __webpack_require__(527);
var filter_1 = __webpack_require__(95);
/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */
function partition(predicate, thisArg) {
    return [
        filter_1.filter.call(this, predicate, thisArg),
        filter_1.filter.call(this, not_1.not(predicate, thisArg))
    ];
}
exports.partition = partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var map_1 = __webpack_require__(63);
/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} Returns a new Observable of property values from the
 * source values.
 * @method pluck
 * @owner Observable
 */
function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i - 0] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return map_1.map.call(this, plucker(properties, length));
}
exports.pluck = pluck;
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Subject_1 = __webpack_require__(6);
var multicast_1 = __webpack_require__(33);
/* tslint:disable:max-line-length */
/**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,
 * without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */
function publish(selector) {
    return selector ? multicast_1.multicast.call(this, function () { return new Subject_1.Subject(); }, selector) :
        multicast_1.multicast.call(this, new Subject_1.Subject());
}
exports.publish = publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BehaviorSubject_1 = __webpack_require__(41);
var multicast_1 = __webpack_require__(33);
/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */
function publishBehavior(value) {
    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));
}
exports.publishBehavior = publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsyncSubject_1 = __webpack_require__(62);
var multicast_1 = __webpack_require__(33);
/**
 * @return {ConnectableObservable<T>}
 * @method publishLast
 * @owner Observable
 */
function publishLast() {
    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());
}
exports.publishLast = publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ReplaySubject_1 = __webpack_require__(89);
var multicast_1 = __webpack_require__(33);
/**
 * @param bufferSize
 * @param windowTime
 * @param scheduler
 * @return {ConnectableObservable<T>}
 * @method publishReplay
 * @owner Observable
 */
function publishReplay(bufferSize, windowTime, scheduler) {
    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));
}
exports.publishReplay = publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyObservable_1 = __webpack_require__(25);
/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,
 * on a particular IScheduler.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {Scheduler} [scheduler] the IScheduler to emit the items on.
 * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */
function repeat(count) {
    if (count === void 0) { count = -1; }
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else if (count < 0) {
        return this.lift(new RepeatOperator(-1, this));
    }
    else {
        return this.lift(new RepeatOperator(count - 1, this));
    }
}
exports.repeat = repeat;
var RepeatOperator = (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatSubscriber = (function (_super) {
    __extends(RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            this.unsubscribe();
            this.isStopped = false;
            this.closed = false;
            source.subscribe(this);
        }
    };
    return RepeatSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Returns an Observable that emits the same values as the source observable with the exception of a `complete`.
 * A `complete` will cause the emission of the Throwable that cause the complete to the Observable returned from
 * notificationHandler. If that Observable calls onComplete or `complete` then retry will call `complete` or `error`
 * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular
 * IScheduler.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,
 * aborting the retry.
 * @param {scheduler} the IScheduler on which to subscribe to the source Observable.
 * @return {Observable} the source Observable modified with retry logic.
 * @method repeatWhen
 * @owner Observable
 */
function repeatWhen(notifier) {
    return this.lift(new RepeatWhenOperator(notifier));
}
exports.repeatWhen = repeatWhen;
var RepeatWhenOperator = (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatWhenSubscriber = (function (_super) {
    __extends(RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
        this.sourceIsBeingSubscribedTo = true;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.source.subscribe(this);
        this.sourceIsBeingSubscribedTo = true;
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            else if (this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this.temporarilyUnsubscribe();
            this.notifications.next();
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new Subject_1.Subject();
        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);
        if (retries === errorObject_1.errorObject) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
    };
    RepeatWhenSubscriber.prototype.temporarilyUnsubscribe = function () {
        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.notifications = null;
        this.retries = null;
        this.retriesSubscription = null;
        this.unsubscribe();
        this.isStopped = false;
        this.closed = false;
        this.notifications = notifications;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
    };
    return RepeatWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that mirrors the source Observable, resubscribing to it if it calls `error` and the
 * predicate returns true for that specific exception and retry count.
 * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of
 * count resubscriptions (given as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} number of retry attempts before failing.
 * @return {Observable} the source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */
function retry(count) {
    if (count === void 0) { count = -1; }
    return this.lift(new RetryOperator(count, this));
}
exports.retry = retry;
var RetryOperator = (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetrySubscriber = (function (_super) {
    __extends(RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            this.unsubscribe();
            this.isStopped = false;
            this.closed = false;
            source.subscribe(this);
        }
    };
    return RetrySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=retry.js.map

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Returns an Observable that emits the same values as the source observable with the exception of an `error`.
 * An `error` will cause the emission of the Throwable that cause the error to the Observable returned from
 * notificationHandler. If that Observable calls onComplete or `error` then retry will call `complete` or `error`
 * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular
 * IScheduler.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,
 * aborting the retry.
 * @param {scheduler} the IScheduler on which to subscribe to the source Observable.
 * @return {Observable} the source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */
function retryWhen(notifier) {
    return this.lift(new RetryWhenOperator(notifier, this));
}
exports.retryWhen = retryWhen;
var RetryWhenOperator = (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetryWhenSubscriber = (function (_super) {
    __extends(RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new Subject_1.Subject();
                retries = tryCatch_1.tryCatch(this.notifier)(errors);
                if (retries === errorObject_1.errorObject) {
                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);
                }
                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
            }
            else {
                this.errors = null;
                this.retriesSubscription = null;
            }
            this.unsubscribe();
            this.closed = false;
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.errors = null;
        this.retries = null;
        this.retriesSubscription = null;
        this.unsubscribe();
        this.isStopped = false;
        this.closed = false;
        this.errors = errors;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */
function sample(notifier) {
    return this.lift(new SampleOperator(notifier));
}
exports.sample = sample;
var SampleOperator = (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));
        return subscription;
    };
    return SampleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleSubscriber = (function (_super) {
    __extends(SampleSubscriber, _super);
    function SampleSubscriber() {
        _super.apply(this, arguments);
        this.hasValue = false;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=sample.js.map

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(14);
/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */
function sampleTime(period, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new SampleTimeOperator(period, scheduler));
}
exports.sampleTime = sampleTime;
var SampleTimeOperator = (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleTimeSubscriber = (function (_super) {
    __extends(SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        _super.call(this, destination);
        this.period = period;
        this.scheduler = scheduler;
        this.hasValue = false;
        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:disable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */
function scan(accumulator, seed) {
    var hasSeed = false;
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return this.lift(new ScanOperator(accumulator, seed, hasSeed));
}
exports.scan = scan;
var ScanOperator = (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) { hasSeed = false; }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ScanSubscriber = (function (_super) {
    __extends(ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this._seed = _seed;
        this.hasSeed = hasSeed;
        this.index = 0;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=scan.js.map

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Rx.Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo the observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence
 * @method sequenceEqual
 * @owner Observable
 */
function sequenceEqual(compareTo, comparor) {
    return this.lift(new SequenceEqualOperator(compareTo, comparor));
}
exports.sequenceEqual = sequenceEqual;
var SequenceEqualOperator = (function () {
    function SequenceEqualOperator(compareTo, comparor) {
        this.compareTo = compareTo;
        this.comparor = comparor;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));
    };
    return SequenceEqualOperator;
}());
exports.SequenceEqualOperator = SequenceEqualOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SequenceEqualSubscriber = (function (_super) {
    __extends(SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparor) {
        _super.call(this, destination);
        this.compareTo = compareTo;
        this.comparor = comparor;
        this._a = [];
        this._b = [];
        this._oneComplete = false;
        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            if (comparor) {
                areEqual = tryCatch_1.tryCatch(comparor)(a, b);
                if (areEqual === errorObject_1.errorObject) {
                    this.destination.error(errorObject_1.errorObject.e);
                }
            }
            else {
                areEqual = a === b;
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    return SequenceEqualSubscriber;
}(Subscriber_1.Subscriber));
exports.SequenceEqualSubscriber = SequenceEqualSubscriber;
var SequenceEqualCompareToSubscriber = (function (_super) {
    __extends(SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        _super.call(this, destination);
        this.parent = parent;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent._complete();
    };
    return SequenceEqualCompareToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyError_1 = __webpack_require__(49);
/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} a predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} an Observable that emits the single item emitted by the source Observable that matches
 * the predicate.
 .
 * @method single
 * @owner Observable
 */
function single(predicate) {
    return this.lift(new SingleOperator(predicate, this));
}
exports.single = single;
var SingleOperator = (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SingleSubscriber = (function (_super) {
    __extends(SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.seenValue = false;
        this.index = 0;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var predicate = this.predicate;
        this.index++;
        if (predicate) {
            this.tryNext(value);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value) {
        try {
            var result = this.predicate(value, this.index, this.source);
            if (result) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return SingleSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=single.js.map

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that skips `n` items emitted by an Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} the `n` of times, items emitted by source Observable should be skipped.
 * @return {Observable} an Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */
function skip(total) {
    return this.lift(new SkipOperator(total));
}
exports.skip = skip;
var SkipOperator = (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipSubscriber = (function (_super) {
    __extends(SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skip.js.map

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} the second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} an Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */
function skipUntil(notifier) {
    return this.lift(new SkipUntilOperator(notifier));
}
exports.skipUntil = skipUntil;
var SkipUntilOperator = (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));
    };
    return SkipUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipUntilSubscriber = (function (_super) {
    __extends(SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.hasValue = false;
        this.isInnerStopped = false;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype._complete = function () {
        if (this.isInnerStopped) {
            _super.prototype._complete.call(this);
        }
        else {
            this.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.hasValue = true;
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
        this.isInnerStopped = true;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    return SkipUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - a function to test each item emitted from the source Observable.
 * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */
function skipWhile(predicate) {
    return this.lift(new SkipWhileOperator(predicate));
}
exports.skipWhile = skipWhile;
var SkipWhileOperator = (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipWhileSubscriber = (function (_super) {
    __extends(SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.skipping = true;
        this.index = 0;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayObservable_1 = __webpack_require__(22);
var ScalarObservable_1 = __webpack_require__(91);
var EmptyObservable_1 = __webpack_require__(25);
var concat_1 = __webpack_require__(94);
var isScheduler_1 = __webpack_require__(26);
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the
 * source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.
 * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */
function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (isScheduler_1.isScheduler(scheduler)) {
        array.pop();
    }
    else {
        scheduler = null;
    }
    var len = array.length;
    if (len === 1) {
        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);
    }
    else if (len > 1) {
        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);
    }
    else {
        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);
    }
}
exports.startWith = startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscribeOnObservable_1 = __webpack_require__(411);
/**
 * Asynchronously subscribes Observers to this Observable on the specified IScheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} the IScheduler to perform subscription actions on.
 * @return {Observable<T>} the source Observable modified so that its subscriptions happen on the specified IScheduler
 .
 * @method subscribeOn
 * @owner Observable
 */
function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return this.lift(new SubscribeOnOperator(scheduler, delay));
}
exports.subscribeOn = subscribeOn;
var SubscribeOnOperator = (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Converts a higher-order Observable into a first-order Observable by
 * subscribing to only the most recently emitted of those inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * previous inner Observable once a new one appears.</span>
 *
 * <img src="./img/switch.png" width="100%">
 *
 * `switch` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable subscribes to the inner Observable and
 * begins emitting the items emitted by that. So far, it behaves
 * like {@link mergeAll}. However, when a new inner Observable is emitted,
 * `switch` unsubscribes from the earlier-emitted inner Observable and
 * subscribes to the new inner Observable and begins emitting items from it. It
 * continues to behave like this for subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * // Each click event is mapped to an Observable that ticks every second
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var switched = higherOrder.switch();
 * // The outcome is that `switched` is essentially a timer that restarts
 * // on every click. The interval Observables from older clicks do not merge
 * // with the current interval Observable.
 * switched.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switchMap}
 * @see {@link switchMapTo}
 * @see {@link zipAll}
 *
 * @return {Observable<T>} An Observable that emits the items emitted by the
 * Observable most recently emitted by the source Observable.
 * @method switch
 * @name switch
 * @owner Observable
 */
function _switch() {
    return this.lift(new SwitchOperator());
}
exports._switch = _switch;
var SwitchOperator = (function () {
    function SwitchOperator() {
    }
    SwitchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchSubscriber(subscriber));
    };
    return SwitchOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchSubscriber = (function (_super) {
    __extends(SwitchSubscriber, _super);
    function SwitchSubscriber(destination) {
        _super.call(this, destination);
        this.active = 0;
        this.hasCompleted = false;
    }
    SwitchSubscriber.prototype._next = function (value) {
        this.unsubscribeInner();
        this.active++;
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));
    };
    SwitchSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    SwitchSubscriber.prototype.unsubscribeInner = function () {
        this.active = this.active > 0 ? this.active - 1 : 0;
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
            this.remove(innerSubscription);
        }
    };
    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    SwitchSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SwitchSubscriber.prototype.notifyComplete = function () {
        this.unsubscribeInner();
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return SwitchSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switch.js.map

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return this.lift(new SwitchMapOperator(project, resultSelector));
}
exports.switchMap = switchMap;
var SwitchMapOperator = (function () {
    function SwitchMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapSubscriber = (function (_super) {
    __extends(SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return SwitchMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {Observable} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` every time a value is emitted on the source Observable.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */
function switchMapTo(innerObservable, resultSelector) {
    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));
}
exports.switchMapTo = switchMapTo;
var SwitchMapToOperator = (function () {
    function SwitchMapToOperator(observable, resultSelector) {
        this.observable = observable;
        this.resultSelector = resultSelector;
    }
    SwitchMapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));
    };
    return SwitchMapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapToSubscriber = (function (_super) {
    __extends(SwitchMapToSubscriber, _super);
    function SwitchMapToSubscriber(destination, inner, resultSelector) {
        _super.call(this, destination);
        this.inner = inner;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapToSubscriber.prototype._next = function (value) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));
    };
    SwitchMapToSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapToSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    return SwitchMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var ArgumentOutOfRangeError_1 = __webpack_require__(66);
var EmptyObservable_1 = __webpack_require__(25);
/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */
function take(count) {
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else {
        return this.lift(new TakeOperator(count));
    }
}
exports.take = take;
var TakeOperator = (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeSubscriber = (function (_super) {
    __extends(TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=take.js.map

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var ArgumentOutOfRangeError_1 = __webpack_require__(66);
var EmptyObservable_1 = __webpack_require__(25);
/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.takeLast(3);
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */
function takeLast(count) {
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else {
        return this.lift(new TakeLastOperator(count));
    }
}
exports.takeLast = takeLast;
var TakeLastOperator = (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeLastSubscriber = (function (_super) {
    __extends(TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.ring = new Array();
        this.count = 0;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value or a complete notification, the output Observable stops
 * mirroring the source Observable and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */
function takeUntil(notifier) {
    return this.lift(new TakeUntilOperator(notifier));
}
exports.takeUntil = takeUntil;
var TakeUntilOperator = (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));
    };
    return TakeUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeUntilSubscriber = (function (_super) {
    __extends(TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    return TakeUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */
function takeWhile(predicate) {
    return this.lift(new TakeWhileOperator(predicate));
}
exports.takeWhile = takeWhile;
var TakeWhileOperator = (function () {
    function TakeWhileOperator(predicate) {
        this.predicate = predicate;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));
    };
    return TakeWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeWhileSubscriber = (function (_super) {
    __extends(TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.index = 0;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): Observable|Promise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */
function throttle(durationSelector) {
    return this.lift(new ThrottleOperator(durationSelector));
}
exports.throttle = throttle;
var ThrottleOperator = (function () {
    function ThrottleOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));
    };
    return ThrottleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ThrottleSubscriber = (function (_super) {
    __extends(ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.destination = destination;
        this.durationSelector = durationSelector;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        if (!this.throttled) {
            this.tryDurationSelector(value);
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        var duration = null;
        try {
            duration = this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.emitAndThrottle(value, duration);
    };
    ThrottleSubscriber.prototype.emitAndThrottle = function (value, duration) {
        this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));
        this.destination.next(value);
    };
    ThrottleSubscriber.prototype._unsubscribe = function () {
        var throttled = this.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._unsubscribe();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this._unsubscribe();
    };
    return ThrottleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(14);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */
function throttleTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new ThrottleTimeOperator(duration, scheduler));
}
exports.throttleTime = throttleTime;
var ThrottleTimeOperator = (function () {
    function ThrottleTimeOperator(duration, scheduler) {
        this.duration = duration;
        this.scheduler = scheduler;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler));
    };
    return ThrottleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ThrottleTimeSubscriber = (function (_super) {
    __extends(ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler) {
        _super.call(this, destination);
        this.duration = duration;
        this.scheduler = scheduler;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (!this.throttled) {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            this.destination.next(value);
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(14);
var isDate_1 = __webpack_require__(68);
var Subscriber_1 = __webpack_require__(1);
var TimeoutError_1 = __webpack_require__(164);
/**
 * @param {number} due
 * @param {Scheduler} [scheduler]
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method timeout
 * @owner Observable
 */
function timeout(due, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteTimeout = isDate_1.isDate(due);
    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError()));
}
exports.timeout = timeout;
var TimeoutOperator = (function () {
    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.scheduler = scheduler;
        this.errorInstance = errorInstance;
    }
    TimeoutOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));
    };
    return TimeoutOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutSubscriber = (function (_super) {
    __extends(TimeoutSubscriber, _super);
    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {
        _super.call(this, destination);
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.scheduler = scheduler;
        this.errorInstance = errorInstance;
        this.index = 0;
        this._previousIndex = 0;
        this._hasCompleted = false;
        this.scheduleTimeout();
    }
    Object.defineProperty(TimeoutSubscriber.prototype, "previousIndex", {
        get: function () {
            return this._previousIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeoutSubscriber.prototype, "hasCompleted", {
        get: function () {
            return this._hasCompleted;
        },
        enumerable: true,
        configurable: true
    });
    TimeoutSubscriber.dispatchTimeout = function (state) {
        var source = state.subscriber;
        var currentIndex = state.index;
        if (!source.hasCompleted && source.previousIndex === currentIndex) {
            source.notifyTimeout();
        }
    };
    TimeoutSubscriber.prototype.scheduleTimeout = function () {
        var currentIndex = this.index;
        this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, { subscriber: this, index: currentIndex });
        this.index++;
        this._previousIndex = currentIndex;
    };
    TimeoutSubscriber.prototype._next = function (value) {
        this.destination.next(value);
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
    };
    TimeoutSubscriber.prototype._error = function (err) {
        this.destination.error(err);
        this._hasCompleted = true;
    };
    TimeoutSubscriber.prototype._complete = function () {
        this.destination.complete();
        this._hasCompleted = true;
    };
    TimeoutSubscriber.prototype.notifyTimeout = function () {
        this.error(this.errorInstance);
    };
    return TimeoutSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(14);
var isDate_1 = __webpack_require__(68);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * @param due
 * @param withObservable
 * @param scheduler
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method timeoutWith
 * @owner Observable
 */
function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteTimeout = isDate_1.isDate(due);
    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
}
exports.timeoutWith = timeoutWith;
var TimeoutWithOperator = (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutWithSubscriber = (function (_super) {
    __extends(TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        _super.call(this);
        this.destination = destination;
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
        this.timeoutSubscription = undefined;
        this.index = 0;
        this._previousIndex = 0;
        this._hasCompleted = false;
        destination.add(this);
        this.scheduleTimeout();
    }
    Object.defineProperty(TimeoutWithSubscriber.prototype, "previousIndex", {
        get: function () {
            return this._previousIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeoutWithSubscriber.prototype, "hasCompleted", {
        get: function () {
            return this._hasCompleted;
        },
        enumerable: true,
        configurable: true
    });
    TimeoutWithSubscriber.dispatchTimeout = function (state) {
        var source = state.subscriber;
        var currentIndex = state.index;
        if (!source.hasCompleted && source.previousIndex === currentIndex) {
            source.handleTimeout();
        }
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var currentIndex = this.index;
        var timeoutState = { subscriber: this, index: currentIndex };
        this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);
        this.index++;
        this._previousIndex = currentIndex;
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        this.destination.next(value);
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
    };
    TimeoutWithSubscriber.prototype._error = function (err) {
        this.destination.error(err);
        this._hasCompleted = true;
    };
    TimeoutWithSubscriber.prototype._complete = function () {
        this.destination.complete();
        this._hasCompleted = true;
    };
    TimeoutWithSubscriber.prototype.handleTimeout = function () {
        if (!this.closed) {
            var withObservable = this.withObservable;
            this.unsubscribe();
            this.destination.add(this.timeoutSubscription = subscribeToResult_1.subscribeToResult(this, withObservable));
        }
    };
    return TimeoutWithSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}
 * @method toArray
 * @owner Observable
 */
function toArray() {
    return this.lift(new ToArrayOperator());
}
exports.toArray = toArray;
var ToArrayOperator = (function () {
    function ToArrayOperator() {
    }
    ToArrayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ToArraySubscriber(subscriber));
    };
    return ToArrayOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ToArraySubscriber = (function (_super) {
    __extends(ToArraySubscriber, _super);
    function ToArraySubscriber(destination) {
        _super.call(this, destination);
        this.array = [];
    }
    ToArraySubscriber.prototype._next = function (x) {
        this.array.push(x);
    };
    ToArraySubscriber.prototype._complete = function () {
        this.destination.next(this.array);
        this.destination.complete();
    };
    return ToArraySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */
function window(windowBoundaries) {
    return this.lift(new WindowOperator(windowBoundaries));
}
exports.window = window;
var WindowOperator = (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        _super.call(this, destination);
        this.window = new Subject_1.Subject();
        destination.next(this.window);
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new Subject_1.Subject();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=window.js.map

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Subject_1 = __webpack_require__(6);
/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */
function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) { startWindowEvery = 0; }
    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));
}
exports.windowCount = windowCount;
var WindowCountOperator = (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowCountSubscriber = (function (_super) {
    __extends(WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
        this.windows = [new Subject_1.Subject()];
        this.count = 0;
        destination.next(this.windows[0]);
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new Subject_1.Subject();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var async_1 = __webpack_require__(14);
var Subscriber_1 = __webpack_require__(1);
/**
 * Branch out the source Observable values as a nested Observable periodically
 * in time.
 *
 * <span class="informal">It's like {@link bufferTime}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowTime.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable starts a new window periodically, as
 * determined by the `windowCreationInterval` argument. It emits each window
 * after a fixed timespan, specified by the `windowTimeSpan` argument. When the
 * source Observable completes or encounters an error, the output Observable
 * emits the current window and propagates the notification from the source
 * Observable. If `windowCreationInterval` is not provided, the output
 * Observable starts a new window when the previous window of duration
 * `windowTimeSpan` completes.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowTime(1000)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowTime(1000, 5000)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferTime}
 *
 * @param {number} windowTimeSpan The amount of time to fill each window.
 * @param {number} [windowCreationInterval] The interval at which to start new
 * windows.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine window boundaries.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowTime
 * @owner Observable
 */
function windowTime(windowTimeSpan, windowCreationInterval, scheduler) {
    if (windowCreationInterval === void 0) { windowCreationInterval = null; }
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler));
}
exports.windowTime = windowTime;
var WindowTimeOperator = (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler));
    };
    return WindowTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowTimeSubscriber = (function (_super) {
    __extends(WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, scheduler) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.scheduler = scheduler;
        this.windows = [];
        var window = this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };
            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new Subject_1.Subject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscription_1 = __webpack_require__(7);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */
function windowToggle(openings, closingSelector) {
    return this.lift(new WindowToggleOperator(openings, closingSelector));
}
exports.windowToggle = windowToggle;
var WindowToggleOperator = (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowToggleSubscriber = (function (_super) {
    __extends(WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.error(err);
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.complete();
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.unsubscribe();
                context.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingSelector = this.closingSelector;
            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);
            if (closingNotifier === errorObject_1.errorObject) {
                return this.error(errorObject_1.errorObject.e);
            }
            else {
                var window_1 = new Subject_1.Subject();
                var subscription = new Subscription_1.Subscription();
                var context = { window: window_1, subscription: subscription };
                this.contexts.push(context);
                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
                if (innerSubscription.closed) {
                    this.closeWindow(this.contexts.length - 1);
                }
                else {
                    innerSubscription.context = context;
                    subscription.add(innerSubscription);
                }
                this.destination.next(window_1);
            }
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var tryCatch_1 = __webpack_require__(11);
var errorObject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */
function windowWhen(closingSelector) {
    return this.lift(new WindowOperator(closingSelector));
}
exports.windowWhen = windowWhen;
var WindowOperator = (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.destination = destination;
        this.closingSelector = closingSelector;
        this.openWindow();
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) { innerSub = null; }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new Subject_1.Subject();
        this.destination.next(window);
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            var err = errorObject_1.errorObject.e;
            this.destination.error(err);
            this.window.error(err);
        }
        else {
            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));
        }
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(3);
var subscribeToResult_1 = __webpack_require__(4);
/* tslint:disable:max-line-length */
/**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {Observable} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */
function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
    }
    var project;
    if (typeof args[args.length - 1] === 'function') {
        project = args.pop();
    }
    var observables = args;
    return this.lift(new WithLatestFromOperator(observables, project));
}
exports.withLatestFrom = withLatestFrom;
var WithLatestFromOperator = (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WithLatestFromSubscriber = (function (_super) {
    __extends(WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        _super.call(this, destination);
        this.observables = observables;
        this.project = project;
        this.toRespond = [];
        var len = observables.length;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
        }
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(98);
/**
 * @param project
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method zipAll
 * @owner Observable
 */
function zipAll(project) {
    return this.lift(new zip_1.ZipOperator(project));
}
exports.zipAll = zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
/**
 * A unit of work to be executed in a {@link Scheduler}. An action is typically
 * created from within a Scheduler and an RxJS user does not need to concern
 * themselves about creating and manipulating an Action.
 *
 * ```ts
 * class Action<T> extends Subscription {
 *   new (scheduler: Scheduler, work: (state?: T) => void);
 *   schedule(state?: T, delay: number = 0): Subscription;
 * }
 * ```
 *
 * @class Action<T>
 */
var Action = (function (_super) {
    __extends(Action, _super);
    function Action(scheduler, work) {
        _super.call(this);
    }
    /**
     * Schedules this action on its parent Scheduler for execution. May be passed
     * some context object, `state`. May happen at some point in the future,
     * according to the `delay` parameter, if specified.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler.
     * @return {void}
     */
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return this;
    };
    return Action;
}(Subscription_1.Subscription));
exports.Action = Action;
//# sourceMappingURL=Action.js.map

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(45);
var AnimationFrame_1 = __webpack_require__(520);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AnimationFrameAction = (function (_super) {
    __extends(AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If an animation frame has already been requested, don't request another
        // one. If an animation frame hasn't been requested yet, request one. Return
        // the current animation frame request id.
        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested animation frame and
        // set the scheduled flag to undefined so the next AnimationFrameAction will
        // request its own.
        if (scheduler.actions.length === 0) {
            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AnimationFrameAction;
}(AsyncAction_1.AsyncAction));
exports.AnimationFrameAction = AnimationFrameAction;
//# sourceMappingURL=AnimationFrameAction.js.map

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(46);
var AnimationFrameScheduler = (function (_super) {
    __extends(AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        _super.apply(this, arguments);
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AnimationFrameScheduler = AnimationFrameScheduler;
//# sourceMappingURL=AnimationFrameScheduler.js.map

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Immediate_1 = __webpack_require__(522);
var AsyncAction_1 = __webpack_require__(45);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsapAction = (function (_super) {
    __extends(AsapAction, _super);
    function AsapAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If a microtask has already been scheduled, don't schedule another
        // one. If a microtask hasn't been scheduled yet, schedule one now. Return
        // the current scheduled microtask id.
        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested microtask and
        // set the scheduled flag to undefined so the next AsapAction will schedule
        // its own.
        if (scheduler.actions.length === 0) {
            Immediate_1.Immediate.clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AsapAction;
}(AsyncAction_1.AsyncAction));
exports.AsapAction = AsapAction;
//# sourceMappingURL=AsapAction.js.map

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(46);
var AsapScheduler = (function (_super) {
    __extends(AsapScheduler, _super);
    function AsapScheduler() {
        _super.apply(this, arguments);
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AsapScheduler = AsapScheduler;
//# sourceMappingURL=AsapScheduler.js.map

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(45);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var QueueAction = (function (_super) {
    __extends(QueueAction, _super);
    function QueueAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Otherwise flush the scheduler starting with this action.
        return scheduler.flush(this);
    };
    return QueueAction;
}(AsyncAction_1.AsyncAction));
exports.QueueAction = QueueAction;
//# sourceMappingURL=QueueAction.js.map

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(46);
var QueueScheduler = (function (_super) {
    __extends(QueueScheduler, _super);
    function QueueScheduler() {
        _super.apply(this, arguments);
    }
    return QueueScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.QueueScheduler = QueueScheduler;
//# sourceMappingURL=QueueScheduler.js.map

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AnimationFrameAction_1 = __webpack_require__(510);
var AnimationFrameScheduler_1 = __webpack_require__(511);
exports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);
//# sourceMappingURL=animationFrame.js.map

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(7);
var SubscriptionLoggable_1 = __webpack_require__(163);
var applyMixins_1 = __webpack_require__(166);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ColdObservable = (function (_super) {
    __extends(ColdObservable, _super);
    function ColdObservable(messages, scheduler) {
        _super.call(this, function (subscriber) {
            var observable = this;
            var index = observable.logSubscribedFrame();
            subscriber.add(new Subscription_1.Subscription(function () {
                observable.logUnsubscribedFrame(index);
            }));
            observable.scheduleMessages(subscriber);
            return subscriber;
        });
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    ColdObservable.prototype.scheduleMessages = function (subscriber) {
        var messagesLength = this.messages.length;
        for (var i = 0; i < messagesLength; i++) {
            var message = this.messages[i];
            subscriber.add(this.scheduler.schedule(function (_a) {
                var message = _a.message, subscriber = _a.subscriber;
                message.notification.observe(subscriber);
            }, message.frame, { message: message, subscriber: subscriber }));
        }
    };
    return ColdObservable;
}(Observable_1.Observable));
exports.ColdObservable = ColdObservable;
applyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=ColdObservable.js.map

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscription_1 = __webpack_require__(7);
var SubscriptionLoggable_1 = __webpack_require__(163);
var applyMixins_1 = __webpack_require__(166);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var HotObservable = (function (_super) {
    __extends(HotObservable, _super);
    function HotObservable(messages, scheduler) {
        _super.call(this);
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    HotObservable.prototype._subscribe = function (subscriber) {
        var subject = this;
        var index = subject.logSubscribedFrame();
        subscriber.add(new Subscription_1.Subscription(function () {
            subject.logUnsubscribedFrame(index);
        }));
        return _super.prototype._subscribe.call(this, subscriber);
    };
    HotObservable.prototype.setup = function () {
        var subject = this;
        var messagesLength = subject.messages.length;
        /* tslint:disable:no-var-keyword */
        for (var i = 0; i < messagesLength; i++) {
            (function () {
                var message = subject.messages[i];
                /* tslint:enable */
                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);
            })();
        }
    };
    return HotObservable;
}(Subject_1.Subject));
exports.HotObservable = HotObservable;
applyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=HotObservable.js.map

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Notification_1 = __webpack_require__(42);
var ColdObservable_1 = __webpack_require__(517);
var HotObservable_1 = __webpack_require__(518);
var SubscriptionLog_1 = __webpack_require__(162);
var VirtualTimeScheduler_1 = __webpack_require__(159);
var defaultMaxFrame = 750;
var TestScheduler = (function (_super) {
    __extends(TestScheduler, _super);
    function TestScheduler(assertDeepEqual) {
        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);
        this.assertDeepEqual = assertDeepEqual;
        this.hotObservables = [];
        this.coldObservables = [];
        this.flushTests = [];
    }
    TestScheduler.prototype.createTime = function (marbles) {
        var indexOf = marbles.indexOf('|');
        if (indexOf === -1) {
            throw new Error('marble diagram for time should have a completion marker "|"');
        }
        return indexOf * TestScheduler.frameTimeFactor;
    };
    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {
        if (marbles.indexOf('^') !== -1) {
            throw new Error('cold observable cannot have subscription offset "^"');
        }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('cold observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var cold = new ColdObservable_1.ColdObservable(messages, this);
        this.coldObservables.push(cold);
        return cold;
    };
    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {
        if (marbles.indexOf('!') !== -1) {
            throw new Error('hot observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var subject = new HotObservable_1.HotObservable(messages, this);
        this.hotObservables.push(subject);
        return subject;
    };
    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {
        var _this = this;
        var messages = [];
        observable.subscribe(function (value) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });
        }, function (err) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });
        }, function () {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });
        });
        return messages;
    };
    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {
        var _this = this;
        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }
        var actual = [];
        var flushTest = { actual: actual, ready: false };
        var unsubscriptionFrame = TestScheduler
            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;
        var subscription;
        this.schedule(function () {
            subscription = observable.subscribe(function (x) {
                var value = x;
                // Support Observable-of-Observables
                if (x instanceof Observable_1.Observable) {
                    value = _this.materializeInnerObservable(value, _this.frame);
                }
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });
            }, function (err) {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });
            }, function () {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });
            });
        }, 0);
        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);
        }
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles, values, errorValue) {
                flushTest.ready = true;
                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);
            }
        };
    };
    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {
        var flushTest = { actual: actualSubscriptionLogs, ready: false };
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles) {
                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;
                flushTest.ready = true;
                flushTest.expected = marblesArray.map(function (marbles) {
                    return TestScheduler.parseMarblesAsSubscriptions(marbles);
                });
            }
        };
    };
    TestScheduler.prototype.flush = function () {
        var hotObservables = this.hotObservables;
        while (hotObservables.length > 0) {
            hotObservables.shift().setup();
        }
        _super.prototype.flush.call(this);
        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });
        while (readyFlushTests.length > 0) {
            var test = readyFlushTests.shift();
            this.assertDeepEqual(test.actual, test.expected);
        }
    };
    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {
        if (typeof marbles !== 'string') {
            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);
        }
        var len = marbles.length;
        var groupStart = -1;
        var subscriptionFrame = Number.POSITIVE_INFINITY;
        var unsubscriptionFrame = Number.POSITIVE_INFINITY;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '^':
                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    subscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                case '!':
                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                default:
                    throw new Error('there can only be \'^\' and \'!\' markers in a ' +
                        'subscription marble diagram. Found instead \'' + c + '\'.');
            }
        }
        if (unsubscriptionFrame < 0) {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);
        }
        else {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);
        }
    };
    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {
        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('conventional marble diagrams cannot have the ' +
                'unsubscription marker "!"');
        }
        var len = marbles.length;
        var testMessages = [];
        var subIndex = marbles.indexOf('^');
        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);
        var getValue = typeof values !== 'object' ?
            function (x) { return x; } :
            function (x) {
                // Support Observable-of-Observables
                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {
                    return values[x].messages;
                }
                return values[x];
            };
        var groupStart = -1;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor + frameOffset;
            var notification = void 0;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '|':
                    notification = Notification_1.Notification.createComplete();
                    break;
                case '^':
                    break;
                case '#':
                    notification = Notification_1.Notification.createError(errorValue || 'error');
                    break;
                default:
                    notification = Notification_1.Notification.createNext(getValue(c));
                    break;
            }
            if (notification) {
                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });
            }
        }
        return testMessages;
    };
    return TestScheduler;
}(VirtualTimeScheduler_1.VirtualTimeScheduler));
exports.TestScheduler = TestScheduler;
//# sourceMappingURL=TestScheduler.js.map

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
var RequestAnimationFrameDefinition = (function () {
    function RequestAnimationFrameDefinition(root) {
        if (root.requestAnimationFrame) {
            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);
        }
        else if (root.mozRequestAnimationFrame) {
            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);
        }
        else if (root.webkitRequestAnimationFrame) {
            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);
        }
        else if (root.msRequestAnimationFrame) {
            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);
        }
        else if (root.oRequestAnimationFrame) {
            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);
        }
        else {
            this.cancelAnimationFrame = root.clearTimeout.bind(root);
            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };
        }
    }
    return RequestAnimationFrameDefinition;
}());
exports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;
exports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);
//# sourceMappingURL=AnimationFrame.js.map

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FastMap = (function () {
    function FastMap() {
        this.values = {};
    }
    FastMap.prototype.delete = function (key) {
        this.values[key] = null;
        return true;
    };
    FastMap.prototype.set = function (key, value) {
        this.values[key] = value;
        return this;
    };
    FastMap.prototype.get = function (key) {
        return this.values[key];
    };
    FastMap.prototype.forEach = function (cb, thisArg) {
        var values = this.values;
        for (var key in values) {
            if (values.hasOwnProperty(key) && values[key] !== null) {
                cb.call(thisArg, values[key], key);
            }
        }
    };
    FastMap.prototype.clear = function () {
        this.values = {};
    };
    return FastMap;
}());
exports.FastMap = FastMap;
//# sourceMappingURL=FastMap.js.map

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
Some credit for this helper goes to http://github.com/YuzuJS/setImmediate
*/

var root_1 = __webpack_require__(10);
var ImmediateDefinition = (function () {
    function ImmediateDefinition(root) {
        this.root = root;
        if (root.setImmediate && typeof root.setImmediate === 'function') {
            this.setImmediate = root.setImmediate.bind(root);
            this.clearImmediate = root.clearImmediate.bind(root);
        }
        else {
            this.nextHandle = 1;
            this.tasksByHandle = {};
            this.currentlyRunningATask = false;
            // Don't get fooled by e.g. browserify environments.
            if (this.canUseProcessNextTick()) {
                // For Node.js before 0.9
                this.setImmediate = this.createProcessNextTickSetImmediate();
            }
            else if (this.canUsePostMessage()) {
                // For non-IE10 modern browsers
                this.setImmediate = this.createPostMessageSetImmediate();
            }
            else if (this.canUseMessageChannel()) {
                // For web workers, where supported
                this.setImmediate = this.createMessageChannelSetImmediate();
            }
            else if (this.canUseReadyStateChange()) {
                // For IE 6–8
                this.setImmediate = this.createReadyStateChangeSetImmediate();
            }
            else {
                // For older browsers
                this.setImmediate = this.createSetTimeoutSetImmediate();
            }
            var ci = function clearImmediate(handle) {
                delete clearImmediate.instance.tasksByHandle[handle];
            };
            ci.instance = this;
            this.clearImmediate = ci;
        }
    }
    ImmediateDefinition.prototype.identify = function (o) {
        return this.root.Object.prototype.toString.call(o);
    };
    ImmediateDefinition.prototype.canUseProcessNextTick = function () {
        return this.identify(this.root.process) === '[object process]';
    };
    ImmediateDefinition.prototype.canUseMessageChannel = function () {
        return Boolean(this.root.MessageChannel);
    };
    ImmediateDefinition.prototype.canUseReadyStateChange = function () {
        var document = this.root.document;
        return Boolean(document && 'onreadystatechange' in document.createElement('script'));
    };
    ImmediateDefinition.prototype.canUsePostMessage = function () {
        var root = this.root;
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `root.postMessage` means something completely different and can't be used for this purpose.
        if (root.postMessage && !root.importScripts) {
            var postMessageIsAsynchronous_1 = true;
            var oldOnMessage = root.onmessage;
            root.onmessage = function () {
                postMessageIsAsynchronous_1 = false;
            };
            root.postMessage('', '*');
            root.onmessage = oldOnMessage;
            return postMessageIsAsynchronous_1;
        }
        return false;
    };
    // This function accepts the same arguments as setImmediate, but
    // returns a function that requires no arguments.
    ImmediateDefinition.prototype.partiallyApplied = function (handler) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var fn = function result() {
            var _a = result, handler = _a.handler, args = _a.args;
            if (typeof handler === 'function') {
                handler.apply(undefined, args);
            }
            else {
                (new Function('' + handler))();
            }
        };
        fn.handler = handler;
        fn.args = args;
        return fn;
    };
    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {
        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);
        return this.nextHandle++;
    };
    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
        var root = this.root;
        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';
        var onGlobalMessage = function globalMessageHandler(event) {
            var instance = globalMessageHandler.instance;
            if (event.source === root &&
                typeof event.data === 'string' &&
                event.data.indexOf(messagePrefix) === 0) {
                instance.runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };
        onGlobalMessage.instance = this;
        root.addEventListener('message', onGlobalMessage, false);
        var fn = function setImmediate() {
            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.postMessage(messagePrefix + handle, '*');
            return handle;
        };
        fn.instance = this;
        fn.messagePrefix = messagePrefix;
        return fn;
    };
    ImmediateDefinition.prototype.runIfPresent = function (handle) {
        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'
        // So if we're currently running a task, we'll need to delay this invocation.
        if (this.currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // 'too much recursion' error.
            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);
        }
        else {
            var task = this.tasksByHandle[handle];
            if (task) {
                this.currentlyRunningATask = true;
                try {
                    task();
                }
                finally {
                    this.clearImmediate(handle);
                    this.currentlyRunningATask = false;
                }
            }
        }
    };
    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {
        var _this = this;
        var channel = new this.root.MessageChannel();
        channel.port1.onmessage = function (event) {
            var handle = event.data;
            _this.runIfPresent(handle);
        };
        var fn = function setImmediate() {
            var _a = setImmediate, channel = _a.channel, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            channel.port2.postMessage(handle);
            return handle;
        };
        fn.channel = channel;
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var root = instance.root;
            var doc = root.document;
            var html = doc.documentElement;
            var handle = instance.addFromSetImmediateArguments(arguments);
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement('script');
            script.onreadystatechange = function () {
                instance.runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    return ImmediateDefinition;
}());
exports.ImmediateDefinition = ImmediateDefinition;
exports.Immediate = new ImmediateDefinition(root_1.root);
//# sourceMappingURL=Immediate.js.map

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
var MapPolyfill_1 = __webpack_require__(524);
exports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();
//# sourceMappingURL=Map.js.map

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var MapPolyfill = (function () {
    function MapPolyfill() {
        this.size = 0;
        this._values = [];
        this._keys = [];
    }
    MapPolyfill.prototype.get = function (key) {
        var i = this._keys.indexOf(key);
        return i === -1 ? undefined : this._values[i];
    };
    MapPolyfill.prototype.set = function (key, value) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            this._keys.push(key);
            this._values.push(value);
            this.size++;
        }
        else {
            this._values[i] = value;
        }
        return this;
    };
    MapPolyfill.prototype.delete = function (key) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            return false;
        }
        this._values.splice(i, 1);
        this._keys.splice(i, 1);
        this.size--;
        return true;
    };
    MapPolyfill.prototype.clear = function () {
        this._keys.length = 0;
        this._values.length = 0;
        this.size = 0;
    };
    MapPolyfill.prototype.forEach = function (cb, thisArg) {
        for (var i = 0; i < this.size; i++) {
            cb.call(thisArg, this._values[i], this._keys[i]);
        }
    };
    return MapPolyfill;
}());
exports.MapPolyfill = MapPolyfill;
//# sourceMappingURL=MapPolyfill.js.map

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
function minimalSetImpl() {
    // THIS IS NOT a full impl of Set, this is just the minimum
    // bits of functionality we need for this library.
    return (function () {
        function MinimalSet() {
            this._values = [];
        }
        MinimalSet.prototype.add = function (value) {
            if (!this.has(value)) {
                this._values.push(value);
            }
        };
        MinimalSet.prototype.has = function (value) {
            return this._values.indexOf(value) !== -1;
        };
        Object.defineProperty(MinimalSet.prototype, "size", {
            get: function () {
                return this._values.length;
            },
            enumerable: true,
            configurable: true
        });
        MinimalSet.prototype.clear = function () {
            this._values.length = 0;
        };
        return MinimalSet;
    }());
}
exports.minimalSetImpl = minimalSetImpl;
exports.Set = root_1.root.Set || minimalSetImpl();
//# sourceMappingURL=Set.js.map

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(10);
function assignImpl(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    var len = sources.length;
    for (var i = 0; i < len; i++) {
        var source = sources[i];
        for (var k in source) {
            if (source.hasOwnProperty(k)) {
                target[k] = source[k];
            }
        }
    }
    return target;
}
exports.assignImpl = assignImpl;
;
function getAssign(root) {
    return root.Object.assign || assignImpl;
}
exports.getAssign = getAssign;
exports.assign = getAssign(root_1.root);
//# sourceMappingURL=assign.js.map

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
exports.not = not;
//# sourceMappingURL=not.js.map

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Subscriber_1 = __webpack_require__(1);
var rxSubscriber_1 = __webpack_require__(65);
var Observer_1 = __webpack_require__(121);
function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
            return nextOrObserver;
        }
        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {
            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new Subscriber_1.Subscriber(Observer_1.empty);
    }
    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
}
exports.toSubscriber = toSubscriber;
//# sourceMappingURL=toSubscriber.js.map

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(265);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(100)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../exports-loader/index.js?module.exports.toString()!../../../css-loader/index.js?{\"sourceMap\":false,\"importLoaders\":1}!../../../postcss-loader/index.js!./pink-bluegrey.css", function() {
			var newContent = require("!!../../../exports-loader/index.js?module.exports.toString()!../../../css-loader/index.js?{\"sourceMap\":false,\"importLoaders\":1}!../../../postcss-loader/index.js!./pink-bluegrey.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ })
]);
//# sourceMappingURL=vendor.bundle.js.map